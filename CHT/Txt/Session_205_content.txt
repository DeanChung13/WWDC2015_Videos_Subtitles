從iPad iOS 9的多任務開始
今天我很高興能在這裏
爲您介紹iPad上的多任務執行
我的名字是彼得·哈加斯我是一名UIKit的框架工程師
待會兒我的同事會加入我們
他們是雅各布·肖和庫爾特·雷維斯
所以您可以看到UIKit的這次演說也是“多任務”
多任務執行是一個巨大的功能
所以我們把它分成三部分來介紹
這是第一部分
明天下午您可以聽到
我們帶給iPad和iOS 9的所有偉大且全新的媒體功能介紹
並能瞭解picture-in-picture視頻
以及在多任務執行時app如何與其它app一起使用攝像頭
明天下午之後還有一個關於您的app非常棒的講座
在與其它app一起在iPad上執行多任務時如何成爲傑出的“公民”
我非常推薦您明天去這兩場講座都去聽
今天我們要討論三個主題
第一 在您的app上的多任務執行
是什麼
您爲什麼要採用它您如何採用它
以及在UIKit的層面上它意味着什麼？
第二 我們對UIKit做出的改變
它讓您使用多任務執行變得非常簡單
第三是做出了最新的也最棒的UIKit API
來確保您的app在多任務執行時能真正出彩
讓我們開始吧
正如您在Keynote上看到的
多任務執行爲iPad用戶帶來了一種很棒的新體驗
他們可以做一件自己喜歡的事情
比如瀏覽網頁
然後從右側滑入來與另一個app進行交互
我們把這種模式叫作“slide over”
然後用戶可以把分配器滑動到屏幕的左側
在上方點擊以並排顯示app
如您在Keynote上看到的
我們把這種模式叫作“Split View”
鑑於你們都是iOS開發者
我敢肯定你們都非常熟悉
我們的UI Splitview Controller API
我可以肯定地告訴您
它跟Split View是完全不同的
用戶可以拖動兩個應用程序之間的分配器
並調整它們的大小以獲取一個50/50Split View界面
然後他們就可以保留分配器並持續拖動到左側
來使用邊上這個app
在這個案例裏 全屏顯示的是地圖
然後他們可能會選擇滑入另一個app
或再次從側面滑入同一個app
通過iPad上iOS 9的多任務執行
用戶掌控他們的體驗
掌控運行中的app以及其運行大小
iPad和iOS9的多任務執行還有一個很酷的特徵
就是picture-in-picture視頻
關於這個您都可以在明天的媒體多任務執行講座中聽到
今天我們要解釋您的app如何使用split view和slide over
爲了瞭解如何使用它們
我們有必要先講一講
在UIKit app中正變得越來越重要的一樣東西
以及它的適應性
在過去 我們曾經鼓勵您把您的app做成普遍通用的
這意味着相同的app可以在iPhone和iPad上運行
去年我們介紹給您一個簡單的方法
來查看您應該向您的用戶提供什麼類型的界面
通過介紹水平尺寸等級
去年 iPhone豎直時擁有緊湊的水平尺寸
它們按傳統方式顯示一個單列的內容
而iPad擁有常規的水平尺寸
許多蘋果本身的系統app都以此指示
它們應該顯示多列內容
並更改呈現給用戶的信息格式
另外 在去年的全球研發大會上
這個設置在橫向時也是適用的
iPhone用緊湊的水平尺寸
iPad用常規的水平尺寸
那就是去年的全球研發大會
但是如果您仔細觀察
去年還有一個很明顯的消息如果您用顯微鏡看的話
我們當時在提示您爲iPhone 6+做好準備
就像我們現有的iPhone手機一樣
iPhone 6+也有緊湊的水平尺寸
但是當旋轉爲橫向時
它就是常規的水平尺寸了
這是第一次一個app在運行時就可以有不同的尺寸
我們就那樣來到了今年
同樣的 如果您接受了今年的邀請
然後畫了線條並且旋轉它
你知道在邏輯上來說這是合理的它就形成了一個“P”
“iPad的多任務執行”中的這個“P”字
顯而易見
謝謝
那麼iPad的多任務執行如何與適應性達到協調呢？
讓我們舉一個slide over app的例子
用戶從右側顯示屏滑過
app以緊湊的水平尺寸出現
這顯示了我們通常擁有的iPhone體驗
接着用戶可能會選擇把他們的app調整爲全屏顯示
這樣它會就變成常規的橫向尺寸
並顯示它傳統的iPad UI
兩個以前從不可能在iPad上發生的事情 現在發生了
首先app開始以緊湊的水平尺寸類顯示
這在以前的iPad上是完全不可能的
第二 當用戶調整它時app的尺寸級別也產生改變
這也是全新的iOS 9功能
所以 這爲您的app和您的用戶帶來了什麼？
讓我們從這些用戶的觀點來看看
他們可以瀏覽網絡並與iPad上他們喜愛的另一個app進行交互
因此 他們會從右側滑入
他們會想在這個列表中看到app
通過在您的app採用多任務執行在iPad和iOS 9中
您可以讓用戶更頻繁地進入您的app
在使用其他喜歡的iPad app時花更多的時間在您的app上
並以您可能從來沒有想象過的全新的方式
與其他的app一起使用您的app
用戶會希望所有在他們的iPad上的app都支持多任務執行
而我們就在這裏幫您採用它
讓我們來看看 添加多任務執行到您的iOS app有多麼容易
我有好消息告訴大家這真的很簡單
您所需要做的就是使用Xcode7測試版
並創建一個新的項目
所有用Xcode 7創建的新項目
都默認啓用iPad多任務程序
而且您所寫的所有代碼都會在多任務執行中運行
僅此而已就只是做一個新項目
現在就在這場講座之前臺下的一些我的同事提醒我
有一兩個現有的app可以選擇採用多任務執行
而對於這些app也很簡單
您只需要按照三個簡單的步驟來做
首先 使用iOS 9 SDK創建您的app
您可以在Xcode的構建設置裏這麼做
其次支持全方位app的iPad版本
在去年的會議上我們鼓勵您去思考
隨着簡單界限大小的變換環境如何變化
而這個建議也將保持在iOS 9中
因爲一個多重任務的大小調整只是一個範圍的大小變化
但是 因爲用戶掌控着他們手裏的iPad的環境
在多重任務裏您的iPad app要支持所有的環境是非常重要的
最後第三樣您需要做的是使用啓動記事板
去年介紹的啓動記事板對您來說是一個偉大的程式
它幫您的app明確一個記事板的啓用外觀
這個外觀適用於iOS支持的
所有大小 配置 方位 裝置
在iPad的多重任務所支持多種不同的尺寸下
使用啓動記事板是將其加入的一個必要條件
其中一個要點是
如果您的app需要一個全屏的體驗
您可以在您的信息欄中使用UI全屏按鍵
選擇退出
現在我們已經知道用您現有的項目
創建或添加一個新的多任務執行項目是多麼簡單
讓我們看看它在您的ipad和UIKit級別上是如何運作的
有一些非常重要的變化是您應該注意的
在過去 UI屏幕邊界會返回
裝置整個展示的可視範圍
這也發生在iOS 9上
無論您的app正在全屏操作或在多重任務中被重新調整了尺寸
一個真正重要的改變是該UI窗口邊界
好吧它返回您的窗口邊界
但是您的窗口邊界不總是與該設置的屏幕邊界相同
例如 當您的app在多任務執行中被調整大小
另一個重要改變是
您的窗口框架原點總是在左上角
（0,0）
<br/>不管您在屏幕的左側運行
還是在右側運行
我們不希望您擔心您在屏幕的哪一邊運行
或者您正在運行其他哪些程序等等
我們只希望您關注您的app使用體驗
現在讓我們來談談在您的app被調整的時候
哪些不同類型的轉移可以發生
舉個例子 在iOS9中完美表現多任務執行的app
全新的Notes app
這是在iPad上新的Notes app
作爲一個slide overapp在運行
您會發現它看起來很像iPhone的Notes app
它顯示單列的UI
我們稱之爲橫向尺寸緊湊級
隨後 用戶可能會調整我們的app
而在某一點我們會改變哪個級別的體驗是我們需要提供給用戶的
請注意現在的Notes顯示兩列的內容
這是相同的常規水平尺寸就如我們之前看到的那樣
請留意註釋如何改變了該app的信息架構
以在左側顯示您的注意列表並在右側顯示一個註釋
這類型的變換是您應該使用尺寸轉換來影響的
關於這轉換有重要的一點需要注意
並不是所有的尺寸調整都會導致尺寸變化
例如 如果Notes在iPad上以split view運行
而用戶稍微調整了該app
這不會改變尺寸級別
它將仍然顯示一個單列UI
爲了不改變用戶體驗
Notes使用這個新尺寸來影響其視圖的定位和排版
再看看我們把app弄得稍微小了一點
仍然是單列UI
UIKit已對我們當前的API作出了一些重要的變化
以使您的app更容易地採用它
我們鼓勵您使用的其中一種技術是是自動排版
UIKit和AppKit的聲明視圖佈局體系
自動佈局讓您使用限制來定位您的觀點
然後當範圍更改時自動排版將重新設置適當的中心和框架
這真的很容易使用
在新的iOS 9裏我們增加了一些偉大的新限制便利
API創建自動排版限制變得非常簡單
此外 如果您使用領先和尾部排版屬性
在您的app裏您將得到很多從右到左的免費語言支持
我們看到的另一個幫助app調整的重要領域
是以易讀性的形式呈現的
我們在UIView上引入新的API
“可讀性內容指南”
這將返回一個UI排版指南
它代表着一個UIView的可閱範圍
這意味着 如果您使用這個可讀性內容指南定位您的觀點
它們將總是保持在可閱寬度內
舉個例子
在這個app示例中我們採用了可閱性內容指南
視圖是全尺寸它的尺寸是整個iPad
但可閱性內容指南提供了足夠的間隔
以確保文字是是很容易被閱讀的
可閱性內容指南的一個很大的特點
是會自動調整
這取決於當前app的尺寸級別和裝置
它與動態類型也配合地相當完美
這是我們鼓勵所有app採用的
您可以決定是否使用自動排版
許多iOS app中常見的組件是UI表視圖
我們想讓可閱性在那裏也很容易被使用
所以我們在UI表視圖推出了新的工具
“可閱寬度決定單元排版間隔”
當此屬性設置爲是時
您的表視圖的單元內容外觀將有排版的間隔
相對於那些邊距設定這樣的內容制定
是給用戶一個合適的可閱的寬度
這意味着 通過簡單地使用排版邊距
在您的UI表視圖的單元內容呈現中
其內容在您的單元中 會以一個合適的寬度在iPad上全屏運行
或在一個例如縱向iPhone的小屏幕上運行
現在 我們已經談到了多任務執行的一些很大的改進
我想把它交給我的朋友兼同事雅各布肖
來談談UIKit裏什麼在改變以及一些您的app應該遵循的最佳實踐
雅各布？
謝謝 彼得
我想告訴大家一些爲了支持多任務執行的iOS改變
還有一些運作已變更的app的最佳實踐
所以去年我們要求
您通過使用特徵和尺寸讓您的app普遍通用
您可以看到更多的相關信息
呈現在“與UIKit創建普遍化應用套件”去年的談論中
那麼現在iPad的多任務執行就在這裏到底發生了什麼變化？
其實答案是沒有多少
僅此而已請盡情享受這會談
好吧 所以有幾個重要的變更是您必須要牢記的
這能給您的app一個很棒的多任務執行體驗
讓我們來談談當中的一些要素
讓我們先從方位開始談起
你們有多少人的app代碼看起來是這樣的？
沒關係這是一個免判定區域
這種代碼在過去有很大的意義
它讓您的app在縱向或橫向時有一個不同的排版
以便真正最佳地利用空間這是您可以用到的
但是您要想想這如何運行於iPad上的多任務執行
例如 這裏雖然iPad本身就是橫向的
我們並不希望在這裏使用橫向版本的排版
因爲我們有太多的垂直空間
這讓我們使用以前的排版更合理
我們稱那爲縱向排版
因此在多任務執行中最好避免過度考慮尤其是關於界面方位要素的
讓我們來看看您可以怎麼做來應對這種變化
爲了更好地理解這一點
讓我們來仔細看看在旋轉過程中發生了什麼
首先讓我們來看看一個iPhone的旋轉
當裝置旋轉時您的app將被調整並與其一起旋轉
而實際上我們可以把這個轉化分成兩部分
首先您的app被調整成新的內容的尺寸
然後它實際上是旋轉了方向其實只是用戶看到了正面
現在我們可以在iPad上做一些相似的旋轉 包括多任務執行
再次 這是旋轉本身的樣子
我們首先可以將它拆開爲首先是內容調整尺寸
然後是旋轉
現在當用戶在查看此旋轉時這兩個變化將同時發生
但是不妨想想把它們當作兩次獨立的變更
這樣做的一個很大的好處是
您確實可以用多任務執行的尺寸調整共享很多東西
在這裏 相同的事情正在發生
只是尺寸調整部分而不包括旋轉
因此當用戶調整app時
它僅僅是一個內容邊界尺寸變化
因此在過去如果您使用的是界面方位
明確地說我會鼓勵您做而不是去思考您該怎麼處理相關的視圖尺寸變化
針對於這類型的排版變更
另一個很好的選擇就是考慮使用垂直或水平尺寸
不管用其中哪一種方法都能讓您的應用程序非常契合地運行多任務執行
那麼接下來就讓我們一起來仔細看看
類似旋轉和多任務執行的尺寸調整的轉變
以前我們有提及您的應用程序的相關旋轉
但是這些回調都明確地運行界面的方位變更
因此相對的在iOS 8我們推出了新的相關回調
以針對特性組合或視圖尺寸的變化
我們強烈鼓勵您使用這些
現在爲了更好地瞭解這類旋轉轉移的發生
讓我們來看看時間表在這當中的轉變
讓我們從旋轉開始談起
現在我們可以把這個旋轉轉移分成幾個不同的階段
首先我們將設置即將產生的變更
然後我們將創建我們將給用戶展示的動畫
然後我們將實際運行這些動畫
而這一階段是旋轉發生時該用戶實際看到的部分
接着當一切都完成後我們要進行一些清理
現在當轉移中的尺寸與其尺寸級別實際上爲您的app變更了
此爲最後的“設置”階段
所以現在我們已看見各階段的這種轉變
讓我們來看看這些回調又怎麼融入
所有轉移回調都發生於
這些轉移的“設置”階段
現在同樣的 當尺寸改變時這被稱作“特徵組合已變更”
在您的視圖和視圖控制器裏
現在兩個轉移回調不只給您有關即將發生的更改的信息
它們也給您的app帶來一個轉移協調
轉移協調可以使用的API來添加自己要運行的動畫區塊
作爲主要動畫的一部分
如果您那麼做它們將設置於“創建動畫”階段
同樣的 如果您添加完整區塊到轉移協調它們將在最後運行
作爲“清理”階段的一部分
現在請留意 在您的app的“運行動畫”的明確階段沒有任何回調
這是因爲它一般能比較好地執行您想要的那些任務
不論是在這些轉移的開始或最末端
所以現在我們談過了旋轉轉移和一切事件發生的時間表
讓我們一起來看看多任務執行的尺寸調整
現在這個轉移過程中我們先進行一些設置
然後再創建一些動畫
好了希望您能看見這裏的這個圖像
這些都是完全相同的階段
而回調完全以與多任務執行的尺寸調整相同的方式發生
這就是關於新回調的特別好的地方
它允許您使用和多重任務尺寸調整相同的旋轉代碼
現在有一個重要的內容要牢記尤其是關於轉移的尺寸調整
那就是您的app有一個時間限制來讓您進行想要的變更
就像使app的啓動
如果您的app花費過長時間來做出這些變更它將會被中止
但我敢肯定這不會發生在你們任何人身上
因此有一點要記住
如果您在您裏的轉移回調同時執行這兩種
那“將轉換到特徵組合”會發生在“視角將轉移到尺寸”之前
這是非常有用的要牢記
然而如彼得之前提到的有一些多任務執行的尺寸調整當中
您的app只有尺寸會更改
而尺寸級別是保持不變的
當這種情況發生時特徵組合不會改變
所以我們不會採用特徵組合的回調之類的方法
我們只能稱之爲“視角將轉移到尺寸”
您仍然可以使用轉移協調的API
以添加到動畫和完成塊
現在類似的有一些情況下
就只有特徵組合會在您的app上發生變化
但尺寸將保持不變
這很可能發生例如當您改寫視圖控制器的特徵組合時
所以您在實施這些回調時
請確保它們當中只有僅僅一個被調用因爲事實上其它也可能被同時調用
這就是轉移
接下來讓我們看看窗口
特別是UI窗口
一般情況下當您的app被啓動後
您將創建一個新的UI窗口並給它一個框架
這同等於您的主界面畫面界限
那麼當這種情況發生時
如果用戶調整您的多任務執行過程中的app
那麼該用戶界面窗口的框架將自動調整其尺寸
以匹配新的app尺寸
而這將繼續下去只要用戶調整您的app就會發生
但是如果您創建一個UI窗口
它的大小不同於屏幕上的界限
就在您的app被調整尺寸的時候那麼我們會把窗口調整到相同的尺寸
正如彼得所說
原先的UI窗口處在左上角即使您的app被調整了尺寸
因此所有的UI窗口都將在您app的其餘部分運行
現在一般來說在過去做一個全屏尺寸的窗口
您必須要創建UI窗口並明確給它一個框架
這還要同等於主UI屏幕的界限
而您仍然可以做到這一點憑藉iPad的多任務執行
但在iOS 9我們已經把這變得更簡單
現在您可以創建一個新的UI窗口
而不經過任何的明確框架
我們將正確地調整其尺寸以符合您的app當前使用狀況
再自動調整其尺寸
用於所有的多任務執行尺寸調整
好的現在讓我們一起來看看這緒論
在iOS 8中我們引入了UI演示控制器
這是一個了不起的類別它用來製作特製的個性化演示
或用於運行自帶系統的演示
您可以看到“進去看看演示控制器”
這是去年WWDC的一個講座您可以瞭解更多信息關於這類使用
一個關於演示控制器的重大事件爲
多任務執行是對自適應性的支持
因此舉例來說您可以在iPad上展現彈出式演示
當您的app的尺寸級別變更
在這種情況下比如緊湊的水平尺寸
就會自動變換該演示文稿爲一種適當的風格
所以在這裏我們已經適應了一個全屏模式的風格
而這種情況發生在裝置之間
例如如果您在iPhone上執行同樣的彈出式演示
這也會自動以全屏幕模式的風格展示
在iPhone 6+的景觀方面
我們同樣會把它做成一種表格來展示給您
而且所有的這些改變在您的app當中自動發生
只要通過使用“視圖控制器演示”就可以
然而您可能也想要深入瞭解這些變化是怎麼發生的
例如在這個app中
當我們在全屏模式中以彈出式窗口演示
我們希望在導航欄顯示一個“完成”按鍵
以便用戶可以關閉該演示
但是當我們使用原生的彈窗呈現風格時
我們並不需要顯示那個“完成” 按鍵
因爲用戶可以通過點擊彈窗外的任何地方來關閉它
而且我們可以做出這類的變更
藉助“自適應演示控制授權”API
事實上在iOS 8.3中我們引入了一些新的方法到這個草案中
當您的視圖控制器演示被採用時這些方法讓您能控制更多發生的變更
這樣您可以做類似於隱藏和顯示導航欄
或其他任何對您的app有用的變更
現在最後關於彈窗演示請務必要特別記住的是
從彈窗出來的箭頭指向那個彈窗正確的來源
這特別重要
尤其當您的app在橫向緊湊和常規尺寸級別中適應時
您可以很容易地做到用一個彈窗演示控制器API
不論是設置工具條按鍵對象
還是在源代碼方陣當中設置源代碼視圖
這就是演示的呈現了
我最後想要告訴您關於多任務執行當中鍵盤的變更
現在當用戶用您的app進行多任務執行
如果他們點擊到文字區域像地圖中的搜索條
那麼鍵盤會確實地出現在用戶正在交互的所有app的頂端
這意味着它對您真的很重要
它讓您要考慮是否要把您app的一部分移出鍵盤
以確保用戶依然可以與它們交互
您可以通過UI鍵盤 通知API實施
就像您在過去做的一樣
您可以用這些通知變更您的app
比如設置滾動瀏覽內容插圖
或者移動重要的UI元素以維持可見度
所以舉例來說 在這個app當中
我們可能想要移動評論和評價視圖以確保其仍然可見
而且這真的是一項重要的變更
因爲在過去您的app唯一能夠與鍵盤交互的時候
就是它明確地自己顯示出鍵盤時
但現在有了多任務執行
用戶採用的其他app就可以促使鍵盤顯現
所以您會想要考慮
是否app中的任意一個視圖都需要移動其UI
以在鍵盤顯示的時候仍維持可見度
以下是一些有關iPad多任務執行的變更和最佳實踐
幾個重要的事項要牢記
在您的app旋轉的時候務必考慮其尺寸和尺寸級別而不是方位
還有要思考您如何針對位置轉移變化做出協調
比如旋轉和多任務執行的尺寸調整時
最後使用自適應彈窗演示
好讓您的app契合運行於我們所有的裝置
以及它被使用的各種環境當中
現在我要交給庫爾特雷維斯
讓他來告訴你們如何最有效地利用多任務執行
謝謝
謝謝您 雅各布謝謝您 彼特
那麼現在您知道您的app如何以及爲什麼能夠採用多任務執行了
您知道什麼改變了其實並不多
您知道該去做什麼不該去做什麼
那我在這裏告訴大家你們的app該如何有效利用多任務執行
並傳送一流的體驗給您的用戶
您的app確實需要自適應性設計
而我將重申三我們之前說過的事情
首先 您的app應該是普遍通用的
您的app應當能在iPhone和iPad上運行
其次 不要再想像這是iPhone和iPad的用戶體驗
想象它們是緊湊和常規寬度
因爲現在緊湊寬度已經可以在iPad上體驗得到
最後 使用自適應性在它們之間進行更換
尤其在用戶調整您的app尺寸時
這樣設計的自適應性的挑戰
是爲了讓您的app能自行適應各類動態的尺寸變化
接着我會給您兩樣東西事實上爲六大策略
您的app可以採用以使其更加靈活以及更能適應動態的尺寸變更
接下來我會談及可能出現的一些細節
一些您在採用多任務執行中可能會遇到的事項
和如何處理這些事項的指導方針
那麼我們開始
第一條策略 靈活
不要辛苦地編碼尺寸不要擅自假設
您的app應當着眼於它的尺寸
並在那個基礎上做些什麼
而且它應該對尺寸變化有所反應
唯一能找出您的app靈活與否的方法是真正地去嘗試嘗試延伸
我們在這裏做一些運動一點點的熱身
您會發現有一張瑜伽墊就在您座位前方的地面上
請把它拿出來！
不不幸的是我只是在說您的app
但我們還是會做同樣的事情
我們會讓您的app做一個熱身練習
我們會運行所有的多任務執行場景
而且我們會小心地觀察您app的UI
請留意哪些好用 哪些不好用
當您在做這個時集中注意力到佈局排版上
您的視圖是什麼
不要擔心這些動畫或其它類似的特別是如果您是在模擬器上這麼做
因爲您的體驗會跟真的裝置上不一樣
讓我們開始吧
您的app採用了多任務執行
您可以開始用Slide Over啓動它
然後變更您的app尺寸爲更大
這是一個尺寸變更
再讓它變大它會變成全屏 另外的尺寸改變
現在Slide Over另一個app
並按下按鍵以使用Split View
您的app會變小
最後讓我們旋轉整個iPad
這樣我們就得到一個尺寸變化
這會產生旋轉方位也會變更
而且這是動畫的
那麼這就是所有可能發生到您的app上的事項
而且您應該在app所有地方進行嘗試
以確保它可以處理這些事情
當您嘗試這個時或許您會發現有些東西 好用有一些不好用
所以爲了幫助修復這些不好用的東西 好好聽着
第二條策略使用自動佈局排版
這應該並不奇怪
這是爲了讓您的app UI變得靈活的方法之一
所有您需要做的就是提供視圖和限制條件
系統會考慮所有的限制條件
並在那些基礎上設置您的視圖框架
所以您不用辛苦地編碼任何事項
您也可以使用頁邊距和UIK給您提供的指導方針來構建這些限制條件
而且在iOS 9中 有新的API可以促使這整個過程更便利
那麼想更多瞭解這個
請參考星期四的兩個自動佈局排版的講座 我保證您會學到很多
那麼讓我們看看不久前的這個例子
我們有...
不好意思
我們有這個app顯示一些文字而且它有這些可閱性頁邊距
現在當您的視圖尺寸變大時這將如何運行
但可閱性內容指南變小了
我們並不希望您的app有所顧慮
“這是一個iPad 它又大又寬我需要用不同的方式處理這些頁邊距”
您只需要用這個指導方針它就會自動運行
所以這就是如何在代碼中做這個
首先做一個標籤我們會把我們的文字放在裏面
第二步標籤來到了一些超級視圖裏
我們會從超級視圖中得到可閱性內容指南
現在我們會設置一些限制條件讓此標籤適合該可閱性內容指南
那麼這些限制條件是一個排列
而我們實施的第一項就是讓這個標籤引領錨杆
這是引領的一側
相當於這個可閱性內容指南的引領錨杆爲引領的一側
記住這是使用新的iOS 9的方便API
我們對兩個側邊的拖拽錨都做出同樣的運行
現在這個標籤的寬度會匹配可閱性內容指南的寬度
接下來我們需要做的所有事項就是激活這兩條限制條件
再讓自動佈局完成其餘的事項
我們並不需要做完所有的事項
當然我也可以用Xcode做這個
我可以用我的畫板進行設計這會將我引導到下一個策略
充分利用Xcode支持的尺寸級別
您可以設置您的UI在不同的尺寸級別中運行不同的事項
比如說使用Interface Builder
當您在編輯一個畫板或者XIB文件時
您可以從不同的尺寸級別添加或刪除用戶限制條件
而且您也可以改變視圖的屬性比如字體的大小等等
您也可以使用資產目錄的優勢
讓應用不同版本的圖片處於不同的尺寸級別
記住這不僅可應用在您第一次初始化加載您的UI
同樣也可以用在動態尺寸變更時
我們記住這所有的幕後事項當尺寸變更時我們都會使用這些
我再舉個例子
這裏我已經做好了畫板也設置了有兩個視圖的UI
這有一張圖片和一些文字
我把它們並排在一起我讓限制條件來執行這事項
我在默認的UI運行我的app
使用的是“任意寬度”級別
我想要做一個版本那會有一點有別於緊湊尺寸級別
那麼我要做的就是點擊控制我變更它到緊湊寬度
我得到了同樣的兩個視圖
但我改變了我的限制條件讓這個佈局排版變得不一樣
現在圖片在頂部 文字在底部
我通過點擊控制底部做這個將它改變到緊湊級別
而且您還可以看到有藍色文字在告訴我正處於一個不同的 更特殊的模式
現在我可以在這個點運行我的app
並嘗試改變它的尺寸看看會發生什麼
但很好的是實際上我並不需要真的這麼做
我可以在Xcode看到動態的預覽
僅僅使用Xcode中的窗格助理功能
您就可以同時處於不同的配置下在您的記事板中擁有不止一個預覽
所以這裏我用iPad三分之一寬度
即Slide Over和app時所發生的事 即緊湊佈局
在我看着iPad全屏的同時也看着其他的佈局排版
所以您想做多少次這預覽就可以做多少次
僅僅點擊角上的“+”按鍵
並選擇iPhone上的任意尺寸
iPad上的任意尺寸的多任務執行配置
您可以立刻看見它們而且它們都是動態的
我們也可以使用資產目錄
我會展示它如何運行
這裏我已經有一個資產目錄我在看着一個特定的資產
我會把這設置爲普遍通用的以便它能在所有的裝置上運行
然後我會做和之前差不多的步驟我會設置兩個不同的版本
一個默認的用於任何寬度另一個用於緊湊寬度
現在您可以看見我已經取得這兩個圖片
這是兩個不同的版本
我可以拉一個大星星來運行用於任何通常寬度的配置
我拉一個小點的圖片作爲緊湊寬度
這就是Xcode
現在您也可以順便在文檔或代碼
如果您有興趣的話 試試看這麼做
就這麼使用自適應性回調的優勢
以下是運行的方法
如果您在一個視圖控制器中
您可以重載“將轉移到特徵組合”
我們會給您更換的新組合
又或者您可以重載“視圖將轉移到尺寸”
我們就會給您更換的的尺寸
現在比如說我想要我的app根據不同水平尺寸級有不同的UI
我們來重載“將轉移到特徵組合”
我們必須要做的第一件事
叫“超級無敵”讓系統進行常規運行
然後我們添加我們的代碼
我們將查看這個新組合的水平尺寸級別
並且根據它是哪個級別我們會做一些不同的事
這裏是您存放代碼的地方
如爲緊湊級別變更您的UI以用於緊湊寬度
如爲常規級別變更您的UI以用於常規寬度
如無所顯示那就意味着我們在創建和摧毀之間
那就什麼也不要做
現在比如說我有那個類似的更換但我想要它和其他事項一起進行
比方說當我旋轉iPad時
我想要在改變的同時讓動畫旋轉到側邊
是這樣的
我們以同樣的方式開始
用“超級無敵”同樣的方法重載
然後不直接做這個變換
我們提供一個區塊
然後再把我們的變化放在該區塊當中
在這裏我們得到一個區塊叫做“動畫”
接着我們使用這個代碼變更裏面的UI
然後把這個區塊放到協調的“動畫側邊的轉移”方法裏
這個方法會關注該區塊並在動畫設置完成的同時調用它
您在當中完成的一些更換都會由該區塊自動地轉換成動畫
這就是如何在低水平的代碼中運行
我會講一些高級API尤其是UIKit提供給您的
首先正如雅各布之前提到的自適應演示控制器
其次是經典的UI表格視圖和UI組合視圖
這些讓您能在小事物的基礎上建立一個更大的UI
就像一個組閤中的一個單行或單個元素
同樣是iOS 9的新功能有個叫做UI堆棧視圖
這能讓您創建一個視圖列表
並把它們放到一個垂直的堆棧或者水平的隊列中
以及設置一些它們如何放置的參數
同樣的想了解更多的話請查看第一個自動佈局的相關講座
高級API的最後一點是它大得足以擁有自己的數字
那就是UI SplitView控制器
我們在日常的app中用得很多比如郵件 信息和註釋
如果它對您的app也有用那就使用它
我把郵件作爲一個例子
這裏我們看着全屏iPad
您可以看到該app被分成兩個部分
注意這有別於您看見的split view多任務執行
這是一個app
那麼我們有一側是可以查看的信息列表
您可以選擇一個
另一方面我們有一個視圖展示了相關細節
在這情況下這是一個特定的信息
所以如果您的app能處理一個相同或類似的配置
我們極力推薦您採用SplitView控制器
因爲它會在多任務執行當中爲您處理很多事項
我稍後會展示一些
但首先這是您如何採用它
您在您的app內創建一個UISplit View控制器
這是典型的根視圖控制器是您最高等級的UI
它是一個容器視圖控制器並且有子控制器
我們稱它們爲主控制器和二級視圖控制器
在郵件裏有一個表格視圖包括了信息列表
而在二級控制器的一側有一個自定義的視圖顯示您的信息
當中的一條信息填充在其中
您提供視圖控制器
UI Split View控制器
專門決定在哪裏及在什麼時候顯示這兩個視圖控制器
回到郵件
在全屏時我們有很多的空間我們可以並列呈現這些空間
如果用戶切換到一個不同的app
然後從側面把郵件滑動出來的話會發生什麼呢？
在那種情況下它是緊湊寬度 空間更小
那麼這個Split View控制器就會做出自行調適
這決定了它會顯示二級視圖控制器以啓動這個郵件信息
也提供導航控制器
以返回其它列表或主列表
一旦用戶選擇了其中之一他們就可以再次回到之前的二級列表
這些視圖控制器依然是獨立的它們並不需要做這些選擇
所以這裏要注意的事項是
這裏有着我們之前看到的兩個完全相同的視圖控制器
不同之處在於它們變小了
而且我們在以不同的方式導航運行
因此如果您想要嘗試這個
您必須確定在您的電腦中有這個代碼
只需要做一個新的Xcode在其中做一個新的iOS應用程序
並使用“主從複合應用程序”的模板
它就會自動設置一個畫板
其中包括一個Split View控制器
以及每個側邊的視圖控制器
您可以在這上面創建您自己的app
或者你也可以僅把它作爲一個測試臺來使用搭配Split View控制器
再看看它能做什麼
這就是我會給您的6條策略
請盡情合理地混搭它們以在您的app當中發揮作用
您可以看看我們的代碼示例以比較實例
這是一個app叫做“自適應圖片”您可以在開發者網站上搜索它
在所有型號的iPhone和iPad上
以及iPad的多任務執行上測試它看看它能做什麼
這就是策略
如果您使用這些您的app會開始做出合適的尺寸調整
這或許會運行得很好
但您也可能會遇到一些新事情
所以一旦您採用了多任務執行這些新事情很可能就是一些小陷阱
我會給您一些指導方針來妥善處理它們
第一條指南 也是最重要的
用戶控制您的app尺寸
用戶總是掌握着它們的大小
所以您的app不能制止尺寸變換髮生
我知道有時候這很不方便但這也是您的app所不能阻止的
同時您的app不能促使尺寸的變化
您不能說“我的app現在想要全屏”這種方式沒有用
而且我想說尺寸變化可以在任何時候發生
用戶可能在任何時間選擇改變app的尺寸
這就像按Home鍵一樣
他們可以在任何時間這麼做
那麼我們該如何應對尺寸變化？
好的 我們的指南是保持用戶導向
不要讓用戶迷茫
我會用一個真實的app具體實例解釋這狀況
我有一個待做事務列表app
它有一個我需要完成的事項串
而且我已經把它們分成三個目錄
家 工作和學校
現在我將要穿上我的設計帽
我選擇做一些UI用於常規寬度和緊湊寬度
在常規寬度 我想 “好的把它們放在滾動視圖中是合理的
我們把它們彼此疊放
我們讓用戶滾動瀏覽它們”
在緊湊寬度 我想 “好的我們一次僅顯示目錄中的其中一個
每個都在不同的頁面而且讓用戶滾動頁面
但一次只有一個是可見的”
那麼這很好
我有了兩個UI
但現在我需要想該怎樣從一個到另一個地變化
比如說我正在查看學校
而用戶把app的尺寸更換成常規寬度
我該怎麼做？
好 如果我僅僅做一個新的滾動視圖並把我的事項放進去
它很有可能滾動到非常頂端在(0,0)位置
學校於是變得不可見了
那用戶可能迷茫了我們並不想那麼做
app應當選擇並製作一個好的選擇和滾動以便相同的事項再度可見
所以學校是可見的
這不會自動發生您的app需要做出相應的選擇
比如說用戶持續使用app他們往下滾動一點
他們寫一些代碼再完成運行
很好今天寫了一些代碼
然後他們決定把app的尺寸調整成緊湊類
我們該怎麼做？
您會看到所有的三個目錄都同時出現在屏幕上
所以我們可以做一個示範讓它們中的任意一個可見
但在這個示範中 這或許很合理
當他們最後一次檢查工作中完成的事情時
他們依然看着它並且沒有作出任何控制
那我們應該選擇去那個頁面
不過這裏有app必須做的決定而您的app也必須做出類似的決定
所以保持用戶至上
千萬不要做出突然的改變
尤其當一個尺寸改變到另一個尺寸時
嘗試保持同一事項是可見的
您或許需要用新的方式來呈現你的聰明才智
您或許需要做點什麼比如持續留意用戶最近最常看或點擊的
這是您之前不需要做的
再說這也是特別重要的
尤其當您從大尺寸更換成小尺寸因爲您不能顯示之前的一切事項
所以說調整尺寸在這裏是另一件可能會發生的新事情
尤其一旦您的app採用了多任務執行
譬如說您的app處於非活動狀態用戶按下Home鍵
隨後您app的尺寸可能會有變更
該系統或許會依據不同的尺寸級別做一個app的屏幕截圖
當這發生時和之前相同的自適應方式就會被調用
但沒有什麼是可見的用戶不會看到任何東西
當這完成後
系統將恢復到原始尺寸
現在這或許有點棘手 但我已經給了您一些相關的指南去妥善處理
接下來我會多展示一個實例
我又拿出了我的app
我處於活躍狀態它是緊湊寬度而我在看着工作頁面
現在用戶按了Home鍵
系統會馬上做屏幕截圖
現在這不是一個新事情了我們已經做這個很久了
即將發生的是用戶會截這個屏幕截圖
接着該app會恢復活躍狀態
我們會先展示該屏幕截圖再像之前那樣淡出到實時的app
記住這個屏幕截圖就在這裏我們在工作當中它是紫色的
現在有了多任務執行
系統會調整我們的尺寸至常規尺寸並截個屏幕截圖爲己用
現在系統將把我們的尺寸調整成緊湊類別
此刻app必須做出選擇了
我會給您展示如果做了不好的選擇和好的選擇分別會發生什麼
以及這兩者之間的不同
我們先做不好的選擇
我們回到緊湊類別
我的app決定“好的 家在頂端所以我們會再一次顯示家”
app稍微保持一會兒不活躍狀態
接着用戶返回並重新激活了app
然後系統再次顯示了步驟3的屏幕截圖
記住我們紫色是在工作這是相同的屏幕截圖
現在這個在家裏在家裏的系統會從這個淡出到活躍狀態的app
這看起來不太好
這真的是一個醜陋的的動畫而且沒有做到用戶想要的
他們在一個地方然後離開app
接着又返回於是顯示了其它地方
這不好
所以我們應該做的是從頭再來
我們在常規寬度系統將把我們的尺寸調整至緊湊類別
我們應當調整尺寸...
我們應當把app調整回原先不活躍時的狀態
然後用戶激活這個app
系統顯示屏幕截圖這是相同的事項
我們淡出到活躍的app這是同樣的事項
無縫連接
那麼這就是您想要處理問題的方式
當app不活躍而且尺寸又變換時保持同樣的外觀
您可以這麼做...
當您的app處於不活躍狀態時記住您的尺寸和狀態 在哪一頁
當您的尺寸變換時而您仍處於不活躍狀態
並且尺寸又返回到最初尺寸
那個應用記得您的狀態回到最初的頁面
那麼我們進入最後的兩項指南
這會關係到接下來我們將談及的多任務執行相關講座
不過首先我想介紹一些術語
那麼有兩個app在運行中
主app是那個全屏啓動的
這就是您一般在app運行時所想的
當您Slide Over另一個app 我們稱作第二app
現在不管您怎樣調整app的尺寸它們都保持不變 它們始終是一樣的
通常我們用完全相同的方式對待這些app
它們確實沒有太大區別
區別就發生在當我們討論資源時那不可被輕易共享的兩個app
其中之一可能是一個終端顯示
如果您用AppleTV銜接把您的iPad插入電視或使用飛機鏡像
您可以在iPad和外接屏幕上同時顯示UI
使用多任務執行只有主app可以看見外接顯示
不是第二app
通常app使用外接顯示會在iPad和外接顯示屏上分隔它們的UI
當一個顯示屏被激活又或者當用戶接入裝置時
那是他們所期待的
他們只是接入什麼裝置然後就會期待什麼事情會發生
現在的多任務執行有一個怪癖
比如說您的app是第二app
當用戶快速調整其尺寸至主app時
只要它處於全屏幕狀態
這時候您的app就會得到一個通知
說有屏幕可用並且外接屏幕可用
如果您的app選擇快速打開其UI並且在iPad和其他屏幕分隔顯示
這或許不是用戶所希望的但這完全取決於您的app
那麼在您的app中試一試
確保您所做是對用戶有用途的事項
最後一項指南是關於性能方面的
同樣的我們有關於這方面的完整講座所以我只會提及一些要點
我們之前說過
如果您的app對於尺寸轉換無法做出適當的應對 它將會被終止
所以在尺寸變更時盡您所能少運行程序
如果您有任何做起來比較慢的事項
採用完成區塊和“視圖將轉移到尺寸”或“將轉移至特徵組合”
r同樣的在動畫區塊當中
不要任何做多餘的佈局排版也不要調用“在需要時佈局”
系統會在適當的時候做出佈局排版並且妥善利用這點優勢
僅僅調用“設置必要佈局”來完成佈局因爲佈局相當耗費時間
這就是策略這就是指導方針
現在您已經知道很多關於如何讓您的app更優秀地運行多任務執行
您已經知道怎樣和爲什麼要在您的app當中採用多任務執行
您知道自適應性自從iOS 8就已開始普及
我們在iOS 9當中做的並不是一個很大的延伸
您知道怎麼提供好的用戶體驗
您有技術
因此您的用戶想要採用多任務執行讓他們使用吧
想了解更多信息請查看我們的文檔
特別是“在iPad採用多重任務處理改進”
查看我們的代碼示例
您可以和DTS即研發這論壇的技術支持對話
一般的查詢 請詢問庫爾特羅赫特他是我們的傳道士
如果您有更多問題我們還有更多的講座
再說一次如果您想找到picture-in-picture或共享相機
請到去“媒體爲基礎的多任務執行app概要”
如果您想知道怎樣做一個好公民
比如通過app共享CPU或存檔資源
請去“優化您的多任務執行APP”
最後到“Cocoa Touch與多任務執行室”來拜訪我們吧
我們會針對您的app協助您
感謝大家今天的到來一起與多任務執行向前邁