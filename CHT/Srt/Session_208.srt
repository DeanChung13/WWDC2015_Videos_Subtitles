00:00:19.319 --> 00:00:23.757 
深入WatchKit 第二部分

00:00:27.861 --> 00:00:28.862 
諸位早上好

00:00:30.631 --> 00:00:32.098 
我叫 內森·德弗里斯

00:00:32.165 --> 00:00:34.635 
過一會兒您會見到
我的同事 科洛·張

00:00:35.235 --> 00:00:38.205 
我們這裏將爲大家獻
深入WatchKit第二部分的講座

00:00:38.972 --> 00:00:40.674 
在上一節課 也就是第一部分中

00:00:40.908 --> 00:00:43.377 
我們談到了watchOS 1
和watchOS 2

00:00:43.477 --> 00:00:45.646 
在架構上的區別

00:00:45.946 --> 00:00:47.814 
以及它與您的應用的相關性

00:00:48.382 --> 00:00:50.484 
在此講座中我們將更深入地查看

00:00:50.551 --> 00:00:54.555 
這一新的架構上的改變
所支持的新的API

00:00:54.888 --> 00:00:57.624 
它們讓您的手錶app和擴展成爲可能

00:00:59.159 --> 00:01:02.796 
現在開始 我將先講一點
非常激動人心的的事情

00:01:03.197 --> 00:01:07.701 
我們將在app內支持Digital
Crown體驗 這將會很棒

00:01:09.102 --> 00:01:11.138 
接下來我們將談一下

00:01:11.205 --> 00:01:15.275 
關於短視頻以及音頻內容的文本回放

00:01:15.509 --> 00:01:20.147 
以及後臺播放的
較長類型的音樂和播客等等

00:01:20.214 --> 00:01:21.648 
這也是一個很出色的新API

00:01:23.417 --> 00:01:25.552 
接下來我們將談談音頻錄製

00:01:25.719 --> 00:01:28.155 
您現在可以從自己的手腕上錄製音頻

00:01:28.222 --> 00:01:30.224 
然後將音頻片段發送給朋友發到服務器

00:01:30.290 --> 00:01:33.794 
在互聯網上分享它們等等

00:01:35.128 --> 00:01:37.564 
最後我們將談一下

00:01:37.631 --> 00:01:40.467 
在手錶商存儲敏感數據

00:01:40.701 --> 00:01:44.705 
現在既然您的手錶
對它顯示的所有信息全權負責

00:01:45.138 --> 00:01:49.176 
重要的一點是牢記
你將要存儲的敏感數據

00:01:50.210 --> 00:01:51.211 
那麼讓我們開始講座

00:01:52.913 --> 00:01:56.216 
Digital Crown 
是一種全新的用戶輸入機制

00:01:56.517 --> 00:02:00.954 
它讓您靈活地而且非常有觸感地

00:02:01.021 --> 00:02:05.659 
使用Digital Crown
在屏幕上滾動並選擇元素

00:02:06.393 --> 00:02:09.263 
它確實是一種與設備互動的
極好的方式

00:02:09.997 --> 00:02:13.934 
讓我們看一下Digital
Crown支持的一些最重要的互動

00:02:15.636 --> 00:02:18.138 
首先 您最熟悉的一個

00:02:18.472 --> 00:02:19.973 
當然是滾動

00:02:20.941 --> 00:02:24.111 
把您的手指放在Crown 上面
慢慢轉動 慢慢滾動

00:02:24.344 --> 00:02:26.647 
或者快速地輕輕拂動藉助慣性滾動

00:02:26.713 --> 00:02:28.582 
它是一種真正自然而然的體驗

00:02:28.882 --> 00:02:31.418 
就像是我們過去所做的
Multi-Touch 滾動一樣

00:02:32.686 --> 00:02:36.156 
接下來您可以使用Digital
Crown選擇可選項

00:02:36.390 --> 00:02:38.225 
這是與iOS類似的選擇器樣式

00:02:38.292 --> 00:02:41.528 
但是在手錶上您可以
使用Digital Crown

00:02:42.329 --> 00:02:45.566 
這裏我將在活動設置UI內
選擇我的年齡

00:02:46.066 --> 00:02:49.403 
這裏有一個表單
展示了三個不同的選擇器

00:02:49.469 --> 00:02:53.740 
讓我有一個簡潔而精確的UI
能夠在一個單一模式的表單內

00:02:53.807 --> 00:02:56.109 
選擇我的出生年月日

00:02:58.979 --> 00:03:03.784 
接下來我們有一種
不同的呈現選項以供選擇的方式

00:03:04.151 --> 00:03:06.019 
在很多情況下

00:03:06.086 --> 00:03:10.424 
你選擇的選項有一種更爲獨特或具體的

00:03:10.490 --> 00:03:11.525 
呈現數據的方式

00:03:11.692 --> 00:03:14.962 
在這種情況下 我將設定
一個45分鐘的定時器

00:03:15.195 --> 00:03:18.031 
那麼我們認爲 
設定時間時以一種時間特有的方式

00:03:18.098 --> 00:03:20.634 
對信息進行佈局是合乎情理的

00:03:21.068 --> 00:03:23.504 
在這種情況下它是一個60秒的錶盤

00:03:23.570 --> 00:03:26.907 
因此 轉動Crown會表明
隨着你轉過每一個分鐘數

00:03:27.007 --> 00:03:28.342 
你的進度是怎樣的

00:03:29.009 --> 00:03:31.645 
在你的每個應用中你將需要找到

00:03:31.712 --> 00:03:34.848 
你將向用戶呈現的選擇的呈現方式

00:03:34.915 --> 00:03:36.550 
要以與數據相關的方式

00:03:36.617 --> 00:03:37.784 
因此要牢記這一點

00:03:38.752 --> 00:03:43.056 
最後因爲Crown
提供流暢精確連續的動作

00:03:43.290 --> 00:03:48.529 
這裏我們可以使用 Crown

00:03:48.595 --> 00:03:50.564 
在連續的數值內循環

00:03:50.631 --> 00:03:52.499 
比如正在播放的glance中的音量

00:03:53.534 --> 00:03:57.304 
那麼
這些就是Crown所支持的幾個

00:03:57.371 --> 00:04:00.240 
最重要的互動
而能夠爲您的應用提供這些特性

00:04:00.307 --> 00:04:01.341 
也讓我們倍感激動

00:04:02.809 --> 00:04:06.647 
那麼我們先從最重要的互動
回退一點

00:04:06.713 --> 00:04:08.715 
Digital Crown 
有哪些優勢呢？

00:04:08.916 --> 00:04:11.418 
我們認爲Digital Crown

00:04:11.485 --> 00:04:15.022 
是一個極其直觀的體驗
當你戴上 Apple Watch

00:04:15.189 --> 00:04:18.591 
你急於嘗試的第一個東西
就是Digital Crown

00:04:18.926 --> 00:04:21.728 
人們喜歡擺弄它
而且以非常自然而然的方式

00:04:21.795 --> 00:04:23.697 
與屏幕上的內容互動

00:04:25.432 --> 00:04:29.436 
然後 也是非常重要的一點
它讓UI維持可見狀態

00:04:29.770 --> 00:04:31.638 
在不讓你自己的手指阻擋屏幕的情況下

00:04:31.705 --> 00:04:33.674 
你可以看到你在與什麼互動

00:04:34.007 --> 00:04:37.411 
因此 使用 Digital
Crown接觸各種互動

00:04:37.511 --> 00:04:41.148 
讓您的用戶可以清晰地
在系統內進行導航定位

00:04:43.016 --> 00:04:45.819 
第三點 
它是一個非常精確的輸入機制

00:04:46.286 --> 00:04:48.889 
如果我們回顧剛纔的定時器的例子

00:04:49.056 --> 00:04:52.793 
你無法想像
只用觸摸方式在0-60之間

00:04:52.860 --> 00:04:54.828 
對定時器進行調整

00:04:54.962 --> 00:04:57.564 
藉助 Crown 你可以
非常精確地調整

00:04:57.631 --> 00:05:00.634 
一個 2、3、或4分鐘的定時器

00:05:00.701 --> 00:05:03.203 
或迅速創建一個60分鐘的定時器

00:05:03.270 --> 00:05:05.205 
只需對
Digital Crown輕點幾下

00:05:06.406 --> 00:05:07.574 
最後它是有可玩性的

00:05:07.774 --> 00:05:10.077 
這是一種有趣的體驗

00:05:10.444 --> 00:05:15.215 
它非常具有觸感
我們認爲用戶會喜歡它的

00:05:15.282 --> 00:05:17.885 
那麼我們在watchOS
2中將會暴 露什麼呢

00:05:18.886 --> 00:05:20.587 
這個特性將是大家非常熟悉的

00:05:20.821 --> 00:05:24.458 
它是與我們在系統中別處使用的
相同樣式的選擇器

00:05:24.525 --> 00:05:26.393 
比如complication 編輯

00:05:26.460 --> 00:05:27.728 
以及活動設置中

00:05:28.228 --> 00:05:30.597 
我們將其稱爲WK界面選擇器

00:05:30.664 --> 00:05:32.766 
而且也在watchOS 2應用提供

00:05:33.467 --> 00:05:37.171 
這裏我們有一個選擇器特有的樣式
或者列表樣式

00:05:37.804 --> 00:05:41.675 
這非常適合選擇一系列的選項

00:05:42.042 --> 00:05:44.378 
以文本方式顯示的選項

00:05:44.711 --> 00:05:47.347 
以一種列表的方式同時會有些上下文

00:05:47.414 --> 00:05:48.949 
提示你在選擇中的位置

00:05:50.450 --> 00:05:52.553 
接下來我們有堆疊樣式

00:05:52.619 --> 00:05:55.255 
堆疊樣式非常適合於

00:05:55.322 --> 00:05:59.259 
視覺化圖形化的數據呈現方式

00:05:59.359 --> 00:06:02.529 
它可能是照片可能是消息應用中的貼紙

00:06:02.896 --> 00:06:05.098 
這真的是很不錯
如果你希望在某個地點

00:06:05.165 --> 00:06:06.934 
集中展示您的數據的話

00:06:07.201 --> 00:06:09.970 
您可以像手翻書一樣
使用Digital Crown

00:06:10.604 --> 00:06:14.508 
最後我們看下次序樣式選擇器

00:06:15.309 --> 00:06:17.344 
這個選擇器確實是非常棒的

00:06:17.411 --> 00:06:20.113 
我會激動地看到
你們將能夠用這個東西做些什麼

00:06:20.781 --> 00:06:23.817 
這裏我用它創建了個表情符號選擇界面

00:06:23.884 --> 00:06:27.821 
那麼如果你轉動Digital
Crown會在不同的表情間循環

00:06:28.422 --> 00:06:31.959 
這一特性也被用來
創建您自己的滑動條 旋鈕

00:06:32.025 --> 00:06:34.895 
計量表甚至遊戲如果你足夠有創意的話

00:06:35.429 --> 00:06:36.797 
那麼那就是次序樣式

00:06:36.864 --> 00:06:39.600 
三種樣式是列表堆疊和次序

00:06:41.368 --> 00:06:44.204 
讓我們談一下關於我們所謂的聚焦樣式

00:06:44.838 --> 00:06:49.409 
除了選擇器的三種視覺樣式以外

00:06:49.776 --> 00:06:53.347 
這些樣式也都支持聚焦樣式

00:06:53.680 --> 00:06:54.581 
那是什麼意思呢？

00:06:55.282 --> 00:06:57.718 
那麼我們這裏有一個例子
它是另一種表情符號選擇 UI

00:06:58.752 --> 00:07:03.290 
通過這個 UI 我們有機會選擇
一張臉和一隻手

00:07:03.824 --> 00:07:07.227 
在本例中並不能立刻看出
轉動 Crown將會起何作用

00:07:07.294 --> 00:07:09.796 
甚至屏幕上有兩個選擇器
也不明顯

00:07:10.430 --> 00:07:13.934 
我們能做的就是
更改默認的聚焦樣式

00:07:14.001 --> 00:07:16.503 
讓這兩個選擇器變成輪廓樣式

00:07:17.137 --> 00:07:19.139 
這樣做會讓選擇器顯示輪廓

00:07:19.206 --> 00:07:21.341 
表明它是一個互動元素

00:07:21.675 --> 00:07:24.711 
而且以系統的綠色
清楚地顯示

00:07:24.978 --> 00:07:29.783 
所選中或聚焦的元素是可以用
 Digital Crown編輯的

00:07:30.484 --> 00:07:34.388 
現在當我點擊屏幕上的另一個項目時

00:07:34.855 --> 00:07:37.090 
我看到聚焦輪廓發生變化

00:07:37.157 --> 00:07:39.660 
我知道轉動Digital
Crown會起到什麼作用

00:07:41.028 --> 00:07:43.030 
對於聚焦輪廓 你可以有一種

00:07:43.096 --> 00:07:45.199 
額外水平的控制

00:07:45.799 --> 00:07:48.936 
如果你的選擇器中的項目
需要更多的上下文

00:07:49.002 --> 00:07:53.473 
來描述其中的內容 我們可以使用
帶有說明文字的輪廓聚焦樣式

00:07:54.041 --> 00:07:56.510 
這讓您創建一個類似於

00:07:56.577 --> 00:07:59.279 
Complication
編輯UI的UI

00:07:59.346 --> 00:08:00.747 
你會希望顯示一個突出的方框

00:08:00.814 --> 00:08:03.250 
它清楚地表明你目前選中的

00:08:03.317 --> 00:08:04.618 
項目是什麼

00:08:06.019 --> 00:08:08.722 
而且同樣 如果我移動到另一個

00:08:08.789 --> 00:08:11.191 
將重心移到另一個選擇器上
你會注意到

00:08:11.258 --> 00:08:13.160 
說明文字也會跟隨移動

00:08:14.061 --> 00:08:17.297 
我在這裏實現這種效果的方式
是讓選擇器中的每個項目

00:08:17.364 --> 00:08:19.099 
有同樣的說明文字

00:08:19.166 --> 00:08:20.634 
但是對選擇器中的每個項目

00:08:20.701 --> 00:08:22.102 
你也可以有不同的說明文字

00:08:23.470 --> 00:08:25.072 
現在有些其他有用的方式

00:08:25.138 --> 00:08:29.142 
來提供上下文同時用戶與
Digital Crown維持互動

00:08:29.543 --> 00:08:31.411 
其中之一是顯示

00:08:31.478 --> 00:08:34.780 
上下文指示器即Digital
Crown指示器的系統樣式

00:08:35.448 --> 00:08:37.951 
它被顯示在 
Digital Crown 旁邊

00:08:38.018 --> 00:08:40.287 
而隨着
用戶轉動Digital Crown

00:08:40.354 --> 00:08:44.658 
它爲用戶提供可選值範圍的上下文

00:08:45.459 --> 00:08:48.662 
它也顯示他們目前已經使用過多少數值

00:08:48.729 --> 00:08:52.866 
因此 當你的選擇器不一定
會顯示你在選擇中的位置

00:08:52.933 --> 00:08:56.436 
它將有利於確定你自己的方位

00:08:56.703 --> 00:08:58.906 
即通過可視化元素來確定

00:09:01.008 --> 00:09:02.809 
對於希望顯示更爲

00:09:02.876 --> 00:09:04.912 
定製化的progress UI應用

00:09:05.245 --> 00:09:07.381 
它們並不希望顯示
這個小小的Crown指示器

00:09:07.447 --> 00:09:10.984 
我們有很不錯的新方式
幫助您營造那些體驗

00:09:11.585 --> 00:09:15.022 
這裏是另外一個例子
最好是通過例子進行展示

00:09:16.523 --> 00:09:18.959 
在本例中 我在屏幕中央
有一個選擇器

00:09:19.026 --> 00:09:22.462 
它讓我在0 到100% 進行調整

00:09:23.497 --> 00:09:26.433 
因此隨着我轉動
DigitalCrown會看到數值

00:09:26.500 --> 00:09:28.368 
會以10%的幅度跳升

00:09:29.403 --> 00:09:30.370 
這是有點酷的

00:09:30.437 --> 00:09:34.374 
但我們不知道
下限是 0 上限是 100

00:09:34.842 --> 00:09:36.710 
它不是一個非常視覺化的體驗

00:09:36.777 --> 00:09:38.545 
它不是一個令人愉悅的體驗

00:09:39.012 --> 00:09:40.647 
我們可以使用上下文指示器

00:09:40.714 --> 00:09:44.251 
但是在我們的app中我們將
使用一個略有不同的UI來顯示進度

00:09:44.318 --> 00:09:47.054 
這個UI與您的應用更具相關性

00:09:47.821 --> 00:09:52.025 
這裏我選擇使用
一個弧形或環形進度條樣式的 UI

00:09:52.092 --> 00:09:56.063 
當我旋轉DigitalCrown時
我已經讓選擇器與我的UI中的

00:09:56.129 --> 00:10:01.201 
另一個界面要素相協調
因此隨着我在選擇器的項目間切換

00:10:01.268 --> 00:10:04.271 
它會將圖像更新

00:10:05.272 --> 00:10:08.775 
藉助這個互相協調的圖像API
您可以營造出各種

00:10:08.842 --> 00:10:11.645 
美妙Digital Crown體驗

00:10:13.247 --> 00:10:16.683 
因此 有各種不同的
旋鈕 鈴鐺 哨子

00:10:16.750 --> 00:10:20.354 
你可以配置到 WK 界面選擇器上

00:10:20.721 --> 00:10:22.089 
這就是如何創建選擇器

00:10:22.222 --> 00:10:24.057 
現在讓我們直接跳到那一步看看

00:10:25.492 --> 00:10:28.195 
那麼 對於已經
熟悉watchOS 1的朋友

00:10:28.395 --> 00:10:31.465 
這是一個非常簡單明瞭的過程

00:10:31.532 --> 00:10:35.702 
如果您到storyboard
選擇一個界面控制器

00:10:35.769 --> 00:10:38.605 
您可以簡單地
直接將一個新的選擇器對象

00:10:38.672 --> 00:10:41.308 
從對象庫裏面拖拽出來
放入你的 storyboard

00:10:42.576 --> 00:10:46.780 
一旦你有了選擇器
你當然就可以配置它的各種屬性

00:10:46.980 --> 00:10:49.950 
我們已經談到了這些

00:10:50.017 --> 00:10:51.985 
如樣式次序和堆疊聚焦樣式

00:10:52.553 --> 00:10:57.791 
不管你是否喜歡可選的Digital
Crown指示器被顯示出來

00:10:58.759 --> 00:11:01.061 
在本例中 我將使用列表樣式

00:11:01.128 --> 00:11:04.331 
帶說明文字的輪廓樣式
以及一個被禁用的指示器

00:11:04.398 --> 00:11:07.634 
因爲我將向我自己提供數據

00:11:07.701 --> 00:11:09.303 
或者由於有了我將提交的數據

00:11:09.369 --> 00:11:10.904 
我覺得上下文是沒有必要的

00:11:12.906 --> 00:11:15.642 
接下來 我們需要
進入界面控制器代碼部分

00:11:15.709 --> 00:11:18.178 
而且我們需要爲選擇器
創建一個IB插座變量

00:11:18.245 --> 00:11:22.516 
那麼可以在storyboard裏面
將我們的代碼和對象相關聯

00:11:22.583 --> 00:11:24.218 
這給了我們一種對選擇器的參照物

00:11:25.853 --> 00:11:28.021 
最後我們回到storyboard

00:11:28.088 --> 00:11:29.289 
並將這兩個東西關聯起來

00:11:29.556 --> 00:11:31.758 
那麼只有類似於

00:11:31.825 --> 00:11:34.061 
創建按鈕和圖像等簡單的幾步

00:11:34.127 --> 00:11:36.230 
有了選擇器
它們是非常容易創建的

00:11:38.232 --> 00:11:40.501 
那麼現在我們有了一個選擇器
也把它連接上了

00:11:40.567 --> 00:11:43.637 
我們已經將其創建並使其運行
而這就是我們所得到的

00:11:44.238 --> 00:11:46.640 
它可能是世界上最無用的選擇器

00:11:47.441 --> 00:11:49.743 
轉動Digital Crown
迅速地進行導航定位

00:11:49.810 --> 00:11:51.311 
儘管其中空無一物 棒極了！

00:11:52.513 --> 00:11:55.916 
那麼我們需要做的就是
配置我們稱之爲“項目”的東西

00:11:55.983 --> 00:11:57.417 
正如你們從標題上可以看到的

00:11:58.285 --> 00:12:02.055 
爲了進行配置 
現在既然我們已經通過IB插座變量

00:12:02.122 --> 00:12:04.791 
有了對選擇器的參考 可以
簡單調用set items API

00:12:04.858 --> 00:12:08.695 
並指定一系列的WK選擇器項目

00:12:09.530 --> 00:12:11.498 
這些是非常簡單的對象

00:12:11.565 --> 00:12:13.267 
只帶有一些可選屬性

00:12:13.534 --> 00:12:17.104 
這裏我將使用title(標題)屬性
caption(說明文字)屬性

00:12:17.171 --> 00:12:21.041 
以及accessory(附屬)屬性

00:12:21.108 --> 00:12:23.644 
我將在手錶上呈現的視覺樣式

00:12:24.912 --> 00:12:28.515 
現在如果我希望對選擇器的每行所顯示
的內容擁有完全控制

00:12:28.882 --> 00:12:32.986 
我還可使用這些各不相同的

00:12:33.086 --> 00:12:34.488 
WK選擇器項目的內容圖標屬性

00:12:34.821 --> 00:12:37.157 
這將讓有擁有對選擇器中

00:12:37.324 --> 00:12:38.892 
每個項目所顯示內容的全面控制

00:12:40.160 --> 00:12:42.362 
對於堆疊和次序樣式

00:12:42.563 --> 00:12:44.398 
內容圖標用於

00:12:44.531 --> 00:12:47.167 
定義那兩個選擇器中顯示的內容

00:12:47.467 --> 00:12:48.635 
因此 對於那兩個樣式

00:12:48.702 --> 00:12:50.704 
您將僅需使用內容圖標屬性

00:12:52.940 --> 00:12:56.009 
關於在watchOS 2中的新內容
我們有一個新的API

00:12:56.076 --> 00:13:00.347 
用於指定你希望
在您的 UI 中顯示的圖像

00:13:00.581 --> 00:13:03.851 
對應於選擇器或您將在以後見到的
一些其他的對象

00:13:04.451 --> 00:13:08.589 
這個被稱爲WK image 類

00:13:09.189 --> 00:13:11.959 
而我將給出幾個例子
告訴您如何使用這個類

00:13:13.026 --> 00:13:14.561 
最常見的例子將是

00:13:14.628 --> 00:13:17.631 
內已有的圖像加入到應用中

00:13:17.965 --> 00:13:20.667 
在自己的資源目錄或框架本身

00:13:21.034 --> 00:13:22.870 
那麼你就能使用WK圖像

00:13:22.936 --> 00:13:27.007 
圖像名稱API 
將這些圖像上傳到應用中

00:13:27.074 --> 00:13:28.542 
然後它們就能顯示

00:13:28.609 --> 00:13:32.179 
擴展所要做的就是指定圖像的名稱

00:13:33.580 --> 00:13:37.784 
從互聯網Companion下載了
圖像的情況

00:13:37.851 --> 00:13:40.754 
對於您的擴展已通過
watchconnectivity

00:13:41.355 --> 00:13:45.425 
您要做的
並不是把那些圖像數據轉換爲圖像

00:13:45.659 --> 00:13:48.762 
而是在擴展內對圖像解碼

00:13:48.829 --> 00:13:53.333 
並將圖像數據傳遞到應用中
從而節省用於解碼的必要內存開銷

00:13:53.567 --> 00:13:56.336 
在應用中 數據將被轉換爲圖像
然後就可以顯示出來

00:13:57.371 --> 00:14:01.008 
這前兩個創建圖像的方法是首選

00:14:01.074 --> 00:14:02.643 
如果你已經有了圖像數據的話

00:14:02.709 --> 00:14:05.746 
在您的擴展內創建UI圖像
是不必要的也是沒有意義的

00:14:05.946 --> 00:14:09.149 
因爲它們是由應用顯示的

00:14:10.717 --> 00:14:13.420 
最後一種情況是你確實需要UI圖像

00:14:13.687 --> 00:14:15.923 
現在既然手錶上提供了核心圖形

00:14:16.123 --> 00:14:19.960 
您可以用它將定製特效渲染到

00:14:20.160 --> 00:14:22.362 
即將用在
您的WK選擇器項目中的圖像內

00:14:23.130 --> 00:14:26.033 
那麼這裏我將使用WK image
後面加上image API

00:14:26.099 --> 00:14:27.734 
它是用來獲取UI image對象的

00:14:29.703 --> 00:14:32.639 
現在我們看一個
已經配置了項目的選擇器

00:14:32.706 --> 00:14:35.309 
而轉動Digital Crown 
將在那些項目間移動

00:14:35.642 --> 00:14:37.711 
但是在您你的應用中

00:14:37.878 --> 00:14:39.813 
知道選定的項目
何時發生變化是有幫助的

00:14:40.080 --> 00:14:44.418 
爲了做到這一點 我們使用一個
與按鈕滑動條或開關類似的技巧

00:14:44.718 --> 00:14:46.320 
通過關聯一個IB動作實現

00:14:47.421 --> 00:14:51.358 
現在 尤其對於選擇器的IB動作

00:14:51.425 --> 00:14:54.094 
是一個需要一個單一參數的方法

00:14:54.461 --> 00:14:58.765 
這個參數是個整型值代表在您的陣列中

00:14:58.832 --> 00:15:02.269 
所選定項目的索引
陣列是我們用set items指定

00:15:03.070 --> 00:15:04.538 
那麼 在這種情況下

00:15:04.872 --> 00:15:09.443 
我將使用提供
給我的選中索引將選擇器項目編入索引

00:15:09.710 --> 00:15:13.347 
而且我將印出那個選擇器項目的標題

00:15:14.548 --> 00:15:17.284 
因此
確實是很容易處理選定項目和變化的

00:15:17.851 --> 00:15:18.986 
需要注意的一件事情是

00:15:19.052 --> 00:15:21.121 
爲了應對項目的變化

00:15:21.388 --> 00:15:23.090 
你不希望做特別重要的工作

00:15:23.457 --> 00:15:25.592 
正如您在覈心互動部分看到的

00:15:25.659 --> 00:15:28.829 
迅速轉動Crown快速在項目間移動

00:15:29.129 --> 00:15:31.832 
因此您選擇器動作將被非常迅速地調用

00:15:32.266 --> 00:15:34.935 
如果您正在做非常重要的事情
我建議您暫停

00:15:35.002 --> 00:15:39.072 
直到您在經過一小段時間後
仍未收到選擇器動作的調用爲止

00:15:39.139 --> 00:15:40.807 
然後您再做重要的工作

00:15:40.874 --> 00:15:43.243 
比如更新您的桌面視圖等等

00:15:45.212 --> 00:15:47.114 
接下來我們看一下圖像協調

00:15:47.414 --> 00:15:49.883 
它讓你創建那些定製的

00:15:50.117 --> 00:15:53.020 
好看的互動你的界面的很多部分

00:15:53.086 --> 00:15:54.555 
與選擇器相互協調

00:15:54.621 --> 00:15:56.590 
隨着它的數值變化而變化

00:15:57.624 --> 00:15:59.826 
它的設置也是非常簡單的

00:16:00.027 --> 00:16:03.931 
在這個實例
我在屏幕中央有個選擇器顯示70%

00:16:04.598 --> 00:16:08.902 
輪廓環形進度條是一個
WKInterfaceGroup類

00:16:09.169 --> 00:16:10.737 
是選擇器的父類

00:16:12.139 --> 00:16:14.541 
一個非常簡單非常容易設置的UI

00:16:15.742 --> 00:16:17.644 
現在 爲了在代碼中對它進行設置

00:16:17.711 --> 00:16:20.881 
我們需要做的就是創建一組動態圖像

00:16:20.948 --> 00:16:22.749 
它們將由選擇器管理

00:16:23.617 --> 00:16:27.254 
因此這裏我們創建了一個
progressImages 變量

00:16:27.821 --> 00:16:32.492 
並將UI的動態化
圖像與圖像API配合使用

00:16:32.593 --> 00:16:36.263 
來指定我們已經使用代碼畫出的

00:16:36.330 --> 00:16:40.267 
或者已存在於我們的
資源目錄內的一系列進度圖標

00:16:41.068 --> 00:16:42.769 
我們將爲它指定持續時間爲0

00:16:42.836 --> 00:16:46.640 
但選擇器將自動在整個動畫過程中搜索

00:16:47.140 --> 00:16:49.510 
然後最後在過程界面羣組內搜索

00:16:49.576 --> 00:16:53.113 
它是存放環形進度條地方 調用set
BackgroundImage

00:16:53.180 --> 00:16:55.382 
以便將動態圖像設置爲背景圖像

00:16:56.450 --> 00:17:00.287 
最後調用選擇器上
set Coordinated Animations

00:17:00.454 --> 00:17:02.990 
爲它提供一個不同的界面對象的清單

00:17:03.056 --> 00:17:04.892 
我們希望當你在選擇器內部移動的時候

00:17:04.958 --> 00:17:07.094 
選擇器對這些對象進行協調

00:17:07.794 --> 00:17:09.663 
在這個實例中
我們只有一個單一羣組

00:17:10.130 --> 00:17:12.465 
但我們可以指定多個羣組

00:17:12.766 --> 00:17:14.902 
一個圖像內一個羣組諸如此類

00:17:15.169 --> 00:17:18.070 
這可以支持任意多的對象只要你願意

00:17:19.839 --> 00:17:23.810 
隨着在WK界面選擇器的各項目間切換

00:17:24.111 --> 00:17:27.214 
我們與任何關聯的羣組和圖像相協調

00:17:27.513 --> 00:17:31.418 
指定哪個圖像
將顯示在特定的界面對象上

00:17:31.985 --> 00:17:35.889 
在這個例子中
我把項目和圖像的編號相匹配

00:17:36.023 --> 00:17:37.291 
但是過一會我要向你展示

00:17:37.591 --> 00:17:39.960 
不一定是需要這樣的

00:17:40.494 --> 00:17:42.829 
因此 那就是你如何
讓圖像與選擇器相協調

00:17:44.231 --> 00:17:46.466 
現在 爲了完成這部分的內容

00:17:46.533 --> 00:17:51.104 
我想我應該爲你們做一個小小的演示
表明在你們的應用中如何實現這些

00:17:53.507 --> 00:17:55.509 
那麼讓我把它設置好

00:17:57.511 --> 00:17:59.580 
這裏有一個我早些時候創建的小app

00:18:00.380 --> 00:18:02.616 
它顯示了各種不同的選擇器樣式

00:18:02.683 --> 00:18:04.718 
你們可以創建這些樣式

00:18:04.918 --> 00:18:07.621 
而最後一個用於演示如何進行協調

00:18:08.222 --> 00:18:10.490 
那麼讓我們從列表樣式選擇器開始

00:18:11.358 --> 00:18:14.094 
在這個特別的例子裏我創建了個選擇器

00:18:14.161 --> 00:18:15.729 
它的輔助圖像是使用核心圖形

00:18:15.796 --> 00:18:17.631 
選取隨機顏色繪製的

00:18:18.098 --> 00:18:20.634 
而我這裏有很多項目

00:18:20.701 --> 00:18:23.804 
您可以看到
在這些項目間滾動是非常流暢的

00:18:24.538 --> 00:18:28.609 
每次項目發生變化時
我也將在storyboard內

00:18:28.775 --> 00:18:31.478 
更新一個單獨的界面要素

00:18:31.712 --> 00:18:34.147 
這是一個簡單的標籤
而我將更新它的文本

00:18:34.882 --> 00:18:38.485 
那麼爲了應對已選中項目的變化

00:18:38.552 --> 00:18:40.254 
這些事情是非常容易做到的

00:18:40.554 --> 00:18:43.423 
實際上只有那些更重要的事情
你才希望將其延後再做

00:18:44.525 --> 00:18:46.260 
那麼讓我們回到頂層菜單

00:18:46.960 --> 00:18:48.495 
並進入堆疊模式

00:18:48.996 --> 00:18:50.898 
這裏我也將使用核心圖形

00:18:50.964 --> 00:18:54.768 
來渲染以隨機顏色繪製的隨機方塊

00:18:54.835 --> 00:18:57.938 
而在這裏你將看到
我可以非常流暢非常快速地

00:18:58.238 --> 00:19:01.808 
瀏覽在這個堆疊樣式選擇器中的圖像

00:19:02.876 --> 00:19:06.146 
也請注意
隨着轉動Digital Crown

00:19:06.680 --> 00:19:10.317 
在右上角你將看到Digital
Crown指示器會顯示

00:19:10.384 --> 00:19:12.753 
我在這麼一堆項目間的進度

00:19:13.153 --> 00:19:14.054 
它確實是很有用的

00:19:16.290 --> 00:19:18.725 
第三個例子是一個次序樣式

00:19:19.193 --> 00:19:22.663 
我想我將會展示那種
你們能夠用次序樣式實現的內容

00:19:22.729 --> 00:19:25.732 
因爲符號表情的例子明顯地展示了
你能夠用它來做些什麼

00:19:26.166 --> 00:19:30.337 
這裏我可以營造一種引人入勝的體驗

00:19:30.404 --> 00:19:33.540 
使用色盤選擇隨機顏色

00:19:33.974 --> 00:19:35.876 
在這裏 
我轉動Digital Crown

00:19:35.943 --> 00:19:39.680 
我將按照顏色出現的順序選擇不同圖像

00:19:40.848 --> 00:19:44.618 
所以這是很酷的
並且請注意它也支持慣性操作

00:19:44.685 --> 00:19:47.754 
那麼我可以持續拂動Crown
而它將在各個數值間快速移動

00:19:49.556 --> 00:19:52.025 
最後 讓我們談一下協調

00:19:53.093 --> 00:19:56.096 
這裏我已經用一個左右選擇器
建立了一個例子

00:19:56.897 --> 00:19:58.932 
在這個例子裏
我讓左邊的選擇器作爲焦點

00:19:59.533 --> 00:20:04.671 
當我轉動Digital Crown
我將在左側的12個選項之間移動

00:20:05.272 --> 00:20:07.207 
如我聚焦在右側的選擇器

00:20:07.574 --> 00:20:09.743 
現在我將在60個項目之間移動

00:20:10.043 --> 00:20:15.349 
你可以看到這可能是一個大概的
定時器UI的樣子

00:20:16.617 --> 00:20:17.951 
那麼需要注意的一件事是

00:20:18.018 --> 00:20:20.120 
兩個選擇器都有同樣的協調良好的圖標

00:20:20.187 --> 00:20:25.559 
我的這個協調良好的圖標右邊的選擇器
包括60個不同的弧形進度條

00:20:26.260 --> 00:20:30.230 
但我左邊的這個選擇器也可使用

00:20:30.297 --> 00:20:32.099 
同樣的進度條圖像

00:20:32.466 --> 00:20:35.302 
這確實是一盒非常方便的技巧

00:20:35.369 --> 00:20:38.505 
如果你希望保存
你正在選擇器之間使用的資源的數量

00:20:39.606 --> 00:20:41.642 
那麼 這就是演示的全部內容

00:20:51.118 --> 00:20:52.953 
那麼 來總結一下您學到的

00:20:53.020 --> 00:20:55.722 
關於Digital Crown內容
一些你能夠爲用戶提供的

00:20:55.789 --> 00:20:57.925 
watchOS 2中的新的體驗

00:20:58.692 --> 00:21:01.161 
我們有三個全新的可定製化樣式

00:21:01.228 --> 00:21:03.764 
即 列表 堆疊和次序

00:21:04.131 --> 00:21:07.401 
每個都是爲了顯示
不同類型的信息而量身定製的

00:21:07.701 --> 00:21:12.272 
因此您應該根據您的app中
用戶的互動對象選擇使用哪一個

00:21:13.407 --> 00:21:16.443 
這些樣式中的每個都支持聚焦和指示器

00:21:16.777 --> 00:21:20.180 
因此
當你在選擇器內的項目之間切換時

00:21:20.380 --> 00:21:23.884 
我們通過演示聚焦
向您展示了Crown將會做些什麼

00:21:23.951 --> 00:21:25.586 
而且我們也支持

00:21:25.652 --> 00:21:29.423 
顯示標準的
Digital Crown指示器

00:21:29.857 --> 00:21:32.559 
最後 爲了創建真正定製化的

00:21:32.626 --> 00:21:36.196 
引人入勝的界面
同時使用量身定做的圖形

00:21:36.263 --> 00:21:39.132 
你可以使用圖像動畫協調API

00:21:39.199 --> 00:21:44.304 
以便將您的界面的其他部分
與正被編輯的選擇器同步

00:21:45.005 --> 00:21:47.140 
話到此處 
我要有請科洛上臺接替我

00:21:47.274 --> 00:21:50.344 
她將講一下
watchOS 2上的媒體回放

00:21:50.477 --> 00:21:51.478 
非常感謝諸位！

00:21:59.086 --> 00:21:59.920 
嗨大家好

00:22:00.587 --> 00:22:06.860 
我在這裏講一下
watchOS 2的更多新特性

00:22:07.928 --> 00:22:09.663 
首先是媒體回放

00:22:12.933 --> 00:22:17.938 
那麼讓我爲大家展示一下
watchOS 2的新媒體播放器內

00:22:18.238 --> 00:22:20.674 
播放一段簡單的視頻是什麼樣的

00:22:22.009 --> 00:22:23.310 
首先加載內容

00:22:23.610 --> 00:22:27.848 
一旦用戶按下“播放”
圖標它將開始播放

00:22:29.149 --> 00:22:32.219 
而且任何時候用戶
都可以轉動DigitalCrown

00:22:32.286 --> 00:22:35.989 
以調整音量
而且如果你輕敲屏幕

00:22:36.056 --> 00:22:38.025 
播放器控制器將會出現

00:22:39.793 --> 00:22:41.728 
而對於僅有音頻的內容

00:22:41.795 --> 00:22:45.732 
我們也有一個專用的內置UI

00:22:47.134 --> 00:22:50.204 
兩種情況下的音頻都將被引導到

00:22:50.270 --> 00:22:51.872 
選定的輸出源

00:22:52.739 --> 00:22:55.976 
那可能是
您的Apple Watch揚聲器

00:22:56.343 --> 00:22:58.445 
或者已被配對的藍牙設備

00:22:59.213 --> 00:23:02.015 
現在讓我爲您展示
如何在代碼中實現

00:23:03.884 --> 00:23:06.954 
比如你試圖從你的界面控制器

00:23:07.020 --> 00:23:08.956 
呈現這個媒體播放器

00:23:10.290 --> 00:23:12.292 
你做的第一件事

00:23:12.359 --> 00:23:15.395 
是弄清楚內容的URL 

00:23:16.029 --> 00:23:20.501 
假如您有一個來自於
您的擴展框架的簡單影片

00:23:20.767 --> 00:23:24.671 
這是你如何爲內容找出它的URL

00:23:25.005 --> 00:23:28.208 
你也可以使用遠程URL

00:23:28.575 --> 00:23:32.546 
如果是那樣
媒體播放器將會爲您處理下載

00:23:33.146 --> 00:23:39.353 
此外 它還將用進度指示器更新UI

00:23:40.921 --> 00:23:44.024 
而對於URL我們可以在之後決定

00:23:44.091 --> 00:23:46.693 
如何播放內容

00:23:47.160 --> 00:23:48.896 
這裏我們提供了幾個選擇

00:23:49.162 --> 00:23:51.698 
第一個是自動播放

00:23:52.266 --> 00:23:57.137 
當它被設置爲真的時候
一旦媒體播放器出現在屏幕上

00:23:57.204 --> 00:23:58.672 
並且內容被加載

00:23:59.406 --> 00:24:01.575 
回放就將自動開始

00:24:02.776 --> 00:24:05.345 
接下來我使用start time

00:24:06.079 --> 00:24:09.683 
我讓它在視頻的3秒鐘標記處開始

00:24:10.751 --> 00:24:15.055 
這是確實有用的如果回放在之前暫停

00:24:15.222 --> 00:24:18.125 
用戶回到播放器

00:24:18.192 --> 00:24:21.061 
你希望從同樣的點繼續回放

00:24:22.296 --> 00:24:27.768 
這裏使用的第三個選項是視頻重力

00:24:28.101 --> 00:24:34.208 
關鍵取決於一旦視頻出現在播放器中
如何調整它的大小

00:24:34.975 --> 00:24:37.678 
有了所有這些信息 現在你調用

00:24:37.744 --> 00:24:40.681 
present Media Player
Controller With URL

00:24:41.248 --> 00:24:43.283 
而且你可以指定
completion handler

00:24:43.350 --> 00:24:45.485 
它將告訴你回放是如何結束的

00:24:46.620 --> 00:24:50.557 
而那說明瞭從你的代碼內
呈現一個媒體播放器是多麼容易

00:24:51.258 --> 00:24:53.760 
在另外一些情況下cases
for example

00:24:53.827 --> 00:25:00.000 
比如在社交媒體app中
你希望在某種上下文內嵌入一小段視頻

00:25:00.934 --> 00:25:02.870 
我們有你需要的對象

00:25:03.971 --> 00:25:08.809 
在watchOS 2中現在你有這個
WKInterfaceMovie

00:25:09.243 --> 00:25:11.845 
你可以把它插入到一個UI中

00:25:13.680 --> 00:25:17.351 
這個對象有一個播放器圖標
覆蓋在一個海報圖片上

00:25:17.417 --> 00:25:18.986 
這張圖片代表了你的內容

00:25:19.586 --> 00:25:25.359 
一旦用戶輕擊播放圖標
我在開頭向你展示的媒體播放器

00:25:25.659 --> 00:25:27.661 
就會自動出現在這裏

00:25:27.728 --> 00:25:29.630 
而你不必寫任何代碼

00:25:31.665 --> 00:25:33.700 
那麼讓我向你展示
如何在 Xcode 裏做到

00:25:34.601 --> 00:25:37.471 
在新的Xcode裏面
你將發現這個影片對象

00:25:37.638 --> 00:25:38.872 
它就在你的對象庫裏面

00:25:39.439 --> 00:25:41.909 
你可以將其拖拽
並放在你的Storyboard裏面

00:25:42.509 --> 00:25:46.680 
而你可以使用這個屬性檢查器

00:25:46.747 --> 00:25:51.051 
來自定義這個影片對象

00:25:51.451 --> 00:25:55.756 
你可以指定視頻重力或者海報圖片

00:25:57.191 --> 00:25:59.626 
如果願意對它進行動態配置

00:25:59.693 --> 00:26:01.662 
你也可以在代碼內實現它

00:26:02.362 --> 00:26:07.000 
假定在你的代碼內有內容的成員變量

00:26:08.202 --> 00:26:09.837 
而且你有內容的URL

00:26:09.903 --> 00:26:13.540 
以及代表影片的圖片

00:26:14.474 --> 00:26:18.111 
IB插座變量從interface
builder拖拽過來

00:26:18.579 --> 00:26:22.683 
它代表你正在使用的影片對象

00:26:23.517 --> 00:26:28.121 
萬一你希望更新你的UI
或者你的內容必須發生變化

00:26:28.255 --> 00:26:29.690 
你可以使用這個方法

00:26:29.857 --> 00:26:32.125 
來配置你的影片對象

00:26:33.327 --> 00:26:39.199 
因爲AppleWatch的硬件與其
他iOS設備有很大不同

00:26:39.466 --> 00:26:43.804 
我們有幾種專用媒體格式

00:26:43.871 --> 00:26:47.674 
你應該將其用於任何你試圖

00:26:47.875 --> 00:26:49.643 
在Apple Watch播放的內容

00:26:50.410 --> 00:26:54.314 
如果你的內容 以全屏幕模式播放最佳

00:26:54.748 --> 00:26:58.886 
那麼建議的分辨率是208乘260

00:26:59.453 --> 00:27:05.425 
如果你的內容實際上
最適合以16:9的長寬比播放

00:27:06.026 --> 00:27:09.830 
建議的分辨率則是320乘180

00:27:10.731 --> 00:27:13.834 
如果你遵照這套媒體規格

00:27:14.067 --> 00:27:17.871 
你就能預期得到最佳的回放性能

00:27:19.439 --> 00:27:23.443 
那就是如何在你的app中
播放音頻和視頻 就那麼簡單

00:27:23.944 --> 00:27:28.382 
我想講的下一個特性是
長格式的音頻回放

00:27:29.516 --> 00:27:33.987 
到目前爲止我爲您展示的特性
都爲您呈現了某種UI

00:27:34.421 --> 00:27:37.691 
而一旦這種UI被關閉回放也將停止

00:27:38.425 --> 00:27:40.360 
長格式的音頻就不同了

00:27:41.862 --> 00:27:45.699 
它並不伴隨你的app的任何內置UI

00:27:47.534 --> 00:27:49.169 
就是說你可以創建你自己的UI

00:27:49.970 --> 00:27:52.706 
而一旦你的UI被關閉

00:27:53.273 --> 00:27:56.410 
回放實際上仍在後臺持續

00:27:57.711 --> 00:28:03.517 
這種特性的一個常見的使用實例
是播客app或音樂app

00:28:03.717 --> 00:28:09.690 
用戶可能正在跑步
或通勤過程中聽音樂

00:28:11.391 --> 00:28:13.961 
這一特性的音頻將只會

00:28:14.027 --> 00:28:16.663 
被引導到已配對的藍牙設備

00:28:17.297 --> 00:28:19.633 
而回放狀態則將會在

00:28:20.133 --> 00:28:21.835 
正在播放glance中更新

00:28:22.469 --> 00:28:25.839 
因此用戶控制回放是非常方便的

00:28:28.342 --> 00:28:30.043 
現在讓我爲您展示這個API

00:28:30.444 --> 00:28:33.614 
如果您熟悉
AVFoundation API

00:28:33.780 --> 00:28:36.016 
您會覺得這些是很眼熟的

00:28:37.451 --> 00:28:42.756 
假如你有正打算播放的音頻的URL

00:28:42.956 --> 00:28:44.992 
您可以創建一個像這樣的資源

00:28:46.593 --> 00:28:51.031 
有了這個屬性
你可以創建音頻文件播放器項目

00:28:52.199 --> 00:28:57.771 
播放器項目有該屬性的呈現狀態

00:28:58.438 --> 00:29:01.074 
而且你可以使用KVO來監聽這一狀態

00:29:02.409 --> 00:29:04.811 
就像是AV 
Foundation API一樣

00:29:05.812 --> 00:29:09.516 
用它你可以創建一個播放器
並且調用play命令來播放它

00:29:09.917 --> 00:29:10.984 
超級簡單

00:29:11.485 --> 00:29:15.322 
對於我剛纔提到的例子-播客app

00:29:16.790 --> 00:29:22.429 
您可以創建一份
你打算播放的項目的清單

00:29:22.963 --> 00:29:28.502 
而如果你希望爲用戶
提供一種天衣無縫的收聽體驗

00:29:28.936 --> 00:29:31.638 
那就不要
使用AudioFilePlayer

00:29:31.705 --> 00:29:34.208 
而是要使用Audio
File QueuePlayer

00:29:34.274 --> 00:29:36.610 
那將讓你達到想要的目的

00:29:37.945 --> 00:29:40.480 
就像是在其他iOS設備上一樣

00:29:41.415 --> 00:29:45.452 
如果你希望創建後臺模式的回放

00:29:46.420 --> 00:29:50.490 
您需要在app的
Info P-list內啓用它

00:29:50.724 --> 00:29:54.661 
正如在Xcode中一樣
超級簡單

00:29:56.063 --> 00:29:59.166 
現在我將用一點時間爲您講述

00:29:59.233 --> 00:30:03.637 
應該在您的app中的什麼位置
存放你的所有這些媒體數據

00:30:04.137 --> 00:30:08.041 
如你所知在Apple
Watch上的app由兩部分組成

00:30:08.242 --> 00:30:11.211 
一部分是app另一部分是擴展

00:30:11.912 --> 00:30:13.547 
而當擴展被安裝的時候

00:30:13.881 --> 00:30:17.651 
擴展框架將位於app框架之內

00:30:18.318 --> 00:30:23.991 
每個部分都有一個
用於存放動態數據的容器

00:30:24.825 --> 00:30:27.194 
而每個容器只能由

00:30:27.528 --> 00:30:29.796 
每個獨立組件訪問

00:30:31.098 --> 00:30:34.902 
因此假定你有一張你希望
用在你的app中的靜態圖片

00:30:35.202 --> 00:30:39.540 
而且你希望使用WK image
加上圖片名稱來引用它

00:30:39.806 --> 00:30:43.477 
您應該把它放在app框架內的
一個資源目錄內

00:30:44.211 --> 00:30:46.013 
如果你有其他資源

00:30:46.113 --> 00:30:50.951 
比如音頻或視頻回放以及你希望

00:30:51.018 --> 00:30:56.890 
在代碼內直接操縱的圖片數據
你應該將其放在擴展框架內

00:30:56.957 --> 00:30:59.092 
以便能夠爲它們創建URL

00:31:00.661 --> 00:31:06.133 
現在 在其他情況下
如果你希望在回放時加入動態內容

00:31:07.034 --> 00:31:09.636 
你可以使用
watchconnectivity

00:31:09.703 --> 00:31:12.239 
來從iPhone獲取那些內容

00:31:12.906 --> 00:31:18.846 
或者你可以使用NSURL進程從互聯
網上下載您的內容

00:31:19.813 --> 00:31:21.815 
對這些內容 你不能把它們

00:31:21.949 --> 00:31:24.184 
放在我這裏爲你展示的
兩個容器內的任何一個裏面

00:31:24.785 --> 00:31:30.057 
因爲它們將不會被app或擴展讀取

00:31:30.657 --> 00:31:33.160 
那麼你需要做的
就是創建一個app羣組

00:31:33.460 --> 00:31:35.529 
它將爲您提供一個共享容器

00:31:35.796 --> 00:31:38.866 
用於存儲這些數據
而且它們也將可以被二者讀取

00:31:40.701 --> 00:31:45.839 
那麼這就是您需要知道的全部內容
而如果你希望瞭解更多

00:31:45.906 --> 00:31:49.209 
關於app羣組的知識請查閱這個文稿

00:31:50.944 --> 00:31:54.348 
接下來我要講的特性是音頻錄製

00:31:54.982 --> 00:31:59.853 
讓我們看一下UI
然後看它是如何實際工作的

00:32:00.521 --> 00:32:02.990 
一旦用戶按下錄音按鈕

00:32:04.291 --> 00:32:07.261 
錄製就會開始而且波形將會被更新

00:32:08.729 --> 00:32:10.998 
只須通過一個功能調用
你可以就可以實現這個操作

00:32:14.034 --> 00:32:17.671 
在您的界面控制器次類裏面
您可以調用

00:32:17.938 --> 00:32:20.174 
present Audio
Recording

00:32:20.240 --> 00:32:22.142 
Controller 
無須插入特別URL

00:32:22.242 --> 00:32:23.744 
並指定URL

00:32:24.077 --> 00:32:27.648 
現在您知道這個URL將指向共享容器

00:32:28.582 --> 00:32:31.018 
然後你決定預設

00:32:31.151 --> 00:32:33.220 
過一會我將談一下預設

00:32:34.354 --> 00:32:37.891 
然後你可以
爲此錄音操作指定最大持續時間

00:32:38.759 --> 00:32:41.595 
如果你希望控制文件大小的話
這確實是有用的

00:32:42.496 --> 00:32:44.498 
現在我把它設置爲60秒

00:32:45.899 --> 00:32:49.436 
你也可以自定義動作標題

00:32:49.703 --> 00:32:52.539 
它顯示UI在右上角的

00:32:53.540 --> 00:32:55.809 
假定你的app提供一種

00:32:55.876 --> 00:32:59.479 
將此錄音輸出給他人的功能

00:33:00.280 --> 00:33:03.317 
可以對其進行自定義
比如發送就是比較合適的

00:33:03.951 --> 00:33:05.786 
否則默認將會是完成

00:33:06.286 --> 00:33:08.455 
也可指定
completion handler

00:33:08.522 --> 00:33:10.724 
它將告訴你是否內容被保存

00:33:11.058 --> 00:33:12.159 
以及是否有任何錯誤

00:33:13.327 --> 00:33:14.595 
讓我們回到URL

00:33:14.995 --> 00:33:19.233 
URL包含了文件名稱
而文件的擴展名實際上

00:33:19.299 --> 00:33:23.203 
決定了我們將爲生成輸出
使用什麼樣的編碼解碼器

00:33:24.538 --> 00:33:30.310 
這些是
我們支持的文件類型MP4和4A

00:33:30.477 --> 00:33:35.382 
它們將分別使用AAC編碼解碼器
波形將使用PCM編碼解碼器

00:33:35.782 --> 00:33:41.288 
我們支持三種不同的預設
窄帶語音 寬帶語音和高質量音頻

00:33:41.588 --> 00:33:43.557 
每種都有不同的採樣率

00:33:43.991 --> 00:33:46.126 
而根據您選擇的編碼解碼器

00:33:46.393 --> 00:33:47.895 
輸出波特率將會不同

00:33:48.962 --> 00:33:53.300 
如你所料 輸出質量越高

00:33:53.634 --> 00:33:55.903 
輸出文件就會越大

00:33:58.005 --> 00:34:00.340 
因此它取決於您的使用場合

00:34:00.574 --> 00:34:03.477 
因此 如果你的錄音是作爲語音備忘

00:34:04.011 --> 00:34:07.047 
預設爲窄帶語音將是最適合您的

00:34:07.881 --> 00:34:10.851 
如果您試圖錄制更高質量的音頻

00:34:10.918 --> 00:34:13.120 
或許是出於後期處理的目的

00:34:13.687 --> 00:34:17.056 
那麼你可能會考慮預設爲高質量的音頻

00:34:17.824 --> 00:34:19.226 
通過這些預設

00:34:19.293 --> 00:34:22.161 
錄音操作變得非常簡單明瞭

00:34:22.228 --> 00:34:23.697 
可以根據您的需求進行自定義

00:34:26.266 --> 00:34:28.135 
接下來我將談一下安全性

00:34:29.268 --> 00:34:32.206 
在watchOS 2中 
您現在可以使用Keychain

00:34:32.272 --> 00:34:36.643 
存儲您的用戶的敏感數據

00:34:37.678 --> 00:34:40.414 
你可以設定那些數據可以被讀取

00:34:40.480 --> 00:34:42.748 
只有當設備解鎖後

00:34:43.784 --> 00:34:50.489 
用戶輸入爭取的密碼後app
watch會自動在設備上解鎖

00:34:50.556 --> 00:34:53.126 
當Apple Watch
在用戶的手腕上時 

00:34:54.527 --> 00:34:58.732 
然後數據就是您一直可以讀取的了

00:34:59.166 --> 00:35:03.070 
直到用戶將手錶從他們的手腕上取下

00:35:05.038 --> 00:35:10.377 
這確實會是有幫助的 如果您將爲錶盤
創建一個complication

00:35:11.211 --> 00:35:14.815 
而在complication 中
您可能會顯示一些用戶數據

00:35:15.682 --> 00:35:17.317 
它們是敏感的

00:35:18.452 --> 00:35:22.923 
那麼這對於使用Keychain
保護那些數據來說確實是非常重要的

00:35:23.690 --> 00:35:26.193 
有一件我想讓大家牢記的事情是

00:35:26.760 --> 00:35:29.429 
您在Apple Watch上
所創建的Keychain

00:35:29.496 --> 00:35:32.332 
並不參與Keychain SYNC同步

00:35:32.999 --> 00:35:34.935 
它們並不是圖標Keychain

00:35:35.869 --> 00:35:41.175 
儘管其使用方法
是與其他平臺完全相同的

00:35:42.342 --> 00:35:46.980 
這是一個創建Keychain的例子
它用來存儲用戶的憑證

00:35:47.414 --> 00:35:49.750 
假定您有一個安全密碼

00:35:50.417 --> 00:35:51.852 
而且你希望存儲它

00:35:51.919 --> 00:35:57.057 
讓它只有在設備解鎖時纔可讀取

00:35:57.558 --> 00:35:59.426 
您可以做類似這樣的事情

00:35:59.660 --> 00:36:04.565 
並且調用add來添加這些屬性

00:36:05.666 --> 00:36:07.301 
那樣您
就會創建一個Keychain

00:36:10.003 --> 00:36:12.806 
總結一下我們今天的講座

00:36:14.074 --> 00:36:18.979 
開始時大家聽內森
向您介紹了選擇器的一些新樣式

00:36:20.447 --> 00:36:23.984 
每個都可以
被Digital Crown控制

00:36:24.051 --> 00:36:25.285 
使用是非常有趣的

00:36:26.320 --> 00:36:30.958 
然後大家聽我
講了音頻和視頻播放器

00:36:31.792 --> 00:36:35.963 
而且您也可以在後臺播放長格式的音頻

00:36:36.997 --> 00:36:41.134 
對於音頻錄製
現在您可以只用幾行代碼就可以實現

00:36:42.469 --> 00:36:46.340 
最後 在watchOS 2裏面
您可以使用Keychain

00:36:46.406 --> 00:36:47.875 
來保護您的用戶數據

00:36:49.476 --> 00:36:53.080 
如果您需要更多信息 請看這張幻燈片

00:36:53.547 --> 00:36:57.818 
裏面有個您應該參考的示例代碼文稿

00:36:58.452 --> 00:37:03.390 
本週還有幾個講座

00:37:04.157 --> 00:37:08.328 
您可以親臨現場或觀看錄像的相關課程

00:37:08.695 --> 00:37:09.796 
感謝您的傾聽