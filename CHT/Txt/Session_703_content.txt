隱私安全和App
大家好 我是姬蒂·斯金納今天下午我將要和傑森·諾瓦克
一起談論一下關於你們app中隱私安全的問題
我們都是蘋果產品安全及隱私團隊中的成員
這意味着我們需要和蘋果公司裏所有的團隊打交道
來在我們的app和服務中實現隱私安全
在工作中和我聯繫最緊密的團隊包括
Apple Pay,Siri,Proactive Assistant,Health
以及我們最新發布的操作系統watch OS
首先我想講一點關於隱私安全的意義以及我們是如何看待它的
在蘋果我們把隱私視作人的一項基本權利
這也是我們每天工作的首要原則
當我們在設計app服務以及發行新版本
也就是IOS, OSX, watch OS的時候我們會牢記這一點
用戶希望當他們使用我們的產品時
他們的隱私得到尊重而對所有的開發者
在座的每一個人來說這是我們的共同責任
所以當你們在開發app時
要留心對用戶隱私的保護並將其在你們的app中實現
在蘋果我們不僅致力於做出偉大的產品
也致力於做出偉大的工具
面向開發團隊爲你們提供更多的便利
讓你們尊重用戶隱私並在你們的app和服務中實現隱私安全
到目前爲止我們所有的成功都依賴於我們和用戶之間的良好關係
而信任是維繫這段關係的關鍵
我們都看過一些 關於違背隱私安全
泄露用戶信息的新聞在座的各位都不想看到這種事情發生
不希望蘋果成爲下一個此類新聞的焦點
我們提供了這樣一個平臺
讓用戶爲新的體驗感到興奮
興奮於下載新的app
這些使得我們的app生態系統得以運轉
並且繁榮而用戶對你們的信賴是其中重要的一環
所以我們要值得讓用戶信賴
如今用戶因信任而提供了許多敏感數據
我們要成爲優秀的數據管家
隱私安全的構建是個好的入手點
現在所有的數據都需要一份保存策略
你們對此有什麼好的想法嗎？
我們可以從如何使用這些數據入手
對於一些你們再也用不到的數據
不會再用它們來爲用戶提供服務
那就應該把它們刪掉
對於你存儲的所有數據而言
你存儲的數據越多你對攻擊者就越具有吸引力
就越有價值
所以要做到只保存你們需要的數據
我認爲我們收集到的所有數據都具有風險
所以你需要在爲用戶提供的價值
和收集與存儲數據本身存在的風險之間做出權衡
現在你可以通過把數據減到最少的技術來降低這種風險
爲了學習這類技術以及具體應用的事例
你們可以找找去年的WWDC演講
看一下IOS和OS X中的用戶隱私安全部分
如數據聚合 分辨率降低
這些都是減輕持有數據的風險的方法
但具體你應該選擇哪種方法呢？
爲了回答這個問題我們可以從數據的用途入手
你將用這些數據來做些什麼？
你想解決一些什麼問題？
它們可以輔助做出什麼決策？
如果你回答不出以上問題你就什麼都想不出來
那麼保存這些數據對你一點用都沒有
那可以使用列表中的最後一項技術數據最小化
你根本就不需要收集和傳輸這些數據
如果你覺得可以用這些數據來做些什麼
那麼在轉出過程中所有數據都應該得到保護
一會兒傑森將要講講關於app傳輸安全的問題
這是我們在IOS 9中採用的一個新方法
來改進服務過程中的安全傳輸
爲了降低風險儘可能地避免在設備中輸出數據
尤其是對於敏感的數據類別
更要慎之又慎
這包括一些像健康情況的數據
舉個例子在cycling Workout中
我們可以得到一些諸如用戶的心率和運動距離的數據
而用戶的身高 體重和校正數據
都可能在配對設備中獲取
可以計算出在運動過程中卡路里消耗的情況
這些數據都不會反饋到服務器中處理分析
現在我們不僅需要在傳輸過程中保護數據
在存儲過程中也是一樣
首先考慮一下是否需要存儲這些數據？
是否只是需要短期保存？
能不能只在內存中存儲呢？
或者說它需要被寫進盤裏嗎？
IOS和watch OS平臺受益於數據保護
我將一會兒再談論這個
如果你在服務端存儲數據
要保證在空閒時段能對數據加密
使用CloudKit我們就能很容易得實現這一點
思考一下在你的數據傳輸和存儲時應該用什麼樣的標識符呢
一會兒傑森將會深入介紹一下如何選擇合適的標識符的問題
現在你需要讓用戶明白
你將用你的這些數據這些來源於用戶的數據做些什麼
你將如何使用它們如果你將要和第三方分享數據
這些都需要保持透明
要確保用戶可以理解你在做什麼
避免用戶產生任何的恐慌
這裏有一種好的解決方式
讓用戶明白他們的數據是如何被收集和存儲的
那就是給用戶檢查他們數據的權利
而且在你收集數據的時候
或者說當你提供給用戶選擇權時
你希望通過透露一些信息
來幫助用戶做出更好的選擇
你可以通過採用目的字符串等解決方案
當用戶在考慮他們是否要給你們提供照片等信息的權限的同時
你也希望用戶能掌握主控權
要給他們更改決定的權利
如果稍後他們的決定變得和先前不同
那時要給他們一個機會對你已經存儲的信息進行重置甚至刪除
現在我要談一些關於我們的平臺
在提高用戶隱私安全方面做出的一些更新
我想講一下在IOS,OS X平臺中發生的一些改變
還有一些在watch OS平臺中的基礎的東西
首先說到IOS平臺的發展我們可以追溯到去年
在去年我們開始配置加密的MAC地址
來應對幾種特定的wifi掃描方式
在ios 9平臺裏我們增加了掃描方式的數目
對其MAC地址進行加密
值得注意的是如果你的功能是基於外設的
一定要先在IOS 9中對MAC地址做測試確認
因爲在正式使用之前你不能保證MAC地址的可用性
簡單來說我們認爲想在手機上
安什麼軟件是由用戶決定的
用戶可以用他們的手機做許多事
他們也有各種各樣的理由來安裝自己喜歡的app
健康養生 金融理財居家生活等 不勝枚舉
就目前來說用戶安裝了哪些app
以及那些app從用戶身上獲取了些什麼信息已經變成了非常敏感的事
所以要嘗試着檢測出用戶安裝了什麼app
通過直接進行識別或者收集相關信息來輔助判斷
來找出一些違反IOS的安全模型的內容
最終IOS安全系統會對確定出來的app進行建模分析
它們僅在自己的沙箱中存活
這可以保護它們不被其他的app和進程侵害
嘗試確定用戶在手機上安裝了什麼app
是IOS安全模型的一項顛覆性成果
現在與之相伴的是canOpenURL今年也在改變
canOpenURL存在的意義
是爲了確認一個app能否打開指定的URL資源
這可以爲一些功能提供支持
比如當手機裏安裝一個新的app時
它會提示用戶可以實現一些什麼新的操作
有兩個新方向你們可以瞭解一下
菜單和通用鏈接
他們支持一些和URL方案相同的功能
我希望你們可以多關注一下那些方面
但是如果你想繼續使用URL方案
在IOS 9裏開發你的app並且想要調用URL方案
你需要知道的是你得先在app中的Info.plist文件中聲明它們
這裏有個新增索引鍵叫LSApplicationQueriesSchemes
在這裏你需要把canOpenURL
添加進方案列表
現在你不用改變對canOpenURL的調用方式
當前API也不會發生改變
但是一旦你調用了canOpenURL
它就會檢查你app中的Info.plist文件
看看你所調用的方案是否已經被聲明
所以說你需要先對其進行聲明
當你在那個方案中調用canOpenURL時 
如果安裝的app支持這個方案那麼返回值爲真
如果並沒有安裝任何app那麼返回值爲無
所以如果你沒有聲明URL方案會發生些什麼呢
不管這裏是否有一個支持它的app
你收到的返回值始終爲無
所以對於那些在IOS 9之前版本被鏈接
以及在IOS 9中運行的app來說
只給它們50個獨立的URL方案
一旦你連續調用到第51個方案的時候
你將會收到的返回值爲無
即使當用戶重啓手機的時候
這50個URL方案也不會被重啓
我之前提到的今年新出的一種可替代方案是通用鏈接
通用鏈接的厲害之處就在於如果用戶已安裝某個app
鏈接將會開啓
同時也會發送一個反饋信息
如果沒有安裝這個app鏈接將只會在app的網頁端開啓
Sysctl命令今年也發生了一些變化
Sysctl是一種低水平的API
用以詢問和設置系統信息
它涉及的初衷就是允許具有合適權限的進程來瀏覽信息
但正如我之前所說
IOS中的app並沒有瀏覽其他app的信息的權限
所以IOS沙箱今年發生了一個變化
那就是它再也不能通過調用kern.prockern.procargs
和kern.procargs2來看到
來自其他任何進程的數據
今年在IOS和OS X這兩個平臺上
我們即將引入內容過濾方面的新的延伸點
你的分程序表將能適用於Safari
以及所有使用SafariViewController的app 
你應該去測試一下非常受歡迎的擴展功能
來瞭解它將爲你的應用或網頁
帶來怎樣的影響
你應該時刻做好心理準備你的頁面中的某一部分
會在加載和處理它時遇到些問題
接下來要說的是在OS X平臺上我們正在嘗試改變cookie策略
自從產生了可以在所有應用和進程中
分享cookie的Yosemite系統之後
Cookie如今已變成了本地所有
它們對於單一進程來說是屬於本地的並且不可共享
注意如果你已經在App Store中運行過你的應用
那對你來說就不會發生任何改變
因爲你已經在這種狀態中了
如果你使用了Web Clips或者Dashboard小工具
請注意要在OS XEI Capitan中進行測試
現在我要講一些關於我們最新平臺的內容
在這些年裏我們看着IOS和OS X系統一步步得發展成熟
正是這些經歷讓我們從一開始就確信
對於在新平臺中建設好隱私和安全問題
我們已經有不錯的基礎了
我們的優勢包括一些已有的技術
比如數據保護和我們的即時預警技術
我們認爲這些裝置是緊密相關的
對於用戶來說只需要與這兩個裝置中的其一建立聯繫就行
這也是爲什麼許多設置可以通用的原因
這同時也包括
你在本地WatchKit app中的隱私設置
所以不管用戶是和你的IOS中的app進行交互
還是和Glance或者其他第三方進行交互
在隱私安全方面的設置都是相同的
我們相信如果用戶對於開發者是無條件信任的
他們就不會產生這樣一些異議
比如想“能不能給他們權限來訪問我Glance中的照片呢？”
用戶有着很單一的信任方式
他們因信任而允許你訪問數據並且對數據提供保護或者相反
所以我們認爲
從一開始就把關注點放在做好隱私保護工作是非常重要的
因爲你的Glance可能成爲用戶與你的app交互最多的一個地方
並且，在watchOS 2平臺上把鑰匙串系統引進到Watch中
接下來將由Jason負責主講他將涉及更多關於如何選擇標識符的問題
感謝姬蒂 現在我將講一下
關於在IOS和watchOS中的標識符的問題
這是我們在之前的演講中
就談到過的一個問題
你們可以回顧一下去年的WWDC演講
來進行一下更加深入的瞭解
但是我認爲在講watchOS中的標識符之前
回顧一下之前在IOS系統中學過的一些知識也是非常必要的
標識符是具有很大作用的
它們的厲害之處就在於
如果你使用一些用戶相關的內容來鑑別他們
比如用戶的姓名 電話號碼郵箱等 可以從中披露出許多信息
你可以建立更注重隱私安全的標識符
通過生成隨機數來實現或者如果要求隨機數的結構規整你可以使用UUID
當一個隨機數或者UUID不能夠鑑別用戶
那就取決於你記錄了什麼信息
你以怎樣的頻率來切換標識符
以及用戶掌控着些什麼
超過規定時間標識符就會解除匿名
由於你記錄着許多種不同的信息
那些信息可能識別具體用戶比如app動態
搜索詞條 消息或者位置信息
這些都取決於你的app的行爲
那就意味着所有標識符都攜帶有風險
即使標識符本身是可以匿名的
如果你持有的數據不能匿名
一旦其中一個數據違反了這一規則
你將擔起危害用戶隱私安全的後果
緊接着就是名譽受損
你會失去用戶的信任
當我提及數據泄露你可能會想到黑客
或者其他不法勢力
但那其實就像從把一個未設密的筆記本從車的後備箱偷出來
或者備份文件從卡車上掉下來那麼簡單
正因爲標識符的力量是如此強大
蘋果花費了大量的時間來研究標識符該如何運作
以及篩選一些最優方案
所以首先在你使用標識符之前
問一下你自己 你真的需要嗎?
你是否用以下方式收集數據呢？
通過一個存儲到服務器端的數據庫或者字典值
由客戶端向服務器發送信息
而你只需記錄服務器的增量數據？
如果你確定了自己真的需要使用標識符
考慮一下你想用它來標識什麼
你需要使用多長時間
你只是想識別一個會話
通過簡單得在app中發送標識符來爲不同進程取得關聯？
你是否在嘗試...
以及能不能在每次開啓和關閉app的時候都切換標識符呢？
你是否只着眼於暫時性的活動
每隔5,10或者15分鐘都會切換標識符？
我們知道切換標識符因其可以降低數據相關性
而能起到隱私保護的作用
我們一會兒將要通過一個例子來說明具體情況
如果你要標識一個用戶
你要怎樣同用戶解釋
爲何拒絕他們安裝一些同樣需要標識用戶的應用呢？
你使他們通過你的服務建立了賬戶嗎？
你是否要求他們登錄？
你能在UI界面中用語言描述清楚
你之所以這樣做是爲了讓他們獲得更好的用戶體驗嗎？
當你想清楚如何向用戶解釋這些之後你真的考慮好
在收集數據的同時要承擔的用戶標識方面的風險了嗎？
最後如果你想收集
關於手機上app安裝的信息在避免觸及用戶的其他信息或者會話的情況下
你是否設計出了合適的度量方法
來統計計算用戶在設備上的一些操作實例
比如用戶在第二個手機上卸載或下載一個app
或者備份數據以及進行設備間存儲呢？
在那些過程中關於用戶的隱私保護方面
標識符的重置和不變是否能在你的度量體系中有合理的解釋？
最後你該考慮一下關於標識符範圍的問題
通過一個固定不變的標識符
利用它屬性上的特徵來跟蹤用戶的一切行爲是非常容易的
但用戶的隱私安全也被極大降低了
許多數據是通過單一標識符被收集的當環境發生變化
內容發生變化時標識符卻不會發生變化
而且用戶也不希望用同一個標識被跟蹤所有的內容
審視標識符的作用域
你將會得到針對不同目的針對和不同數據關聯的
針對不同存活期的不同標識符
現在我要舉一個例子
描述一種可以增加你隱私安全的特殊的標識符
它把可能面臨的風險降到最低
設計出用同一標識符搜索所有信息的服務是非常簡單的
可一旦發生了數據泄露
即使標識符是匿名的
也能通過已有信息來識別出用戶
因爲除了別的東西之外用戶還會搜索與自己相關的內容
這種情況將會造成用戶對我們喪失信任
比如在這個例子中標識符是匿名的
它是123.但是我們可以從中看出許多事實
用戶123正在考慮訂婚
可能在過去的週六
他們可能並不是來自聖弗朗西斯科
因爲他們在尋找來自聖弗朗西斯科的航班
他們可能要去WWDC
他們可能是John Appleseed
他們可能對John Appleseed很感興趣
我們並不能確定但一旦知道了更多信息
我們能清晰得判斷出真相
另一方面如果你的搜索服務使用了可切換標識符
即使數據泄露了
對用戶隱私安全的損害也被最小化
因爲標識符在不斷改變
在這個例子中如果標識符每15分鐘變換一次
我們就不能確定用戶123和用戶456或者用戶789
其實是同一個人
所以我要談論一下固定標識符
由於他們能對用戶提供長期跟蹤
危害了用戶隱私安全
所以它們在IOS和watchOS中不再被設計使用
蘋果想爲用戶提供驚喜和愉悅的體驗
但如果不經過用戶的同意而追蹤他們用戶不會感到開心
這並不符合用戶的心理預期
如果他們在同一標識符下被一個app追蹤
即使當他們卸載了app並進行重新配置
或者採用其它更具破壞力的操作行爲
比如擦除手機記錄
但最終因爲固定標識符是永久不變的
用戶並不能對此進行改變
就像姬蒂之前說過的
我們認爲讓用戶擁有更多的控制權對隱私安全是非常重要的
爲了在開發者對標識數據的需求
同保護用戶隱私之間做權衡
我們在IOS平臺建立了一系列有目的作用域的標識符
讓開發者可以收集他們需要的數據
投入進分析和智能廣告環境中
同時用戶也可以通過控制標識符的重置
來打破他們當前的行爲記錄
和被收集的歷史數據
之間的關聯
在app層級上
在用戶從某個給定team ID卸載了所有app之後
我們可以通過重置vendor標識符和IDFV來實現
在廣告環境中我們給用戶重置廣告標識符的權利
可以通過依次選擇“Settings”“Privacy”和“Advertising”
再點擊“Reset Advertisement Identifier”
來重置廣告標識符因此用戶可以輕易重置手機中的標識符
不用擦除任何數據就可以打破和被收集的歷史數據之間的聯繫
在watchOS 1中
vendor ID和廣告ID
在iPhone中是作爲WatchKit運行的擴展而存在的
在watchOS 2中
你需要從iPhone中把vendor ID和廣告ID
同步到Watch上使用
你需要維持vendor ID和廣告ID的同步更新
所以現在我將要回顧一些最佳方法
確定你需要一個標識符
你可以只發送一個值然後在服務器端記錄增量嗎？
通過標識符來收集信息帶來責任的同時
也帶來了風險
如果你可以僅在增量數據中收集值
那麼就增加了用戶隱私安全
也爲你自己的數據收集降低了風險
使用合適的標識符作用範圍
確定當你真的需要標識一個會話一個用戶
或者一個設備就根據你app的目的來選擇標識符作用範圍
iOS 和 watchOS提供了一些標識符
所以可以直接使用它們不用新建你自己的標識符
試着建立一個永久標識符
它的值不因手機重置或者其他毀滅性的操作
比如移除你的app
而改變這既不利於保護用戶隱私也不利於你的app運行
如果你在使用私有API來建立一個永久標識符
你已違反了APP Store的條例
這將帶來許多不良後果
最後要遵循設計標識符的基本原則
其中你該遵循的最重要的原則之一就是
在你調用廣告標識符之前
檢查一下LimitAd Tracking的值
同時要時刻跟蹤廣告標識符的當前值
用戶可以在任意時間重置廣告標識符的值
此外授權廣告跟蹤的操作也造成了廣告標識符的重置
正因爲這個你需要保證自己知曉當前值並且不要把它存在cache裏
最後我們談一點報告相關的問題
我們知道在座許多都有給合作伙伴提供報告的義務
但是我們認爲在給第三方提供報告時
維護用戶隱私是非常重要的
我們考慮了許多如何做和用戶有關的報告的問題
你們也能看到我們把許多機器學習的部分嵌入到了App Analytics中
在提供報告的過程中主要有三種重要的思想
和用戶相關的報告所處的視野
報告的聚合
以及設定一個閾值
我所說的報告的視野是什麼意思呢？
對於合作伙伴來說比起想了解
是哪些人在頻繁得使用你的app
以及提供所有關於app用量的數據來讓他們計算
他們更想在確定計算方式定義的基礎上
讓我們基於數據進行計算
提供計算結果而不是遞過去原始數據
保護用戶隱私的下一步是做聚合
比起說出哪些用戶是重度用戶
不如說出你有多少個重度用戶
他們在整個羣體中佔多大比例
最後報告中需要設定閾值
如果你要在報告中寫你有一個重度用戶
而你的app只有一個用戶
如果你以對待羣體用戶的方式來提供用戶信息
比如提供郵政編碼
那你就暴露了你的用戶
在你提供用戶信息之前要設置一個閾值
確定你不會暴露用戶隱私應該讓他們以羣體的形式出現
我將會講一些關於如何提示用戶數據的最優方法
先講在Watch平臺的給大家提提神再延伸到IOS和OS X中
當你想要接觸到數據類的時候
操作系統不會直接提供給你數據
直到用戶選擇了是否能
讓你的app獲取接收數據的權限才行
所以用戶可以知道app用這些數據做些什麼
因此你對數據的收集和使用對用戶來說就變成了透明的過程
因此我們在提示中提供了這樣一個空間
你可以在這裏向用戶解釋說明
這就叫做目的字符串
你可以針對多種受保護的數據類
把他們設置進你的app和Info.plist中
我們認爲如果用戶理解爲什麼你們想獲得數據訪問權限
他們就更有可能做出正確的選擇
就像姬蒂之前說過的那樣提防着有限的“不動產”的可用性
讓我們的意圖變得透明增加用戶控制
我們考慮過Watch上的app如何獲取用戶數據的問題
首先就像在IOS和OS X中那樣
watchOS上的app並不能直接獲取用戶數據
直到獲得用戶的允許
然而和IOS和OS X不同的是在watchOS上
用戶不能選擇接受或拒絕設備本身發出的即時提示
或者說那些是指向iPhone的
正如姬蒂所說我們可以把iPhone和與其配對的Watch
視作緊密相連的用戶在其中一個平臺上做出的
關於隱私處理的決策將會影響到另一個設備
在watch中限定“不動產”
我們認爲比起在iPhone上面做要更有意義
在iPhone端用戶在更大的屏幕上看到提示信息
其中包括目的字符串
它可以清楚得說明爲何你的iPhone app和Watch app想要獲得訪問數據的權限
不像在IOS端你可以選擇是或者否
你可以選擇提示或者解散
當你做提示設置時用戶不能在watch中做出選擇
因此會停留在一種未設置的狀態
在這種未設置的狀態你將會稍後進行提示
舉一個未設置狀態的例子吧
用戶可以帶着Watch去跑步而不是Phone
所以把你的app安裝在Watch上
你的app將會提示
這種提示將會被消除
而你的應用將會
在沒有數據訪問權限的情況下繼續運行
但是在下一個時間節點你的app將會再次提示
現在如姬蒂之前說的這些設置包括你的隱私設置
都是在Watch和iPhone上共享的
我們認爲用戶和你的應用之間有單一的聯繫
與iPhone之間有單一的聯繫
與Watch之間有單一的聯繫
因此我們可以把這些單一的聯繫組合起來
變成一種在iPhone在watch在你的app中的設置
而這存在於我們平臺裏的其他地方
在IOS端如果用戶對你的app做出了關於隱私處理的決定
使得你的app的所有進程都有獲取那些數據的權限
如果你在app中提示了地理位置
你的擴展應用也可以使用它
如果用戶是在app擴展中首次進行提示
那麼整個app也將獲得訪問數據的權限
在Watch平臺上用戶做出的決定
對所有的watch中的app對原有app以及你的Glance
還有你的Complication來說都是有效的
當用戶給你app的一部分提供許可
就相當於對你app的所有部分都給予了許可
現在你知道在IOS,OS X和watchOS中我們對什麼數據有訪問權限了
以及我們該如何提示它們
我們認爲一旦用戶在這些平臺上提供了數據訪問權限
考慮如何保護它們是非常重要的
這裏有一些你應該利用和清楚的一些新的安全功能
第一個就是App傳輸安全
爲了在默認情況下保證用戶交流的安全
我們引入了App傳輸安全體系
在IOS 9和OS XEI Capitan平臺應用
在默認情況下你們在更高層級的API中的交流
會需要用TLS 1.2版的加密方式來實現保密性
如果你嘗試進行的連接違反了這些要求
將會出現報錯
如果你的app需要向非安全域發送請求
你必須在你app中的Info.plist中指定這個區域
如果想了解一下細節
可以關注一下明天上午9點的NSURL會話與網絡方面的演講
或者關注今天下午的安全性演講
如果你真的想在APP傳輸安全體系中聲明一個特例
你需要在你app中的Info.plist中聲明然後隨意
設置一個或更多的這種密鑰
現在我要談論一下獎勵卡的問題
在IOS 9系統獎勵卡可以出現在聯繫人列表中
我們知道有些獎勵卡使用了用戶的電話號碼
郵箱地址或者其他個人指向性明顯的數據
來作爲獎勵卡的標識符
所以爲了在獎勵卡以及聯繫人列表的傳輸中保護用戶的隱私
我們給開發者提供了一種簡單的方式
在遍歷聯繫人列表時加密數據
你所要做的就是修改你的pass.json
用這個新的nfc字典
你可以指定信息標識符和你的公鑰
從這開始當在非接觸支付中用到獎勵卡時
IOS會謹慎得爲你加密信息
隨着IOS9中App搜索App歷史記錄和App鏈接的應用
這意味着你可以存儲一些和你的app有關以及在你app之外的信息
因此你需要做一個好管家
爲用戶保護好數據這不僅包括位於你app裏的數據
還包括在你app之外存儲的數據
在星期三上午11點會有一個很不錯的演講介紹這方面
到時候可以去聽一下他們講的要比我更深入些
我將簡單得講一下app的兩種數據索引方式
以及它們在隱私保護方面所起到的作用
第一個是NSUserActivity
它是一個爲了支持Handoff而被引入IOS8平臺中的API
在IOS 9中我們對其進行了擴展
所以你可以使用NSUserActivity在你的app中
建立索引視圖讓用戶可以回到那個地方搜索
比如在你的食譜app中
當用戶看到一個乾酪澆肉汁土豆條的食譜時
你可以在視圖中建立一個NSUserActivity並將其索引
然後用戶再次在手機裏搜索乾酪澆肉汁土豆條的時候
顯示出來的結果就包括
他們曾經看到過的這個鏈接
在未來它可以幫助我們解放雙手而不需要其他機器
我們從最開始就思考如何讓搜索變得更注重保護隱私
我們之前所做的包括把默認設置爲非索引數據
這是非常正確的
在默認情況下NSUserActivity將繼續爲Handoff提供支持
如果你想製作可搜索的視圖
你必須得把eligibleForSearch屬性設置爲真
如果你想把那個視圖變成公開索引...
那個我們一會兒將要提到...
你需要做的也是把eligibleForPublicIndexing
值設置爲真
此外還有一個你需要設置的值
如果你想把數據變成可變址的需要用到expirationDate
正如姬蒂之前提到的那樣
保護用戶數據是保護用戶隱私的重要組成部分
這可以通過刪除數據與用戶之間的關聯來完成
現在我將要談一點關於NSUserActivity和公開索引的問題
NSUserActivity是一種很好用的簡單方式
它讓你的app變得可以搜索
我們提高索引方面的隱私安全就是通過在默認情況下不進行索引
讓開發者來決定是否要在特定視圖中添加索引
但是我們知道許多開發者想要添加一些
在所有設備中都能搜索到的公開內容
爲了實現這一點我們想出了這樣一種方法
就是在保護用戶安全的同時爲附加數據提供索引
當你創建了一個可搜索視圖
把它標記爲公共索引
如果它只包含可公開內容的話
然後當用戶搜索這一視圖並且使用它時
這一視圖的散表就被髮送到Apple中
在經過多重設備之後
創建視圖的散表併發到Apple裏
最後當超過閾值時
真實視圖將會被髮送到Apple裏
正是因爲這個原因偶然被標記爲公開的視圖並不會無意間被髮送出去
這就是NSUserActivity
現在我要講一點關於CoreSpotlight的內容
CoreSpotlight是IOS 9中新增的一種API
它使得你的app中的用戶內容可搜索
比如郵箱 聯繫人 日曆等
這些是派生數據
你需要像保護你app中的基礎數據那樣保護它們
首先是要加入數據保護類
就像你對app中的數據所做的那樣
接下來要用索引中的派生數據
來實現數據管理
你可以存儲--首先你應該存儲相關的用戶數據
比如有沒有人需要看草稿或者刪除文檔？
當用戶在你的app中更新文檔的時候
你應該在索引中更新這些文檔的拷貝文件
在用戶在你的app中刪除文檔的時候
你應該在索引中也刪除文檔
由於用戶有多種在app中刪除文檔的方式
像是刪除所有類型的文件
或者一個我們把它的多種條目變得易於刪除的文件夾
直接刪除或者先搜索再刪除
這是一個簡要的概述介紹了IOS 9中新的隱私保護特性
接下來再由姬蒂介紹
一些你們如果沒有用過可以去嘗試一下的已有技術
感謝傑森
我想強調幾個已有的技術
它們讓保護用戶信息變得容易
你不需要自己去寫一些
基本的東西
Touch Id是用來保護你的app的一種很好的方式
它也能保護你app中的數據
你可以使用app中的Apple Pay來實現它
而不需要創建或者接收
用戶的一些基本信息以及信用卡信息
現在我要深入得講一下
隱私策略和數據保護方面的內容
在研究保護你的用戶信息的技術之外
向用戶解釋你對他們的數據做了什麼
也是非常重要的如果你想和第三方分享數據的話
我們實際上需要對幾種固定類型的應用實施隱私保護策略
其中包括和HealthKit相連接的app
我們把引入隱私策略變得非常容易
在iTunes連接中你只需要輸入URL
它就會在你所有的App Store中顯示
它給用戶一個在做購買決策之前
閱讀隱私策略的機會
你可以使用IOS中的創建數據保護類
來爲你的數據進行加密其密鑰源於用戶的登錄密碼
這種加密技術有着驚人的力量
你可以輕鬆得利用它的優勢不需要自己寫任何加密碼
現在 每個IOS設備
都通過密鑰層級管理來實施數據保護
它建立在硬件加密的基礎上
應用於所有的IOS和watchOS設備
數據保護是由每個基礎文件來控制的
每個文件都被賦予一個類
這些類是否被解鎖決定了訪問權限是否開啓
這裏有四種數據類我將依次進行介紹
但是你最要清楚的一點是
Ns文件保護直到出現第一個認證時才完成
在IOS 7中
所有的第三方app數據都默認成這種數據類
如今你的app在啓動之前是不能運行的
直到用戶輸入他們的密碼
所以至少你的數據會經過以上過程的保護
我們知道有些開發者並沒有使用任何數據保護措施
因爲那樣做是沒有任何理由也沒有任何價值的
所以我要迅速得介紹一下這種模式中的幾種不同的數據類
正如你所見在沒有任何保護的情況下
即使用戶輸入了密碼或者沒有輸入
數據都是沒被上鎖的數據很容易被獲取
最後直到出現第一個認證之前它們被保護的
這就是你的默認類
現在這在啓動中是不可訪問的
但是一旦用戶輸入密碼
所有數據都變得可用即使設備加鎖了數據依舊可用
下一個數據就會一直被保護只到開放爲止
這種設計面向的對象是對設備上鎖敏感的數據
所以這裏有兩種操作類型讀和寫
一旦設備啓動了就關閉了數據訪問權限
用戶輸入了密碼後
你可以同時讀寫
當設備再次上鎖
你不能讀數據但你依舊可以寫數據
最後我們完成了保護工作
現在對於所有的敏感數據
包括健康數據金融信息
在設備啓動之後它們變得不可用
當用戶輸入了密碼數據就變得可用
當設備上鎖數據就不能用了
這將帶來一個很大的工作量
來思考你要應用哪種數據保護類
最後確認你已測試過數據保護是可用的
你可以通過這些內容來覈查Settings, Touch ID和Passcode
向下滑動看看你是否啓動了數據保護
我們今天講了許多東西
你需要在IOS和OS X上測試你的app
你希望理解這些改變所帶來的影響
來保證你依舊可以爲用戶提供優秀的體驗
有目的地提示
確保讓數據最小化 保持更新
從一些我們今天講過的平臺中的技術中獲益
最後用戶隱私安全是我們共同的責任
我們必須攜起手來
我們應該保護用戶的隱私權
謝謝大家