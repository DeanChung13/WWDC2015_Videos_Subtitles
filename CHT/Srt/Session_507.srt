00:00:20.487 --> 00:00:25.192 
Code Audio新特性

00:00:30.898 --> 00:00:33.133 
謝謝 大家下午好 

00:00:33.867 --> 00:00:36.470 
歡迎參加Code Audio
新特性說明會議

00:00:37.371 --> 00:00:41.441 
我是阿克廈沙·納格什
本會議第一個發言者

00:00:43.310 --> 00:00:47.648 
我將談談AV音頻引擎

00:00:48.315 --> 00:00:52.953 
及其今年發行的
iOS and OS X的新功能

00:00:53.921 --> 00:00:56.456 
之後我的同事託裏會講

00:00:56.857 --> 00:00:58.926 
我們所售產品其他令人興奮的新功能

00:00:58.992 --> 00:01:02.062 
像今年的跨設備音頻功能

00:01:02.529 --> 00:01:05.866 
以及AV Audio
Engine的新特點

00:01:07.067 --> 00:01:10.337 
明天早上我們
有另一場Core Audio說明

00:01:10.704 --> 00:01:15.209 
又稱爲Audio Unit 
Extensions是一套新API

00:01:15.275 --> 00:01:18.312 
我相信你會覺得很有意思

00:01:18.745 --> 00:01:20.747 
所以請不要錯過那個說明會

00:01:23.550 --> 00:01:24.384 
好吧

00:01:24.484 --> 00:01:28.021 
我們首先回顧一下
AV Audio Engine

00:01:30.657 --> 00:01:33.760 
如果你知道Core Audio 
你可能會注意到

00:01:33.894 --> 00:01:36.964 
我們提供了各種各樣的API

00:01:37.297 --> 00:01:39.766 
來增強音頻功能

00:01:40.834 --> 00:01:45.272 
去年在iOS 8和OS X 
Yosemite系統上

00:01:45.772 --> 00:01:47.374 
我們引入了一套新的

00:01:47.441 --> 00:01:51.812 
基於C語言的API 
即AV Audio Engine

00:01:51.879 --> 00:01:54.081 
是AVFoundation
框架的組成部分

00:01:55.482 --> 00:01:58.552 
如果您不是很熟悉
AV Audio Engine

00:01:58.619 --> 00:02:01.021 
我強烈建議你看看

00:02:01.321 --> 00:02:06.059 
我們去年的WWDC上關於
Audio Engine實操的視頻

00:02:07.728 --> 00:02:10.364 
咱們來看看這項成果
背後要達成的一些目標

00:02:12.099 --> 00:02:13.667 
有三個重要目標

00:02:14.268 --> 00:02:19.339 
首先 提供一個強大的
且功能豐富的API組

00:02:20.707 --> 00:02:24.811 
AV Audio Engine建立
在C語言框架之上 因此

00:02:25.512 --> 00:02:30.751 
它支持我們的
C語言框架大多數的強大的功能

00:02:32.386 --> 00:02:35.289 
第二個目標 您在直接使用

00:02:35.622 --> 00:02:40.861 
C語言框架編寫代碼時只需少量代碼

00:02:40.928 --> 00:02:45.132 
就能運行簡單或複雜的任務

00:02:46.266 --> 00:02:50.437 
這個任務可以是播放一個音頻文件

00:02:51.071 --> 00:02:53.006 
也可以是運行

00:02:53.073 --> 00:02:56.143 
整個音頻引擎遊戲

00:02:57.878 --> 00:03:01.715 
第三個重要的目標是簡化實時音頻

00:03:03.250 --> 00:03:06.320 
AV Audio Engine
是一個實時的音頻系統

00:03:07.054 --> 00:03:10.757 
但同時有一個非實時的交互接口

00:03:10.824 --> 00:03:15.896 
可在後臺處理

00:03:15.996 --> 00:03:19.099 
實時音頻的複雜文件

00:03:20.434 --> 00:03:24.738 
這再次凸顯了
AV Audio Engine可用

00:03:27.341 --> 00:03:28.909 
談談它的一些特性吧

00:03:29.910 --> 00:03:32.779 
它是個C語言API組 因此

00:03:32.980 --> 00:03:35.082 
也可以通過Swift運行

00:03:36.316 --> 00:03:39.419 
它支持低延遲實時音頻

00:03:40.621 --> 00:03:45.259 
使用AV Audio Engine
能夠運行各種音頻任務

00:03:45.759 --> 00:03:47.694 
如播放和記錄音頻

00:03:48.762 --> 00:03:51.798 
關聯音頻處理模塊

00:03:51.999 --> 00:03:53.467 
並形成獨有的處理鏈

00:03:54.501 --> 00:03:58.405 
你可隨時捕捉音頻處理鏈

00:03:58.572 --> 00:04:00.841 
進行分析或調試

00:04:01.775 --> 00:04:05.212 
而且 你可以安裝3D音頻遊戲

00:04:08.215 --> 00:04:10.284 
那麼 該引擎是由什麼構成的呢？

00:04:11.618 --> 00:04:14.621 
引擎的基本構建塊是節點

00:04:15.689 --> 00:04:18.858 
引擎本身控制一系列

00:04:19.026 --> 00:04:20.560 
連接在一起的節點

00:04:21.962 --> 00:04:24.231 
節點有三種類型

00:04:25.299 --> 00:04:28.135 
源節點提供數據輸入

00:04:29.002 --> 00:04:31.605 
過程節點處理這些數據 

00:04:32.372 --> 00:04:37.644 
目標節點通常處理終端節點圖

00:04:37.711 --> 00:04:40.113 
並關聯輸出硬件

00:04:40.180 --> 00:04:41.215 
和輸出節點

00:04:42.883 --> 00:04:45.352 
現在咱們看一個引擎設置示例

00:04:47.087 --> 00:04:49.623 
這是一個簡單的自動伴奏錄音應用

00:04:51.225 --> 00:04:53.293 
你可以通過隱式連接

00:04:53.560 --> 00:04:56.930 
輸入節點的麥克風捕捉用戶的聲音

00:04:57.931 --> 00:04:59.933 
通過有效節點處理

00:05:00.000 --> 00:05:01.435 
可能是簡單的延遲

00:05:02.603 --> 00:05:05.873 
你也可以通過一個節點塊

00:05:06.340 --> 00:05:10.344 
分析用戶聲音

00:05:10.410 --> 00:05:14.548 
確定用戶是如何表演的 在此基礎上

00:05:14.848 --> 00:05:18.085 
你可以通過播放器節點增添音效

00:05:19.253 --> 00:05:22.089 
也可以在你的應用程序中

00:05:22.155 --> 00:05:24.224 
用另一個播放器點在此播放

00:05:24.858 --> 00:05:28.362 
所有這些信號可以

00:05:28.428 --> 00:05:32.099 
使用混合節點混合在一起

00:05:32.165 --> 00:05:33.700 
最後通過揚聲器連接到輸出節點

00:05:34.334 --> 00:05:37.171 
在此設置中您的輸入

00:05:37.237 --> 00:05:39.439 
和播放器形成了源節點

00:05:40.874 --> 00:05:44.211 
混頻器是你處理輸入節點

00:05:45.078 --> 00:05:47.848 
輸出節點的目標節點

00:05:51.285 --> 00:05:54.755 
現在讓我們來仔細看看混合節點

00:05:55.923 --> 00:05:59.293 
引擎中有兩類混合節點

00:06:00.060 --> 00:06:03.530 
第一類是我們前面例子中的

00:06:03.597 --> 00:06:04.932 
AV音頻混合器節點

00:06:05.766 --> 00:06:11.171 
這類節點主要
用於採樣率轉換和聲道混合

00:06:12.339 --> 00:06:15.909 
它支持單聲道 
立體聲和多通道輸入

00:06:17.211 --> 00:06:20.747 
第二類混合器節點被稱爲環境節點

00:06:20.981 --> 00:06:23.517 
它主要用於遊戲應用程序

00:06:24.985 --> 00:06:29.990 
通過使用專業隱形偵聽器

00:06:30.057 --> 00:06:33.460 
模擬與資源與環境節點相關

00:06:33.527 --> 00:06:34.862 
3D環境音效

00:06:36.230 --> 00:06:40.033 
環境節點支持單聲道 立體聲輸入

00:06:40.267 --> 00:06:42.469 
和空間化單聲道輸入

00:06:45.906 --> 00:06:49.409 
現在 同時使用混頻器節點和源節點的

00:06:49.676 --> 00:06:52.779 
是一種叫做
AV Audio Mixing協議

00:06:53.981 --> 00:06:57.985 
此協議定義了一組屬性

00:06:58.051 --> 00:07:00.354 
適用於混合節點的輸入總線

00:07:01.622 --> 00:07:05.692 
源節點遵守這個協議

00:07:06.193 --> 00:07:08.428 
進而控制所連接的

00:07:08.529 --> 00:07:09.796 
混合器屬性

00:07:11.732 --> 00:07:15.235 
如果你在連接

00:07:15.302 --> 00:07:19.106 
源節點與混合器節點之前設置這些屬性

00:07:19.339 --> 00:07:20.541 
則屬性會緩存到源節點

00:07:21.675 --> 00:07:24.311 
當你實際連接源節點與混合器節點

00:07:24.378 --> 00:07:27.881 
該屬性會對混合器產生影響

00:07:29.750 --> 00:07:32.386 
我們看看這些屬性的例子

00:07:33.587 --> 00:07:35.489 
主要有三種類型

00:07:35.923 --> 00:07:38.458 
常見的混合屬性適用於

00:07:38.592 --> 00:07:40.060 
所有混合節點

00:07:40.627 --> 00:07:42.262 
這個例子是音量

00:07:43.230 --> 00:07:45.032 
立體混合屬性如全景

00:07:45.199 --> 00:07:49.269 
只適用於AV音頻混合器節點

00:07:50.537 --> 00:07:53.273 
3D混合屬性如位置 幹擾

00:07:53.340 --> 00:07:57.277 
遮擋主要用於遊戲

00:07:57.511 --> 00:08:00.080 
以及適用環境節點

00:08:02.916 --> 00:08:04.818 
現在 我們再一個設置示範

00:08:05.085 --> 00:08:08.722 
現在來看看設置的示例

00:08:09.022 --> 00:08:11.792 
假設您的引擎上有一個播放器節點

00:08:13.660 --> 00:08:15.262 
混頻器節點和環境節點

00:08:15.329 --> 00:08:17.431 
你在播放器節點上設置了一堆混合屬性

00:08:19.032 --> 00:08:21.335 
現在玩家並沒有

00:08:21.401 --> 00:08:23.337 
連接混頻器

00:08:23.670 --> 00:08:26.673 
這些屬性仍緩存在播放器裏

00:08:28.609 --> 00:08:30.944 
現在假設你連接到了混合器節點

00:08:31.778 --> 00:08:35.048 
現在的屬性如音量和全景

00:08:35.381 --> 00:08:40.419 
對混合器節點產生影響

00:08:40.754 --> 00:08:43.289 
而3D混合屬性如位置
不會影響混合器節點

00:08:44.992 --> 00:08:47.561 
如果你現在斷開混頻器

00:08:47.628 --> 00:08:48.862 
並連接到環境節點

00:08:49.396 --> 00:08:53.367 
音量和位置對環境節點有影響

00:08:53.534 --> 00:08:54.568 
而全景則無影響

00:08:55.569 --> 00:08:59.106 
這樣你可以在播放器中
設置一堆混合屬性

00:08:59.173 --> 00:09:02.910 
然後在你的應用程序中將播放器

00:09:03.177 --> 00:09:05.512 
從一個混頻器無損地轉移到

00:09:05.712 --> 00:09:07.514 
其他混頻器中

00:09:09.049 --> 00:09:12.119 
接下來的幾分鐘我們討論

00:09:12.286 --> 00:09:14.555 
今年產品的新特性

00:09:14.621 --> 00:09:16.790 
將再次訪問
AV Audio Mixing協議

00:09:19.960 --> 00:09:23.263 
我現在想看看另一方面

00:09:23.664 --> 00:09:26.500 
如何使用
AV Audio Engine處理

00:09:26.767 --> 00:09:28.135 
多通道音頻

00:09:29.670 --> 00:09:32.172 
這裏的設置涉及兩部分

00:09:32.973 --> 00:09:35.976 
首先是配置硬件

00:09:36.376 --> 00:09:38.946 
能夠接收多通道音頻

00:09:40.013 --> 00:09:42.616 
現在的硬件可以是HDMI設備

00:09:42.816 --> 00:09:44.751 
或USB設備等等

00:09:46.053 --> 00:09:49.456 
第二部分實際上是設置

00:09:49.790 --> 00:09:52.392 
引擎本身能夠渲染

00:09:52.593 --> 00:09:53.460 
多通道音頻

00:09:54.995 --> 00:09:56.897 
我們一個一個來看

00:09:58.799 --> 00:10:01.635 
首先 OSX中的硬件設置

00:10:03.370 --> 00:10:08.041 
在OS X中 有款內置系統工具
叫音頻MIDI設置

00:10:08.342 --> 00:10:11.178 
用戶可使用這個設置

00:10:11.245 --> 00:10:12.446 
安裝多通道硬件

00:10:13.380 --> 00:10:15.315 
這個工具可用於

00:10:15.382 --> 00:10:17.317 
設置揚聲器配置

00:10:17.584 --> 00:10:19.152 
頻道佈局 等等

00:10:20.120 --> 00:10:24.157 
隨後 app可通過
設置AVAudioEngine

00:10:24.391 --> 00:10:27.394 
使用這個硬件進行多通道渲染

00:10:29.763 --> 00:10:34.535 
但是在iOS中
爲了使用硬件多通道

00:10:34.868 --> 00:10:38.071 
app需要設置
AVAudioSession

00:10:39.606 --> 00:10:41.375 
假設我們要播放一個音頻

00:10:41.508 --> 00:10:43.810 
來看看會涉及哪些步驟

00:10:45.479 --> 00:10:49.550 
首先是激活音頻會話

00:10:50.450 --> 00:10:52.719 
接下來需要查看

00:10:53.187 --> 00:10:58.125 
適合此會話的通道最大數

00:10:59.493 --> 00:11:02.029 
隨後設置通道的優選數字

00:11:02.729 --> 00:11:04.031 
最後一步

00:11:04.364 --> 00:11:07.601 
詢問返回輸出通道的實際數字

00:11:08.135 --> 00:11:12.039 
以覈實你剛做的請求是否通過

00:11:13.707 --> 00:11:14.975 
現在 請注意

00:11:15.042 --> 00:11:18.645 
不管你何時請求
爲通道提供某一數字

00:11:19.179 --> 00:11:22.516 
請求並不一定會被接受

00:11:23.183 --> 00:11:24.451 
因此 最後一步

00:11:24.651 --> 00:11:28.522 
有必要覈實通道實際輸出數字

00:11:31.124 --> 00:11:33.293 
代碼看起來是這樣的

00:11:34.528 --> 00:11:36.597 
假設有一個音頻播放案例

00:11:36.864 --> 00:11:39.867 
假設使用的是5.1渲染

00:11:41.335 --> 00:11:42.603 
首先要做的是

00:11:43.103 --> 00:11:48.775 
獲得一個音頻會話的共享事例設置類別

00:11:49.142 --> 00:11:50.978 
激活會話

00:11:53.347 --> 00:11:56.517 
接下來 檢查適合會話的

00:11:56.583 --> 00:11:58.252 
輸出通道的最大數

00:11:59.786 --> 00:12:00.954 
在此基礎上

00:12:01.021 --> 00:12:04.391 
在會話中設置通道的優選數字

00:12:06.293 --> 00:12:07.361 
最後一步 

00:12:07.427 --> 00:12:11.632 
詢問輸出通道的實際數字

00:12:11.698 --> 00:12:13.734 
使之適應於對應通道計數

00:12:16.970 --> 00:12:19.473 
好了 以上就是
關於硬件設置的所有內容

00:12:20.040 --> 00:12:22.543 
現在來看看如何設置引擎

00:12:22.609 --> 00:12:24.711 
使之能夠渲染多通道音頻

00:12:26.813 --> 00:12:28.615 
再舉兩個使用事例

00:12:29.449 --> 00:12:33.287 
首先 假設
你有適用的多通道音頻內容

00:12:33.387 --> 00:12:35.522 
且它需要通過多通道硬件

00:12:35.656 --> 00:12:37.024 
進行重播

00:12:37.858 --> 00:12:41.328 
在這個案例中
你會用到一個AV混音器節點

00:12:42.996 --> 00:12:44.965 
第二個事例

00:12:45.132 --> 00:12:49.269 
有一個遊戲場景
你想讓其中的內容空間渲染

00:12:49.536 --> 00:12:51.972 
然後通過多通道硬件播放

00:12:52.639 --> 00:12:54.975 
這裏 你用到一個環境節點

00:12:58.111 --> 00:13:01.582 
事例一 你有一個多通道音頻內容

00:13:02.115 --> 00:13:03.650 
一個多通道硬件

00:13:03.717 --> 00:13:07.154 
這個硬件是按照數分鐘前
我們所討論的那樣創建的

00:13:08.488 --> 00:13:14.494 
現在 請注意儘管顯示的是
內容格式和硬件格式一樣

00:13:14.628 --> 00:13:15.896 
但他們可能彼此截然不同

00:13:17.164 --> 00:13:21.001 
這裏的混合器節點

00:13:21.535 --> 00:13:23.937 
將注意到內容格式
和硬件格式間的通道映射

00:13:26.473 --> 00:13:28.242 
所以 首先你要做的是

00:13:29.042 --> 00:13:30.911 
傳遞硬件格式

00:13:31.278 --> 00:13:34.615 
連接混合器和輸出節點

00:13:35.616 --> 00:13:38.218 
代碼層面是這樣的

00:13:39.253 --> 00:13:43.390 
你詢問輸出節點的輸出格式

00:13:43.590 --> 00:13:45.092 
即硬件格式

00:13:46.460 --> 00:13:48.028 
然後用那格式

00:13:48.295 --> 00:13:52.199 
連接混音器節點和輸出節點

00:13:55.836 --> 00:13:58.605 
接下來的內容方面很相似

00:13:58.906 --> 00:14:01.141 
將內容格式

00:14:01.308 --> 00:14:04.378 
傳播並連接播放器和混音器節點

00:14:06.213 --> 00:14:08.882 
假設你有一個文件格式的

00:14:08.949 --> 00:14:09.950 
多通道音頻內容

00:14:10.584 --> 00:14:12.452 
可以打開文件閱讀

00:14:12.753 --> 00:14:14.955 
也可以用它的處理格式

00:14:15.289 --> 00:14:18.325 
連接播放器和混音器節點

00:14:20.894 --> 00:14:23.997 
隨後將文件安排到播放器中

00:14:24.498 --> 00:14:26.767 
打開引擎 打開播放器

00:14:27.100 --> 00:14:30.070 
內容將通過處理鏈

00:14:33.507 --> 00:14:37.778 
事例二 這是典型的遊戲場景

00:14:37.845 --> 00:14:40.881 
你想讓渲染內容空間

00:14:40.948 --> 00:14:42.216 
並通過多通道硬件播放

00:14:43.517 --> 00:14:46.286 
處理步驟極其相似

00:14:46.353 --> 00:14:48.822 
除了部分細微差別

00:14:50.591 --> 00:14:53.160 
首先拿到硬件格式

00:14:53.360 --> 00:14:55.963 
在環境節點和輸出節點之間

00:14:56.029 --> 00:14:57.531 
設置連接

00:14:59.333 --> 00:15:04.037 
因爲環境節點
只支持特別通道佈局

00:15:04.972 --> 00:15:06.907 
所以你需要將硬件格式

00:15:07.241 --> 00:15:09.810 
映射到一個環境節點支持的格式

00:15:10.711 --> 00:15:12.212 
這是第一個不同點

00:15:12.579 --> 00:15:15.516 
假設我們有一個5.1硬件

00:15:16.183 --> 00:15:20.020 
我們可以選擇由音頻節點支持的

00:15:20.687 --> 00:15:22.723 
音頻單位5.0佈局包

00:15:23.557 --> 00:15:25.692 
我們可以用這個佈局標籤

00:15:25.859 --> 00:15:27.261 
創建一個AV音頻通道佈局

00:15:28.462 --> 00:15:31.765 
然後一個AV音頻格式使用這個佈局

00:15:33.934 --> 00:15:36.803 
然後你用這個格式

00:15:36.904 --> 00:15:39.139 
連接環境節點和輸出節點

00:15:41.575 --> 00:15:43.610 
第二步完全相同

00:15:43.844 --> 00:15:46.880 
傳遞內容格式

00:15:47.481 --> 00:15:49.449 
並連接播放器和環境節點

00:15:50.551 --> 00:15:54.721 
打開並閱讀文件用它的處理格式

00:15:55.222 --> 00:15:57.991 
連接播放器和環境

00:15:59.893 --> 00:16:04.464 
下一步 在支持多通道渲染的播放器上

00:16:05.032 --> 00:16:08.168 
設置渲染算法

00:16:09.736 --> 00:16:12.139 
渲染算法是一種

00:16:12.206 --> 00:16:14.374 
3D混合協議屬性

00:16:14.441 --> 00:16:16.310 
數分鐘前 我們剛看過

00:16:17.177 --> 00:16:19.813 
它將告訴環境節點

00:16:20.147 --> 00:16:22.916 
對應的源請求一個

00:16:22.983 --> 00:16:24.384 
多通道渲染

00:16:26.987 --> 00:16:28.722 
接下來就是常規的東西了

00:16:29.590 --> 00:16:32.626 
將文件放到到播放器裏

00:16:32.693 --> 00:16:35.362 
啓動引擎 啓動播放器

00:16:35.429 --> 00:16:37.130 
環境節點將對內容進行空間渲染

00:16:41.568 --> 00:16:47.608 
好了 這就是iOS 8和
OS X Yosemite系統

00:16:47.674 --> 00:16:49.510 
AV音頻引擎

00:16:50.711 --> 00:16:52.613 
接下來講講 讓人更興奮的東西

00:16:53.413 --> 00:16:54.915 
今年有什麼新東西呢

00:16:58.819 --> 00:17:00.687 
我們有三個主要的新特性

00:17:01.688 --> 00:17:04.057 
第一個是拆分支持

00:17:04.223 --> 00:17:06.760 
等下就會講到

00:17:07.627 --> 00:17:10.998 
第二是音頻格式轉換支持

00:17:11.198 --> 00:17:13.500 
這裏有不少的新類

00:17:13.834 --> 00:17:16.270 
最主要的一個是
AVAudioConverter

00:17:17.771 --> 00:17:20.907 
最後 另一個新類叫做

00:17:20.973 --> 00:17:24.944 
AVAudioSequencer 
支持MIDI文件的播放

00:17:28.682 --> 00:17:30.250 
來講講拆分支持

00:17:31.985 --> 00:17:34.021 
讓我們考慮一下這個設置示例

00:17:34.788 --> 00:17:37.157 
我猜你們應該都很熟悉了

00:17:39.626 --> 00:17:42.863 
在上週推出的API中

00:17:43.564 --> 00:17:47.234 
引擎只支持一對一連接

00:17:47.968 --> 00:17:51.238 
任何節點的輸出

00:17:51.438 --> 00:17:54.842 
只能與引擎中另一個節點連接

00:17:56.510 --> 00:18:02.516 
現在 我們增加了對這個的支持

00:18:03.350 --> 00:18:07.788 
它可讓你在處理鏈中

00:18:07.888 --> 00:18:11.158 
將節點輸出分成多個路徑

00:18:13.060 --> 00:18:14.294 
在這個事例中

00:18:14.361 --> 00:18:17.764 
播放器的輸出被分成三個不同路徑

00:18:18.232 --> 00:18:21.001 
最後連接到混音器節點上

00:18:22.369 --> 00:18:26.673 
拆分在類似下面的用例中很有用

00:18:27.040 --> 00:18:32.246 
如混頻 
需增加一些效果聲信號的混頻

00:18:32.713 --> 00:18:35.983 
或者用同一個源驅動的
原始信號對信號進行處理

00:18:37.117 --> 00:18:38.318 
在這個事例中

00:18:38.385 --> 00:18:43.423 
播放器和混音器節點的連接
形成了原始信號路徑

00:18:43.790 --> 00:18:49.062 
而經過效果節點的其他兩個路徑
形成了效果聲信號路徑

00:18:49.630 --> 00:18:52.332 
這三個信號通過混音器節點

00:18:52.499 --> 00:18:54.835 
混合在一起形成混合

00:18:56.603 --> 00:18:59.773 
現在 請注意當你拆分節點的輸出時

00:19:00.073 --> 00:19:04.411 
事實上 
整個輸出通過多路徑進行渲染

00:19:04.645 --> 00:19:07.614 
這其中並未涉及到通道的拆分

00:19:10.851 --> 00:19:14.254 
現在來看看節點如何設置這些連接

00:19:17.090 --> 00:19:18.258 
你可以看到

00:19:18.525 --> 00:19:21.195 
播放器連接到三個不同的節點上

00:19:22.496 --> 00:19:25.165 
我們將它們叫做連接點

00:19:25.499 --> 00:19:28.302 
由一個非常簡單的新類

00:19:28.569 --> 00:19:30.470 
叫做AV音頻連接點作爲其代表

00:19:33.674 --> 00:19:34.775 
首先要做的是

00:19:35.042 --> 00:19:37.744 
創建一些連接點

00:19:38.011 --> 00:19:40.380 
以連接播放器節點

00:19:41.148 --> 00:19:45.786 
在這個事例中連接是 輸入總線

00:19:45.853 --> 00:19:51.225 
兩個效果的0和輸入總線
混音器節點的1

00:19:53.594 --> 00:19:56.930 
然後使用新連接API

00:19:57.331 --> 00:20:00.200 
我們必須連接播放器和這些連接點

00:20:01.468 --> 00:20:04.872 
就這樣 
你爲拆分連接做好準備了

00:20:05.272 --> 00:20:09.710 
接着  連接引擎中其他所需要的節點

00:20:13.647 --> 00:20:15.315 
現在再次訪問

00:20:15.382 --> 00:20:18.185 
剛纔提到過的
AVAudioMixing協議

00:20:18.252 --> 00:20:21.655 
看看它如何影響拆分使用事例

00:20:22.656 --> 00:20:24.591 
假設我們有一個播放器節點

00:20:24.725 --> 00:20:27.427 
這個播放器節點的輸出
被拆分成兩個不同路徑

00:20:27.895 --> 00:20:30.597 
通過效果節點到達混音器節點

00:20:33.233 --> 00:20:35.769 
現在假設在播放器節點上設置了個屬性

00:20:36.336 --> 00:20:38.805 
在這個事例中假設你設置了音量

00:20:40.641 --> 00:20:47.247 
此刻 屬性將在所有現有的混音器
連接上起作用

00:20:47.881 --> 00:20:50.684 
在這個事例中輸入總線 
混音器節點的0輸入總線

00:20:51.118 --> 00:20:55.355 
混音器節點的1得到的音量都是5

00:20:58.692 --> 00:21:00.727 
如果你想在特別混音器連接數

00:21:01.228 --> 00:21:03.030 
改變任何屬性

00:21:03.096 --> 00:21:05.766 
這也是可以做到的

00:21:06.400 --> 00:21:07.968 
方法就是

00:21:08.035 --> 00:21:11.939 
使用我們的新類
名爲AVAudioMixing目標

00:21:13.207 --> 00:21:15.008 
詢問播放器節點

00:21:15.342 --> 00:21:18.378 
這裏提供你想要的與混音器對應的

00:21:18.445 --> 00:21:19.947 
目標對象

00:21:20.747 --> 00:21:23.650 
然後 你就可以在對象上設置屬性了

00:21:24.484 --> 00:21:25.819 
這個事例中

00:21:26.153 --> 00:21:30.991 
我在混音器輸入總線0到8中改變音量

00:21:33.894 --> 00:21:36.864 
好了 同樣的

00:21:36.930 --> 00:21:41.034 
你也可以在其他混音器連接中改變屬性

00:21:43.670 --> 00:21:45.706 
我們來看看 連接斷開會發生什麼

00:21:46.840 --> 00:21:49.676 
假設你將效果

00:21:49.743 --> 00:21:51.778 
從混音器輸入總線1連接中斷開

00:21:52.880 --> 00:21:54.114 
請注意 

00:21:54.648 --> 00:21:59.152 
你在特別混音器連接上改變的設置

00:21:59.419 --> 00:22:00.454 
將不會被保存

00:22:02.389 --> 00:22:05.526 
因此 混頻設置的狀態看起來是這樣的

00:22:06.026 --> 00:22:09.129 
播放器的混頻設置仍舊完整

00:22:09.663 --> 00:22:11.765 
另一個活躍的連接

00:22:11.832 --> 00:22:14.735 
同樣也有完整的混頻設置

00:22:17.504 --> 00:22:20.541 
現在 假設你結束創建連接

00:22:20.741 --> 00:22:25.078 
重新回到混音器輸入總線1
因爲先前的設置並未保存

00:22:25.179 --> 00:22:28.348 
重設播放器節點的基礎設置

00:22:28.415 --> 00:22:30.851 
將在新連接上起作用

00:22:32.286 --> 00:22:36.323 
因此 根據播放器的混頻設置

00:22:36.390 --> 00:22:39.426 
輸入總線音量1將再次被設置成5

00:22:42.362 --> 00:22:43.797 
總結一下

00:22:43.964 --> 00:22:47.334 
當一個源節點
被連接到多個混音器上時

00:22:48.468 --> 00:22:51.505 
你在源節點上設置的屬性

00:22:51.705 --> 00:22:55.776 
將適用於所有現存的混音器連接

00:22:56.176 --> 00:22:59.680 
同時它也適用於
任何新創建的混音器連接

00:23:01.548 --> 00:23:02.850 
若有需要

00:23:02.916 --> 00:23:06.587 
也可以改變寫個別混音器連接

00:23:06.920 --> 00:23:07.921 
但是請記住

00:23:07.988 --> 00:23:10.924 
無法保存在斷開時候保存

00:23:14.928 --> 00:23:16.630 
最後是關於拆分支持

00:23:17.564 --> 00:23:20.801 
如果你設置限制條件

00:23:21.001 --> 00:23:24.805 
引擎就可以支持處理表中

00:23:24.905 --> 00:23:26.340 
任何節點的拆分

00:23:27.441 --> 00:23:30.377 
現在 從輸出被拆分的節點開始

00:23:31.311 --> 00:23:34.381 
到所有部分終點的混音器

00:23:35.349 --> 00:23:38.185 
你無法擁有任何時間效果節點

00:23:38.585 --> 00:23:41.822 
也就是說 你無法設定速度和時間階

00:23:43.790 --> 00:23:46.159 
你也無法進行速度變化

00:23:47.227 --> 00:23:48.562 
換句話說

00:23:49.596 --> 00:23:52.599 
基礎節點上的所有拆分部分

00:23:52.966 --> 00:23:57.404 
應用同樣的速度加以渲染
直至它們到達通用混音器

00:23:59.139 --> 00:24:01.108 
倘若你設定限制條件

00:24:01.241 --> 00:24:04.211 
那麼你就可以將引擎上

00:24:04.344 --> 00:24:06.813 
任何節點的輸出拆分成不同部分

00:24:10.717 --> 00:24:12.853 
好了  現在來說說

00:24:12.920 --> 00:24:18.926 
今年的第二個新特徵音頻格式轉換支持

00:24:20.093 --> 00:24:22.229 
這裏 我們有一些新類

00:24:22.696 --> 00:24:27.100 
AVAudioCompressedBuffer
和AV Audio Converter

00:24:29.203 --> 00:24:32.039 
在上週提到的API中

00:24:32.339 --> 00:24:35.943 
我們有一個
AVAudioBuffer

00:24:36.009 --> 00:24:38.812 
和它的一個子類叫做
AVAudioPCMBuffer

00:24:39.813 --> 00:24:41.081 
從它的名字就可以看出

00:24:41.381 --> 00:24:44.518 
PCM緩衝器保存未壓縮音頻數據

00:24:45.385 --> 00:24:47.688 
而且通過引擎的數據流

00:24:47.754 --> 00:24:49.389 
是PCM緩衝器格式

00:24:51.058 --> 00:24:52.292 
今年開始

00:24:52.359 --> 00:24:57.598 
AVAudioBuffer有另一個子類
叫做AVAudioCompressedBuffer

00:24:58.265 --> 00:25:00.701 
它保存壓縮音頻數據

00:25:02.035 --> 00:25:06.173 
這個可以與新類
AVAudioConverter用

00:25:06.240 --> 00:25:09.376 
接下來將會講到
AVAudioConverter

00:25:13.213 --> 00:25:16.116 
AVAudioConverter
是一個新工具類

00:25:16.283 --> 00:25:18.485 
它是音頻工具箱架構中的

00:25:18.552 --> 00:25:22.589 
音頻轉換器升級版本

00:25:24.224 --> 00:25:26.326 
它支持所有音頻格式轉化

00:25:27.528 --> 00:25:32.933 
在你改變 
即整合到浮動位深 抽樣率等等時

00:25:33.300 --> 00:25:36.036 
你可以將PCM轉化成PCM格式

00:25:37.671 --> 00:25:41.175 
或者可以在PCM和壓縮格式間轉換

00:25:41.408 --> 00:25:45.212 
就是說 你可以用它來編碼和解碼

00:25:47.014 --> 00:25:50.083 
在下面的事例中 你可以看到

00:25:50.150 --> 00:25:53.854 
AVAudioConverter與
AVAudioEngine配合使用

00:25:56.223 --> 00:26:00.761 
好了  假設你設置引擎進行播放

00:26:01.428 --> 00:26:03.130 
因此我們有一個播放器節點 

00:26:03.197 --> 00:26:04.998 
它連接一個效果節點和一個輸出節點

00:26:06.366 --> 00:26:08.802 
假設有一個壓縮音頻流

00:26:08.869 --> 00:26:10.003 
進入到其中

00:26:12.105 --> 00:26:15.676 
現在 我們知道通過引擎的

00:26:15.742 --> 00:26:17.544 
數據流的格式是PCM 緩衝器

00:26:19.346 --> 00:26:22.382 
現在可以使用
AVAudioConverter

00:26:22.716 --> 00:26:27.054 
將輸入壓縮流轉換成PCM 緩衝器

00:26:27.321 --> 00:26:29.456 
然後你可以用這些緩衝器

00:26:29.523 --> 00:26:31.325 
安排播放器節點

00:26:31.692 --> 00:26:34.494 
因此 通過引擎 就可以播放了

00:26:38.165 --> 00:26:40.300 
現在來想想代碼事例

00:26:40.601 --> 00:26:44.671 
用AVAudioConverter
如何進行編碼

00:26:45.906 --> 00:26:48.775 
這裏 我們想把

00:26:49.076 --> 00:26:50.777 
一個PCM轉換成ASC壓縮格式

00:26:52.613 --> 00:26:54.081 
首先要做的事情是

00:26:54.181 --> 00:26:56.750 
定義輸入格式和輸出格式

00:26:57.484 --> 00:27:01.255 
這裏 我有一個PCM格式的輸入格式

00:27:03.423 --> 00:27:04.958 
和一個

00:27:05.125 --> 00:27:07.160 
壓縮ASC格式的輸出格式

00:27:10.564 --> 00:27:13.500 
下一步 創建一個
AVAudioConverter

00:27:13.967 --> 00:27:17.871 
並將它從輸入格式轉換成輸出格式

00:27:20.474 --> 00:27:22.743 
然後 創建你的音頻緩衝器

00:27:23.610 --> 00:27:26.346 
此事例中 
輸入緩衝器是一個PCM緩衝器

00:27:27.314 --> 00:27:31.451 
輸出緩衝器是新的
AVAudioCompressedBuffer

00:27:31.518 --> 00:27:32.886 
格式是ASC格式

00:27:36.223 --> 00:27:37.724 
接下來要做的是

00:27:37.791 --> 00:27:41.828 
定義輸入塊
AVAudioConverter

00:27:42.963 --> 00:27:44.264 
在這個塊中

00:27:44.331 --> 00:27:47.935 
轉換器將在需要的是調用輸入數據

00:27:49.436 --> 00:27:51.872 
所以這裏你需要做一些事情

00:27:53.073 --> 00:27:54.675 
首先 你需要告知

00:27:54.741 --> 00:27:57.811 
轉換器輸入的狀態

00:27:58.812 --> 00:28:01.014 
假設塊被調用時

00:28:01.348 --> 00:28:03.584 
你並沒有任何適用的輸入數據

00:28:04.384 --> 00:28:07.821 
這種情況下 你可以說現在沒有數據

00:28:08.222 --> 00:28:10.490 
並將0緩衝器返回到轉化器

00:28:12.492 --> 00:28:14.595 
假設你到達流的末端

00:28:15.128 --> 00:28:18.098 
你可以告知轉換器 這是流的末端了

00:28:18.298 --> 00:28:20.534 
再一次返回一個0緩衝器

00:28:22.236 --> 00:28:23.971 
另外的 在正常情況下

00:28:24.171 --> 00:28:26.073 
你可以看到數據

00:28:26.406 --> 00:28:29.810 
進入輸入緩衝器 然後返回到轉換器

00:28:33.180 --> 00:28:35.082 
這是主要的轉換迴路

00:28:36.250 --> 00:28:40.053 
每次操作迴路時 我們都要求轉換

00:28:40.120 --> 00:28:42.456 
以生成一個數據的輸出緩衝器

00:28:43.223 --> 00:28:46.426 
我們也爲轉換器提供了
剛纔所定義的輸入塊

00:28:46.660 --> 00:28:49.963 
這樣 不管它需要輸入多少次

00:28:50.264 --> 00:28:52.366 
它都可以被轉換器調用

00:28:54.768 --> 00:28:57.471 
轉換器也將返回你的狀態

00:28:57.538 --> 00:29:00.607 
這樣你就可以查看轉換的狀態了

00:29:01.208 --> 00:29:03.844 
這樣一來 
倘若轉換器說這是流的末端了

00:29:04.044 --> 00:29:06.079 
或倘若說有錯誤

00:29:06.146 --> 00:29:07.848 
你就可以進行相應地處理

00:29:09.950 --> 00:29:11.785 
另外 在正常情況下

00:29:11.852 --> 00:29:15.689 
每次迭代都將爲你提供
一個數據的輸出緩衝器

00:29:20.027 --> 00:29:23.063 
好的  接下來說說

00:29:23.130 --> 00:29:26.500 
今年的最後一個新類
AVAudioSequencer

00:29:30.370 --> 00:29:33.273 
它支持MIDI文件的重播

00:29:35.242 --> 00:29:36.910 
在例示時

00:29:36.977 --> 00:29:41.882 
AVAudioSequencer與
AVAudioEngine有關係

00:29:44.184 --> 00:29:48.121 
定序器負責將MIDI事件

00:29:48.522 --> 00:29:52.259 
發送到已附在引擎中的工具節點上

00:29:52.993 --> 00:29:56.430 
工具節點 音頻採樣器

00:29:56.563 --> 00:29:58.198 
MIDI事件等等的事例

00:30:01.502 --> 00:30:03.470 
現在來看看樣本設置

00:30:04.037 --> 00:30:06.807 
假設你有AVAudioEngine

00:30:06.940 --> 00:30:08.909 
是用連接到混音器節點

00:30:08.976 --> 00:30:11.044 
和輸出節點的工具節點創建的

00:30:13.847 --> 00:30:16.517 
現在你可以設置一個
AVAudioSequencer

00:30:16.583 --> 00:30:19.052 
使它與這個引擎相關聯

00:30:20.854 --> 00:30:24.758 
然後 啓動定序器和引擎

00:30:25.025 --> 00:30:29.563 
定序器將自動發現
引擎裏的第一個工具節點

00:30:29.630 --> 00:30:32.799 
然後開始往那個工具節點

00:30:32.966 --> 00:30:34.835 
發送MIDI事件

00:30:37.704 --> 00:30:39.573 
代碼看起來像這樣

00:30:40.440 --> 00:30:42.876 
因此 第一部分是引擎設置

00:30:42.943 --> 00:30:44.945 
它位於定序器外面

00:30:45.579 --> 00:30:49.550 
這裏我們有一個工具節點
這是個採樣器

00:30:50.651 --> 00:30:53.520 
你在引擎中創建所需的連接

00:30:55.589 --> 00:30:56.890 
然後啓動引擎

00:30:58.025 --> 00:31:01.128 
此刻 並沒有播放音頻

00:31:01.261 --> 00:31:02.796 
因爲並沒有東西

00:31:02.863 --> 00:31:04.598 
在驅動工具節點

00:31:06.900 --> 00:31:09.469 
下一步 創建定序器

00:31:09.703 --> 00:31:12.940 
並與你剛配置的引擎相關聯

00:31:15.242 --> 00:31:17.678 
將MIDI文件加載到定序器中

00:31:19.446 --> 00:31:21.181 
然後就可以啓動定序器了

00:31:21.682 --> 00:31:23.717 
此時 定序器將後臺

00:31:23.784 --> 00:31:28.789 
發現你已附在引擎中的採樣器節點

00:31:29.022 --> 00:31:31.892 
並開始往採樣器節點發送MIDI事件

00:31:32.292 --> 00:31:34.862 
因此 你的音頻播放將啓動

00:31:38.198 --> 00:31:41.602 
假設你的MIDI文件中有多重軌道

00:31:43.070 --> 00:31:45.806 
現在定序器的默認行爲是

00:31:46.006 --> 00:31:47.941 
將所有的軌道發送到

00:31:48.275 --> 00:31:51.278 
引擎中的第一個工具節點

00:31:53.213 --> 00:31:56.283 
倘若你想將軌道放到

00:31:56.550 --> 00:31:58.452 
個別工具節點上

00:31:59.386 --> 00:32:02.456 
這隻需數行代碼就可以做到

00:32:04.558 --> 00:32:06.927 
定序器中引擎的創建和設置

00:32:06.994 --> 00:32:09.329 
和先前提到的一樣

00:32:09.730 --> 00:32:12.065 
唯一多的步驟是

00:32:12.699 --> 00:32:15.636 
從定序器上獲得軌道

00:32:15.769 --> 00:32:18.739 
爲每個軌道設立目標

00:32:19.106 --> 00:32:20.974 
到你想要的工具節點上

00:32:26.146 --> 00:32:27.848 
最後再說說定序器

00:32:28.649 --> 00:32:31.919 
定序器有自己的傳送控制集
用來控制MIDI事件

00:32:32.219 --> 00:32:36.123 
和引擎上的傳送控制不同

00:32:36.256 --> 00:32:38.125 
它控制音頻流

00:32:39.259 --> 00:32:42.629 
這裏 你可以爲重播準備定序器

00:32:42.763 --> 00:32:44.831 
這個定序器基本上是預先運作的

00:32:45.632 --> 00:32:47.835 
你可以開始 停止MIDI事件

00:32:48.869 --> 00:32:51.672 
你可以根據秒或節奏

00:32:51.738 --> 00:32:53.774 
設置MIDI事件的重播位置

00:32:54.741 --> 00:32:55.809 
當然 你也可以設置

00:32:55.876 --> 00:32:58.278 
MIDI事件的重播率	

00:33:02.516 --> 00:33:04.885 
好的 所以我們瞭解到了

00:33:05.152 --> 00:33:10.157 
今年IOS和OSX發佈的
AVAudioEngine的新特性

00:33:10.624 --> 00:33:12.960 
現在我想通過一個快速的演示

00:33:13.227 --> 00:33:15.629 
向你展示如何使用新特性

00:33:16.230 --> 00:33:17.264 
在此過程

00:33:17.331 --> 00:33:20.200 
我想邀請託裏上臺來幫助我演示

00:33:32.579 --> 00:33:36.049 
好的 在這個演示中 
我們將AVAudioEngine

00:33:36.250 --> 00:33:39.853 
和AVAudioSequencer
通過引擎相關聯

00:33:41.021 --> 00:33:45.559 
在這個引擎中 最上面有一個工具節點

00:33:46.560 --> 00:33:49.463 
被分爲三種不同路徑輸出

00:33:50.531 --> 00:33:54.968 
其中一條路徑直接連接到
引擎的主混頻器節點

00:33:55.969 --> 00:34:00.407 
另外兩條連接兩種不同的特效 

00:34:00.774 --> 00:34:02.176 
然後纔是主混頻器

00:34:03.877 --> 00:34:07.814 
現在 通過使用我
AVAudioMixing協議屬性

00:34:08.348 --> 00:34:11.217 
在每一條混頻器輸入總線中

00:34:11.284 --> 00:34:13.020 
進行音量控制

00:34:13.786 --> 00:34:16.657 
所以 即使是最微小的音量失真

00:34:16.757 --> 00:34:20.893 
直接音量以及混響都可進行控制

00:34:20.960 --> 00:34:22.596 
且都是通過混頻器協議來控制的

00:34:23.996 --> 00:34:28.168 
現在 在頂部 這個淺灰色的方框

00:34:28.235 --> 00:34:31.672 
可以看到定序器的傳輸控制

00:34:32.438 --> 00:34:36.409 
你可以看見在定序器上
設有播放和停止鍵

00:34:36.476 --> 00:34:40.179 
與此同時還有一個滑動欄

00:34:40.581 --> 00:34:43.317 
用來設置MIDI的播放位置和速度

00:34:44.551 --> 00:34:47.588 
在主混頻器上還有一個音效開關

00:34:47.721 --> 00:34:52.025 
用來控制你混音的音量

00:34:52.926 --> 00:34:55.395 
現在 讓我們繼續 開啓定序器

00:34:58.131 --> 00:35:01.935 
這個時候 MIDI開始被傳送到

00:35:02.002 --> 00:35:04.605 
引擎中的工具節點

00:35:06.039 --> 00:35:07.641 
你可以非常靈活地

00:35:07.708 --> 00:35:12.079 
改變MIDI播放的位置及速度

00:35:15.816 --> 00:35:18.085 
以及回放鍵的節奏

00:35:22.956 --> 00:35:25.859 
通過使用音量控制

00:35:25.959 --> 00:35:31.265 
你可以將不同的效果加入到混音中

00:35:31.765 --> 00:35:34.735 
你可以增加失真音量

00:35:39.806 --> 00:35:41.308 
或是混響音量

00:35:46.547 --> 00:35:49.883 
所以 你可以通過這些音量

00:35:49.983 --> 00:35:52.452 
非常方便地打造自己的混音

00:35:54.521 --> 00:35:58.325 
最後 
通過使用混頻器節點上的主音量控制

00:35:58.392 --> 00:36:02.129 
可以控制整個混頻器的音量

00:36:09.536 --> 00:36:11.038 
好的 這個演示就是

00:36:11.405 --> 00:36:13.974 
我們剛剛討論過的新功能

00:36:21.048 --> 00:36:22.883 
這個演示的演示代碼會在

00:36:22.950 --> 00:36:24.952 
今年年底前推出

00:36:27.087 --> 00:36:31.291 
現在就AVAudioEngine 
總結一下

00:36:32.192 --> 00:36:36.029 
我們回顧瞭如何通過
AVAudioEngine

00:36:36.096 --> 00:36:42.102 
處理多通道的音頻 
然後我們看了今年推出的三個新功能

00:36:42.603 --> 00:36:44.137 
第一 拆分支持

00:36:44.872 --> 00:36:47.441 
第二 音頻格式轉換支持

00:36:47.741 --> 00:36:50.777 
最主要是
AVAudioConverter

00:36:51.778 --> 00:36:56.116 
最後是一個新的
AVAudioSequencer

00:36:56.183 --> 00:36:58.485 
用來支持MIDI文件播放

00:36:59.720 --> 00:37:03.123 
我希望在你們的應用中

00:37:03.190 --> 00:37:06.026 
使用這些新功能並給予我們反饋 謝謝

00:37:06.660 --> 00:37:08.662 
現場交給託裏 謝謝 託裏

00:37:18.705 --> 00:37:19.873 
謝謝 阿卡夏莎

00:37:20.407 --> 00:37:21.475 
大家下午好

00:37:21.909 --> 00:37:24.044 
我是託裏 讓我們繼續看

00:37:24.111 --> 00:37:26.246 
IOS系統的跨設備音頻模式

00:37:26.980 --> 00:37:29.016 
毫無疑問iPad是

00:37:29.082 --> 00:37:31.885 
這個星球上最多功能的音樂工具

00:37:31.952 --> 00:37:33.620 
這主要要感謝各位

00:37:34.254 --> 00:37:37.824 
數字音頻工作站應用 混音器軟件

00:37:37.891 --> 00:37:39.893 
擊鼓軟件 聲音玩具

00:37:39.960 --> 00:37:41.895 
用同一個設備你可以

00:37:41.962 --> 00:37:43.797 
將無數的音頻內容混到一起

00:37:44.331 --> 00:37:47.367 
那麼如何把IOS設備中的音頻內容

00:37:47.434 --> 00:37:50.204 
放進MAC上的項目呢

00:37:51.104 --> 00:37:55.008 
你可以將插入耳機

00:37:55.075 --> 00:37:57.544 
然後通過音頻越獄盒子連接到MAC上

00:37:57.611 --> 00:38:00.113 
不過是先轉換到模擬信號

00:38:00.180 --> 00:38:01.448 
然後再轉爲數字信號

00:38:01.515 --> 00:38:03.851 
我想這並非最完美的方案

00:38:04.418 --> 00:38:07.521 
所以 
爲了從iOS設備上錄製數字音頻

00:38:08.789 --> 00:38:11.458 
我們加入閃速USB適配器

00:38:11.925 --> 00:38:15.495 
我們加入USB音頻類兼容接口

00:38:15.562 --> 00:38:19.399 
使得它能夠處理數字音頻輸出

00:38:19.800 --> 00:38:21.535 
一個數字音頻線

00:38:21.602 --> 00:38:23.403 
還有一個處理數字音頻輸入的接口

00:38:23.470 --> 00:38:25.305 
我們將這些都加入到MAC

00:38:26.106 --> 00:38:28.442 
非常有效
不過有很多的硬件

00:38:29.510 --> 00:38:33.447 
還有些第三方軟件也試圖解決這個問題

00:38:33.580 --> 00:38:36.416 
如果你的應用或你最喜歡的應用

00:38:36.750 --> 00:38:38.752 
使用這些讓軟件 也很好

00:38:39.520 --> 00:38:43.223 
但是 如果你不想使用額外的硬件

00:38:43.290 --> 00:38:45.626 
或是安裝額外的軟件

00:38:45.692 --> 00:38:49.496 
僅通過補丁就能錄製音頻

00:38:49.763 --> 00:38:51.865 
這樣不是很棒嘛

00:38:53.133 --> 00:38:54.301 
那麼 請擊鼓歡慶吧

00:38:58.705 --> 00:39:00.407 
噢 很低調嘛

00:39:01.175 --> 00:39:04.111 
介紹下跨設備音頻模式

00:39:04.811 --> 00:39:07.581 
或者我們直接稱之爲IDAM

00:39:07.714 --> 00:39:13.020 
IDAM允許你通過
USB快速連接到設備

00:39:13.387 --> 00:39:15.556 
並錄製數字音頻

00:39:16.089 --> 00:39:19.259 
通過USB 2.0兼容接口

00:39:19.326 --> 00:39:22.963 
支持雙通道24位 

00:39:23.397 --> 00:39:27.634 
48千赫抽樣率硬件

00:39:27.701 --> 00:39:28.802 
全盤錄製音頻流格式

00:39:29.203 --> 00:39:31.538 
MAC系統上又如何呢

00:39:31.805 --> 00:39:34.875 
如果你使用MAC USB音頻驅動

00:39:35.075 --> 00:39:36.977 
也可以獲得同樣效果

00:39:37.044 --> 00:39:41.181 
以及同樣的USB音頻設備兼容性

00:39:41.882 --> 00:39:44.117 
不僅如此 iOS系統上

00:39:44.184 --> 00:39:48.121 
使用的是
USBISOCHRONOUS音頻

00:39:48.455 --> 00:39:50.824 
意味着更省網絡了

00:39:51.291 --> 00:39:55.128 
如果想在MAC上備份120G的數據

00:39:55.395 --> 00:39:58.632 
你可以邊玩音樂邊錄製

00:39:58.699 --> 00:39:59.933 
而且大可放心

00:40:00.000 --> 00:40:03.437 
音頻上不會有任何瑕疵

00:40:04.805 --> 00:40:07.207 
而且 我們無需降低

00:40:07.641 --> 00:40:09.543 
也不需要額外的硬件

00:40:09.610 --> 00:40:11.345 
也不需要其他的軟件

00:40:11.411 --> 00:40:14.114 
你不需要更改你的OSX應用

00:40:14.181 --> 00:40:16.016 
就能享有這功能帶來的便捷

00:40:16.083 --> 00:40:19.319 
如果你的iOS應用已經採用

00:40:19.386 --> 00:40:23.590 
雙通道24位48千赫音頻流格式

00:40:23.657 --> 00:40:26.360 
你無需更改iOS應用

00:40:27.127 --> 00:40:29.663 
並且 在你製作過程中

00:40:29.730 --> 00:40:31.365 
突然跳出一個日程警告

00:40:31.498 --> 00:40:33.467 
警告也通過USB接口傳輸

00:40:33.534 --> 00:40:36.203 
而是從揚聲器傳出

00:40:41.742 --> 00:40:44.211 
好了 所以跨設備音頻模式

00:40:44.278 --> 00:40:46.780 
你的設備可以在此模式下充電和同步

00:40:46.847 --> 00:40:52.052 
照片輸入數據連線QuickTime
屏幕抓拍將暫時無法使用

00:40:52.419 --> 00:40:53.520 
如果想要使用這些功能

00:40:53.587 --> 00:40:56.190 
只需按下按鈕 或拔掉設備插頭

00:40:56.657 --> 00:40:58.959 
託裏 你也許會問 我該怎麼用呢

00:40:59.459 --> 00:41:02.863 
我們直接支持音頻MIDI設置

00:41:03.363 --> 00:41:06.033 
在下面的窗口菜單 你會發現新的選項

00:41:06.767 --> 00:41:10.003 
展示iOS設備瀏覽器 如果你點擊它

00:41:10.070 --> 00:41:11.672 
你會進入到這個高級的界面

00:41:12.206 --> 00:41:14.775 
它可以展示你所有連接的iOS設備

00:41:15.075 --> 00:41:18.178 
你想進入或退出IDAM模式

00:41:18.278 --> 00:41:19.279 
你可以按這個鍵

00:41:20.047 --> 00:41:24.017 
你可將這個界面嵌入你的OSX應用了

00:41:24.084 --> 00:41:26.653 
如果你選擇這樣做的話 
我將向你展示執行代碼

00:41:26.720 --> 00:41:29.323 
但在那之前

00:41:29.389 --> 00:41:31.091 
你已經猜到了 演示時間到

00:41:36.997 --> 00:41:39.700 
我拿了一個iPad 好的

00:41:41.935 --> 00:41:45.572 
在這個IPad上 
我運行一個合成器應用

00:41:45.639 --> 00:41:47.007 
叫做Nave

00:41:47.074 --> 00:41:49.810 
我喜歡這個應用是因爲有一些補丁

00:41:49.877 --> 00:41:51.445 
能使你獲得更好的

00:41:51.512 --> 00:41:53.013 
觸摸界面

00:41:53.614 --> 00:41:54.748 
讓你在點擊後

00:41:54.815 --> 00:41:56.316 
系統自動進行操作

00:41:56.383 --> 00:41:58.452 
很多市面上
的MIDI控制器做不到這點

00:41:58.519 --> 00:42:01.622 
這正式iPad能成爲
優秀的音樂處理器的原因

00:42:02.322 --> 00:42:04.925 
所以我在這選了一個補丁
 聽起來就是這樣 

00:42:12.065 --> 00:42:14.168 
我喜歡那些聲音 所以我想錄制到

00:42:14.234 --> 00:42:16.370 
MAC的嘻哈音樂項目裏去

00:42:16.904 --> 00:42:21.375 
所以 讓我們轉移到Mac 

00:42:26.680 --> 00:42:29.583 
在Mac上MIDI音頻軟件在運行了

00:42:30.584 --> 00:42:35.455 
找到窗口菜單 
打開了iOS瀏覽器 

00:42:36.223 --> 00:42:39.126 
然後看到我目前沒有連接IOS設備

00:42:39.927 --> 00:42:41.528 
然後 我插上我的iPad 

00:42:44.164 --> 00:42:45.699 
它立刻就出現了

00:42:46.033 --> 00:42:48.435 
瞬間又不見了 
然而只要單擊Enable 

00:42:48.969 --> 00:42:52.840 
現在多一個音頻設備了

00:42:53.207 --> 00:42:55.108 
是的 馬上就搞定了

00:42:55.809 --> 00:42:58.545 
你可以看到這裏
有一個雙通道輸入音頻設備

00:42:58.612 --> 00:42:59.513 
已經添加到這裏

00:42:59.580 --> 00:43:02.683 
所以我想用到我的Logic項目上 

00:43:02.749 --> 00:43:04.117 
所以我會繼續前進 然後說 用吧

00:43:08.856 --> 00:43:10.390 
讓我們回到Logic這裏

00:43:11.625 --> 00:43:13.627 
好吧 這就是我處理好的節奏

00:43:21.201 --> 00:43:25.339 
我想錄制到音軌 所以我要

00:43:25.405 --> 00:43:26.974 
製作一個新的音軌

00:43:29.209 --> 00:43:31.745 
啓動錄音監控程序和錄音鍵

00:43:32.779 --> 00:43:36.216 
把音量調小一點

00:43:39.219 --> 00:43:42.022 
現在
我能聽到這聲音直接錄製到音軌裏

00:43:42.422 --> 00:43:44.358 
讓我們錄上一首吧

00:44:02.442 --> 00:44:04.645 
如果重新播放

00:44:06.547 --> 00:44:09.316 
那麼就會按我所希望的進行音頻捕捉

00:44:14.688 --> 00:44:16.023 
戰鬥吧 老兄

00:44:24.331 --> 00:44:26.066 
現在 簡單總結一下我的演示

00:44:26.133 --> 00:44:28.268 
請在家裏試試

00:44:28.335 --> 00:44:29.970 
現在Beta版已經有了

00:44:30.037 --> 00:44:32.306 
如果你發現有錯誤 直接登陸

00:44:32.372 --> 00:44:35.409 
bugreport.apple.com 
然後提交你的錯誤給我們

00:44:36.977 --> 00:44:39.513 
好了 最後講講IDAM吧

00:44:39.580 --> 00:44:43.016 
要求是OS X El 
Capitan系統和iOS9系統

00:44:43.650 --> 00:44:45.919 
閃存接口就能在iPhone上用了

00:44:45.986 --> 00:44:47.421 
也可以在iPads上使用

00:44:47.487 --> 00:44:51.024 
通過閃存接口 
但是早期的iPad mini無法用

00:44:51.625 --> 00:44:55.762 
如果你有家用iPhone 
工作用iPhone 家用iPad 

00:44:55.829 --> 00:44:59.900 
工作用iPad和小孩
用的iPad並且有充電器

00:44:59.967 --> 00:45:02.302 
你可以同時插入使用

00:45:02.536 --> 00:45:05.405 
然後集合成10通道的輸入設備

00:45:05.472 --> 00:45:06.573 
只要你想 就可以開始錄製

00:45:07.274 --> 00:45:09.877 
如果還有USB端口 

00:45:09.943 --> 00:45:13.480 
那麼請打開Safari瀏覽器
進入蘋果商城網址

00:45:20.988 --> 00:45:22.956 
好了 我之前說過我會告訴你

00:45:23.023 --> 00:45:25.559 
如何在OS X
應用裏嵌入視圖控制器 

00:45:25.626 --> 00:45:27.094 
如果你要這樣做 

00:45:27.160 --> 00:45:28.428 
我會現在給你展示代碼

00:45:32.900 --> 00:45:34.401 
這個代碼是樣本的 

00:45:34.768 --> 00:45:36.870 
我想強調這個部分 

00:45:36.937 --> 00:45:39.840 
如果你看到黃色文本部分 

00:45:39.907 --> 00:45:42.643 
你可以看到CA跨設備音頻視圖控制器

00:45:43.076 --> 00:45:46.213 
創建一個 然後把這個子視圖添加

00:45:46.280 --> 00:45:47.381 
到你的視圖容器裏面

00:45:49.383 --> 00:45:52.619 
我想談CoreAudioKit中 

00:45:52.686 --> 00:45:53.720 
新的視圖控制器

00:45:53.787 --> 00:45:55.689 
可能有你感興趣的

00:45:56.356 --> 00:46:00.761 
我們也添加了
CABTLEMIDI窗口控制器

00:46:01.428 --> 00:46:05.732 
這是用於
配置藍牙低功率MIDI設備的UI

00:46:05.799 --> 00:46:07.701 
去年這可是個亮點

00:46:08.168 --> 00:46:09.937 
是NS窗口控制器的子類 

00:46:10.304 --> 00:46:13.874 
它的視圖像這樣 所以如果你也想的話

00:46:13.941 --> 00:46:16.510 
你可以直接把它嵌入OS X應用裏 

00:46:18.412 --> 00:46:19.746 
另外

00:46:19.813 --> 00:46:22.816 
我們還有CA網絡瀏覽器窗口控制器

00:46:22.883 --> 00:46:25.719 
這是配置音頻視頻橋

00:46:25.786 --> 00:46:27.821 
音頻設備的UI

00:46:28.155 --> 00:46:30.290 
還有一個NS窗口控制器子類

00:46:30.757 --> 00:46:32.693 
它的視圖看起來像這樣

00:46:37.097 --> 00:46:40.934 
好的 讓我們啓動轉換裝置

00:46:41.001 --> 00:46:43.170 
然後繼續討論
  AVAudio有什麼新玩意兒

00:46:44.037 --> 00:46:46.507 
你們中會有
多少人聽播客和有聲讀物 

00:46:47.541 --> 00:46:48.675 
很好 有許多人

00:46:48.742 --> 00:46:50.677 
你們中
又有多少人用你的iPhone 

00:46:50.744 --> 00:46:52.613 
作爲私人導航設備

00:46:54.248 --> 00:46:55.282 
同樣也是許多人

00:46:55.349 --> 00:46:57.351 
好的 你之前可能已經見過這個問題

00:46:57.651 --> 00:46:59.553 
讓我們假設你將去一個你從未去過的

00:46:59.620 --> 00:47:01.021 
靈魂料理餐廳

00:47:01.088 --> 00:47:01.955 
你正在導航

00:47:02.022 --> 00:47:03.891 
然後你正在聽一則播客

00:47:03.957 --> 00:47:07.194 
這則播客由播客名人X主持

00:47:07.461 --> 00:47:11.331 
他們正在採訪你最喜歡的時下

00:47:11.398 --> 00:47:14.801 
名人Y在採訪的中途

00:47:15.002 --> 00:47:17.137 
對話真的是妙趣橫生

00:47:17.237 --> 00:47:19.506 
這個時候你的導航跳出

00:47:19.673 --> 00:47:23.043 
告訴你500尺後靠右

00:47:24.278 --> 00:47:26.246 
在那之後你聽見刺耳的笑聲

00:47:26.313 --> 00:47:28.415 
播客講了很棒的笑話而你正好錯過了

00:47:28.515 --> 00:47:31.718 
因此你返回到音頻界面 開始再播放

00:47:31.785 --> 00:47:34.154 
正當要播到笑話時“靠右行駛” 

00:47:36.957 --> 00:47:41.128 
握起拳頭說 我的用戶體驗很糟糕

00:47:42.196 --> 00:47:44.598 
好的 
對此 我們應當有一個解決方法

00:47:45.966 --> 00:47:47.367 
我對此深感不自由

00:47:49.069 --> 00:47:51.238 
我們在iOS 9中提供一個解決方法

00:47:51.538 --> 00:47:54.174 
現在播客
和有聲讀物應用程序可以用一種新的

00:47:54.241 --> 00:47:58.078 
AVAudioSession
模式叫模式口語音頻

00:47:58.879 --> 00:48:00.547 
用於導航應用和類似的應用

00:48:00.614 --> 00:48:01.815 
中斷其中一個

00:48:01.882 --> 00:48:04.284 
就會發出發聲提示

00:48:04.685 --> 00:48:07.721 
新的AVAudioSession
種類選項

00:48:07.788 --> 00:48:10.290 
叫做混合模式中斷口音頻

00:48:10.691 --> 00:48:12.025 
現在 地圖已經使用 

00:48:12.092 --> 00:48:14.561 
混合模式中斷口音頻以及

00:48:14.628 --> 00:48:16.663 
而播客和電子讀物

00:48:16.730 --> 00:48:19.099 
已使用AVAudioSession
模式口語音頻

00:48:19.166 --> 00:48:21.134 
你如何在你的應用中使用呢

00:48:21.835 --> 00:48:23.170 
好的 讓我們來看一些代碼

00:48:23.770 --> 00:48:26.507 
我將逐行查看這些代碼

00:48:26.573 --> 00:48:28.208 
以便你能瞭解我們正在做什麼

00:48:28.442 --> 00:48:30.744 
首先我們將從設置你的音頻會話開始

00:48:30.978 --> 00:48:33.146 
你會得到音頻會話的共享實例

00:48:33.614 --> 00:48:37.818 
設置你的類別爲錄音在選項中

00:48:37.885 --> 00:48:39.653 
你選擇一項則其他失效

00:48:40.587 --> 00:48:42.422 
現在我們將用Swift 2的新特性

00:48:42.990 --> 00:48:44.725 
這個是新的特性

00:48:44.791 --> 00:48:48.028 
允許你將早些時候iOS的代碼

00:48:48.095 --> 00:48:50.364 
部署到現在使用的iOS系統中

00:48:50.864 --> 00:48:53.600 
因此只有在iOS 9
或者之後的系統裏

00:48:53.934 --> 00:48:56.203 
你纔可以看到這個多出的選項

00:48:56.270 --> 00:48:58.372 
混合模式中斷口語音頻

00:48:59.039 --> 00:49:00.941 
然後設置音頻會話種類

00:49:02.543 --> 00:49:04.344 
好的 讓我們來實際看一下導航提示

00:49:05.078 --> 00:49:07.281 
現在播放導航提示

00:49:07.381 --> 00:49:08.515 
就像這樣

00:49:08.849 --> 00:49:11.218 
首先獲取音頻會話的共享實例

00:49:11.652 --> 00:49:14.821 
接着使用功能原型中的URL

00:49:14.888 --> 00:49:16.390 
創建一個AV音頻播放器

00:49:17.324 --> 00:49:19.193 
你設置播放器指派給自己

00:49:19.726 --> 00:49:22.829 
這樣做是 當你的音頻提示播放完成

00:49:22.896 --> 00:49:24.498 
它將自動爲你

00:49:24.565 --> 00:49:26.700 
調用指派方法

00:49:28.535 --> 00:49:30.237 
將音頻會話設置爲激活

00:49:30.437 --> 00:49:31.805 
然後運行播放器

00:49:33.240 --> 00:49:35.108 
現在我們繼續

00:49:35.175 --> 00:49:37.144 
現在 音頻已經播放完

00:49:37.211 --> 00:49:38.912 
因此 指派方法將被調用

00:49:38.979 --> 00:49:40.581 
音頻播放器完成播放

00:49:40.981 --> 00:49:42.249 
代碼是這樣的

00:49:42.583 --> 00:49:44.418 
獲取音頻會話共享實例

00:49:45.185 --> 00:49:47.688 
設置音頻會話爲閒置

00:49:47.921 --> 00:49:51.558 
使用選項選擇通知其他反激活

00:49:52.392 --> 00:49:55.262 
這意味着任何其它正在播放的其它音頻

00:49:55.329 --> 00:49:57.331 
在中斷當前音頻之前

00:49:57.397 --> 00:49:58.699 
會實現進行通知

00:50:00.200 --> 00:50:01.468 
現在讓我們來看看另一方面

00:50:01.535 --> 00:50:05.539 
讓我們到播客或者音頻應用

00:50:06.573 --> 00:50:08.575 
這裏是音頻會話設置

00:50:08.775 --> 00:50:10.511 
獲取音頻會話的共享實例

00:50:11.011 --> 00:50:12.746 
設置你的種類爲錄音

00:50:12.980 --> 00:50:15.215 
當前設置模式爲默認

00:50:15.616 --> 00:50:19.953 
如果是iOS 9或者之後的版本
你可以用這種新的模式

00:50:20.187 --> 00:50:22.623 
AVAudioSession
模式口語音頻

00:50:22.756 --> 00:50:24.291 
然後設置種類和模式

00:50:26.093 --> 00:50:27.528 
接下來要做的是

00:50:27.594 --> 00:50:28.929 
添加中斷處理器

00:50:28.996 --> 00:50:32.099 
我們將添加一個
中斷處理器名爲處理中斷

00:50:32.165 --> 00:50:35.903 
在響應AVAudioSession
中斷通知

00:50:36.036 --> 00:50:39.206 
後被調用

00:50:41.074 --> 00:50:43.644 
現在也可以設置好其他的通知

00:50:43.710 --> 00:50:46.480 
例如 如果媒體服務器停止運行

00:50:46.547 --> 00:50:49.016 
而你想要被通知
你就可以重設你的音頻狀態

00:50:50.551 --> 00:50:52.686 
好的 讓我們來看看中斷處理器

00:50:54.188 --> 00:50:55.322 
要做的第一件事情

00:50:55.389 --> 00:50:58.525 
從功能原型中的NS 通知對象中

00:50:58.592 --> 00:50:59.927 
獲取用戶信息字典

00:51:00.827 --> 00:51:03.197 
從中我們可以看到

00:51:03.263 --> 00:51:06.266 
關鍵AVAudioSession
的中斷類型密匙

00:51:07.801 --> 00:51:09.503 
現在我們將選擇那種類型

00:51:09.870 --> 00:51:12.272 
第一部分是當你的音頻會話

00:51:12.739 --> 00:51:15.542 
開始被中斷時將會發生什麼

00:51:15.943 --> 00:51:18.579 
然後第二部分將在下一張幻燈片上
這是結束

00:51:18.645 --> 00:51:21.281 
如果這是開始中斷

00:51:21.582 --> 00:51:23.584 
你想做的第一件事是更新UI 

00:51:23.650 --> 00:51:25.652 
從而用以提示錄音已經被停止

00:51:26.320 --> 00:51:29.823 
然後如果你的內部狀態強制規定播放

00:51:29.890 --> 00:51:31.525 
然後你可設置爲播放

00:51:31.592 --> 00:51:35.996 
它稍後將告訴你
這個中斷什麼時候完成

00:51:36.063 --> 00:51:39.333 
你可以重放音頻

00:51:39.766 --> 00:51:42.069 
如果合適 更新你的內部狀態

00:51:44.371 --> 00:51:46.106 
因此 現在這是結束中斷

00:51:46.173 --> 00:51:48.408 
因此 如果這是結束中斷

00:51:48.709 --> 00:51:50.944 
你將從AVAudioSession

00:51:51.011 --> 00:51:53.447 
中斷選項密匙

00:51:54.815 --> 00:51:57.117 
用戶信息字典中獲取標誌旗

00:51:57.184 --> 00:51:59.520 
假如這標誌旗是重新開始的選項

00:52:00.020 --> 00:52:02.089 
稍微回放一下音頻

00:52:02.155 --> 00:52:04.458 
因爲你的音頻在結束之前已經被暫停

00:52:04.892 --> 00:52:06.226 
然後你可以在此啓動播放器

00:52:06.793 --> 00:52:09.830 
更新你的內部狀態然後更新UI 

00:52:09.897 --> 00:52:11.331 
從而顯示已經重新開始播放

00:52:12.766 --> 00:52:14.168 
這就是我爲你準備的所有代碼

00:52:15.369 --> 00:52:16.370 
快速回顧

00:52:16.436 --> 00:52:17.371 
今天我已經告訴過你

00:52:17.437 --> 00:52:20.274 
關於AVAudioEngine裏
一些令人興奮的新增強特性

00:52:20.574 --> 00:52:23.010 
我們介紹了跨設備音頻模式

00:52:23.744 --> 00:52:26.046 
關於新的
CoreAudioKit視圖控制器

00:52:26.113 --> 00:52:28.081 
你可以將跨設備音頻模式

00:52:28.482 --> 00:52:31.618 
藍牙 低功率MIDI以及視音頻橋

00:52:31.685 --> 00:52:33.020 
嵌入你的OS X應用

00:52:33.787 --> 00:52:36.857 
也介紹AVAudioSession
模式口語音頻

00:52:37.291 --> 00:52:39.593 
以及新的
AVAudioSession選項

00:52:39.760 --> 00:52:41.895 
混合模式終端口語音頻

00:52:42.663 --> 00:52:43.964 
但這不是全部

00:52:44.031 --> 00:52:47.434 
明天早上11點我們會有另外一個環節

00:52:47.701 --> 00:52:50.637 
是關於音頻單元擴展的的新變化

00:52:50.704 --> 00:52:52.472 
所以我們希望明天再見到你們所有人

00:52:53.140 --> 00:52:55.809 
同樣還有與
今天早些時候討論的相關環節

00:52:55.876 --> 00:52:57.644 
如果你想再次回顧

00:52:57.711 --> 00:53:01.381 
尤其是遊戲音頻方面

00:53:02.115 --> 00:53:04.585 
如果我們不能
在實驗室裏回答你們的所有問題

00:53:04.751 --> 00:53:08.555 
這裏有非常實用的網站

00:53:09.623 --> 00:53:12.693 
也可以直接諮詢克雷格·吉士利

00:53:12.759 --> 00:53:16.430 
他的聯繫方式就在下方 結束了