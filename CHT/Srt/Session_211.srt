00:00:20.053 --> 00:00:21.321 
多任務處理要點

00:00:21.388 --> 00:00:23.724 
針對iPad 和 iOS 9
基於媒體的App

00:00:30.964 --> 00:00:32.533 
歡迎來到會話 211

00:00:32.598 --> 00:00:33.767 
多任務處理要點

00:00:33.834 --> 00:00:36.036 
針對iPad 和 iOS 9
基於媒體的App

00:00:37.070 --> 00:00:39.540 
我是  斯特凡 哈費內格
我今天會和喬納森一起談談

00:00:39.606 --> 00:00:41.842 
關於如何採用
Picture in Picture

00:00:41.909 --> 00:00:43.343 
和如何掌握共享的資源

00:00:45.112 --> 00:00:48.982 
如果您已經集成或計劃
開始在 iPad 和 iOS 9

00:00:49.049 --> 00:00:50.851 
集成基於媒體的App
這個會您你來對了

00:00:52.553 --> 00:00:54.121 
這個是三個系列會議
中的第二個

00:00:54.188 --> 00:00:55.856 
關於今年的 iPad
多任務處理問題

00:00:58.625 --> 00:01:00.494 
但是現在您應該已經
熟悉所有

00:01:00.861 --> 00:01:03.163 
這周我們介紹過的
iPad的多任務處理處理功能了

00:01:04.164 --> 00:01:05.966 
我想提醒大家
關於這一概念

00:01:06.033 --> 00:01:09.636 
是關於主要規則與
輔助App

00:01:10.871 --> 00:01:12.639 
那個主App是
那個一定會

00:01:13.140 --> 00:01:15.576 
出現在左邊
除非設備的設置是從右到左

00:01:15.642 --> 00:01:16.844 
這樣的話它就是相反的

00:01:18.545 --> 00:01:20.347 
在第一個會議中我們
向您展示瞭如何開始

00:01:20.414 --> 00:01:22.549 
iPad iOS 9 中的
多任務處理

00:01:25.052 --> 00:01:27.221 
在這次的會議中我們來看看
怎樣使用Picture in Picture

00:01:30.924 --> 00:01:33.293 
當您正在一個App應用程序上
播放視頻的時候

00:01:33.360 --> 00:01:35.562 
在 iOS 8 裏
當您正在播放視頻的時候

00:01:35.629 --> 00:01:38.165 
如果您切換成其他APP應用程序
視頻會停止播放

00:01:40.334 --> 00:01:42.269 
但在iOS 9
的Picture in Picture裏

00:01:42.336 --> 00:01:43.337 
視頻會自動進行跳轉成

00:01:43.403 --> 00:01:45.806 
一個浮動的動畫窗口
並且在視頻繼續播放的同時

00:01:45.873 --> 00:01:48.242 
允許在iPad上
使用其他 Apps

00:01:51.044 --> 00:01:53.247 
這一個會議中我會講很多關於
 Picture in Picture 

00:01:53.313 --> 00:01:55.782 
所以從現在開始我簡稱
它爲 PiP

00:01:59.119 --> 00:02:03.824 
我們最新的 Ipad、
iPad 2 Air

00:02:03.891 --> 00:02:05.692 
iPad Air、
迷你 iPad 2 和 3

00:02:06.460 --> 00:02:08.294 
都支持PiP 

00:02:11.331 --> 00:02:12.866 
現在您可能會想
我的App應用程序應該採用

00:02:12.933 --> 00:02:14.134 
Picture in Picture 嗎？

00:02:17.704 --> 00:02:19.706 
如果您的App裏的
播放的視頻

00:02:19.773 --> 00:02:21.942 
畫質好到讓人感覺如同身臨其境
那麼一定要採用

00:02:23.544 --> 00:02:26.180 
如果您的App只是爲了提供
一個基本的比如說

00:02:26.246 --> 00:02:28.882 
給孩子看着玩的視頻
這樣可能就就可能不需要採用PiP了

00:02:30.817 --> 00:02:32.419 
如果您認爲您的App受衆羣體

00:02:32.486 --> 00:02:33.820 
想在玩其他程序的時候

00:02:33.887 --> 00:02:36.356 
也還能看着視頻

00:02:39.726 --> 00:02:42.729 
現在讓我們看看iOS 8
裏視頻播放器的App應用程序接口

00:02:44.565 --> 00:02:45.732 
媒體播放器
框架

00:02:45.799 --> 00:02:47.201 
從iOS SDK就存在了

00:02:48.836 --> 00:02:50.304 
去年我們拿出了 AVKit

00:02:50.370 --> 00:02:51.972 
作爲一種新的高級別媒體
框架

00:02:52.039 --> 00:02:53.774 
用來放置媒體框架的其他部件

00:02:55.409 --> 00:02:57.177 
AVFoundation 可以爲
想要在用戶界面

00:02:57.244 --> 00:02:58.779 
創建自己的視頻播放器
的客戶所用

00:03:00.480 --> 00:03:03.317 
Webkit允許網站使用者使用
他們的技術

00:03:05.285 --> 00:03:07.621 
讓我們來稍微談談
媒體播放器

00:03:09.656 --> 00:03:12.492 
在 iOS 9 裏我們棄用了
MP 電影播放器控制器

00:03:12.559 --> 00:03:13.961 
和 MP 電影播放器
視圖控制器

00:03:15.863 --> 00:03:18.765 
在 iOS 98裏我們提供
AV播放器視圖控制器

00:03:18.832 --> 00:03:20.501 
作爲那兩個棄用了的控制器的
替代

00:03:22.503 --> 00:03:25.005 
去年在控制與掌握
現代媒體一覽的會議裏我們

00:03:25.072 --> 00:03:27.574 
反而給大家展示了
採用AVKit是非常容易的

00:03:27.975 --> 00:03:29.843 
在這次會議我們將着重
談談 AVKit、

00:03:29.910 --> 00:03:31.378 
AVFoundation 和 WebKit

00:03:33.280 --> 00:03:35.382 
這三個媒體框架都
依賴於 AVPlayerLayer

00:03:35.449 --> 00:03:36.517 
來顯示視頻內容

00:03:38.151 --> 00:03:39.753 
下面我展示一下PiP 是怎樣工作的

00:03:41.355 --> 00:03:43.857 
我們從您App應用程序裏的
一個AVPlayerLayer開始

00:03:45.158 --> 00:03:46.593 
爲了使視頻可以在
這個App應用程序轉換

00:03:46.660 --> 00:03:49.029 
到後臺的時候
也能繼續播放

00:03:49.096 --> 00:03:50.797 
我們需要用另外的技術
重新處理圖像幀

00:03:53.901 --> 00:03:55.469 
爲此係統將會
添加一個新圖層

00:03:55.536 --> 00:03:57.304 
來那可以承載您
的視頻內容

00:03:59.873 --> 00:04:04.178 
當PiP 開始時PiP窗口
會在這個圖層中被創建

00:04:04.344 --> 00:04:06.346 
然後被放置在
AVPlayerLayer裏

00:04:08.215 --> 00:04:10.284 
現在圖像幀
可以被重新排列了

00:04:12.219 --> 00:04:15.022 
這時會有一個無縫連接的過渡過程
然後視頻就能繼續播放了

00:04:16.423 --> 00:04:18.225 
重申一下我們不是
更改App應用程序裏的

00:04:18.291 --> 00:04:19.625 
AVPlayerLayer 

00:04:19.692 --> 00:04:21.361 
我們只是停止提供
圖像幀

00:04:23.897 --> 00:04:27.067 
現在助理可以按照它的要求
定位和更改一下PiP窗口的大小

00:04:28.402 --> 00:04:30.304 
現在當您的App應用程序
轉換到後臺之後

00:04:32.005 --> 00:04:33.874 
視頻還是在繼續播放

00:04:37.344 --> 00:04:40.280 
那麼我們現代的視頻播放器
當中哪一個支持 PiP呢?

00:04:41.682 --> 00:04:43.550 
我很高興地告訴大家
所有都支持

00:04:45.652 --> 00:04:48.822 
在會議的第一部分
我將告訴您如何在您的應用程序裏

00:04:48.889 --> 00:04:51.425 
使用這三個媒體框架
來運用PiP

00:04:52.659 --> 00:04:54.161 
現在我們先用AVKit 開頭

00:04:57.631 --> 00:04:59.633 
AVKit 用作視頻回放的
主要應用程式界面

00:04:59.700 --> 00:05:01.168 
是AVPlayer視圖控制的

00:05:01.568 --> 00:05:03.570 
是現代的 AV 控制器下面的一個

00:05:03.637 --> 00:05:05.806 
用來提供標準和行爲控制
的控制器

00:05:07.107 --> 00:05:10.210 
在 iOS 9 裏AV 視圖控制器
激活了 Picture in Picture

00:05:10.277 --> 00:05:12.246 
並且將它的激活按鈕
放置在一個更低的地方

00:05:13.881 --> 00:05:16.917 
當用戶點擊此按鈕
視頻就會自動進行動畫處理

00:05:16.984 --> 00:05:17.918 
成PiP窗口

00:05:20.687 --> 00:05:23.090 
我的同事費利克斯將向您展示
如果您在您的AVPlayer控制器應用程序裏

00:05:23.156 --> 00:05:24.892 
想讓PiP激活按鈕顯示在界面上

00:05:24.992 --> 00:05:26.360 
所需要做的事

00:05:35.269 --> 00:05:36.103 
大家好

00:05:36.270 --> 00:05:39.373 
我很高興能向您展示新的
有Picture in Picture支持的

00:05:39.439 --> 00:05:40.807 
AV播放器畫面控制器

00:05:41.408 --> 00:05:44.444 
爲此我有一個展示用的
模擬運行應用程序

00:05:44.511 --> 00:05:46.713 
將會用來展示一個一個用
集合視圖控制器控制的

00:05:46.780 --> 00:05:48.782 
視頻合集

00:05:49.750 --> 00:05:51.151 
我可以點擊其中一個視頻

00:05:51.285 --> 00:05:53.086 
來顯示有關這個視頻的詳細信息

00:05:54.254 --> 00:05:56.523 
我還可以點擊那個大大的
播放按鈕激活

00:05:57.291 --> 00:06:01.595 
AVPlayer視圖控制器
並且開始全屏視頻播放

00:06:01.962 --> 00:06:04.731 
但是您可以看到
用戶界面還沒有

00:06:04.798 --> 00:06:07.301 
在右下角顯示 PiP 按鈕

00:06:08.268 --> 00:06:11.138 
下面是兩個的簡單步驟
可以讓PiP按鈕顯示出來

00:06:11.205 --> 00:06:13.040 
我用在Xcode演示給你們看

00:06:14.408 --> 00:06:17.277 
第一步是設置
應用程序的後臺模式

00:06:17.744 --> 00:06:20.414 
爲此我切換到
項目設置

00:06:20.480 --> 00:06:23.450 
選擇目標然後去
功能選項卡

00:06:24.484 --> 00:06:27.221 
我們需要啓用

00:06:27.287 --> 00:06:30.691 
在後臺說明下方這裏的和音頻

00:06:30.757 --> 00:06:33.026 
播放複選框也需要選上

00:06:34.328 --> 00:06:39.099 
第二步是設置
應用程序的音頻類別

00:06:39.166 --> 00:06:41.368 
爲此我們進到
應用程序代理

00:06:41.435 --> 00:06:43.804 
並首次導入
AVFoundation

00:06:45.038 --> 00:06:48.308 
接下來應用程序已經
完成啓動此選項的啓動

00:06:48.842 --> 00:06:51.278 
我可以設置音頻會議類別：

00:06:53.046 --> 00:06:57.050 
通過要求 AV 音頻會議共享文件

00:06:57.117 --> 00:06:58.752 
來將類別設置爲

00:06:58.819 --> 00:07:01.154 
AV 音頻會議類別回放

00:07:01.889 --> 00:07:04.758 
這段代碼已經設置好了
讓我們再次啓動模擬程序

00:07:08.762 --> 00:07:10.464 
我再一次選擇視頻...

00:07:12.199 --> 00:07:13.967 
在全屏播放

00:07:14.034 --> 00:07:16.136 
現在在右下角

00:07:16.203 --> 00:07:17.704 
PiP 按鈕已經顯示出來了

00:07:19.273 --> 00:07:20.541 
當按下按鈕

00:07:21.608 --> 00:07:24.311 
視頻就會以Picture in Picture模式
開始播放

00:07:25.112 --> 00:07:28.248 
PiP 中的用戶界面
窗口包含三個按鈕

00:07:28.315 --> 00:07:30.450 
中間的視頻播放切換按鈕
和另外兩個

00:07:30.517 --> 00:07:33.187 
我將展開討論的按鈕

00:07:34.188 --> 00:07:36.723 
並且我們注意到在用戶界面上

00:07:36.790 --> 00:07:38.325 
有個播放進度顯示條

00:07:39.059 --> 00:07:41.862 
現在在這個視頻播放的時候
我們切換回

00:07:41.929 --> 00:07:45.165 
那個視頻合集比如說可以

00:07:45.432 --> 00:07:47.501 
看看另外一個視頻的詳細信息

00:07:48.268 --> 00:07:51.271 
我或者也可以
按Home鍵

00:07:53.473 --> 00:07:56.810 
啓動另外一個App應用程序
這些都可以在視頻還繼續播放

00:07:56.877 --> 00:07:57.778 
的同時時候進行

00:07:58.045 --> 00:08:00.781 
在PiP窗口左邊的
那個按鈕可以讓頁面

00:08:00.848 --> 00:08:02.149 
切換回到主畫面播放

00:08:02.783 --> 00:08:05.552 
當我按這個按鈕的時候
那個模擬App應用程序就切換

00:08:05.619 --> 00:08:07.988 
回到了前面
但是你們剛纔看到

00:08:08.055 --> 00:08:09.790 
PiP窗口僅僅是消失了

00:08:10.157 --> 00:08:13.994 
那是因爲我們的PiP的算法不知道
App是不是準備好

00:08:14.061 --> 00:08:15.195 
讓Video切換回來了

00:08:15.562 --> 00:08:18.632 
接下來讓我展示一下如何用新的
XCode 恢復用戶界面

00:08:18.699 --> 00:08:21.535 
來處理視頻回放這件
你們的用戶大概會想要做的事

00:08:22.302 --> 00:08:25.005 
爲此我切換回集合視圖控制器

00:08:26.139 --> 00:08:29.343 
這也是iOS 9裏新出現的我們加入
了一個給AV播放器視圖控制器

00:08:29.409 --> 00:08:30.811 
的代理處理器

00:08:31.111 --> 00:08:34.347 
在這段代碼裏我已經把
集合視圖控制器

00:08:34.414 --> 00:08:36.450 
當成了AV播放器
試圖控制器的代理

00:08:37.384 --> 00:08:40.721 
爲了重新安裝用戶界面
集合視圖控制器

00:08:40.787 --> 00:08:44.124 
需要置入一個簡單的信息
一個叫做播放視圖控制器的包含

00:08:44.191 --> 00:08:47.261 
一個非常詳細的名稱的信息

00:08:47.594 --> 00:08:50.364 
用Picture in Picture
恢復用戶界面

00:08:50.430 --> 00:08:51.532 
它將會在處理完成時停下

00:08:52.366 --> 00:08:55.302 
在這段代碼中
我把導航控制器設置爲

00:08:55.369 --> 00:08:58.739 
最主要的視圖控制器
然後用這個主要視圖控制器

00:08:58.805 --> 00:09:01.341 
來向用戶展現由代理提供的

00:09:01.408 --> 00:09:02.643 
視圖控制器

00:09:03.343 --> 00:09:05.212 
在這段代碼裏的另外一個指令是

00:09:05.279 --> 00:09:09.650 
當播放視圖控制器顯示在屏幕
上的時候

00:09:09.716 --> 00:09:10.984 
完成處理器就會被告知

00:09:11.285 --> 00:09:13.320 
這樣處理的話我們的PiP
就會知道

00:09:13.520 --> 00:09:16.390 
它可以在後臺播放動畫處理
的視頻了

00:09:17.224 --> 00:09:19.026 
讓我們再次運行這個
模擬App應用程序

00:09:22.729 --> 00:09:26.867 
我再次點擊其中一個視頻
讓它全屏播放

00:09:28.268 --> 00:09:30.404 
切換到
Picture in Picture模式

00:09:31.805 --> 00:09:33.006 
然後當我讓App

00:09:33.073 --> 00:09:34.908 
重新進行視頻回放的時候

00:09:35.442 --> 00:09:37.177 
AV播放視圖控制器
就顯示在畫面上了

00:09:37.578 --> 00:09:40.480 
並且那個視頻非常完美地的
重新出現在了屏幕上

00:09:41.648 --> 00:09:43.917 
另外一個我想給大家展示的
是當我關掉這個

00:09:43.984 --> 00:09:46.520 
正在播放全屏視頻
的App時

00:09:46.587 --> 00:09:47.554 
會發生什麼

00:09:47.621 --> 00:09:51.124 
打個比方
假如我現在按下了Home鍵

00:09:52.159 --> 00:09:55.295 
這樣一來
Picture in Picture

00:09:55.429 --> 00:09:57.364 
就自動激活了
所以那個視頻就會繼續播放

00:09:58.265 --> 00:10:01.635 
任何時候用戶都可以點擊
右邊那個關閉按鈕

00:10:01.702 --> 00:10:03.303 
來關閉PiP窗口

00:10:03.971 --> 00:10:06.940 
以上就是有Picture in Picture支持的
AV播放視圖控制器

00:10:07.007 --> 00:10:07.841 
謝謝大家

00:10:09.776 --> 00:10:11.512 
現在讓我們
來回顧一下剛剛大家看到的東西

00:10:12.412 --> 00:10:13.814 
您只需要做兩件事

00:10:15.182 --> 00:10:17.751 
第一您需要啓動相應的背景模式

00:10:18.519 --> 00:10:20.988 
不然您的App應用程序就不能
在切換到後臺的時候

00:10:21.054 --> 00:10:22.256 
繼續播放了

00:10:23.323 --> 00:10:25.292 
Xcode的能力已經
足夠讓您你這樣做了

00:10:26.093 --> 00:10:28.195 
音頻和畫面播放是您接下來
需要啓動的功能

00:10:29.329 --> 00:10:32.366 
並且在未來的iOS 9裏
Picture in Picture還可以

00:10:32.432 --> 00:10:33.667 
更換音頻的名字和格式

00:10:35.469 --> 00:10:38.672 
第二您需要一個有效的AV音頻類別

00:10:39.673 --> 00:10:42.543 
第一次完成這些選項時
是做這件事的一個好時機

00:10:44.511 --> 00:10:46.280 
您提交
要一個共享音頻段落的請求

00:10:47.047 --> 00:10:49.750 
然後把AV音頻段落
按類別回放分類

00:10:51.451 --> 00:10:53.587 
如果App應用程序支持錄音

00:10:53.654 --> 00:10:57.457 
您也可以選擇使用AV音頻段落
來播放和錄製

00:11:01.395 --> 00:11:06.200 
如果iOS 8上的視頻播放運用程序
支持後臺音頻

00:11:06.266 --> 00:11:08.135 
那您已經在同時運行兩個程序了

00:11:09.236 --> 00:11:10.871 
如果您覺得App運用程序
不應該支持Picture in Picture

00:11:10.938 --> 00:11:13.473 
那麼在iOS 9裏我們還有
另外一個新的選擇

00:11:13.540 --> 00:11:16.109 
就是在AV播放器視圖控制器
裏禁用它

00:11:18.679 --> 00:11:20.814 
注意看當用戶點擊消息提示時

00:11:20.914 --> 00:11:22.616 
Picture in Picture
是怎樣自動運行的

00:11:23.750 --> 00:11:24.785 
爲什麼會這樣呢？

00:11:27.321 --> 00:11:30.023 
當主程序轉換到後臺程序之後

00:11:30.624 --> 00:11:32.926 
一個AV播放器視圖控制器
就將會被全屏呈現

00:11:33.594 --> 00:11:36.230 
系統將爲用戶運行
Picture in Picture

00:11:37.064 --> 00:11:38.732 
如果視頻[聽不清]正在播放

00:11:38.799 --> 00:11:40.501 
那麼Picture in Picture
就能啓用

00:11:42.936 --> 00:11:44.972 
請記住即使用戶能在通用設置裏

00:11:45.038 --> 00:11:47.241 
關閉這個行爲但通常來說

00:11:47.307 --> 00:11:48.809 
多任務處理會堅持把視頻播放覆蓋

00:11:52.112 --> 00:11:53.113 
在菲利克斯剛剛演示的那個模擬程序裏

00:11:53.180 --> 00:11:55.849 
您可以自動解除AV播放視圖控制器

00:11:55.916 --> 00:11:57.784 
然後用戶就會開始
使用Picture in Picture

00:11:59.119 --> 00:12:00.821 
我們不知道這個App運用
程序的結構

00:12:00.921 --> 00:12:03.056 
或者用戶會瀏覽到哪裏、
什麼時候開啓

00:12:03.957 --> 00:12:06.159 
所以我們需要您的幫助
來存儲AV圖像控制器

00:12:06.226 --> 00:12:07.861 
您只需置入這個代理處理器

00:12:09.930 --> 00:12:12.766 
通過一個很簡單的案例中您可以
啓動現時視圖控制器

00:12:12.833 --> 00:12:15.335 
來動畫處理視頻[聽不清]

00:12:17.504 --> 00:12:19.273 
一些運行程序
相對於剛纔那個模擬程序

00:12:19.339 --> 00:12:20.774 
來說結構比較成熟
您可以做其他

00:12:20.841 --> 00:12:22.376 
一些事

00:12:24.344 --> 00:12:26.813 
無論如何不要忘記
當您完成存儲以後

00:12:26.880 --> 00:12:28.248 
啓用完成處理程序

00:12:29.883 --> 00:12:31.685 
就是AVKit和
AV播放器視圖處理器

00:12:33.620 --> 00:12:35.355 
接下來讓我向大家展示

00:12:35.422 --> 00:12:37.191 
如何用AVFoundation做
Picture in Picture

00:12:40.127 --> 00:12:42.963 
作爲AVFoundation的客戶
您會有一個AV播放層

00:12:43.030 --> 00:12:44.865 
並且很可能會進行播放控制

00:12:46.233 --> 00:12:48.869 
我接下來向大家演示該做什麼
然後如果在您的運行程序裏

00:12:49.703 --> 00:12:51.972 
從這做到那

00:12:54.341 --> 00:12:57.411 
在iOS 9 裏我們有一個新的
類別叫

00:12:57.511 --> 00:12:58.812 
AV Picture in Picture
控制器

00:12:59.379 --> 00:13:02.616 
它允許您置入跟我剛纔展示的那個
相同的PiP指示器

00:13:02.783 --> 00:13:04.618 
但是用您自己的用戶界面

00:13:07.721 --> 00:13:09.790 
在我創建一個
AV Picture in Picture

00:13:09.857 --> 00:13:12.659 
控制器的示範之前
您應該先檢查一下

00:13:12.726 --> 00:13:14.695 
當前設備是否支持
Picture in Picture　

00:13:17.164 --> 00:13:18.532 
您通過提供AV播放層來

00:13:18.599 --> 00:13:20.234 
創建一個AV Picture
in Picture控制器

00:13:22.102 --> 00:13:24.705 
把AV Picture in Picture
控制器看做一個

00:13:24.771 --> 00:13:28.041 
允許用PiP窗口呈現
當前AV播放層內容的的物件

00:13:30.544 --> 00:13:33.013 
設置一個代理不是必須的
但是你很有可能

00:13:33.080 --> 00:13:33.947 
您將來會需要它

00:13:36.650 --> 00:13:38.785 
接下來PiP按鈕
就出現在用戶界面了

00:13:40.153 --> 00:13:42.222 
這樣用戶就可以開始使用
Picture in Picture

00:13:43.657 --> 00:13:44.725 
只有當設備支持
Picture in Picture的時候

00:13:44.825 --> 00:13:46.927 
您才需要加那個按鈕

00:13:49.296 --> 00:13:50.764 
也會有當下無法啓動

00:13:50.831 --> 00:13:52.733 
Picture in Picture
的時候

00:13:52.900 --> 00:13:54.501 
即使設備總體來說是支持
Picture in Picture的

00:13:55.702 --> 00:13:57.604 
這種時候您需要禁用您的PiP按鈕

00:13:59.473 --> 00:14:02.342 
爲此我們在PiP控制器
上有一個屬性

00:14:03.510 --> 00:14:05.145 
讓您可以先觀察
然後升級並且啓用

00:14:05.212 --> 00:14:06.246 
您的PiP按鈕

00:14:09.249 --> 00:14:11.118 
您的PiP按鈕置入

00:14:11.185 --> 00:14:12.386 
看起來就像這樣

00:14:14.121 --> 00:14:16.290 
首先您得確認PiP還沒有
被激活

00:14:17.691 --> 00:14:19.993 
然後您就可以在PiP控制器裏
啓用Picture in Picture

00:14:21.361 --> 00:14:23.197 
不要在沒有用戶活動
的時候用這個方法

00:14:25.232 --> 00:14:28.135 
如果您不恰當地的運用了
這個方法

00:14:28.202 --> 00:14:29.336 
蘋果應用商店組就會拒絕
您你提交的申請

00:14:32.573 --> 00:14:35.209 
如果在PiP被激活的情況下
運行程序提供了額外的內容

00:14:35.742 --> 00:14:37.311 
您或許應該在PiP啓動之後

00:14:37.377 --> 00:14:38.579 
關閉視頻播放視圖控制器

00:14:39.980 --> 00:14:42.549 
爲此我們可以置入剛開始的
那個代理方法

00:14:43.383 --> 00:14:45.419 
然後在您的控制器上啓動
那個之前是關閉了的

00:14:45.586 --> 00:14:46.720 
視圖控制動畫處理器

00:14:48.956 --> 00:14:50.624 
但是當您這麼做的時候
請務必確認

00:14:50.691 --> 00:14:52.326 
您沒有釋放您的PiP控制器

00:14:53.293 --> 00:14:57.431 
因爲當您你釋放它的時候
PiP窗口就會消失了

00:14:58.899 --> 00:15:01.134 
所以請確保您是按照
如上所示來建構您的App的

00:15:03.904 --> 00:15:06.707 
AV Picture in Picture
控制器有一個代理方式

00:15:06.773 --> 00:15:08.609 
讓您存儲視圖控制器

00:15:10.711 --> 00:15:12.613 
在簡單的環境中您只需要啓用

00:15:12.679 --> 00:15:13.947 
當前視圖控制器來處理動畫

00:15:15.315 --> 00:15:17.384 
我再次強調當您完成存儲的
時候記得

00:15:17.451 --> 00:15:19.319 
啓動完成處理程序

00:15:20.320 --> 00:15:23.123 
因爲當您啓動完成處理程序
的時候它會讓

00:15:23.190 --> 00:15:24.157 
那個用來最初啓動PiP控制器的

00:15:24.224 --> 00:15:26.527 
AV播放層回到了屏幕上

00:15:28.495 --> 00:15:31.965 
如果現實不是這樣的話
我們將不會動畫處理視頻幀

00:15:36.003 --> 00:15:37.171 
您的AV播放層

00:15:37.237 --> 00:15:39.239 
將不會在PiP被激活的時候
在視頻幀上顯示

00:15:39.873 --> 00:15:42.376 
所以當運行程序提供一個
類似這個例子的

00:15:42.442 --> 00:15:45.345 
非模式視頻播放體驗的時候
您可能就會需要升級用戶界面

00:15:47.648 --> 00:15:49.683 
AV播放視圖控制器
是像這樣顯示

00:15:49.750 --> 00:15:51.652 
然後隱藏視圖控制

00:15:53.187 --> 00:15:54.288 
這個行爲是不硬性要求的

00:15:54.354 --> 00:15:56.223 
但是爲了確保一致性
我們強烈推薦使用它

00:15:58.358 --> 00:16:01.028 
爲了做到這您應該置入
開始時演示的方法

00:16:02.596 --> 00:16:03.864 
方法隱藏您的
播放控制

00:16:04.631 --> 00:16:05.799 
並且顯示您的佔位符原圖

00:16:07.601 --> 00:16:09.303 
當PiP停止的時候您就
做相反的動作

00:16:10.270 --> 00:16:12.072 
您置入那個叫停代理方式

00:16:13.140 --> 00:16:14.708 
來隱藏您的佔位符原圖

00:16:15.042 --> 00:16:16.276 
並且再次顯示您的播放控制

00:16:17.311 --> 00:16:18.278 
這非常簡單

00:16:20.848 --> 00:16:23.617 
最後如果您需要
在運行程序過渡到後臺的時候

00:16:23.684 --> 00:16:26.386 
自動啓用PiP您必須確認

00:16:26.453 --> 00:16:29.122 
AV播放層能覆蓋整個
用戶界面窗口

00:16:30.624 --> 00:16:33.560 
如果是這種情況
視頻正在播放的時候

00:16:34.094 --> 00:16:35.462 
PiP可能被啓用

00:16:35.529 --> 00:16:36.864 
那麼系統就會自動
爲您的用戶

00:16:36.930 --> 00:16:38.265 
開始啓用
Picture in Picture

00:16:40.567 --> 00:16:41.902 
大家將會看到
我們對上面所有的動作進行了解說

00:16:42.035 --> 00:16:44.104 
我們帶來了一個非常棒的樣品
 大家應該

00:16:44.171 --> 00:16:45.405 
在這個會議結束後看看

00:16:47.541 --> 00:16:49.176 
所以你們看到了通過
AVFoundation

00:16:49.243 --> 00:16:50.944 
來採用Picture in Picture
也是多麼簡單

00:16:52.246 --> 00:16:53.680 
最後讓我向你們用WebKit

00:16:53.747 --> 00:16:55.082 
展示
Picture in Picture 

00:16:58.485 --> 00:17:01.421 
WebKit用來對待視頻播放的主要
程式界面是WKWeb視圖

00:17:01.855 --> 00:17:04.892 
會議的這部分是針對

00:17:05.626 --> 00:17:08.127 
你們當中
用WebKit

00:17:08.295 --> 00:17:10.097 
來展示你您們網絡科技的人

00:17:12.598 --> 00:17:15.702 
在iOS 9裏 WKWeb視圖
支持Picture in Picture

00:17:15.769 --> 00:17:17.671 
以HTML5視頻模式如果
這個運行程序被設置成

00:17:17.738 --> 00:17:19.573 
與其他應用程式界面
一樣的話

00:17:20.941 --> 00:17:23.810 
如果您的網站內容用的是
iOS的關於回放控制的出產設置

00:17:23.877 --> 00:17:25.145 
那麼PiP肯定能被用上

00:17:27.848 --> 00:17:29.316 
如果您的網站建造者對

00:17:29.383 --> 00:17:31.818 
對合並您的控制與PiP按鈕有興趣

00:17:32.152 --> 00:17:34.988 
您應該看一下段落501
有什麼新的東西

00:17:35.055 --> 00:17:37.391 
在WebKit 和 Safari裏
針對網站開發人員

00:17:40.294 --> 00:17:42.629 
如果您想要支持後臺音頻視頻播放

00:17:42.696 --> 00:17:45.232 
但是不想允許
Picture in Picture

00:17:45.299 --> 00:17:47.467 
我們將會有
WKWeb視圖表面配置的屬性

00:17:47.534 --> 00:17:50.103 
在未來的iOS 9 裏這是允許的

00:17:52.372 --> 00:17:53.373 
那個就是WebKit

00:17:55.342 --> 00:17:57.544 
所以現在大家看到在您的
運行程序裏的所有三個媒體框架裏

00:17:57.611 --> 00:18:00.681 
啓用Picture in Picture
有多直接和容易

00:18:01.682 --> 00:18:03.584 
我已經等不及看見PiP支持在
你iPad

00:18:03.650 --> 00:18:05.219 
在您iPad的所有視頻播放App裏
得到支持了

00:18:09.489 --> 00:18:11.525 
Picture in Picture
跟後臺音頻非常像

00:18:12.326 --> 00:18:13.927 
當運行程序沒有在屏幕
上顯示的時候

00:18:14.294 --> 00:18:16.163 
您的用戶體驗還是特別好

00:18:18.098 --> 00:18:21.168 
同樣的道理也適用於
後臺音頻和視頻播放

00:18:22.769 --> 00:18:26.006 
打個比方不要做任何
和回放無關

00:18:26.573 --> 00:18:29.042 
或限制了您的存儲空間的作業
當這些作業

00:18:29.109 --> 00:18:30.611 
在您的後臺運行的時候

00:18:32.246 --> 00:18:34.548 
屬性資源共享不僅是
對PiP App非常重要

00:18:34.615 --> 00:18:36.517 
對整個iPad的所有運行程序
都特別重要

00:18:38.719 --> 00:18:41.555 
現在讓我們歡迎喬納森
上臺來給大家詳細的

00:18:41.622 --> 00:18:43.590 
來給大家詳細地討論一下關於這個主題
你們需要知道的東西

00:18:43.824 --> 00:18:44.758 
謝謝大家

00:18:47.394 --> 00:18:48.228 
謝謝你您斯特凡

00:18:49.630 --> 00:18:54.768 
iPad上的多項目處理允許您同時
在屏幕上運行多個App

00:18:55.836 --> 00:18:59.206 
但是硬件資源還是被所有

00:18:59.273 --> 00:19:00.374 
呈現的App共享的

00:19:01.675 --> 00:19:06.246 
我想和你們大家一起探討一下
一些關於媒體升級的政策

00:19:06.780 --> 00:19:11.585 
好讓你們更好地在
在你們iPad多項任務運行時

00:19:11.652 --> 00:19:15.656 
爲你們的App管理音頻視頻和照相機

00:19:18.792 --> 00:19:20.027 
好消息是

00:19:20.093 --> 00:19:23.163 
很多這些很好的做法
已經爲大家所熟知了

00:19:23.230 --> 00:19:25.499 
而且它們其中很多是在
所有iOS設備上都適用的

00:19:25.799 --> 00:19:28.936 
所以讓您的App在各個地方
都閃閃發光是比較容易的

00:19:30.070 --> 00:19:32.840 
現在在我進行對媒體資源
更深的探索之前

00:19:33.307 --> 00:19:35.075 
我想借用幾分鐘來討論一下

00:19:35.142 --> 00:19:37.911 
您的App在iPad
裏可能扮演的角色

00:19:39.947 --> 00:19:42.916 
在iOS 8
裏App是被全屏呈現的

00:19:43.917 --> 00:19:47.855 
而在新的iOS 9 裏
您可以用多任務處理模式

00:19:48.422 --> 00:19:49.957 
同時在屏幕上運行三個App

00:19:51.091 --> 00:19:55.395 
這些App可能會爭搶其中的一些
共享資源

00:19:55.462 --> 00:19:58.765 
爲了幫助緩解這個問題
系統會把您的App

00:19:58.832 --> 00:20:00.934 
分成這三個角色其中的一個

00:20:02.803 --> 00:20:04.972 
全屏呈現的App被認爲是
最主要的運行程序

00:20:06.406 --> 00:20:09.643 
它們一直都會是主運行程序
而輔運行程序

00:20:09.710 --> 00:20:10.811 
是呈現爲滑過屏幕的

00:20:12.112 --> 00:20:15.616 
全屏運行的App被更改大小
被分屏顯示來適應固定的App

00:20:15.682 --> 00:20:18.952 
之後也還是主運行系統

00:20:20.420 --> 00:20:22.823 
而一個Picture in Picture
的運行程序

00:20:22.890 --> 00:20:24.057 
可以在用戶看視頻的時候

00:20:24.124 --> 00:20:25.993 
被放在後臺來運行的時候

00:20:26.660 --> 00:20:29.029 
在這個情況下您的App就會被
看做是後臺媒體

00:20:30.497 --> 00:20:34.401 
對於一些特定的共享資源
來說這樣的角色分配

00:20:34.468 --> 00:20:37.404 
能幫助定義系統
的條款和您App的能力

00:20:38.205 --> 00:20:40.207 
所以讓我們來深入地
看一下其中一些資源

00:20:41.542 --> 00:20:42.809 
從運行音頻開始

00:20:44.778 --> 00:20:46.647 
iOS上的音頻系統是

00:20:46.713 --> 00:20:48.849 
非常適合多項運行程序的

00:20:49.583 --> 00:20:51.285 
如果您的App當下在使用音頻

00:20:51.518 --> 00:20:54.588 
您已經把AV音頻段落的應用程式界面
調置爲在您的App裏

00:20:54.655 --> 00:20:57.224 
顯示音頻的本質

00:20:59.026 --> 00:21:01.662 
系統用這個來弄清楚

00:21:01.728 --> 00:21:04.731 
您App裏的音頻
和系統裏其他App的音頻之間

00:21:04.798 --> 00:21:08.202 
如何混合如何切斷如何剪切

00:21:09.736 --> 00:21:12.940 
好消息是一個調置適當的
AV音頻段落

00:21:13.006 --> 00:21:15.542 
應該可以很好地在iPad裏
和其他多項程序一起運行

00:21:17.077 --> 00:21:20.147 
爲此絕對不要

00:21:20.614 --> 00:21:22.883 
根據您
App在屏幕上呈現的方式

00:21:22.950 --> 00:21:25.452 
來調置您的音頻

00:21:26.286 --> 00:21:28.021 
以上就是關於音頻的事情

00:21:31.992 --> 00:21:33.360 
說到這我想來複習一下

00:21:33.427 --> 00:21:36.630 
一些與iPad的多項程序運行相關的

00:21:36.697 --> 00:21:38.165 
對相關的音頻段落

00:21:39.633 --> 00:21:41.435 
如果您不遵循這些做法

00:21:41.502 --> 00:21:43.770 
您的App在iOS 8還可能運行

00:21:43.837 --> 00:21:45.405 
但是在iOS 9裏肯定會出問題

00:21:47.608 --> 00:21:50.711 
首先
您只有在音頻被需要

00:21:50.777 --> 00:21:52.246 
的時候纔會激活啓動音頻

00:21:52.980 --> 00:21:54.314 
這個尤其會發生特別是
當您的App裏的音頻

00:21:54.381 --> 00:21:58.452 
會干擾其它App
例如那些回放類別裏的

00:21:58.552 --> 00:22:03.724 
正在使用音頻段落的

00:22:04.291 --> 00:22:05.959 
音樂或視頻程序的時候
的時候

00:22:10.163 --> 00:22:13.467 
不要單單是因爲您的App啓動着
或者放置在前方

00:22:13.534 --> 00:22:17.271 
就決定啓動您的音頻

00:22:17.437 --> 00:22:19.273 
等到用戶
與您的音頻特徵產生互動的時候

00:22:19.339 --> 00:22:21.808 
再啓動您的音頻段落

00:22:25.112 --> 00:22:29.416 
例如說 一個音樂視頻程序
應該要等到

00:22:29.483 --> 00:22:31.051 
用戶點擊了播放按鈕
纔會開始播放

00:22:32.986 --> 00:22:36.690 
接下來
有很大一個App種類

00:22:36.757 --> 00:22:38.058 
可以不需要打斷其它音頻

00:22:38.926 --> 00:22:42.362 
例如如果您有一個遊戲
或輔助的音頻

00:22:42.429 --> 00:22:45.966 
比如說音效您應該啓用
環境音效類別

00:22:46.733 --> 00:22:49.236 
這個類別爲這類型的音頻
包括和其他音頻混合的的音頻

00:22:49.303 --> 00:22:53.407 
提供了相應的應對行爲

00:22:54.341 --> 00:22:57.477 
對於 讓這些在
iPad上多項目運行的App來說

00:22:57.778 --> 00:23:00.414 
啓動很重要
因爲您的App還是會保持在前臺

00:23:00.480 --> 00:23:03.083 
當其他的App開開關關的時候

00:23:03.317 --> 00:23:07.554 
並且您也不希望你的遊戲
音頻被打斷

00:23:07.621 --> 00:23:11.258 
或讓您的用戶需要重啓您的App

00:23:11.325 --> 00:23:12.593 
來讓音頻得以重新播放

00:23:14.928 --> 00:23:18.565 
最後
有一些App會有輔助音頻軌道

00:23:18.632 --> 00:23:20.868 
這方面的一個例子就是
如果您有一個遊戲

00:23:20.934 --> 00:23:23.470 
當用戶玩這個遊戲的時候
裏面有很強大的遊戲音效

00:23:23.537 --> 00:23:24.571 
同時還有音樂音軌

00:23:26.106 --> 00:23:28.308 
現在
如果您的用戶已經

00:23:28.375 --> 00:23:29.843 
在用另外一個App聽音樂了

00:23:30.077 --> 00:23:32.813 
您就會想要讓這個遊戲的音樂音軌靜音

00:23:34.147 --> 00:23:36.049 
這樣您的用戶就可以
在玩您這款遊戲的時候

00:23:36.116 --> 00:23:39.086 
既能聽到您的遊戲音效
也能繼續聽他們的音樂了

00:23:40.954 --> 00:23:44.491 
我們在iOS 8裏提供了一
個很好的方法來實現這個想法

00:23:45.259 --> 00:23:49.963 
簡單的來說只要檢查一下AV音頻段落
輔助音頻應該被靜音

00:23:50.230 --> 00:23:54.434 
只有在開頭和結束的時候
才能聽到它的開始結束提示音

00:23:56.436 --> 00:23:58.872 
所以這些就是一些
在iPad上使用音頻的

00:23:58.939 --> 00:24:00.807 
非常重要的做法

00:24:00.874 --> 00:24:04.044 
並且作爲一個附加效果
這樣做可以保證

00:24:04.111 --> 00:24:05.812 
在所有iOS設備上的
絕佳的用戶體驗

00:24:07.381 --> 00:24:08.815 
如果]您想知道更多

00:24:08.882 --> 00:24:11.051 
關於調置您的音頻段落的內容
去年的“主要音頻會議”裏有很多

00:24:11.118 --> 00:24:13.187 
有很多很有用又很棒的小建議

00:24:13.453 --> 00:24:15.656 
我們詳細的項目流程指南里也有

00:24:17.891 --> 00:24:19.760 
下一個我們要看的是
是視頻

00:24:21.528 --> 00:24:24.498 
首先很多視頻是有音頻相伴的

00:24:25.098 --> 00:24:29.503 
所以如果您有一個提供...

00:24:30.604 --> 00:24:32.139 
電影或電視播放的App

00:24:32.806 --> 00:24:35.375 
您就將會需要調置您的AV音頻段落

00:24:36.009 --> 00:24:37.578 
在這個例子裏
您將會想要

00:24:37.644 --> 00:24:40.247 
將您的音頻段落類別
設置爲回放

00:24:42.616 --> 00:24:46.253 
接下來如果您支持
後臺雲播放airplay傳輸

00:24:46.420 --> 00:24:48.121 
或者增加一個新的PiP支持

00:24:48.589 --> 00:24:51.124 
或者增加一個新的PiP特徵
在您的appApp裏

00:24:51.825 --> 00:24:54.161 
您在後臺播放媒體的時候

00:24:54.228 --> 00:24:56.730 
您這個appApp將會被認爲是一個
後臺媒體

00:24:59.199 --> 00:25:02.669 
這意味着您的存儲上限
將會非常低

00:25:02.870 --> 00:25:07.341 
所以非常重要的是
請棄用那些不必要的數據

00:25:07.441 --> 00:25:14.448 
例如視圖控制器視圖圖像
和其他的數據高速緩存

00:25:14.515 --> 00:25:16.817 
當您的App不呈現在屏幕
上的時候這個是不必要的

00:25:17.384 --> 00:25:19.152 
您需要主動完成這個事情

00:25:19.453 --> 00:25:22.122 
不要等到存儲警告發出再來做

00:25:24.558 --> 00:25:26.293 
您也需要限制您自己

00:25:26.360 --> 00:25:30.631 
只運行必要的作業來完成回放

00:25:31.031 --> 00:25:32.900 
好更有效地的劃分中央處理器CPU

00:25:35.636 --> 00:25:39.072 
現在很多iOS的視頻

00:25:39.373 --> 00:25:42.276 
都是通過
HTTP現場直播

00:25:42.476 --> 00:25:43.510 
來提供視頻內容

00:25:44.211 --> 00:25:47.481 
如果您有一個直播的視頻App
您將會需要做接下來的兩件事

00:25:48.148 --> 00:25:51.952 
首先
確保您在您的播放中提供多種變量

00:25:52.019 --> 00:25:54.488 
包括很一般的辨析度

00:25:54.555 --> 00:25:55.956 
和很低的寬帶需求

00:25:57.124 --> 00:26:00.761 
第二確保您給您所有
的變量用辨識度屬性

00:26:00.827 --> 00:26:03.564 
<br/> 
在主列表列打上註釋

00:26:04.998 --> 00:26:08.135 
現在如果您是通過外部
供應商拿到的這個視頻

00:26:08.402 --> 00:26:10.838 
確保您向他們查驗過他們
是否爲您提供了

00:26:10.904 --> 00:26:13.640 
所有變量的各式各樣的註解

00:26:14.241 --> 00:26:16.310 
這個很重要
原因有以下三點

00:26:19.847 --> 00:26:23.717 
在iPad和iOS 9裏您的視頻
可能不會佔用整個屏幕

00:26:24.618 --> 00:26:27.454 
提供註解的很好的變量
就可以讓iOS自己

00:26:27.554 --> 00:26:29.323 
爲當前正在播放的視頻

00:26:29.389 --> 00:26:30.891 
選取適合的大小

00:26:32.559 --> 00:26:35.195 
而且當它是用Picture in Picture
呈現的時候

00:26:35.262 --> 00:26:37.965 
一個較低的分辨率
和一個較低的寬帶要求

00:26:38.031 --> 00:26:41.368 
降低了您的內存佔用率
並且很大程度上避免了

00:26:41.435 --> 00:26:42.936 
您的App由於內存壓力而被終止

00:26:43.937 --> 00:26:47.107 
最後
通過這些做法

00:26:47.875 --> 00:26:49.743 
可以幫助用戶

00:26:50.043 --> 00:26:52.246 
避免不必要的流量消耗

00:26:52.646 --> 00:26:54.414 
他們會很感激您的

00:26:58.852 --> 00:27:01.788 
今天我想談的最後一個話題是相機

00:27:04.491 --> 00:27:07.561 
在iOS 9裏相機只能同時
被一個App使用

00:27:08.762 --> 00:27:11.431 
並且對於一些特定的
相機功能來說

00:27:13.233 --> 00:27:16.937 
它們只能被當下顯示
在屏幕上的App使用

00:27:19.139 --> 00:27:22.576 
這個意味着相機的可用性
隨時可能改變

00:27:22.976 --> 00:27:24.645 
然後您的App相機使用過程

00:27:24.711 --> 00:27:26.680 
可能會被打斷
因爲用戶

00:27:26.747 --> 00:27:28.849 
在多項任務處理的環境下
啓用了另外一個App

00:27:31.084 --> 00:27:32.553 
由於這個原因
考慮一下人們將會

00:27:32.619 --> 00:27:35.422 
怎樣使用您的App和相機功能

00:27:36.156 --> 00:27:37.758 
是非常重要的

00:27:39.359 --> 00:27:42.362 
如果您的App是一個以相機
爲主的App您會需要

00:27:42.429 --> 00:27:44.698 
這個App只能被全屏呈現

00:27:45.766 --> 00:27:48.202 
我們自帶的相機App
就是一個很好的例子

00:27:48.936 --> 00:27:51.471 
如果您的用戶所期待的
是這樣一個體驗

00:27:51.839 --> 00:27:55.776 
您可以在您的元信息簡介裏
加入用戶界面要求全屏匙

00:27:56.944 --> 00:27:59.680 
這個可以幫助讓用戶更快地

00:27:59.746 --> 00:28:01.748 
進入您App裏的相機

00:28:01.982 --> 00:28:04.251 
然後把整個iPad用作取景器

00:28:06.119 --> 00:28:08.522 
現在
如果用照相機不是

00:28:08.589 --> 00:28:11.358 
您這個App的主要功能
您很可能會想要

00:28:11.425 --> 00:28:15.495 
在iPad上採用多任務處理
增強器

00:28:16.797 --> 00:28:19.132 
我們的記事本App
就是一個很好的例子

00:28:19.733 --> 00:28:21.568 
當他們使用這個新的記事本的時候
人們將會很喜歡

00:28:21.635 --> 00:28:24.104 
因爲可以滑動
和進入分屏模式

00:28:24.171 --> 00:28:26.139 
這一而帶來的靈活性

00:28:27.140 --> 00:28:28.275 
然而
這就意味着

00:28:28.342 --> 00:28:31.712 
在這個App裏有些相機
功能就不能用了

00:28:33.146 --> 00:28:36.683 
所以讓然我們一起來看一下在iPad上
 我們的相機和記事本App

00:28:36.750 --> 00:28:38.719 
是如何駕馭相機可用性的

00:28:39.086 --> 00:28:41.088 
然後看看您的App如何
做到同樣的事

00:28:46.393 --> 00:28:47.895 
當一個App呈現在屏幕上的時候

00:28:48.161 --> 00:28:53.433 
用戶界面圖像選擇器可以
讓您看到一個預覽讓你拍照

00:28:53.500 --> 00:28:55.402 
<br/> 
或者是像今天這樣拍一段視頻

00:28:56.737 --> 00:28:58.705 
當多個App都呈現在屏幕上的時候

00:28:58.772 --> 00:29:01.575 
您還是可以看見一個預覽
拍張個照片但是

00:29:01.642 --> 00:29:04.111 
錄製視頻就不可能了

00:29:05.312 --> 00:29:07.247 
然後我們深入地的看一下這個情況

00:29:09.816 --> 00:29:11.485 
這裏我們有一個全屏呈現的地圖

00:29:11.552 --> 00:29:13.520 
然後你們的App是滑動呈現的

00:29:14.288 --> 00:29:18.125 
用戶界面圖像選擇器是在拍照片模式
所以您可以看見預覽

00:29:18.392 --> 00:29:21.028 
然後用戶也可以按下快門按鈕拍照

00:29:22.262 --> 00:29:24.131 
當用戶劃過去到視頻模式的時候

00:29:24.198 --> 00:29:27.334 
他們將會看到一個提示信息說
如果要拍視頻的話你的app必須

00:29:27.401 --> 00:29:28.702 
被全屏呈現

00:29:29.636 --> 00:29:31.405 
這個對您的App來說意味着什麼呢？

00:29:34.541 --> 00:29:38.612 
首先一個啓用了的視頻錄製器
可能在任何時候被打斷

00:29:40.781 --> 00:29:44.218 
舉一個例子就是當您在全屏
模式下錄製視頻的時候

00:29:44.284 --> 00:29:48.121 
一個滑動模式的App滑進來

00:29:49.957 --> 00:29:51.959 
你您的視頻錄製就將會被打斷
你你們必須知道

00:29:53.427 --> 00:29:58.732 
這種打斷是可能會發生在任何
視頻錄製App上

00:29:58.799 --> 00:30:02.536 
不管你是否支持多任務處理或
只能全屏呈現這是很重要的

00:30:06.340 --> 00:30:11.979 
接下來用戶界面圖像選擇器
開始的視頻錄製方式可能會

00:30:12.045 --> 00:30:14.815 
因爲我們當下是在一個不支持它的
 多任務處理模式裏而失敗

00:30:16.083 --> 00:30:18.652 
如果您一直都沒有注意到
這個信息的價值的話

00:30:18.952 --> 00:30:19.987 
現在是時候去注意了

00:30:22.823 --> 00:30:25.058 
恩這些就是關於用戶界面
圖像選擇器的一些方面

00:30:25.125 --> 00:30:27.861 
現在讓我們轉到
AV視頻捕獲

00:30:28.195 --> 00:30:31.198 
然後看看應用程式界面有什麼不同

00:30:34.334 --> 00:30:36.036 
當一個App呈現在屏幕上的時候

00:30:36.103 --> 00:30:38.138 
您還是有對相機的完全訪問權限

00:30:39.173 --> 00:30:42.609 
然後因爲AV視頻捕獲很靈活
應用程式界面的要求很低

00:30:42.676 --> 00:30:46.013 
您會有比列在這裏的三個
功能更多的功能

00:30:46.680 --> 00:30:49.016 
而且我們也被一些你們加入到
你們App裏的

00:30:49.149 --> 00:30:53.453 
創意和強大的功能所驚豔

00:30:57.257 --> 00:31:01.862 
爲了確保我們可以向你們
提供你們所需要的必要資源

00:31:01.929 --> 00:31:05.432 
以來保證你們App有裏最高級的
相機使用體驗

00:31:05.499 --> 00:31:10.470 
一個用相機進行的視頻捕獲

00:31:10.537 --> 00:31:13.941 
將只有當App在屏幕上呈現的時候
可以用

00:31:15.209 --> 00:31:18.178 
這就意味着無論何時滑動
分屏或者

00:31:18.312 --> 00:31:20.314 
Picture in Picture
功能啓用

00:31:20.380 --> 00:31:22.749 
您的相機使用過程
都將會被打斷

00:31:24.251 --> 00:31:28.188 
您應該搞定這些幹擾
並且跟您的用戶交流一下

00:31:28.255 --> 00:31:29.890 
讓他們知道現在現下相機暫時不能用

00:31:30.657 --> 00:31:32.492 
讓我們看看如何能做到這一點

00:31:34.628 --> 00:31:36.330 
第一步是

00:31:36.396 --> 00:31:40.300 
聽聽視頻捕獲被打斷的理由

00:31:40.534 --> 00:31:43.036 
或者我該這麼說
一個幹擾提示信息

00:31:46.840 --> 00:31:48.709 
在新的iOS 9裏

00:31:48.775 --> 00:31:52.846 
這個提示信息的使用說明
會講明一個理由

00:31:54.648 --> 00:31:57.551 
來告訴大家爲什麼您的
相機使用會被打斷

00:31:58.352 --> 00:32:00.454 
被打斷會有很多原因

00:32:00.521 --> 00:32:01.788 
但當它是因爲iPad上的
多任務處理的時候

00:32:01.855 --> 00:32:05.425 
您將會被告知
在多個前臺運行App裏

00:32:05.492 --> 00:32:07.160 
視頻設備不可用

00:32:08.061 --> 00:32:10.230 
這將是您的機會
您可以通過禁用快門或錄製按鈕

00:32:10.297 --> 00:32:14.535 
來調整你的用戶界面
並且檢測出

00:32:14.601 --> 00:32:16.503 
當下相機不可使用

00:32:19.773 --> 00:32:21.675 
現在我們已經搞定了
幹擾打斷的問題了

00:32:21.742 --> 00:32:23.377 
當它們結束的時候我們該幹什麼呢？

00:32:26.446 --> 00:32:27.848 
當一個幹擾結束的時候

00:32:27.915 --> 00:32:30.717 
視頻捕獲將自動重新啓動

00:32:30.784 --> 00:32:32.886 
並不需要手動來重新啓動

00:32:34.955 --> 00:32:36.356 
您可以通過觀察幹擾結束提示

00:32:36.423 --> 00:32:39.693 
來而得到這個信息

00:32:41.228 --> 00:32:44.698 
而且我再次強調這是你通過
 重新啓用之前禁用了的捕獲按鈕

00:32:44.765 --> 00:32:47.734 
來恢復你的相機用戶界面
的最好機會

00:32:54.608 --> 00:32:59.112 
確保您待會兒看一下我們最新的
視頻相機代碼樣品

00:32:59.179 --> 00:33:02.516 
來作爲例子看看是怎樣在您的App
裏用這些新的幹擾理由的

00:33:06.553 --> 00:33:07.754 
最後我總結一下

00:33:07.821 --> 00:33:09.489 
Picture in Picture

00:33:09.556 --> 00:33:10.724 
對於視頻回放App來說

00:33:10.791 --> 00:33:12.559 
是一個很厲害的新功能

00:33:13.961 --> 00:33:15.829 
您可以很容易地通過和我們

00:33:15.896 --> 00:33:18.432 
現代回放框架一起採用它
並且記得

00:33:18.498 --> 00:33:20.901 
如果您在使用媒體播放器框架

00:33:20.968 --> 00:33:24.938 
來進行視頻和AVKit之間的轉換

00:33:25.005 --> 00:33:27.541 
採用PiP和其它那些功能是很有用的

00:33:29.009 --> 00:33:31.912 
並且記得請聽從斯特凡剛剛
 講過的那些最優化的步驟

00:33:31.979 --> 00:33:35.215 
來確保您的App
能有最佳用戶體驗

00:33:35.883 --> 00:33:38.418 
舉一個例子確保您
恢復您的用戶界面

00:33:38.485 --> 00:33:40.954 
這樣視頻就能被動畫處理
放回到您的App裏面了

00:33:44.157 --> 00:33:46.760 
iIPad上的多任務處理器提供了

00:33:46.827 --> 00:33:49.196 
強大的功能讓我們可以
同時使用多個App

00:33:49.429 --> 00:33:52.833 
然後這個就考慮到了一個責任
就是我們要互相共享資源

00:33:54.001 --> 00:33:55.736 
有三件事是您可以做

00:33:55.802 --> 00:33:58.472 
正確地的調置您的音頻

00:33:58.539 --> 00:34:00.541 
提供能適應的視頻流

00:34:00.908 --> 00:34:03.877 
然後處理一下新的相機幹擾理由

00:34:06.413 --> 00:34:09.616 
想要知道更多的信息的話
請和我們的傳道人員聯繫

00:34:09.683 --> 00:34:10.984 
也可以看看我們的論壇

00:34:11.918 --> 00:34:13.453 
我們還提供一個新的文件

00:34:13.520 --> 00:34:19.293 
叫“在iPad
上採用多任務處理增強”

00:34:21.862 --> 00:34:24.063 
現在
共享媒體資源是

00:34:24.130 --> 00:34:27.000 
資源共享的唯一部分

00:34:27.467 --> 00:34:29.235 
請記得查看下次舉行的

00:34:29.303 --> 00:34:34.041 
“如何在多任務處理環境裏
最優化您的App”會議

00:34:34.942 --> 00:34:36.944 
這週五也還會有一個

00:34:37.010 --> 00:34:39.646 
“如何在iOS上傳遞最高性能”
的談話

00:34:40.746 --> 00:34:41.614 
如果您錯過了

00:34:41.681 --> 00:34:47.120 
那麼開始的那個會議就會是一個
一個很好的讓您開始學習 

00:34:47.187 --> 00:34:52.025 
如果在您的App裏採用
很有實用性的用戶界面

00:34:53.360 --> 00:34:56.597 
我代表斯特凡菲利克斯
和我自己

00:34:56.663 --> 00:34:58.699 
非常高興今天下午能跟你們
一起在這裏聊聊天

00:34:59.399 --> 00:35:01.168 
感謝大家 祝大家在接下來的
一週很順利