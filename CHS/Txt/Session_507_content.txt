Code Audio新特性
谢谢 大家下午好 
欢迎参加Code Audio新特性说明会议
我是阿克厦沙·纳格什本会议第一个发言者
我将谈谈AV音频引擎
及其今年发行的iOS and OS X的新功能
之后我的同事托里会讲
我们所售产品其他令人兴奋的新功能
像今年的跨设备音频功能
以及AV AudioEngine的新特点
明天早上我们有另一场Core Audio说明
又称为Audio Unit Extensions是一套新API
我相信你会觉得很有意思
所以请不要错过那个说明会
好吧
我们首先回顾一下AV Audio Engine
如果你知道Core Audio 你可能会注意到
我们提供了各种各样的API
来增强音频功能
去年在iOS 8和OS X Yosemite系统上
我们引入了一套新的
基于C语言的API 即AV Audio Engine
是AVFoundation框架的组成部分
如果您不是很熟悉AV Audio Engine
我强烈建议你看看
我们去年的WWDC上关于Audio Engine实操的视频
咱们来看看这项成果背后要达成的一些目标
有三个重要目标
首先 提供一个强大的且功能丰富的API组
AV Audio Engine建立在C语言框架之上 因此
它支持我们的C语言框架大多数的强大的功能
第二个目标 您在直接使用
C语言框架编写代码时只需少量代码
就能运行简单或复杂的任务
这个任务可以是播放一个音频文件
也可以是运行
整个音频引擎游戏
第三个重要的目标是简化实时音频
AV Audio Engine是一个实时的音频系统
但同时有一个非实时的交互接口
可在后台处理
实时音频的复杂文件
这再次凸显了AV Audio Engine可用
谈谈它的一些特性吧
它是个C语言API组 因此
也可以通过Swift运行
它支持低延迟实时音频
使用AV Audio Engine能够运行各种音频任务
如播放和记录音频
关联音频处理模块
并形成独有的处理链
你可随时捕捉音频处理链
进行分析或调试
而且 你可以安装3D音频游戏
那么 该引擎是由什么构成的呢？
引擎的基本构建块是节点
引擎本身控制一系列
连接在一起的节点
节点有三种类型
源节点提供数据输入
过程节点处理这些数据 
目标节点通常处理终端节点图
并关联输出硬件
和输出节点
现在咱们看一个引擎设置示例
这是一个简单的自动伴奏录音应用
你可以通过隐式连接
输入节点的麦克风捕捉用户的声音
通过有效节点处理
可能是简单的延迟
你也可以通过一个节点块
分析用户声音
确定用户是如何表演的 在此基础上
你可以通过播放器节点增添音效
也可以在你的应用程序中
用另一个播放器点在此播放
所有这些信号可以
使用混合节点混合在一起
最后通过扬声器连接到输出节点
在此设置中您的输入
和播放器形成了源节点
混频器是你处理输入节点
输出节点的目标节点
现在让我们来仔细看看混合节点
引擎中有两类混合节点
第一类是我们前面例子中的
AV音频混合器节点
这类节点主要用于采样率转换和声道混合
它支持单声道 立体声和多通道输入
第二类混合器节点被称为环境节点
它主要用于游戏应用程序
通过使用专业隐形侦听器
模拟与资源与环境节点相关
3D环境音效
环境节点支持单声道 立体声输入
和空间化单声道输入
现在 同时使用混频器节点和源节点的
是一种叫做AV Audio Mixing协议
此协议定义了一组属性
适用于混合节点的输入总线
源节点遵守这个协议
进而控制所连接的
混合器属性
如果你在连接
源节点与混合器节点之前设置这些属性
则属性会缓存到源节点
当你实际连接源节点与混合器节点
该属性会对混合器产生影响
我们看看这些属性的例子
主要有三种类型
常见的混合属性适用于
所有混合节点
这个例子是音量
立体混合属性如全景
只适用于AV音频混合器节点
3D混合属性如位置 干扰
遮挡主要用于游戏
以及适用环境节点
现在 我们再一个设置示范
现在来看看设置的示例
假设您的引擎上有一个播放器节点
混频器节点和环境节点
你在播放器节点上设置了一堆混合属性
现在玩家并没有
连接混频器
这些属性仍缓存在播放器里
现在假设你连接到了混合器节点
现在的属性如音量和全景
对混合器节点产生影响
而3D混合属性如位置不会影响混合器节点
如果你现在断开混频器
并连接到环境节点
音量和位置对环境节点有影响
而全景则无影响
这样你可以在播放器中设置一堆混合属性
然后在你的应用程序中将播放器
从一个混频器无损地转移到
其他混频器中
接下来的几分钟我们讨论
今年产品的新特性
将再次访问AV Audio Mixing协议
我现在想看看另一方面
如何使用AV Audio Engine处理
多通道音频
这里的设置涉及两部分
首先是配置硬件
能够接收多通道音频
现在的硬件可以是HDMI设备
或USB设备等等
第二部分实际上是设置
引擎本身能够渲染
多通道音频
我们一个一个来看
首先 OSX中的硬件设置
在OS X中 有款内置系统工具叫音频MIDI设置
用户可使用这个设置
安装多通道硬件
这个工具可用于
设置扬声器配置
频道布局 等等
随后 app可通过设置AVAudioEngine
使用这个硬件进行多通道渲染
但是在iOS中为了使用硬件多通道
app需要设置AVAudioSession
假设我们要播放一个音频
来看看会涉及哪些步骤
首先是激活音频会话
接下来需要查看
适合此会话的通道最大数
随后设置通道的优选数字
最后一步
询问返回输出通道的实际数字
以核实你刚做的请求是否通过
现在 请注意
不管你何时请求为通道提供某一数字
请求并不一定会被接受
因此 最后一步
有必要核实通道实际输出数字
代码看起来是这样的
假设有一个音频播放案例
假设使用的是5.1渲染
首先要做的是
获得一个音频会话的共享事例设置类别
激活会话
接下来 检查适合会话的
输出通道的最大数
在此基础上
在会话中设置通道的优选数字
最后一步 
询问输出通道的实际数字
使之适应于对应通道计数
好了 以上就是关于硬件设置的所有内容
现在来看看如何设置引擎
使之能够渲染多通道音频
再举两个使用事例
首先 假设你有适用的多通道音频内容
且它需要通过多通道硬件
进行重播
在这个案例中你会用到一个AV混音器节点
第二个事例
有一个游戏场景你想让其中的内容空间渲染
然后通过多通道硬件播放
这里 你用到一个环境节点
事例一 你有一个多通道音频内容
一个多通道硬件
这个硬件是按照数分钟前我们所讨论的那样创建的
现在 请注意尽管显示的是内容格式和硬件格式一样
但他们可能彼此截然不同
这里的混合器节点
将注意到内容格式和硬件格式间的通道映射
所以 首先你要做的是
传递硬件格式
连接混合器和输出节点
代码层面是这样的
你询问输出节点的输出格式
即硬件格式
然后用那格式
连接混音器节点和输出节点
接下来的内容方面很相似
将内容格式
传播并连接播放器和混音器节点
假设你有一个文件格式的
多通道音频内容
可以打开文件阅读
也可以用它的处理格式
连接播放器和混音器节点
随后将文件安排到播放器中
打开引擎 打开播放器
内容将通过处理链
事例二 这是典型的游戏场景
你想让渲染内容空间
并通过多通道硬件播放
处理步骤极其相似
除了部分细微差别
首先拿到硬件格式
在环境节点和输出节点之间
设置连接
因为环境节点只支持特别通道布局
所以你需要将硬件格式
映射到一个环境节点支持的格式
这是第一个不同点
假设我们有一个5.1硬件
我们可以选择由音频节点支持的
音频单位5.0布局包
我们可以用这个布局标签
创建一个AV音频通道布局
然后一个AV音频格式使用这个布局
然后你用这个格式
连接环境节点和输出节点
第二步完全相同
传递内容格式
并连接播放器和环境节点
打开并阅读文件用它的处理格式
连接播放器和环境
下一步 在支持多通道渲染的播放器上
设置渲染算法
渲染算法是一种
3D混合协议属性
数分钟前 我们刚看过
它将告诉环境节点
对应的源请求一个
多通道渲染
接下来就是常规的东西了
将文件放到到播放器里
启动引擎 启动播放器
环境节点将对内容进行空间渲染
好了 这就是iOS 8和OS X Yosemite系统
AV音频引擎
接下来讲讲 让人更兴奋的东西
今年有什么新东西呢
我们有三个主要的新特性
第一个是拆分支持
等下就会讲到
第二是音频格式转换支持
这里有不少的新类
最主要的一个是AVAudioConverter
最后 另一个新类叫做
AVAudioSequencer 支持MIDI文件的播放
来讲讲拆分支持
让我们考虑一下这个设置示例
我猜你们应该都很熟悉了
在上周推出的API中
引擎只支持一对一连接
任何节点的输出
只能与引擎中另一个节点连接
现在 我们增加了对这个的支持
它可让你在处理链中
将节点输出分成多个路径
在这个事例中
播放器的输出被分成三个不同路径
最后连接到混音器节点上
拆分在类似下面的用例中很有用
如混频 需增加一些效果声信号的混频
或者用同一个源驱动的原始信号对信号进行处理
在这个事例中
播放器和混音器节点的连接形成了原始信号路径
而经过效果节点的其他两个路径形成了效果声信号路径
这三个信号通过混音器节点
混合在一起形成混合
现在 请注意当你拆分节点的输出时
事实上 整个输出通过多路径进行渲染
这其中并未涉及到通道的拆分
现在来看看节点如何设置这些连接
你可以看到
播放器连接到三个不同的节点上
我们将它们叫做连接点
由一个非常简单的新类
叫做AV音频连接点作为其代表
首先要做的是
创建一些连接点
以连接播放器节点
在这个事例中连接是 输入总线
两个效果的0和输入总线混音器节点的1
然后使用新连接API
我们必须连接播放器和这些连接点
就这样 你为拆分连接做好准备了
接着  连接引擎中其他所需要的节点
现在再次访问
刚才提到过的AVAudioMixing协议
看看它如何影响拆分使用事例
假设我们有一个播放器节点
这个播放器节点的输出被拆分成两个不同路径
通过效果节点到达混音器节点
现在假设在播放器节点上设置了个属性
在这个事例中假设你设置了音量
此刻 属性将在所有现有的混音器连接上起作用
在这个事例中输入总线 混音器节点的0输入总线
混音器节点的1得到的音量都是5
如果你想在特别混音器连接数
改变任何属性
这也是可以做到的
方法就是
使用我们的新类名为AVAudioMixing目标
询问播放器节点
这里提供你想要的与混音器对应的
目标对象
然后 你就可以在对象上设置属性了
这个事例中
我在混音器输入总线0到8中改变音量
好了 同样的
你也可以在其他混音器连接中改变属性
我们来看看 连接断开会发生什么
假设你将效果
从混音器输入总线1连接中断开
请注意 
你在特别混音器连接上改变的设置
将不会被保存
因此 混频设置的状态看起来是这样的
播放器的混频设置仍旧完整
另一个活跃的连接
同样也有完整的混频设置
现在 假设你结束创建连接
重新回到混音器输入总线1因为先前的设置并未保存
重设播放器节点的基础设置
将在新连接上起作用
因此 根据播放器的混频设置
输入总线音量1将再次被设置成5
总结一下
当一个源节点被连接到多个混音器上时
你在源节点上设置的属性
将适用于所有现存的混音器连接
同时它也适用于任何新创建的混音器连接
若有需要
也可以改变写个别混音器连接
但是请记住
无法保存在断开时候保存
最后是关于拆分支持
如果你设置限制条件
引擎就可以支持处理表中
任何节点的拆分
现在 从输出被拆分的节点开始
到所有部分终点的混音器
你无法拥有任何时间效果节点
也就是说 你无法设定速度和时间阶
你也无法进行速度变化
换句话说
基础节点上的所有拆分部分
应用同样的速度加以渲染直至它们到达通用混音器
倘若你设定限制条件
那么你就可以将引擎上
任何节点的输出拆分成不同部分
好了  现在来说说
今年的第二个新特征音频格式转换支持
这里 我们有一些新类
AVAudioCompressedBuffer和AV Audio Converter
在上周提到的API中
我们有一个AVAudioBuffer
和它的一个子类叫做AVAudioPCMBuffer
从它的名字就可以看出
PCM缓冲器保存未压缩音频数据
而且通过引擎的数据流
是PCM缓冲器格式
今年开始
AVAudioBuffer有另一个子类叫做AVAudioCompressedBuffer
它保存压缩音频数据
这个可以与新类AVAudioConverter用
接下来将会讲到AVAudioConverter
AVAudioConverter是一个新工具类
它是音频工具箱架构中的
音频转换器升级版本
它支持所有音频格式转化
在你改变 即整合到浮动位深 抽样率等等时
你可以将PCM转化成PCM格式
或者可以在PCM和压缩格式间转换
就是说 你可以用它来编码和解码
在下面的事例中 你可以看到
AVAudioConverter与AVAudioEngine配合使用
好了  假设你设置引擎进行播放
因此我们有一个播放器节点 
它连接一个效果节点和一个输出节点
假设有一个压缩音频流
进入到其中
现在 我们知道通过引擎的
数据流的格式是PCM 缓冲器
现在可以使用AVAudioConverter
将输入压缩流转换成PCM 缓冲器
然后你可以用这些缓冲器
安排播放器节点
因此 通过引擎 就可以播放了
现在来想想代码事例
用AVAudioConverter如何进行编码
这里 我们想把
一个PCM转换成ASC压缩格式
首先要做的事情是
定义输入格式和输出格式
这里 我有一个PCM格式的输入格式
和一个
压缩ASC格式的输出格式
下一步 创建一个AVAudioConverter
并将它从输入格式转换成输出格式
然后 创建你的音频缓冲器
此事例中 输入缓冲器是一个PCM缓冲器
输出缓冲器是新的AVAudioCompressedBuffer
格式是ASC格式
接下来要做的是
定义输入块AVAudioConverter
在这个块中
转换器将在需要的是调用输入数据
所以这里你需要做一些事情
首先 你需要告知
转换器输入的状态
假设块被调用时
你并没有任何适用的输入数据
这种情况下 你可以说现在没有数据
并将0缓冲器返回到转化器
假设你到达流的末端
你可以告知转换器 这是流的末端了
再一次返回一个0缓冲器
另外的 在正常情况下
你可以看到数据
进入输入缓冲器 然后返回到转换器
这是主要的转换回路
每次操作回路时 我们都要求转换
以生成一个数据的输出缓冲器
我们也为转换器提供了刚才所定义的输入块
这样 不管它需要输入多少次
它都可以被转换器调用
转换器也将返回你的状态
这样你就可以查看转换的状态了
这样一来 倘若转换器说这是流的末端了
或倘若说有错误
你就可以进行相应地处理
另外 在正常情况下
每次迭代都将为你提供一个数据的输出缓冲器
好的  接下来说说
今年的最后一个新类AVAudioSequencer
它支持MIDI文件的重播
在例示时
AVAudioSequencer与AVAudioEngine有关系
定序器负责将MIDI事件
发送到已附在引擎中的工具节点上
工具节点 音频采样器
MIDI事件等等的事例
现在来看看样本设置
假设你有AVAudioEngine
是用连接到混音器节点
和输出节点的工具节点创建的
现在你可以设置一个AVAudioSequencer
使它与这个引擎相关联
然后 启动定序器和引擎
定序器将自动发现引擎里的第一个工具节点
然后开始往那个工具节点
发送MIDI事件
代码看起来像这样
因此 第一部分是引擎设置
它位于定序器外面
这里我们有一个工具节点这是个采样器
你在引擎中创建所需的连接
然后启动引擎
此刻 并没有播放音频
因为并没有东西
在驱动工具节点
下一步 创建定序器
并与你刚配置的引擎相关联
将MIDI文件加载到定序器中
然后就可以启动定序器了
此时 定序器将后台
发现你已附在引擎中的采样器节点
并开始往采样器节点发送MIDI事件
因此 你的音频播放将启动
假设你的MIDI文件中有多重轨道
现在定序器的默认行为是
将所有的轨道发送到
引擎中的第一个工具节点
倘若你想将轨道放到
个别工具节点上
这只需数行代码就可以做到
定序器中引擎的创建和设置
和先前提到的一样
唯一多的步骤是
从定序器上获得轨道
为每个轨道设立目标
到你想要的工具节点上
最后再说说定序器
定序器有自己的传送控制集用来控制MIDI事件
和引擎上的传送控制不同
它控制音频流
这里 你可以为重播准备定序器
这个定序器基本上是预先运作的
你可以开始 停止MIDI事件
你可以根据秒或节奏
设置MIDI事件的重播位置
当然 你也可以设置
MIDI事件的重播率	
好的 所以我们了解到了
今年IOS和OSX发布的AVAudioEngine的新特性
现在我想通过一个快速的演示
向你展示如何使用新特性
在此过程
我想邀请托里上台来帮助我演示
好的 在这个演示中 我们将AVAudioEngine
和AVAudioSequencer通过引擎相关联
在这个引擎中 最上面有一个工具节点
被分为三种不同路径输出
其中一条路径直接连接到引擎的主混频器节点
另外两条连接两种不同的特效 
然后才是主混频器
现在 通过使用我AVAudioMixing协议属性
在每一条混频器输入总线中
进行音量控制
所以 即使是最微小的音量失真
直接音量以及混响都可进行控制
且都是通过混频器协议来控制的
现在 在顶部 这个浅灰色的方框
可以看到定序器的传输控制
你可以看见在定序器上设有播放和停止键
与此同时还有一个滑动栏
用来设置MIDI的播放位置和速度
在主混频器上还有一个音效开关
用来控制你混音的音量
现在 让我们继续 开启定序器
这个时候 MIDI开始被传送到
引擎中的工具节点
你可以非常灵活地
改变MIDI播放的位置及速度
以及回放键的节奏
通过使用音量控制
你可以将不同的效果加入到混音中
你可以增加失真音量
或是混响音量
所以 你可以通过这些音量
非常方便地打造自己的混音
最后 通过使用混频器节点上的主音量控制
可以控制整个混频器的音量
好的 这个演示就是
我们刚刚讨论过的新功能
这个演示的演示代码会在
今年年底前推出
现在就AVAudioEngine 总结一下
我们回顾了如何通过AVAudioEngine
处理多通道的音频 然后我们看了今年推出的三个新功能
第一 拆分支持
第二 音频格式转换支持
最主要是AVAudioConverter
最后是一个新的AVAudioSequencer
用来支持MIDI文件播放
我希望在你们的应用中
使用这些新功能并给予我们反馈 谢谢
现场交给托里 谢谢 托里
谢谢 阿卡夏莎
大家下午好
我是托里 让我们继续看
IOS系统的跨设备音频模式
毫无疑问iPad是
这个星球上最多功能的音乐工具
这主要要感谢各位
数字音频工作站应用 混音器软件
击鼓软件 声音玩具
用同一个设备你可以
将无数的音频内容混到一起
那么如何把IOS设备中的音频内容
放进MAC上的项目呢
你可以将插入耳机
然后通过音频越狱盒子连接到MAC上
不过是先转换到模拟信号
然后再转为数字信号
我想这并非最完美的方案
所以 为了从iOS设备上录制数字音频
我们加入闪速USB适配器
我们加入USB音频类兼容接口
使得它能够处理数字音频输出
一个数字音频线
还有一个处理数字音频输入的接口
我们将这些都加入到MAC
非常有效不过有很多的硬件
还有些第三方软件也试图解决这个问题
如果你的应用或你最喜欢的应用
使用这些让软件 也很好
但是 如果你不想使用额外的硬件
或是安装额外的软件
仅通过补丁就能录制音频
这样不是很棒嘛
那么 请击鼓欢庆吧
噢 很低调嘛
介绍下跨设备音频模式
或者我们直接称之为IDAM
IDAM允许你通过USB快速连接到设备
并录制数字音频
通过USB 2.0兼容接口
支持双通道24位 
48千赫抽样率硬件
全盘录制音频流格式
MAC系统上又如何呢
如果你使用MAC USB音频驱动
也可以获得同样效果
以及同样的USB音频设备兼容性
不仅如此 iOS系统上
使用的是USBISOCHRONOUS音频
意味着更省网络了
如果想在MAC上备份120G的数据
你可以边玩音乐边录制
而且大可放心
音频上不会有任何瑕疵
而且 我们无需降低
也不需要额外的硬件
也不需要其他的软件
你不需要更改你的OSX应用
就能享有这功能带来的便捷
如果你的iOS应用已经采用
双通道24位48千赫音频流格式
你无需更改iOS应用
并且 在你制作过程中
突然跳出一个日程警告
警告也通过USB接口传输
而是从扬声器传出
好了 所以跨设备音频模式
你的设备可以在此模式下充电和同步
照片输入数据连线QuickTime屏幕抓拍将暂时无法使用
如果想要使用这些功能
只需按下按钮 或拔掉设备插头
托里 你也许会问 我该怎么用呢
我们直接支持音频MIDI设置
在下面的窗口菜单 你会发现新的选项
展示iOS设备浏览器 如果你点击它
你会进入到这个高级的界面
它可以展示你所有连接的iOS设备
你想进入或退出IDAM模式
你可以按这个键
你可将这个界面嵌入你的OSX应用了
如果你选择这样做的话 我将向你展示执行代码
但在那之前
你已经猜到了 演示时间到
我拿了一个iPad 好的
在这个IPad上 我运行一个合成器应用
叫做Nave
我喜欢这个应用是因为有一些补丁
能使你获得更好的
触摸界面
让你在点击后
系统自动进行操作
很多市面上的MIDI控制器做不到这点
这正式iPad能成为优秀的音乐处理器的原因
所以我在这选了一个补丁 听起来就是这样 
我喜欢那些声音 所以我想录制到
MAC的嘻哈音乐项目里去
所以 让我们转移到Mac 
在Mac上MIDI音频软件在运行了
找到窗口菜单 打开了iOS浏览器 
然后看到我目前没有连接IOS设备
然后 我插上我的iPad 
它立刻就出现了
瞬间又不见了 然而只要单击Enable 
现在多一个音频设备了
是的 马上就搞定了
你可以看到这里有一个双通道输入音频设备
已经添加到这里
所以我想用到我的Logic项目上 
所以我会继续前进 然后说 用吧
让我们回到Logic这里
好吧 这就是我处理好的节奏
我想录制到音轨 所以我要
制作一个新的音轨
启动录音监控程序和录音键
把音量调小一点
现在我能听到这声音直接录制到音轨里
让我们录上一首吧
如果重新播放
那么就会按我所希望的进行音频捕捉
战斗吧 老兄
现在 简单总结一下我的演示
请在家里试试
现在Beta版已经有了
如果你发现有错误 直接登陆
bugreport.apple.com 然后提交你的错误给我们
好了 最后讲讲IDAM吧
要求是OS X El Capitan系统和iOS9系统
闪存接口就能在iPhone上用了
也可以在iPads上使用
通过闪存接口 但是早期的iPad mini无法用
如果你有家用iPhone 工作用iPhone 家用iPad 
工作用iPad和小孩用的iPad并且有充电器
你可以同时插入使用
然后集合成10通道的输入设备
只要你想 就可以开始录制
如果还有USB端口 
那么请打开Safari浏览器进入苹果商城网址
好了 我之前说过我会告诉你
如何在OS X应用里嵌入视图控制器 
如果你要这样做 
我会现在给你展示代码
这个代码是样本的 
我想强调这个部分 
如果你看到黄色文本部分 
你可以看到CA跨设备音频视图控制器
创建一个 然后把这个子视图添加
到你的视图容器里面
我想谈CoreAudioKit中 
新的视图控制器
可能有你感兴趣的
我们也添加了CABTLEMIDI窗口控制器
这是用于配置蓝牙低功率MIDI设备的UI
去年这可是个亮点
是NS窗口控制器的子类 
它的视图像这样 所以如果你也想的话
你可以直接把它嵌入OS X应用里 
另外
我们还有CA网络浏览器窗口控制器
这是配置音频视频桥
音频设备的UI
还有一个NS窗口控制器子类
它的视图看起来像这样
好的 让我们启动转换装置
然后继续讨论  AVAudio有什么新玩意儿
你们中会有多少人听播客和有声读物 
很好 有许多人
你们中又有多少人用你的iPhone 
作为私人导航设备
同样也是许多人
好的 你之前可能已经见过这个问题
让我们假设你将去一个你从未去过的
灵魂料理餐厅
你正在导航
然后你正在听一则播客
这则播客由播客名人X主持
他们正在采访你最喜欢的时下
名人Y在采访的中途
对话真的是妙趣横生
这个时候你的导航跳出
告诉你500尺后靠右
在那之后你听见刺耳的笑声
播客讲了很棒的笑话而你正好错过了
因此你返回到音频界面 开始再播放
正当要播到笑话时“靠右行驶” 
握起拳头说 我的用户体验很糟糕
好的 对此 我们应当有一个解决方法
我对此深感不自由
我们在iOS 9中提供一个解决方法
现在播客和有声读物应用程序可以用一种新的
AVAudioSession模式叫模式口语音频
用于导航应用和类似的应用
中断其中一个
就会发出发声提示
新的AVAudioSession种类选项
叫做混合模式中断口音频
现在 地图已经使用 
混合模式中断口音频以及
而播客和电子读物
已使用AVAudioSession模式口语音频
你如何在你的应用中使用呢
好的 让我们来看一些代码
我将逐行查看这些代码
以便你能了解我们正在做什么
首先我们将从设置你的音频会话开始
你会得到音频会话的共享实例
设置你的类别为录音在选项中
你选择一项则其他失效
现在我们将用Swift 2的新特性
这个是新的特性
允许你将早些时候iOS的代码
部署到现在使用的iOS系统中
因此只有在iOS 9或者之后的系统里
你才可以看到这个多出的选项
混合模式中断口语音频
然后设置音频会话种类
好的 让我们来实际看一下导航提示
现在播放导航提示
就像这样
首先获取音频会话的共享实例
接着使用功能原型中的URL
创建一个AV音频播放器
你设置播放器指派给自己
这样做是 当你的音频提示播放完成
它将自动为你
调用指派方法
将音频会话设置为激活
然后运行播放器
现在我们继续
现在 音频已经播放完
因此 指派方法将被调用
音频播放器完成播放
代码是这样的
获取音频会话共享实例
设置音频会话为闲置
使用选项选择通知其他反激活
这意味着任何其它正在播放的其它音频
在中断当前音频之前
会实现进行通知
现在让我们来看看另一方面
让我们到播客或者音频应用
这里是音频会话设置
获取音频会话的共享实例
设置你的种类为录音
当前设置模式为默认
如果是iOS 9或者之后的版本你可以用这种新的模式
AVAudioSession模式口语音频
然后设置种类和模式
接下来要做的是
添加中断处理器
我们将添加一个中断处理器名为处理中断
在响应AVAudioSession中断通知
后被调用
现在也可以设置好其他的通知
例如 如果媒体服务器停止运行
而你想要被通知你就可以重设你的音频状态
好的 让我们来看看中断处理器
要做的第一件事情
从功能原型中的NS 通知对象中
获取用户信息字典
从中我们可以看到
关键AVAudioSession的中断类型密匙
现在我们将选择那种类型
第一部分是当你的音频会话
开始被中断时将会发生什么
然后第二部分将在下一张幻灯片上这是结束
如果这是开始中断
你想做的第一件事是更新UI 
从而用以提示录音已经被停止
然后如果你的内部状态强制规定播放
然后你可设置为播放
它稍后将告诉你这个中断什么时候完成
你可以重放音频
如果合适 更新你的内部状态
因此 现在这是结束中断
因此 如果这是结束中断
你将从AVAudioSession
中断选项密匙
用户信息字典中获取标志旗
假如这标志旗是重新开始的选项
稍微回放一下音频
因为你的音频在结束之前已经被暂停
然后你可以在此启动播放器
更新你的内部状态然后更新UI 
从而显示已经重新开始播放
这就是我为你准备的所有代码
快速回顾
今天我已经告诉过你
关于AVAudioEngine里一些令人兴奋的新增强特性
我们介绍了跨设备音频模式
关于新的CoreAudioKit视图控制器
你可以将跨设备音频模式
蓝牙 低功率MIDI以及视音频桥
嵌入你的OS X应用
也介绍AVAudioSession模式口语音频
以及新的AVAudioSession选项
混合模式终端口语音频
但这不是全部
明天早上11点我们会有另外一个环节
是关于音频单元扩展的的新变化
所以我们希望明天再见到你们所有人
同样还有与今天早些时候讨论的相关环节
如果你想再次回顾
尤其是游戏音频方面
如果我们不能在实验室里回答你们的所有问题
这里有非常实用的网站
也可以直接咨询克雷格·吉士利
他的联系方式就在下方 结束了