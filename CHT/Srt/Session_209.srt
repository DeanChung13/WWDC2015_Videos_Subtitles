00:00:20.053 --> 00:00:25.192 
使用 ClockKit
建立Complications

00:00:31.765 --> 00:00:36.136 
嗨大家好我是伊莉莎
我旁邊這位是保羅

00:00:36.737 --> 00:00:40.974 
我們將告訴你們什麼是Complications
以及您如何來製作他們

00:00:45.012 --> 00:00:49.683 
所謂的Complications
是一些小信息件

00:00:49.750 --> 00:00:53.187 
就是在您的鐘面上
顯示正確的時間

00:00:54.888 --> 00:00:56.490 
在您看到的這個鐘面上

00:00:57.057 --> 00:00:59.326 
如果我們把時間
從方程式中移出

00:01:00.861 --> 00:01:03.363 
剩下來的一切就叫做
Complications

00:01:04.665 --> 00:01:08.068 
所以這兒您看到的
都是建立OS系統但是

00:01:08.402 --> 00:01:12.873 
在Watch OS 2 裏您可以開始爲鐘面
創造屬於您的 Complications

00:01:13.607 --> 00:01:15.642 
我們將會告訴您該怎麼做

00:01:16.510 --> 00:01:21.048 
我將會舉例來
創建一個Complication

00:01:21.114 --> 00:01:24.117 
在一場足球比賽中

00:01:24.184 --> 00:01:26.820 
來顯示即將到來的比賽

00:01:27.521 --> 00:01:30.057 
因此讓我們看看...

00:01:30.524 --> 00:01:33.193 
你們已經建立的想象這樣
一個Complication

00:01:33.694 --> 00:01:35.829 
它看起來像會去選擇它

00:01:36.363 --> 00:01:38.665 
那麼聚焦於中間的鐘面

00:01:39.600 --> 00:01:41.668 
如果您是在用力觸摸屏幕

00:01:44.071 --> 00:01:45.639 
您可以定製鐘面

00:01:46.907 --> 00:01:48.842 
向右滑動可以讓您

00:01:49.309 --> 00:01:52.346 
開始打造出您獨特的
Complications

00:01:52.746 --> 00:01:54.348 
轉到數字頂部

00:01:57.551 --> 00:01:58.752 
可以選出一個Complication

00:01:59.052 --> 00:02:00.988 
因此如果我們滾動到列表的結尾

00:02:01.221 --> 00:02:06.059 
我們會看到我們尚未建成的
足球比賽Complication

00:02:06.593 --> 00:02:07.461 
我們可能選擇它

00:02:08.127 --> 00:02:10.430 
我們能看到現場數據

00:02:10.497 --> 00:02:12.900 
顯示在鐘面上

00:02:13.300 --> 00:02:16.203 
您將如何提供數據

00:02:16.470 --> 00:02:18.338 
去安置這些
Complications

00:02:20.507 --> 00:02:21.708 
正如您面對面看到的

00:02:21.775 --> 00:02:25.345 
我們所有的時鐘
都有一個一致的外觀和感覺

00:02:25.412 --> 00:02:26.713 
正是這點

00:02:26.780 --> 00:02:30.184 
使得和鐘錶保持互動是愉快的
這正是我們想要做的

00:02:30.250 --> 00:02:33.187 
在保持那種一致性時

00:02:34.321 --> 00:02:38.258 
那些正在手錶上運行的擴展

00:02:38.325 --> 00:02:41.695 
將會以文本和圖片的形式

00:02:42.229 --> 00:02:44.464 
爲這些Complications
提供數據

00:02:47.601 --> 00:02:51.371 
然後鐘面實際上會以某種方式移動

00:02:51.438 --> 00:02:53.106 
以配合其他頁面

00:02:56.410 --> 00:02:57.945 
因此如果我在

00:02:58.946 --> 00:03:01.815 
我的手錶上安裝了這種
Complications

00:03:03.150 --> 00:03:05.085 
每次我舉起手腕

00:03:05.152 --> 00:03:07.154 
我都會立馬去看它

00:03:09.523 --> 00:03:12.025 
這是一個偉大的事情
這是偉大的事情之一

00:03:12.092 --> 00:03:13.794 
關於建立Complications

00:03:13.861 --> 00:03:15.762 
同時它也呈現了一種挑戰

00:03:16.196 --> 00:03:17.464 
因爲隨着時間的流逝

00:03:17.531 --> 00:03:20.133 
在Complications
展示的信息需要更新

00:03:20.200 --> 00:03:21.835 
因爲它是可見的

00:03:23.370 --> 00:03:25.506 
一旦您舉起手腕

00:03:25.572 --> 00:03:26.673 
隨着時間屏的打開

00:03:26.740 --> 00:03:29.710 
更新需求就已經發生了

00:03:31.311 --> 00:03:32.846 
如果您想一下

00:03:32.913 --> 00:03:35.015 
這個表可以有
五個Complications

00:03:35.082 --> 00:03:36.216 
展示在這個單獨的鐘面上

00:03:36.283 --> 00:03:38.919 
我們不可能有時間
把它們都開啓

00:03:39.620 --> 00:03:40.854 
拉新數據

00:03:41.522 --> 00:03:44.424 
可能會涉及網絡請求

00:03:44.825 --> 00:03:46.360 
或者讓所有的人

00:03:46.426 --> 00:03:48.896 
都在屏幕上帶着數據及時返回

00:03:49.363 --> 00:03:51.064 
來解決這個問題

00:03:51.131 --> 00:03:54.301 
我們正在進行的是
提前以時間軸的形式

00:03:54.635 --> 00:03:57.037 
爲您的Complications
收集數據

00:03:57.738 --> 00:04:00.974 
因此你們要給我們
一個時間軸的數據

00:04:02.342 --> 00:04:04.878 
時間線的多少取決於

00:04:04.945 --> 00:04:06.280 
您申請的數據密度

00:04:08.649 --> 00:04:11.552 
和我們一天內看手錶的方式

00:04:12.252 --> 00:04:15.489 
每次我看它Complication
s就已經更新了

00:04:15.556 --> 00:04:18.058 
顯示的是在那個時刻有意義的信息

00:04:22.796 --> 00:04:26.099 
現在
時間軸真的是一個非常強大的概念

00:04:26.166 --> 00:04:29.036 
保羅待會將會和我們談論這個話題

00:04:29.303 --> 00:04:31.572 
但是我想提及它帶給我們的
另一種形勢

00:04:31.905 --> 00:04:34.341 
就是Time Travel的特點

00:04:34.842 --> 00:04:38.679 
Time Travel是一個我們
在Watch OS2裏介紹的新特點

00:04:38.745 --> 00:04:41.782 
使您能夠正確地轉換錶冠

00:04:41.849 --> 00:04:44.985 
在鐘面您能夠看到您的Complic
ations會是什麼樣子

00:04:45.052 --> 00:04:46.620 
它展示了一天當中的不同時間

00:04:46.687 --> 00:04:49.656 
因此您可以提前去看看
下一場比賽什麼時候會開始

00:04:49.857 --> 00:04:54.127 
或者一個小時以前我參加了什麼會議
諸如此類

00:04:54.661 --> 00:04:59.032 
因此爲了看到手錶是怎麼和這個Com
plication工作的

00:04:59.333 --> 00:05:01.635 
這裏沒有多餘的工作
您不得不去

00:05:01.702 --> 00:05:03.003 
做到這一點

00:05:03.070 --> 00:05:05.239 
通過數據線的形式提供您的數據

00:05:05.873 --> 00:05:09.510 
我們可以免費
使Time Travel成真

00:05:11.078 --> 00:05:14.948 
着手行動吧因此您可以在任何時候開始
一個新的Xcode工程

00:05:15.015 --> 00:05:18.151 
或者把一個老工程轉換成
您可以選擇的Watch OS 2

00:05:19.453 --> 00:05:23.390 
來加一個Complication

00:05:24.725 --> 00:05:27.427 
您可以檢查下那個盒子
那將成爲Xcode的來源

00:05:27.494 --> 00:05:30.163 
以自動生成您需要的文本

00:05:30.230 --> 00:05:32.566 
和設置的東西
超級容易

00:05:33.700 --> 00:05:35.302 
您不需要做其他的事情

00:05:36.069 --> 00:05:41.141 
如果您瀏覽到您的Watchkit
App推廣的一般信息

00:05:45.612 --> 00:05:47.714 
♠您提供我們待會將會討論到的數據來
源課程

00:05:47.781 --> 00:05:51.418 
您也可以檢驗

00:05:51.552 --> 00:05:54.254 
那些您想支持的
Complications家族

00:05:54.321 --> 00:05:57.858 
這些Complications家族
到底是什麼？

00:05:59.726 --> 00:06:03.764 
在WatchOs上的Complic
ations 看起來是不同的方式

00:06:03.830 --> 00:06:06.433 
在不同的鐘面上
我們把它們

00:06:06.500 --> 00:06:07.935 
分爲了五種不同的家族

00:06:08.001 --> 00:06:10.337 
你們可以分別選擇是否支持每一個家族

00:06:10.404 --> 00:06:11.605 
因此

00:06:11.672 --> 00:06:13.907 
我想向你們演示
這些家族的樣子

00:06:15.676 --> 00:06:16.944 
這是模塊畫面

00:06:17.811 --> 00:06:20.714 
在它上面有兩個
Complications家族

00:06:24.718 --> 00:06:29.389 
小模塊化家庭給您一些
方形的小模塊

00:06:29.456 --> 00:06:34.061 
小Complications
大模塊化家族

00:06:34.261 --> 00:06:36.096 
就是在模塊中間的那個

00:06:36.163 --> 00:06:37.664 
可以展示清楚的效果和更多的數據

00:06:37.731 --> 00:06:40.234 
因此我們一直集中精力在這個例子上

00:06:43.103 --> 00:06:45.939 
很多類似模塊也
支持Complications

00:06:46.473 --> 00:06:49.209 
這些Complications
在實用家族

00:06:49.676 --> 00:06:54.615 
有一種適用各種類似小角落的Util
itarian Small模塊

00:06:54.681 --> 00:06:58.252 
還有一種Utilitarian
Large模板

00:06:58.552 --> 00:07:00.888 
能沿着底部展現整個區域

00:07:02.589 --> 00:07:07.561 
最後 在彩色模板有一個單獨的家族

00:07:07.628 --> 00:07:08.962 
我們稱它爲小環形

00:07:12.833 --> 00:07:14.101 
這是它用代碼的樣子

00:07:14.535 --> 00:07:18.405 
正如您所期待的那樣
這是一個詳細的介紹

00:07:22.009 --> 00:07:22.776 
好吧

00:07:22.843 --> 00:07:27.114 
因此當用戶在某一方面啓動您的Com
plications時

00:07:27.414 --> 00:07:29.683 
他們會選擇將它作爲一個特定的位置

00:07:29.750 --> 00:07:33.020 
只要那個Complication出
現那個位置就會被連接

00:07:33.086 --> 00:07:34.588 
而且會出現一個特別的家族

00:07:35.589 --> 00:07:38.725 
您應該被告知您正在爲這個
家族提供數據

00:07:39.092 --> 00:07:40.327 
那是因爲您需要這麼做

00:07:40.394 --> 00:07:42.829 
去決定如何把那些數據展現出來

00:07:43.130 --> 00:07:46.400 
並且這裏有一些方法可以爲每一個家族

00:07:46.500 --> 00:07:47.968 
展現您的數據

00:07:48.035 --> 00:07:49.803 
另外我想要向您展示

00:07:49.870 --> 00:07:51.738 
我們的設計師已經創造和收集到的樣板

00:07:52.272 --> 00:07:55.642 
對於小模塊化的
Complications家族

00:07:55.976 --> 00:07:57.411 
我們有這些樣板

00:07:58.745 --> 00:08:02.115 
在整個不同的模板裏

00:08:02.182 --> 00:08:06.353 
您可以有小文本、兩個不同排的文本、
一個圖像和文本

00:08:06.420 --> 00:08:09.790 
您可以做一個大的文本
或一個大的圖片

00:08:09.990 --> 00:08:13.393 
這些填充在底部附近的一個環裏

00:08:13.460 --> 00:08:16.530 
可以顯示錶格里一些事情的進展

00:08:16.597 --> 00:08:20.667 
這一個可以在0和1之間
變化的浮點數字

00:08:20.734 --> 00:08:23.504 
您可以把文本或圖像放在裏面

00:08:23.570 --> 00:08:25.706 
最後有一個模板可以讓您做類似的事情

00:08:25.772 --> 00:08:27.841 
顯示一項體育成績

00:08:30.477 --> 00:08:32.913 
Modular large也有
很多不同的方式

00:08:32.980 --> 00:08:35.315 
可以讓您佈局您的數據

00:08:35.381 --> 00:08:39.086 
有一個簡單的標準三行模板

00:08:39.553 --> 00:08:41.121 
可以使用一個可選圖像

00:08:41.822 --> 00:08:43.690 
您可以做一個列樣式模板

00:08:44.124 --> 00:08:46.994 
或兩個不同的列樣式模板

00:08:47.528 --> 00:08:50.330 
實際上 您可以做一個大的模板

00:08:50.397 --> 00:08:52.566 
這是一種適用於廚房定時或日期文本

00:08:52.633 --> 00:08:56.236 
以及許多其他
您可以用它做到的事情

00:08:58.272 --> 00:09:01.975 
實用的小模板大多數都是平的

00:09:02.176 --> 00:09:03.810 
並且在邊角處有一個可選的圖像

00:09:03.977 --> 00:09:05.479 
但是您也可以用一個大一些的圖像

00:09:05.546 --> 00:09:09.349 
您也可以用Utilitarian
Small做這個風格

00:09:10.784 --> 00:09:13.587 
Utilitarian Large
僅有一個模板

00:09:13.654 --> 00:09:16.390 
一個可選圖像
和一些相近的文本

00:09:18.425 --> 00:09:21.795 
最後 CircularSmall
的模板是相似的

00:09:21.862 --> 00:09:24.731 
對比ModularSmall的模板
有一些尺寸方面的不同

00:09:24.798 --> 00:09:28.769 
所以 您在Watch OS 2
進入模板

00:09:31.605 --> 00:09:34.374 
我要去看一下在代碼中的意思

00:09:34.608 --> 00:09:36.877 
所以讓我們縮小

00:09:37.945 --> 00:09:40.447 
我們的足球俱樂部的數字

00:09:40.514 --> 00:09:42.115 
Modular large模板

00:09:42.182 --> 00:09:43.717 
這有四塊

00:09:45.118 --> 00:09:47.621 
有一個標題圖像

00:09:49.690 --> 00:09:50.791 
您可以提供標題文本

00:09:52.793 --> 00:09:55.529 
然後兩行正文文本

00:09:58.765 --> 00:10:01.835 
您可能已經注意到了那有很多Comp
lication模板

00:10:01.902 --> 00:10:05.339 
所有這些對應子類

00:10:05.405 --> 00:10:08.742 
對於CLKComplication
模板這是所有父類

00:10:08.809 --> 00:10:12.246 
您可以選擇用哪一個

00:10:12.312 --> 00:10:14.314 
和如何填寫它的各種性能

00:10:14.381 --> 00:10:15.215 
所以這很簡單

00:10:15.782 --> 00:10:18.952 
因此這是CLK
Complication模板之一

00:10:19.019 --> 00:10:22.389 
Modular Large
標準模板有一點大

00:10:22.890 --> 00:10:25.492 
但是它能傳遞一個非常重要的

00:10:25.559 --> 00:10:27.361 
以名義命名的信息權

00:10:27.528 --> 00:10:29.162 
這個模板是爲

00:10:29.229 --> 00:10:32.666 
Modular Large
Complication家族創建的

00:10:32.900 --> 00:10:34.968 
當您被問到的時候
這個真的很關鍵

00:10:35.035 --> 00:10:38.005 
提供Complication
特定家族數據

00:10:38.305 --> 00:10:40.707 
您提供的模板符合這個家族

00:10:40.774 --> 00:10:43.110 
這是我們爲什麼已經把家族姓名

00:10:43.177 --> 00:10:44.044 
建立到了班級名裏

00:10:44.111 --> 00:10:45.879 
這裏是爲了消除這個困惑

00:10:46.513 --> 00:10:49.116 
看起來

00:10:49.183 --> 00:10:52.085 
像這樣出現在環形面顯然是不管用的

00:10:54.321 --> 00:10:56.690 
現在 您可能注意到了
這裏還有一些有點奇怪的地方

00:10:58.125 --> 00:11:01.562 
我們有一個圖像和三個文本的特性

00:11:01.628 --> 00:11:05.065 
但是它們不是代碼
裏的UI圖像和NS串

00:11:06.300 --> 00:11:10.571 
我們有圖像提供和文字提供業務

00:11:10.704 --> 00:11:12.072 
這裏正在發生什麼？

00:11:15.342 --> 00:11:16.610 
那麼讓我們進入下一個部分

00:11:16.677 --> 00:11:18.745 
您是如何提供文本和圖像的？

00:11:18.812 --> 00:11:20.714 
我想解釋下這些課程是爲了什麼

00:11:20.781 --> 00:11:21.982 
以及它們可以爲您做什麼

00:11:23.817 --> 00:11:24.952 
讓我們從圖像開始

00:11:27.454 --> 00:11:32.626 
這裏在彩色編輯屏幕裏是我們的
Complications

00:11:32.693 --> 00:11:35.963 
因此用戶能夠定製他們想要
看到的Complications

00:11:36.029 --> 00:11:37.931 
他們可以挑選
Complications

00:11:37.998 --> 00:11:38.932 
在那個課程裏

00:11:39.032 --> 00:11:41.502 
他們也可以定製界面的樣子和感覺

00:11:41.568 --> 00:11:43.704 
包括改變顏色

00:11:45.038 --> 00:11:49.309 
當您給您的
Complications提供圖像

00:11:49.543 --> 00:11:52.246 
這些圖像必須已參與同一個顏色主題

00:11:52.312 --> 00:11:54.114 
那是用戶已經選擇了的他們的界面

00:11:54.648 --> 00:11:58.218 
他們需要能夠正如
您看到的那樣改變顏色

00:12:00.087 --> 00:12:02.923 
因此這裏我們的足球服可以轉變成

00:12:02.990 --> 00:12:04.458 
任何用戶正在選擇的顏色

00:12:07.661 --> 00:12:12.533 
因此一個圖像提供程序是一類屬性排序

00:12:12.599 --> 00:12:14.668 
它能夠成功達到這樣的效果

00:12:15.502 --> 00:12:17.504 
所以您可以提供一個背景圖片

00:12:17.571 --> 00:12:19.239 
您也可以把它做爲模板圖像

00:12:19.306 --> 00:12:22.142 
一張圖像只允許包含阿爾法信息

00:12:22.242 --> 00:12:23.477 
而沒有屬於它自身的顏色

00:12:23.544 --> 00:12:25.913 
它可能是像素
也可以是任何您想要的顏色

00:12:25.979 --> 00:12:28.048 
但是我們將只關注阿爾法通道

00:12:29.383 --> 00:12:31.985 
它將會根據客戶選擇的顏色
作出相應的轉變

00:12:33.153 --> 00:12:34.621 
但是您可以稍微比這個多做一些

00:12:34.922 --> 00:12:37.491 
您可以選擇

00:12:38.025 --> 00:12:40.861 
提供一個背景圖像和一個前景圖
這些圖像將被放在彼此的頂部

00:12:40.928 --> 00:12:42.696 
背景圖將會根據界面的顏色而改變顏色

00:12:42.763 --> 00:12:47.434 
前景圖將被浮於背景圖上

00:12:48.368 --> 00:12:50.871 
您可以在您的圖片上獲得更多的細節

00:12:51.104 --> 00:12:53.240 
您也可以選擇
把您的前景圖變黑

00:12:54.808 --> 00:12:56.009 
讓我們看一看這樣子的代碼

00:12:56.610 --> 00:12:58.011 
您給我們背景圖

00:12:58.478 --> 00:13:00.447 
您給我們一張可選擇的前景圖

00:13:03.150 --> 00:13:06.887 
您能夠選擇您背景圖的顏色

00:13:06.954 --> 00:13:09.523 
對於大部分將要決定的顏色

00:13:09.756 --> 00:13:11.491 
那些用戶已經選擇好了

00:13:11.892 --> 00:13:14.528 
因此背景圖代表了

00:13:14.595 --> 00:13:17.231 
您想要您的背景圖是什麼顏色
如果您能夠選擇的話

00:13:17.631 --> 00:13:19.933 
另外還有一些背景將會被任命

00:13:20.267 --> 00:13:21.969 
但是隻要它們出現在

00:13:22.035 --> 00:13:24.972 
被用戶選擇了顏色的界面上
您的選擇就是無效的

00:13:25.038 --> 00:13:27.407 
因此在這兒提供的顏色
僅僅是一個選擇的參考

00:13:30.511 --> 00:13:32.779 
好吧 這就是圖像提供者

00:13:32.846 --> 00:13:34.381 
那麼現在文本提供者又是什麼呢？

00:13:37.251 --> 00:13:38.051 
這真是酷

00:13:38.118 --> 00:13:40.287 
能告訴您一些關於它們的信息
我真的很激動

00:13:40.354 --> 00:13:44.024 
當我們開始構建
Complications時

00:13:44.091 --> 00:13:46.760 
在Watch OS 1裏

00:13:46.827 --> 00:13:50.364 
我們挑戰了大部分

00:13:50.430 --> 00:13:55.035 
歸咎於Complications
的微不足道的事實

00:13:55.102 --> 00:13:57.604 
在其它UI中

00:13:57.671 --> 00:13:59.273 
您經常爲您所有的平臺創建

00:13:59.339 --> 00:14:04.077 
它們當中的一些甚至小到只有44像素
我們正試圖

00:14:04.144 --> 00:14:07.414 
找尋可以用到這個如此小的空間上的
合適的信息

00:14:07.714 --> 00:14:10.250 
但是在沒有把您的文本縮小的情況下

00:14:10.317 --> 00:14:11.351 
它是很有挑戰性的

00:14:11.852 --> 00:14:16.523 
舉一個很好的例子
關於文本提供者的主意

00:14:16.590 --> 00:14:18.792 
因爲空間非常有限

00:14:22.029 --> 00:14:24.598 
我們想借用一些我們已經做過的工作

00:14:24.665 --> 00:14:28.101 
來解決如何在小的空間裏
設計出一個合適的文本的問題

00:14:28.635 --> 00:14:31.738 
因此我們引薦文本提供者做爲
你們的一種思路

00:14:31.805 --> 00:14:34.208 
以此來向我們聲明您的目的

00:14:34.274 --> 00:14:37.411 
而不是總是給我們一個格式化字符串

00:14:38.178 --> 00:14:40.814 
然後我們會處理格式細節

00:14:40.881 --> 00:14:42.649 
爲您找出合適的字符串

00:14:43.684 --> 00:14:46.920 
拿日期格式來舉例說明

00:14:48.589 --> 00:14:51.625 
這裏有一個CLK日期格式
提供商爲您做的文本

00:14:51.692 --> 00:14:53.260 
我想要向您展示什麼是對您有用的

00:14:53.961 --> 00:14:56.196 
假設您想要在您的Complications裏

00:14:56.263 --> 00:14:59.366 
在一行內設置時間是：
星期三 9月23日

00:15:01.335 --> 00:15:03.871 
現在
空間非常拮据

00:15:03.937 --> 00:15:07.341 
但又有如此多的內容
在您大多數的文本里

00:15:07.508 --> 00:15:12.746 
您顯然不會喜歡看到類似這種

00:15:13.080 --> 00:15:15.449 
我們已經丟失了這一類的大批信息

00:15:16.116 --> 00:15:18.685 
這比截取更好

00:15:18.752 --> 00:15:22.923 
如果我們能夠轉而
依靠持續增長的字符串

00:15:22.990 --> 00:15:25.125 
這一類仍然在增長的字符串

00:15:25.492 --> 00:15:28.562 
例如我們可以開始
縮短一些字符串

00:15:29.863 --> 00:15:31.398 
您可以縮短更多的字符串

00:15:32.199 --> 00:15:35.135 
如果那樣做仍然不奏效
我們甚至可以開始丟棄一些字符串

00:15:35.202 --> 00:15:36.837 
而不是截取一些

00:15:37.638 --> 00:15:41.909 
我們更樂意看到9月23日
而不是星期三點點點

00:15:42.409 --> 00:15:47.381 
最後 爲了把日期顯示出來
我們可能只有更少的空間

00:15:47.447 --> 00:15:49.583 
來應對我們突然放下的內容

00:15:50.417 --> 00:15:54.121 
這是CLK日期文本編輯器
可以爲您做的事情

00:15:55.189 --> 00:15:57.724 
您有一個日期想要顯示

00:15:58.192 --> 00:16:00.928 
或者您有一個單位想要完美地展示

00:16:01.795 --> 00:16:04.631 
正如這個例子當中的星期幾、月和日

00:16:06.533 --> 00:16:09.970 
您創造了一個文本體編輯器
從一些碎片中

00:16:10.637 --> 00:16:12.773 
那些文本編輯器

00:16:13.273 --> 00:16:15.075 
可以被粘貼到這些樣本當中

00:16:15.275 --> 00:16:18.879 
並且使這些樣本根據不同的內容
看上去也不一樣

00:16:19.112 --> 00:16:20.214 
因此這裏我們要說的是

00:16:20.981 --> 00:16:25.419 
在Modular Large Complication裏
顯示一個他們當中比較長的日期

00:16:27.454 --> 00:16:29.990 
這裏有相同的文本編輯器

00:16:30.057 --> 00:16:31.758 
製造了非常相似的代碼

00:16:32.492 --> 00:16:37.130 
顯示了在進一步約束空間下
不同級別的內容

00:16:37.598 --> 00:16:41.335 
另外這兒還有相同的文本編輯器
編輯出日期

00:16:41.401 --> 00:16:43.837 
在這些Circular Small
Complications裏

00:16:44.137 --> 00:16:46.507 
沒有任何地方都有的截面字符串

00:16:46.573 --> 00:16:50.210 
沒有不得不做的工作
在您現在看到的代碼範圍之外

00:16:51.712 --> 00:16:53.480 
就是文本編輯器

00:16:54.314 --> 00:16:56.016 
同樣也有其他類型的文本編輯器

00:16:56.450 --> 00:17:00.554 
您很有可能打不開
編輯時間要用到的文本編輯器

00:17:00.621 --> 00:17:04.391 
會允許您隨意編輯文本

00:17:06.792 --> 00:17:09.463 
但是它比NSString更好

00:17:09.530 --> 00:17:11.365 
因爲除了能編輯出您想看到的內容

00:17:11.565 --> 00:17:14.434 
您也能夠編輯出一個比較小的版本

00:17:14.501 --> 00:17:17.604 
在截取出理想的字符串之前
我們通常會退一步選擇編輯較小的文本

00:17:19.439 --> 00:17:20.674 
這裏有一個時間編輯器

00:17:20.741 --> 00:17:23.010 
時間格式很好

00:17:23.143 --> 00:17:25.612 
您獲得了很好的小寫的代碼
與系統的其他部件都相匹配

00:17:25.679 --> 00:17:27.214 
如果沒有足夠的適合的空間

00:17:27.281 --> 00:17:29.082 
您會丟棄AM/PM

00:17:29.683 --> 00:17:32.986 
正如您在日出/日落
Complication裏看到的

00:17:33.053 --> 00:17:35.789 
正在底部使用的這類文檔編輯器

00:17:38.825 --> 00:17:41.762 
也有一種時間間隔文本編輯器

00:17:42.229 --> 00:17:45.299 
這類編輯器對時間格式的文本很好

00:17:45.399 --> 00:17:47.467 
您在日期Complication
會用到它

00:17:47.701 --> 00:17:50.070 
它也有一些很不錯的格式特點

00:17:50.637 --> 00:17:54.508 
如果在第一天早上
它看起來是這個樣子

00:17:54.575 --> 00:17:56.243 
第二天下午的話會是這個樣子

00:17:56.710 --> 00:17:59.313 
如果兩天都是下午
那就很靈活

00:17:59.379 --> 00:18:01.081 
丟掉多餘的AM/PM
符號

00:18:01.148 --> 00:18:03.016 
是爲了使效果看起來更好

00:18:03.684 --> 00:18:06.620 
在一個有限的版本里它同樣可能不好做

00:18:06.687 --> 00:18:08.856 
如果這種效果不合適

00:18:09.456 --> 00:18:12.960 
這種小版本的編輯器就是有用的
我們鼓勵你們用這個

00:18:13.961 --> 00:18:17.664 
還有一點我想告訴大家

00:18:18.632 --> 00:18:22.002 
在我說出它之前
讓我向您演示它解決的問題

00:18:22.603 --> 00:18:26.106 
這裏您看到我們
數字化的月亮相位

00:18:26.173 --> 00:18:28.008 
Modular Large
Complication

00:18:30.177 --> 00:18:32.980 
在這個相位底部第三行

00:18:33.046 --> 00:18:35.983 
在月亮相位Complication
那裏它告訴我們時間的總數

00:18:36.049 --> 00:18:39.186 
是截止到月落時 時和分的條款

00:18:39.386 --> 00:18:41.488 
因此今天月落在2:19

00:18:41.955 --> 00:18:43.724 
在三小時一分鐘之前

00:18:44.458 --> 00:18:46.126 
從11:18開始

00:18:46.593 --> 00:18:50.564 
這個字符串在11:19時
隨着時間記號的改變

00:18:50.631 --> 00:18:54.168 
顯示了3小時11:20時的內容
也顯示了2小時59分的內容

00:18:54.601 --> 00:18:55.269 
還有更多

00:18:57.037 --> 00:18:59.473 
現在 想像一下
如果您正在創造一個時間軸

00:19:00.440 --> 00:19:02.376 
去放置這個Complication

00:19:03.777 --> 00:19:06.547 
您需要提供一個新的模板

00:19:06.613 --> 00:19:08.348 
對一整天的每一分鐘

00:19:09.216 --> 00:19:10.450 
就需要很多個模板

00:19:11.852 --> 00:19:13.220 
也有可能更糟糕

00:19:13.520 --> 00:19:16.356 
因爲月亮相位
Complication記號

00:19:16.423 --> 00:19:17.257 
是隨着分鐘記錄的

00:19:17.758 --> 00:19:20.460 
如果時間軸的記號隨着秒數變化而記錄
會怎麼樣呢？

00:19:20.861 --> 00:19:22.896 
想象下得需要多少模板啊

00:19:22.963 --> 00:19:25.465 
這很可能遠遠超過我們
合理的貯藏

00:19:25.933 --> 00:19:27.734 
造成難以置信的浪費

00:19:28.202 --> 00:19:31.238 
因爲這些字符串

00:19:31.305 --> 00:19:33.073 
是可以從兩條信息裏推導出的

00:19:33.574 --> 00:19:36.777 
即您正在裁剪的日期和您正在用的日期

00:19:37.811 --> 00:19:39.413 
我們知道現在的日期

00:19:39.513 --> 00:19:40.547 
這就是我們正在做的

00:19:40.614 --> 00:19:41.715 
我們的手錶

00:19:42.049 --> 00:19:45.519 
所以我們想要給您
一種可以製造這種字符串的方法

00:19:45.719 --> 00:19:49.456 
它不用在您的時間軸
放置大量

00:19:49.723 --> 00:19:50.958 
多餘的信息

00:19:51.291 --> 00:19:53.627 
這就是相應的時間編輯器可以做的

00:19:56.396 --> 00:19:58.031 
這正是
我們在嘗試它代碼時候的樣子

00:19:58.098 --> 00:20:00.934 
去製造第三條您在這裏看到的文本線

00:20:01.101 --> 00:20:03.570 
您將會從日落裏獲得時間

00:20:04.771 --> 00:20:06.907 
我們將會
選擇我們想要展示的單元

00:20:06.974 --> 00:20:09.176 
實際上我將會在下一個屏幕裏
顯示很多不同的

00:20:09.243 --> 00:20:11.311 
您可以利用的單元

00:20:12.513 --> 00:20:13.914 
我們將選擇一種風格
另外 再一次

00:20:13.981 --> 00:20:15.249 
我將會向您展示可能的風格

00:20:15.315 --> 00:20:17.451 
現在您看到的是自然風格

00:20:19.753 --> 00:20:21.755 
您可以做一個這些元素的

00:20:21.822 --> 00:20:22.956 
相應的時間編輯器

00:20:24.258 --> 00:20:25.893 
然後您設置下文本編輯器

00:20:26.159 --> 00:20:28.295 
把您正文的文本編輯器
作爲您的模板

00:20:29.463 --> 00:20:31.164 
鐘面在做其它工作的時候

00:20:31.231 --> 00:20:34.468 
它總是會展示相對的日期到日期

00:20:34.535 --> 00:20:37.337 
那是您在無需爲
您做進一步工作的每一刻

00:20:37.404 --> 00:20:38.238 
給予我們的

00:20:40.340 --> 00:20:42.376 
這就是一些我們可以提供的風格

00:20:42.442 --> 00:20:44.545 
正如您看到的
如果看着自然風格和偏置式風格

00:20:44.611 --> 00:20:49.883 
您可以得到一個細分

00:20:49.950 --> 00:20:52.419 
相對日期或者非常課程相對日期

00:20:52.486 --> 00:20:54.254 
這取決於您想要看到的日期

00:20:54.621 --> 00:20:57.624 
取決您想要展示
多久前的日期

00:20:57.991 --> 00:21:01.261 
我們顯示星期幾、時間、月、年等等

00:21:01.762 --> 00:21:03.030 
所有的方法分秒就可以做到

00:21:04.731 --> 00:21:07.367 
好吧
這就是文本編輯器和圖像編輯器

00:21:07.868 --> 00:21:09.870 
我要總結下它們是怎麼用的

00:21:09.937 --> 00:21:11.471 
您把您的內容給我們

00:21:12.506 --> 00:21:15.576 
您從很多個可能模版當中

00:21:15.642 --> 00:21:17.344 
選擇一個

00:21:17.411 --> 00:21:19.413 
與您被問道的
Complication家族

00:21:19.479 --> 00:21:20.247 
相匹配

00:21:20.314 --> 00:21:21.215 
並提供數據給我們

00:21:22.816 --> 00:21:25.152 
然後您放置那些

00:21:25.686 --> 00:21:27.054 
圖像編輯器和文本編輯器

00:21:29.289 --> 00:21:31.091 
然後您以時間軸的形式

00:21:31.325 --> 00:21:35.095 
將那些完整的字符串傳遞給我們

00:21:35.162 --> 00:21:37.698 
爲了談到更多如何形成時間軸的方面

00:21:37.764 --> 00:21:38.632 
我想要邀請保羅

00:21:41.134 --> 00:21:41.835 
這就是保羅

00:21:43.437 --> 00:21:44.104 
好極了！

00:21:45.506 --> 00:21:48.642 
掌聲

00:21:48.942 --> 00:21:49.810 
大家好

00:21:50.444 --> 00:21:52.813 
像伊莉莎提到的
爲了您的Complication

00:21:52.880 --> 00:21:54.982 
我們將會以時間軸的形式
聚集我們的數據

00:21:55.282 --> 00:21:56.617 
時間軸有益於兩件事

00:21:57.117 --> 00:22:00.287 
嶄新的Time Travel特色

00:22:00.354 --> 00:22:02.422 
和我們將向用戶現時呈現的內容

00:22:02.489 --> 00:22:03.690 
毫無延遲的腕錶功能

00:22:05.058 --> 00:22:08.128 
讓我們看看關於如何考慮時間軸和
Complications

00:22:08.929 --> 00:22:11.164 
我們現在開始通過在這創造一個天氣
Complication

00:22:11.231 --> 00:22:12.032 
在左下角 57度

00:22:12.466 --> 00:22:15.302 
因爲現在手錶顯示10:00AM

00:22:15.636 --> 00:22:17.604 
我們的氣象員說

00:22:17.671 --> 00:22:20.641 
在這個地方
外面溫度是57度

00:22:20.908 --> 00:22:23.610 
事實上 我們有今天一直到下午七點的

00:22:23.677 --> 00:22:25.512 
這個地方的天氣預報

00:22:26.013 --> 00:22:27.047 
可以利用

00:22:28.415 --> 00:22:31.818 
對於時間軸我們並沒有描述一個範圍
我們結合實際數據

00:22:31.885 --> 00:22:33.220 
我們想要展現時間上的一個點

00:22:33.754 --> 00:22:34.855 
因此讓我們滑動到那邊

00:22:35.255 --> 00:22:37.624 
隨着一天時鐘的前進

00:22:38.058 --> 00:22:40.160 
我們將會展示您提供到鐘面時間軸上的

00:22:40.227 --> 00:22:41.895 
最近的數據

00:22:42.496 --> 00:22:46.400 
因此當過了11AM
我們將會把天氣預報更新到55度

00:22:47.634 --> 00:22:50.204 
隨着時間慢慢接近中午11:59

00:22:50.270 --> 00:22:52.773 
接近59秒
天氣仍然是55度

00:22:54.341 --> 00:22:56.076 
一旦時間到了12點我們就會更新模板

00:22:56.610 --> 00:22:59.112 
這個和Time Travel工作
的特色是相似的

00:22:59.680 --> 00:23:02.583 
由於可以爲用戶導航一整天的內容
我們將會展示在您的時間軸上的

00:23:02.649 --> 00:23:04.785 
最近的節點的數據

00:23:05.652 --> 00:23:08.989 
因此當我們過了1:00PM
我們將會把更新溫度到54度

00:23:10.824 --> 00:23:13.427 
其它Complication是一些
容易理解的例子

00:23:13.493 --> 00:23:14.795 
因爲您的數據完美地匹配了

00:23:15.095 --> 00:23:16.964 
在時間軸上的流暢時間

00:23:17.865 --> 00:23:19.233 
讓我們看一些比較複雜的內容

00:23:19.299 --> 00:23:21.368 
通過在這建立日期
Complication

00:23:22.202 --> 00:23:23.971 
如果您是幸運的
您的日期

00:23:24.037 --> 00:23:24.838 
會有很多間隔

00:23:26.073 --> 00:23:27.441 
今天我去吃了午餐

00:23:27.608 --> 00:23:28.842 
接着我將去理髮

00:23:29.409 --> 00:23:31.011 
然後接下來我看到時間合適
我就會去

00:23:31.078 --> 00:23:32.212 
跟我的朋友看一場電影

00:23:33.914 --> 00:23:35.315 
我們可以心無旁騖地做這些事情

00:23:35.682 --> 00:23:38.252 
我們接通
我們想要展現的這些事件模板

00:23:38.318 --> 00:23:39.353 
來讓它們開始

00:23:39.419 --> 00:23:40.954 
並讓它們清楚事件結束的時間

00:23:42.422 --> 00:23:44.024 
讓我們看看在實踐中
這是如何進行的

00:23:44.625 --> 00:23:46.627 
今天中午的時候
我們會看到我們吃了午餐

00:23:47.528 --> 00:23:49.363 
而一旦午餐結束
在1:00PM

00:23:49.429 --> 00:23:51.465 
我們就看不到腕錶上顯示
吃午餐的內容了

00:23:51.999 --> 00:23:53.400 
這真是個糟糕的用戶體驗

00:23:54.568 --> 00:23:56.703 
更糟糕的是儘管越來越接近
4:00PM

00:23:56.770 --> 00:23:58.939 
我卻不知道

00:23:59.006 --> 00:24:00.107 
我需要開車去理髮

00:24:00.774 --> 00:24:02.943 
您從來不想
刪除那個爲您做頭髮的人

00:24:04.278 --> 00:24:06.647 
現在太晚了 我要去燙頭髮

00:24:06.713 --> 00:24:07.915 
手錶也不好好工作了

00:24:09.583 --> 00:24:10.918 
讓我們這樣設置

00:24:11.485 --> 00:24:12.686 
第一個錯誤是

00:24:12.920 --> 00:24:14.221 
假設我們記錄了那些

00:24:14.721 --> 00:24:16.657 
在時間軸上不用的時間框

00:24:17.157 --> 00:24:18.358 
所以讓我們丟掉那些時間框

00:24:19.526 --> 00:24:21.428 
顯示事件時不再有用

00:24:21.495 --> 00:24:23.330 
在一個日期
Complication裏

00:24:23.897 --> 00:24:26.700 
我們本應該把模板放置在
前一個事件結束的時候

00:24:26.934 --> 00:24:29.436 
這樣您就有充足的時間
去設置您的下一個事件

00:24:32.773 --> 00:24:34.274 
事實上
發生在這兒的第一件事

00:24:34.341 --> 00:24:35.943 
並沒有前一事件
因此它可能是有用的

00:24:36.109 --> 00:24:37.711 
爲了獲得充分的提醒

00:24:37.778 --> 00:24:38.846 
您在午夜標記出它

00:24:38.912 --> 00:24:39.980 
當您在早上醒來的時候

00:24:40.047 --> 00:24:43.483 
我們應該讓我們的用戶知道
在接下來這一天

00:24:43.550 --> 00:24:44.918 
他們沒有什麼事情可擔心

00:24:44.985 --> 00:24:46.486 
用我們的提示不會再有問題

00:24:47.788 --> 00:24:48.755 
這是如何工作的？

00:24:49.523 --> 00:24:51.525 
中午的時候我們像以前一樣
我們知道要吃午餐

00:24:51.992 --> 00:24:54.127 
而一旦午餐結束
我們有充足的提示時間

00:24:54.194 --> 00:24:55.596 
來提示我們需要去理髮

00:24:56.496 --> 00:24:57.464 
我們將會和朋友見面

00:24:57.965 --> 00:24:59.299 
因爲我們沒有錯過任何一件事

00:24:59.933 --> 00:25:01.235 
當我們看完一場電影的時候

00:25:01.301 --> 00:25:03.303 
我們可以回家
並且知道我們沒有錯過任何事情

00:25:05.472 --> 00:25:06.773 
因此您怎麼讓您的數據

00:25:06.840 --> 00:25:09.176 
成爲您的代碼

00:25:09.810 --> 00:25:11.912 
您將用到Complication
時間軸入門

00:25:12.546 --> 00:25:14.715 
伊莉莎早先時候描述了生成模板

00:25:14.781 --> 00:25:16.450 
要用到本文編輯器和圖片編輯器

00:25:16.884 --> 00:25:19.286 
以及我們需要
用一個NSState連接的內容

00:25:20.153 --> 00:25:21.522 
我們將會
把目標填充到

00:25:21.588 --> 00:25:23.857 
Conciliation時間軸
的入口

00:25:24.157 --> 00:25:26.560 
當您遞交信息到鐘面的時候
我們會校對日期

00:25:27.060 --> 00:25:28.662 
並且在時間軸上做下筆記
從而知道

00:25:28.729 --> 00:25:30.864 
當時間到了那個點的時候
要去展示相應的模板

00:25:32.266 --> 00:25:33.800 
您可以看到目標做成代碼的樣子

00:25:33.867 --> 00:25:35.202 
用時間屬性和

00:25:35.269 --> 00:25:37.171 
Complication模板屬性

00:25:39.773 --> 00:25:42.109 
那麼您實際上是怎麼
和我們交流這些數據的呢？

00:25:42.609 --> 00:25:44.444 
在您的工程裏
您將會有一個目標

00:25:44.511 --> 00:25:46.914 
即實現CLK
Complication數據源協議

00:25:48.015 --> 00:25:49.316 
這個目標

00:25:49.383 --> 00:25:53.320 
被註解在您的Xcode
WatchKit擴展目標設定上

00:25:53.387 --> 00:25:55.489 
在您設置您的工程的時候
正如伊莉莎向您展示的

00:25:56.089 --> 00:25:58.025 
您將會在您的目標上
獲得成串的指令

00:25:58.892 --> 00:26:00.827 
他們通常是每個
Complication

00:26:00.894 --> 00:26:03.530 
另外我們會給您一個
CLKComplication目標

00:26:03.597 --> 00:26:05.499 
那個目標包含一個
您想要切換到的家族屬性

00:26:05.832 --> 00:26:07.067 
這點上您得決定這個

00:26:07.134 --> 00:26:09.736 
是Modular large嗎？
我應該用哪一個模板？

00:26:09.803 --> 00:26:11.071 
是Modular Small嗎？

00:26:11.138 --> 00:26:12.973 
哪一個文本編輯器
需要和我選擇的這個模板相匹配？

00:26:14.675 --> 00:26:16.977 
另外除了用Complication

00:26:17.044 --> 00:26:18.712 
這個您感興趣的
提供內容外

00:26:18.779 --> 00:26:20.480 
我們也會給您一個處理器

00:26:20.914 --> 00:26:23.116 
您將會用這個處理器給我們
提供要求的數據

00:26:23.183 --> 00:26:24.384 
讓我們知道您在做運行

00:26:24.852 --> 00:26:26.220 
這是非常重要的

00:26:26.286 --> 00:26:28.722 
因爲您會想有機會更新您的背景內容

00:26:29.022 --> 00:26:30.224 
您想要知道什麼時候做運行

00:26:32.860 --> 00:26:34.394 
因此讓我們開始建設我們的時間軸

00:26:34.795 --> 00:26:36.630 
您可以看到鐘面在您的左面

00:26:36.697 --> 00:26:37.965 
您的延展在右邊

00:26:38.031 --> 00:26:40.000 
我們想要通過按鈕建立時間軸

00:26:42.736 --> 00:26:43.937 
在您的延展內容裏

00:26:44.004 --> 00:26:46.306 
您可以看到您的
Complication控制對象

00:26:46.707 --> 00:26:49.610 
現在 這是Xcode爲您
創造的默認對象

00:26:49.877 --> 00:26:52.346 
去執行Complication
數據源協議

00:26:52.880 --> 00:26:54.781 
這是我們將要溝通的對象

00:26:58.185 --> 00:27:00.487 
因此當我們開始的時候
我們會詢問您

00:27:00.554 --> 00:27:03.624 
現在應該展示哪一個時間軸入口

00:27:04.691 --> 00:27:07.661 
您需要打包好一個時間軸
然後通過電纜和處理器

00:27:07.728 --> 00:27:08.996 
發送給我們

00:27:09.329 --> 00:27:11.565 
然後我們就會
把它添加到正確的時間軸

00:27:12.599 --> 00:27:14.935 
在所有我們詢問的問題列表裏
有個非常重要的提示

00:27:15.602 --> 00:27:17.037 
我們提出下一個問題是基於

00:27:17.104 --> 00:27:18.939 
上一個問題您已經提供給我們的信息

00:27:19.173 --> 00:27:21.375 
因此
我們將逐漸把時間軸建立起來

00:27:21.875 --> 00:27:23.477 
我們需要非常精確的數據

00:27:23.877 --> 00:27:26.480 
您不要盲目地
標註當前的NS日期爲這一記錄

00:27:26.914 --> 00:27:30.150 
但如果您需要10:00AM
而預先數據是10:30AM

00:27:30.217 --> 00:27:32.019 
您就應該標註這個
Complication

00:27:32.085 --> 00:27:33.387 
時間軸記錄爲10:00AM

00:27:35.355 --> 00:27:36.456 
因此這個功能

00:27:36.523 --> 00:27:39.660 
我們將會獲取目前的時間軸記錄
爲Complication

00:27:40.594 --> 00:27:43.230 
再次強調 我們將給您一個
CLKComplication

00:27:43.297 --> 00:27:45.499 
這裏有一個家庭屬性您應該切換到

00:27:45.566 --> 00:27:47.801 
決定哪個模板、哪個文本和圖像編輯器
是您想要的

00:27:49.436 --> 00:27:51.238 
並提供一個需要時間軸記錄的處理器

00:27:51.305 --> 00:27:54.641 
當您完成了複查您應該做好標記

00:27:55.475 --> 00:27:57.578 
現在我們有您的目前記錄

00:27:57.644 --> 00:27:58.912 
我們需要更新您的時間軸

00:27:58.979 --> 00:28:00.514 
爲未來和過去

00:28:00.581 --> 00:28:02.349 
我們開始看看未來吧
過了特定的一天後

00:28:03.317 --> 00:28:07.721 
我們會一直問您的時間軸裏有什麼

00:28:08.188 --> 00:28:09.890 
這一天具體是哪天

00:28:09.957 --> 00:28:11.592 
取決於您之前交給我們的數碼

00:28:12.025 --> 00:28:13.560 
而這些數碼還在
我們的高速緩存中

00:28:14.194 --> 00:28:17.798 
所以我們會把這個日期告訴你們
然後你們

00:28:17.865 --> 00:28:19.833 
要整理好過了這個日期後的

00:28:19.900 --> 00:28:22.202 
一堆CLKComplication
時間軸的數據

00:28:22.603 --> 00:28:26.974 
有一個好方法是把每一天的數據整理好

00:28:27.040 --> 00:28:28.976 
當您把這些數據交給我們時
我們會把它們

00:28:29.042 --> 00:28:30.878 
加入您的時間軸
而如果我們覺得

00:28:30.944 --> 00:28:32.779 
需要存儲更多的數據
我們會再通知您

00:28:33.313 --> 00:28:36.283 
如果您有更多的數據
就能輕鬆愉快地把它們交給我們

00:28:38.252 --> 00:28:39.520 
如果我們一直跟您要數據

00:28:39.586 --> 00:28:41.154 
可是您已經沒有數據可提供了

00:28:41.522 --> 00:28:45.058 
您可以交一個空的NSArray或無

00:28:45.225 --> 00:28:47.094 
我們就知道了

00:28:48.161 --> 00:28:51.965 
隨着時間的流逝
您的數據會逐漸過時

00:28:52.032 --> 00:28:55.402 
所以爲了補充我們的數據
我們在未來可能得再向您要數據

00:28:57.704 --> 00:28:58.972 
而這個未來就在

00:28:59.039 --> 00:29:01.375 
我們需要爲Complication
獲得時間軸條目的時候

00:29:02.009 --> 00:29:03.977 
我們會把令我們感到好奇的
Complication交給您

00:29:04.044 --> 00:29:05.479 
所以您可以看看它的家族性能

00:29:07.314 --> 00:29:10.317 
當然 之後我們會給您一個日期
但這個日期當天並不被包括在內

00:29:10.584 --> 00:29:14.288 
您就要整理這個日期之後的
時間軸行列

00:29:16.123 --> 00:29:18.091 
爲了確保我們不會有過多的數據

00:29:18.158 --> 00:29:20.627 
我們會給您一個指定的數量

00:29:21.195 --> 00:29:25.933 
所以
不要放超出數量的數據進去

00:29:26.433 --> 00:29:29.369 
如果您放了 我們會消除它們
並且我們不能保證不會更改數據

00:29:29.436 --> 00:29:31.271 
而您也不會想了解發生了什麼事

00:29:32.573 --> 00:29:34.875 
當然
負責這些數據的人也不會想了解

00:29:36.677 --> 00:29:41.415 
我們有個日期功能
它能把舊的數據分出來

00:29:43.717 --> 00:29:46.486 
而且根據您負責的
Complication種類

00:29:46.553 --> 00:29:48.422 
Time Travel可能會不同

00:29:48.922 --> 00:29:51.458 
比如說預計未來的
Complication

00:29:51.525 --> 00:29:53.093 
不能翻看過去的資料

00:29:53.360 --> 00:29:55.762 
再比如由於我們還沒把股票
Complication

00:29:56.063 --> 00:29:57.698 
給完美地完成

00:29:57.764 --> 00:29:59.066 
而只能查閱已有資料裏的股票

00:29:59.366 --> 00:30:02.102 
因此
我們會要求您設定好您支持的方向

00:30:03.103 --> 00:30:05.873 
比如天氣預報
Complication

00:30:05.939 --> 00:30:07.207 
我們會說我們只支持未來

00:30:07.741 --> 00:30:09.743 
我們的時間軸只看未來

00:30:10.043 --> 00:30:11.545 
如果那名用戶查看過去的資料

00:30:11.612 --> 00:30:12.779 
我們就會把您的資料暗化

00:30:12.846 --> 00:30:14.882 
好讓大家知道
那裏沒東西可看

00:30:15.282 --> 00:30:17.017 
相對的
股票Complication

00:30:17.117 --> 00:30:18.585 
可以說您只支持過去

00:30:18.652 --> 00:30:20.187 
我們就會把您未來的資料暗化

00:30:22.256 --> 00:30:24.858 
您可能不想使用
Time Travel

00:30:24.925 --> 00:30:27.294 
但又還是想把資料放進鐘面上

00:30:27.995 --> 00:30:30.430 
在這種情況下
您可以不提供資料

00:30:31.265 --> 00:30:32.733 
我們還是會把您的資料呈現出來

00:30:32.833 --> 00:30:34.935 
但是一旦進入Time Travel
我們就會把它們暗化

00:30:35.235 --> 00:30:36.970 
您或許

00:30:37.037 --> 00:30:38.405 
知道一些想在未來呈現的信息

00:30:38.472 --> 00:30:40.874 
我們可能向您要求對未來的諮詢

00:30:40.941 --> 00:30:43.710 
即便您不改Time Travel

00:30:44.278 --> 00:30:47.247 
我們也絕對不會向您要求對過去的諮詢
因爲時間不會倒流

00:30:49.850 --> 00:30:51.919 
而如果您想利用
Time Travel

00:30:51.985 --> 00:30:54.388 
到過去和未來的話

00:30:56.356 --> 00:30:57.925 
要索取一個功能

00:30:57.991 --> 00:31:02.062 
就是爲Complication獲取
支持Time Travel的指令

00:31:02.930 --> 00:31:06.667 
把這個Complication
和可以克服這些指令的處理器

00:31:08.802 --> 00:31:09.703 
告訴我們

00:31:09.770 --> 00:31:12.105 
您支持的是過去還是未來

00:31:12.439 --> 00:31:14.575 
不是唯一需要Time Travel
Complication處理的事

00:31:14.641 --> 00:31:16.944 
比如說我們的天氣預報
Complication

00:31:17.010 --> 00:31:18.245 
只能預報到7點的天氣

00:31:18.312 --> 00:31:20.013 
但Time Travel
可以做到更好

00:31:20.414 --> 00:31:21.715 
那我們來看看會發生什麼事吧

00:31:22.749 --> 00:31:25.085 
我們Time Travel
到4點時還有數據

00:31:25.152 --> 00:31:26.820 
所有的Complications
都在更新

00:31:27.521 --> 00:31:29.756 
但一到7:09
就是剛過7點

00:31:30.257 --> 00:31:32.593 
我們就不希望用戶認爲
我們的溫度數據還是有效的

00:31:32.659 --> 00:31:35.596 
所以我們要暗化它們
並拿出您的Complication

00:31:37.731 --> 00:31:39.299 
而我們知道暗化的方法就是

00:31:39.366 --> 00:31:41.401 
在您時間軸的尾端或前面

00:31:41.468 --> 00:31:43.003 
向您發問

00:31:43.070 --> 00:31:44.505 
同時這又取決於您支持的方向

00:31:45.672 --> 00:31:48.075 
如果您支持未來
我們會在建立時問您

00:31:48.141 --> 00:31:49.576 
是否支持未來

00:31:49.643 --> 00:31:51.645 
那您就得返還我們NS日期

00:31:53.280 --> 00:31:55.549 
相對的如果您是支持過去的
Time Travel

00:31:55.616 --> 00:31:57.684 
您可以提供我們另一個NS日期

00:32:01.455 --> 00:32:02.689 
而我們也會對應地去調整

00:32:04.057 --> 00:32:07.661 
而我們用來瞭解該用
Time Travel走多遠的功能

00:32:08.061 --> 00:32:10.531 
是“爲Complication
獲取時間軸和日期”

00:32:11.565 --> 00:32:13.333 
我們會把Complication和

00:32:13.400 --> 00:32:15.936 
能接受您時間軸尾端的
NS日期的處理器交給您

00:32:17.070 --> 00:32:18.172 
相對的

00:32:18.505 --> 00:32:21.275 
我們有時間軸開始日期
來確定您的時間軸該在哪裏開始

00:32:23.143 --> 00:32:26.213 
所以如果用戶在定製
Complication和鐘面

00:32:26.380 --> 00:32:28.282 
而他們想選您的
Complication

00:32:28.749 --> 00:32:31.118 
他們會選擇
比如Modular Large

00:32:31.251 --> 00:32:32.853 
並使用錶冠來

00:32:32.920 --> 00:32:35.422 
設定舊金山的足球
Complication

00:32:35.889 --> 00:32:37.491 
在這裏
您會看見幾樣

00:32:37.558 --> 00:32:39.226 
有關定製的東西

00:32:40.561 --> 00:32:42.763 
您的Complication條目裏

00:32:42.829 --> 00:32:43.897 
有您應用程序的名字

00:32:43.964 --> 00:32:45.165 
這是系統提供的

00:32:46.300 --> 00:32:48.802 
既然我們來到了Modular
Large插槽我們就能

00:32:48.869 --> 00:32:50.771 
提供一個
Modular Large模板

00:32:51.171 --> 00:32:53.040 
這個模板會形容我們的
用戶希望看到什麼

00:32:53.106 --> 00:32:54.341 
並給予他們正確的信息

00:32:54.575 --> 00:32:56.810 
好讓他們選擇我們的
Complication

00:32:58.378 --> 00:33:00.113 
他們選好Complication後

00:33:00.414 --> 00:33:02.316 
就會回到切換器和實時鐘面

00:33:02.382 --> 00:33:06.987 
我們會開始向您要求數據和填充時間軸

00:33:07.054 --> 00:33:08.422 
我們會把這些定製模板

00:33:08.488 --> 00:33:10.457 
稱爲佔位符模板

00:33:11.058 --> 00:33:13.493 
我們會在安裝和高速緩存時向您發問

00:33:13.560 --> 00:33:15.429 
以確保我們不需要在定製時

00:33:15.495 --> 00:33:16.430 
多次啓動

00:33:17.364 --> 00:33:20.334 
因此安裝時

00:33:20.567 --> 00:33:25.072 
我們會索取所有您負責的
Complication佔位符模板

00:33:25.472 --> 00:33:26.273 
然後您再把

00:33:26.340 --> 00:33:28.342 
時鐘Complication
模板交給我們

00:33:28.542 --> 00:33:29.877 
在我們使用這個的時候

00:33:29.977 --> 00:33:31.645 
底部沒有時間軸

00:33:32.746 --> 00:33:34.648 
而我們在這裏
也不用時間軸條目

00:33:34.715 --> 00:33:36.617 
這只是個
Complication模板

00:33:36.683 --> 00:33:38.385 
因爲它和日期沒有關聯

00:33:38.852 --> 00:33:40.721 
所以這個功能是由
Complication開啓的

00:33:40.787 --> 00:33:43.123 
爲Complication
獲取Placeholer功能

00:33:43.190 --> 00:33:46.593 
現在
您已習慣這個方程式和處理器

00:33:47.961 --> 00:33:49.830 
既然您已經非常熟悉

00:33:50.097 --> 00:33:52.399 
如何建造自己的時間軸
那我就把伊莉莎 布洛克帶上臺

00:33:53.166 --> 00:33:55.202 
告訴您如何
用數碼建造它

00:34:00.674 --> 00:34:01.408 
好的

00:34:02.042 --> 00:34:03.443 
我這裏有個項目

00:34:03.510 --> 00:34:05.979 
我只做了一點

00:34:06.046 --> 00:34:08.014 
我們要做一個
Complication

00:34:08.282 --> 00:34:11.185 
就是我們全程一直放照片給您看的
那個Complication

00:34:14.221 --> 00:34:17.357 
我們來看看
Xcode項目究竟怎麼用

00:34:17.424 --> 00:34:20.159 
我創造了一個新的項目並
把幾個資源帶進來

00:34:20.360 --> 00:34:22.396 
包括一個我曾設計的模擬

00:34:22.596 --> 00:34:24.164 
好讓我們設計這個時間軸

00:34:25.532 --> 00:34:27.801 
我把它做得

00:34:29.770 --> 00:34:31.938 
可以在Complication
裏使用

00:34:32.005 --> 00:34:34.842 
所以如果我把它弄過來... 啊！

00:34:38.312 --> 00:34:40.981 
我的手錶的常規設施

00:34:41.047 --> 00:34:41.882 
在那裏

00:34:42.549 --> 00:34:44.318 
如果我放大
您可以看到

00:34:44.650 --> 00:34:46.954 
上半部分有我的數據來源

00:34:47.054 --> 00:34:48.889 
現在在Xcode裏看起來有點醜

00:34:48.956 --> 00:34:50.891 
但如果您點擊它
您會發現

00:34:50.958 --> 00:34:52.893 
它正指向我們的
Complication

00:34:52.960 --> 00:34:55.629 
而我除了
Modular Large外

00:34:55.696 --> 00:34:58.298 
暫時不用其他的家族

00:34:58.365 --> 00:35:00.133 
好讓我們的演示看起來更簡單

00:35:00.200 --> 00:35:01.368 
我們只專注於創作

00:35:01.435 --> 00:35:02.903 
Modular Large
Complication

00:35:02.970 --> 00:35:05.539 
我們建議您

00:35:05.606 --> 00:35:07.674 
學會支持越多的家族越好

00:35:07.741 --> 00:35:09.810 
因爲您的用戶會想要有

00:35:09.877 --> 00:35:12.880 
更多選擇
那麼您支持的家族越多

00:35:12.946 --> 00:35:14.748 
他們就越有可能在手錶裏

00:35:14.815 --> 00:35:17.718 
使用您的作品

00:35:19.887 --> 00:35:20.587 
所以

00:35:21.655 --> 00:35:23.557 
當您創作這個Xcode

00:35:24.992 --> 00:35:25.659 
Xcode

00:35:26.059 --> 00:35:27.961 
而您想使用
Complications

00:35:28.028 --> 00:35:31.598 
Xcode會做一個控制
Complication的東西

00:35:32.466 --> 00:35:34.134 
它們有存根能讓您用所有的方法

00:35:34.201 --> 00:35:35.435 
來執行控制

00:35:35.969 --> 00:35:37.538 
所以非常有用

00:35:37.604 --> 00:35:40.040 
我們可以看到它

00:35:40.107 --> 00:35:42.509 
然後利用它來提供我們需要的信息

00:35:42.910 --> 00:35:45.379 
所以我會從底部這裏開始

00:35:45.445 --> 00:35:48.982 
我要多加點空行

00:35:50.050 --> 00:35:51.018 
纔可以看見這個

00:35:51.084 --> 00:35:52.686 
爲Complication獲取
Placeholder模板

00:35:52.753 --> 00:35:55.489 
我要從這裏開始
這樣我們就可以

00:35:55.556 --> 00:35:59.059 
看到保羅在熒幕上展現的
Complication的模樣

00:36:00.093 --> 00:36:03.530 
我要拿掉Xcode提供的樣板

00:36:03.997 --> 00:36:05.399 
然後

00:36:06.900 --> 00:36:09.002 
我們要做一個
Complication模板

00:36:11.271 --> 00:36:14.374 
即Modular Large
Standard Body模板

00:36:16.109 --> 00:36:18.846 
我要給它一個圖樣
一個足球的圖樣

00:36:19.079 --> 00:36:21.949 
我的圖樣是UI圖樣

00:36:22.015 --> 00:36:25.118 
我要用這個圖樣做一個圖像提供

00:36:25.185 --> 00:36:27.454 
但我暫時不會管背景顏色

00:36:28.088 --> 00:36:29.857 
讓我們來看看那個圖像怎樣

00:36:29.923 --> 00:36:31.525 
我把它放在XCode裏

00:36:31.592 --> 00:36:35.462 
而我可以在Finder裏開啓它

00:36:35.529 --> 00:36:39.600 
這是預習

00:36:39.700 --> 00:36:41.435 
讓我把它放大

00:36:43.537 --> 00:36:46.740 
在這裏您可以發現這是個模板圖像

00:36:46.907 --> 00:36:47.841 
它是單色的

00:36:48.075 --> 00:36:49.510 
它有個阿爾法
一個阿爾法通道

00:36:49.576 --> 00:36:51.445 
您就是要這個格式的圖像

00:36:51.512 --> 00:36:53.514 
纔可以好好地上色

00:36:56.950 --> 00:36:58.252 
好的
這就是我們的圖像

00:36:59.152 --> 00:37:02.155 
我們得加點文字

00:37:02.222 --> 00:37:05.058 
我的標題是“比賽時間”

00:37:05.225 --> 00:37:07.327 
而我第一個文字提供會寫

00:37:07.394 --> 00:37:08.996 
“2015女子比賽”

00:37:09.897 --> 00:37:11.932 
我不會再寫第二個文字提供

00:37:12.032 --> 00:37:13.867 
因爲這個模板讓我有這個選擇權

00:37:13.934 --> 00:37:17.538 
而我的目的是

00:37:17.771 --> 00:37:18.972 
把第一行字和第二行連起來

00:37:19.039 --> 00:37:21.074 
只要不用第二個文字提供
這就會自動形成

00:37:22.809 --> 00:37:26.847 
我們只需要這一點數碼
就可以創建並運用這個

00:37:27.281 --> 00:37:29.983 
然後我們應該就可以
在編輯那裏拿到我們的

00:37:30.050 --> 00:37:31.351 
Complication了

00:37:31.952 --> 00:37:35.322 
所以我會轉到模擬器那裏

00:37:37.057 --> 00:37:41.128 
然後讓我再次確保安裝已經完成

00:37:41.195 --> 00:37:42.629 
好 這就是我們的應用程序
這很好

00:37:43.230 --> 00:37:47.401 
我要按下模擬器

00:37:49.036 --> 00:37:51.672 
定製過去... 啊！

00:37:51.772 --> 00:37:53.273 
Complication那裏

00:37:53.473 --> 00:37:55.943 
其實您知道嗎？我想我還是先...

00:37:56.009 --> 00:38:00.380 
就如保羅剛纔說的那樣
佔位符模板只用一次

00:38:00.447 --> 00:38:03.016 
也就是當您的應用程序第一次被安裝後

00:38:03.383 --> 00:38:06.453 
如果您要這麼做

00:38:06.587 --> 00:38:10.490 
您就要先卸載纔可以...
啊 這是...

00:38:11.525 --> 00:38:14.261 
確保它被丟棄... 啊！

00:38:14.461 --> 00:38:16.830 
好了！
所以要確保它已經卸載了

00:38:20.534 --> 00:38:21.435 
消失了

00:38:21.969 --> 00:38:23.904 
然後我們會讓它再出現

00:38:24.238 --> 00:38:27.574 
這樣我們的數碼

00:38:28.008 --> 00:38:30.410 
纔會再向您索取佔位符模板
我們再試一次

00:38:40.087 --> 00:38:43.891 
讓它不在這裏... 好的

00:38:55.469 --> 00:38:56.703 
我們會再加載回去

00:38:59.940 --> 00:39:01.408 
然後再試一次

00:39:14.688 --> 00:39:16.657 
耶！好了

00:39:18.192 --> 00:39:18.892 
好的

00:39:20.060 --> 00:39:21.228 
所以我們有了我們的模板

00:39:22.196 --> 00:39:24.498 
現在我們
能選Complication了

00:39:24.565 --> 00:39:26.099 
那我就

00:39:26.767 --> 00:39:27.668 
直接出來

00:39:28.035 --> 00:39:30.204 
當然您可以看到這個
Complication

00:39:30.270 --> 00:39:31.872 
並沒有出現也沒有呈現更新的訊息

00:39:31.939 --> 00:39:33.006 
因爲我們

00:39:33.240 --> 00:39:34.441 
還沒寫好這方面的程序

00:39:35.475 --> 00:39:36.210 
所以

00:39:37.811 --> 00:39:39.913 
它會和佔位符模板粘在一起

00:39:39.980 --> 00:39:41.381 
因爲那就是它所有的信息

00:39:41.748 --> 00:39:43.851 
我們回到數碼那裏

00:39:43.917 --> 00:39:46.587 
然後加入能實行協議的部分

00:39:49.256 --> 00:39:51.358 
好 讓我們來看看

00:39:51.425 --> 00:39:52.893 
我正在用的模型

00:39:52.960 --> 00:39:54.094 
我要切換到頂部這裏

00:39:54.461 --> 00:39:57.397 
我有個模型這個模型是用
Objective-C寫的

00:39:57.731 --> 00:40:00.601 
您可以把Objective-C
和Swift一起用

00:40:00.667 --> 00:40:03.704 
這樣您就可以拿其他項目的數碼

00:40:03.770 --> 00:40:07.641 
放到Watch OS2應用程序裏

00:40:07.708 --> 00:40:10.444 
但要在您的Swift橋接報頭

00:40:10.511 --> 00:40:12.546 
加個頂

00:40:12.613 --> 00:40:14.214 
就可以用了
這很酷吧

00:40:14.281 --> 00:40:16.583 
所以這裏是我的足球比賽模擬

00:40:16.650 --> 00:40:18.752 
而這些傢伙有個日期信息
也就是

00:40:18.819 --> 00:40:19.753 
比賽開始的日期

00:40:20.087 --> 00:40:22.789 
他們有個團隊介紹
所以能告訴您

00:40:23.290 --> 00:40:26.460 
哪個隊員和哪個團隊在比賽

00:40:26.660 --> 00:40:30.297 
它也能告訴我

00:40:30.364 --> 00:40:32.533 
第一場比賽和最後一場比賽
什麼時候開始

00:40:32.599 --> 00:40:35.235 
而在每一個比賽中都可以告訴我
上一場和下一場比賽是什麼

00:40:35.936 --> 00:40:37.171 
所以有了這個

00:40:38.105 --> 00:40:39.773 
我們就可以

00:40:39.840 --> 00:40:42.142 
開始寫填充這個
Complication的數碼了

00:40:45.312 --> 00:40:47.080 
我會寫兩個輔助方法

00:40:47.447 --> 00:40:50.918 
來解決兩個需要我們回答的問題

00:40:50.984 --> 00:40:53.453 
簡單地說就是我們
在這個Complication裏

00:40:53.520 --> 00:40:54.621 
必須回答的兩個設計問題

00:40:54.855 --> 00:40:57.824 
第一題是我們的模板
看起來到底是什麼樣的？

00:40:57.891 --> 00:41:00.694 
對付這個
我會寫個方法

00:41:00.761 --> 00:41:03.564 
不僅能拿足球比賽

00:41:04.665 --> 00:41:05.566 
還可以

00:41:06.567 --> 00:41:08.902 
做出個CLK
Complication模板的東西

00:41:09.403 --> 00:41:11.171 
所以它還蠻直接的

00:41:11.405 --> 00:41:13.106 
我們要做一個... 沒事...

00:41:15.142 --> 00:41:18.345 
做個Modular
Large標準的模板

00:41:18.412 --> 00:41:20.747 
就像我們剛纔做佔位符一樣

00:41:21.348 --> 00:41:25.352 
還有把剛纔那個足球圖像
變成圖像提供的

00:41:25.419 --> 00:41:27.588 
然後這個

00:41:27.654 --> 00:41:28.689 
我們得有三行字

00:41:28.755 --> 00:41:31.425 
所以頂部是比賽時間

00:41:31.592 --> 00:41:35.462 
我正用CLK 時間文字提供來弄這個

00:41:38.465 --> 00:41:40.100 
第一行字

00:41:40.167 --> 00:41:42.102 
則會告訴我們哪個團隊在比賽

00:41:42.169 --> 00:41:44.638 
而我正在做一個簡單的文字提供

00:41:45.005 --> 00:41:46.840 
和我的團隊介紹

00:41:47.908 --> 00:41:49.109 
最後

00:41:49.843 --> 00:41:53.814 
第三行是組織描述

00:41:54.481 --> 00:41:55.849 
我們現在有個模板

00:41:56.917 --> 00:41:58.452 
我們也得決定

00:41:58.519 --> 00:42:00.654 
我們要怎樣在我們的時間軸上
安排這些模板

00:42:01.088 --> 00:42:04.525 
保羅剛纔說的幼稚方法就是

00:42:04.591 --> 00:42:09.296 
把開始的日期和時間軸的日期

00:42:09.463 --> 00:42:11.265 
配在一起

00:42:11.331 --> 00:42:13.901 
但有個缺點

00:42:13.967 --> 00:42:16.170 
就是您將無法在您的
Complication上

00:42:16.236 --> 00:42:18.372 
看到哪一場球賽即將開始

00:42:18.438 --> 00:42:21.208 
您只能看到過去有
哪些比賽在什麼時候開始

00:42:21.475 --> 00:42:24.645 
所以我們
要和保羅一樣對付日曆

00:42:24.878 --> 00:42:27.114 
把這些條目移到更遠的未來

00:42:27.314 --> 00:42:29.383 
我們要確保每一個條目的開始是

00:42:29.449 --> 00:42:32.119 
在上一場比賽結束時

00:42:32.519 --> 00:42:35.455 
因此我們要決定一場球賽要花多少時間

00:42:35.789 --> 00:42:37.491 
我覺得它大概有90分鐘

00:42:37.558 --> 00:42:38.892 
所以我要用一個

00:42:40.160 --> 00:42:42.496 
我們一會兒可以更改的數據
這樣就算我們弄錯了也可以輕易修改

00:42:42.563 --> 00:42:45.866 
我們決定了比賽時間長達90分鐘

00:42:47.167 --> 00:42:49.036 
然後我們可以用時間軸條目

00:42:50.337 --> 00:42:53.273 
匹配日期這個方法

00:42:53.507 --> 00:42:56.376 
它會推算出每一場比賽究竟

00:42:56.677 --> 00:42:58.812 
要在時間軸的哪個地方出現

00:43:01.682 --> 00:43:04.651 
那我們現在要知道的是

00:43:04.818 --> 00:43:06.153 
某個比賽之前的比賽是什麼？

00:43:06.653 --> 00:43:07.754 
如果之前還有一個比賽

00:43:07.821 --> 00:43:12.092 
那我們就會用那場比賽的尾端來
當這場比賽的時間軸日期

00:43:13.594 --> 00:43:14.761 
所以如果有這個比賽

00:43:16.363 --> 00:43:18.866 
我們會把這個比賽的日期

00:43:19.266 --> 00:43:21.168 
加上我們設定的時間

00:43:25.539 --> 00:43:28.275 
如果我們不那麼做
那就表示這是時間軸上第一個比賽

00:43:28.342 --> 00:43:30.177 
而我已經決定

00:43:30.244 --> 00:43:31.411 
要把第一場比賽

00:43:31.478 --> 00:43:33.313 
在開場前六小時就顯示出來

00:43:33.380 --> 00:43:36.517 
但很明顯的
您可以做其他的事

00:43:36.583 --> 00:43:38.585 
來匹配您的使用

00:43:38.652 --> 00:43:40.554 
以上就是

00:43:40.621 --> 00:43:41.955 
那兩種方法

00:43:42.289 --> 00:43:45.692 
現在我們只需要閱讀和實踐

00:43:45.759 --> 00:43:47.961 
剛纔保羅說的每一個協議方法

00:43:48.362 --> 00:43:49.830 
我們從頭開始吧

00:43:49.897 --> 00:43:51.665 
我們這裏有時間軸構造

00:43:51.732 --> 00:43:52.833 
而第一個方法就是

00:43:52.900 --> 00:43:55.903 
爲Complication獲取
支持Time Travel的指令

00:43:56.970 --> 00:44:00.007 
默認的XCode模板

00:44:00.073 --> 00:44:02.309 
是能讓您的時間軸前進和後退的

00:44:02.376 --> 00:44:03.644 
我們現在要的就是這個

00:44:03.744 --> 00:44:05.045 
所以我們不會碰它

00:44:06.446 --> 00:44:07.714 
我們下一個步驟

00:44:07.781 --> 00:44:09.283 
就是想好時間軸要在什麼時候開始

00:44:09.716 --> 00:44:13.487 
由於我們已經寫好了這些輔助方法
所以能輕而易舉地解決問題

00:44:13.754 --> 00:44:15.989 
我會用‘無’來拿掉處理器

00:44:16.256 --> 00:44:18.292 
然後我們要想好開始的日期

00:44:18.358 --> 00:44:22.029 
也就是第一場足球比賽的條目日期

00:44:23.263 --> 00:44:26.233 
還有別忘了要把處理器拿出來

00:44:26.300 --> 00:44:29.403 
我們下一步

00:44:29.469 --> 00:44:31.038 
是要想結束的日期

00:44:32.005 --> 00:44:34.808 
而這個日期應該是

00:44:34.908 --> 00:44:36.710 
最後一場比賽過後

00:44:37.211 --> 00:44:40.080 
這樣我們才能拿到最後一場比賽的信息

00:44:40.814 --> 00:44:44.351 
我們要把這個日期加上比賽時間

00:44:44.418 --> 00:44:46.887 
這就是我們結束的日期

00:44:46.954 --> 00:44:49.122 
我們會用處理器來完成這個步驟

00:44:50.991 --> 00:44:53.160 
下一個方法是我們一整場演說
都沒提過的

00:44:53.227 --> 00:44:55.562 
但卻非常重要的方法

00:44:55.896 --> 00:44:58.232 
尤其如果您的諮詢有任何一點敏感性

00:44:58.599 --> 00:45:01.335 
如果用戶的手錶沒被開啓

00:45:01.401 --> 00:45:03.003 
您不會希望敏感的信息呈現在屏幕上

00:45:03.070 --> 00:45:04.972 
因爲那就表示他們已經把手錶摘下了

00:45:05.172 --> 00:45:06.473 
而別人很可能會找到它

00:45:06.540 --> 00:45:09.443 
如果您的Complication
上有敏感信息

00:45:09.510 --> 00:45:13.180 
您可以使用這個方式

00:45:13.247 --> 00:45:14.748 
來確保手錶被鎖好時不會呈現信息

00:45:15.082 --> 00:45:18.519 
但足球比賽的時間軸並不是敏感信息

00:45:18.585 --> 00:45:21.321 
所以我放任它爲之前的設定

00:45:21.388 --> 00:45:24.591 
讓它即使在鎖住的情況下也呈現信息

00:45:26.059 --> 00:45:27.628 
接下來

00:45:27.694 --> 00:45:29.329 
我們要填充

00:45:30.597 --> 00:45:31.999 
時間軸

00:45:32.633 --> 00:45:34.201 
這是非常重要的部分

00:45:34.935 --> 00:45:36.236 
我們得把現時的條目放進去

00:45:36.303 --> 00:45:38.705 
我們得告訴自己... 告訴手錶

00:45:38.772 --> 00:45:40.807 
如何把時間軸往後移

00:45:40.874 --> 00:45:43.010 
也得告訴它如何往前移

00:45:43.377 --> 00:45:44.678 
我從往前移開始說

00:45:45.379 --> 00:45:46.847 
我們來到底下這裏

00:45:47.447 --> 00:45:51.685 
我們想要做的是建造一個

00:45:52.019 --> 00:45:55.622 
從我們收到條目的第一天一直往前走

00:45:55.689 --> 00:45:56.857 
走到未來的條目數組

00:45:58.559 --> 00:46:00.928 
我的戰略是做個數組

00:46:01.428 --> 00:46:04.398 
做好後再用處理器

00:46:09.870 --> 00:46:12.439 
我們要查看每一個比賽

00:46:13.073 --> 00:46:15.609 
然後找到一個在我們開始
寫數碼後纔開始的比賽

00:46:15.676 --> 00:46:17.578 
由那個比賽開始創建模板

00:46:17.644 --> 00:46:19.646 
然後把它們放到這個數組裏

00:46:20.314 --> 00:46:22.149 
我會從

00:46:24.852 --> 00:46:27.221 
第一場比賽開始

00:46:28.055 --> 00:46:29.456 
而我也已經把它變成選項了

00:46:29.690 --> 00:46:31.792 
這並不是因爲第一場比賽
的結果可能是‘無’

00:46:32.025 --> 00:46:34.328 
而是因爲我們要把它們

00:46:34.394 --> 00:46:36.763 
換成下一場比賽

00:46:36.830 --> 00:46:39.032 
直到所有比賽結束然後數據就會變成零

00:46:39.099 --> 00:46:40.868 
那我們就知道什麼時候要停了

00:46:43.670 --> 00:46:46.039 
接下來 我們要... 啊！

00:46:49.476 --> 00:46:54.047 
雖然這裏有場比賽

00:46:54.114 --> 00:46:56.583 
但我們得拿到顯示比賽的日期

00:46:56.783 --> 00:46:59.219 
這個就是這場比賽的顯示日期

00:47:01.855 --> 00:47:04.791 
現在我們要把這個日期
和我們拿到的日期

00:47:04.858 --> 00:47:06.760 
也就是我們應該填充時間軸條目的日期

00:47:06.827 --> 00:47:08.328 
來做比較

00:47:09.530 --> 00:47:12.065 
如果它們的時間是往後退

00:47:12.132 --> 00:47:14.201 
那表示我們的日期對了

00:47:14.268 --> 00:47:16.737 
所以我們要開始把
這些時間軸條目放回去

00:47:17.104 --> 00:47:19.006 
這裏我們就要填充一個時間軸條目

00:47:19.373 --> 00:47:20.307 
這很直接

00:47:20.374 --> 00:47:22.109 
我們做個模板給這場比賽

00:47:23.177 --> 00:47:24.978 
那是我們的輔助方法

00:47:26.446 --> 00:47:29.516 
我們在開始的日期製造條目
這條目是我們之前算出來的

00:47:29.583 --> 00:47:30.851 
然後製造那個模板

00:47:33.420 --> 00:47:34.655 
我們追加到我們的數組

00:47:36.924 --> 00:47:39.459 
然後要小心不要做太多個

00:47:39.526 --> 00:47:40.661 
我們已經超過極限了

00:47:41.728 --> 00:47:42.796 
我們要在極限之內

00:47:45.065 --> 00:47:47.734 
既然我們現在加了東西到數組裏

00:47:48.535 --> 00:47:51.471 
就要檢查數組看看它是否超過極限
如果超過了 我們就停止

00:47:53.440 --> 00:47:54.241 
最後

00:47:54.608 --> 00:47:56.310 
爲了啓動這個循環

00:47:56.376 --> 00:47:58.745 
我們必須拿下一個又一個

00:47:58.812 --> 00:48:00.214 
我們剛剛處理的比賽

00:48:01.582 --> 00:48:03.884 
把它們填充在

00:48:04.151 --> 00:48:07.054 
時間軸裏我們設定的
日期過後的其他條目

00:48:07.221 --> 00:48:09.423 
我們也可以做另一件非常類似的事

00:48:09.723 --> 00:48:12.593 
來填充之前的數據

00:48:12.693 --> 00:48:14.595 
就是複製我們剛剛寫好的數碼

00:48:16.897 --> 00:48:19.132 
然後往上移到在日期前

00:48:19.199 --> 00:48:21.468 
爲Complication
獲取時間軸條目

00:48:21.535 --> 00:48:22.402 
這個方法

00:48:23.170 --> 00:48:25.606 
把它複製在這裏
然後更改三樣東西

00:48:26.106 --> 00:48:28.075 
我們要做一模一樣的東西

00:48:28.141 --> 00:48:29.776 
但我們會從最後一個條目

00:48:30.544 --> 00:48:31.411 
開始往前移

00:48:31.478 --> 00:48:34.915 
或者說從最後一場比賽開始
移到第一場比賽

00:48:35.282 --> 00:48:37.851 
我們從最後一個比賽開始

00:48:38.752 --> 00:48:40.587 
然後底下這裏循環發生的地方

00:48:41.054 --> 00:48:42.489 
我們會拿前面的

00:48:45.792 --> 00:48:48.195 
最後 我們只在

00:48:48.262 --> 00:48:50.163 
它們還沒超過我們的日期前用它們

00:48:50.230 --> 00:48:55.435 
所以必須讓順序倒過來

00:48:56.270 --> 00:48:58.405 
這就是我們的方法

00:48:58.605 --> 00:49:03.443 
我們最後要寫的是獲取
現時時間軸條目的方法

00:49:03.510 --> 00:49:07.481 
我們可以很聰明地

00:49:07.548 --> 00:49:08.949 
利用我們之前寫的方法

00:49:09.149 --> 00:49:12.252 
因爲索取現時的條目基本上就是

00:49:12.319 --> 00:49:15.255 
要拿某個日期（現在）前的條目

00:49:16.523 --> 00:49:18.025 
就是我們現在要呈現的條目

00:49:18.392 --> 00:49:21.595 
所以我要採用
在日期前爲Complication

00:49:21.662 --> 00:49:23.297 
獲取時間軸條目方法

00:49:23.363 --> 00:49:24.765 
就是我們剛寫好的那個

00:49:27.334 --> 00:49:29.803 
我要把日期設爲當下

00:49:32.940 --> 00:49:34.374 
我要把極限設爲一

00:49:34.441 --> 00:49:35.909 
因爲我們這裏只需要一個

00:49:37.277 --> 00:49:41.248 
然後當我啓動處理器後

00:49:41.315 --> 00:49:44.384 
我會拿數組裏的第一個條目並把它放回

00:49:44.585 --> 00:49:47.221 
獲取現時時間軸條目方法的處理器

00:49:50.057 --> 00:49:51.925 
所以我們可以放心啓動這個

00:49:51.992 --> 00:49:54.895 
而我會啓動它

00:49:54.962 --> 00:49:57.231 
然後迅速換到還在啓動的模擬器那裏

00:49:57.297 --> 00:49:58.599 
它還在呈現

00:50:00.934 --> 00:50:02.936 
我們之前填充的佔位符模板

00:50:03.337 --> 00:50:07.241 
所以只要我啓動這個
它就會廢止模擬器裏的時間軸

00:50:07.774 --> 00:50:11.111 
然後重新詢問

00:50:11.178 --> 00:50:13.313 
每一個方法我們現在都已經執行過了

00:50:13.380 --> 00:50:15.415 
所以我們可以拿到數據了
好了 來吧

00:50:15.482 --> 00:50:17.284 
啓動
然後轉移

00:50:17.718 --> 00:50:19.086 
現在我們應該

00:50:19.152 --> 00:50:19.920 
看到

00:50:21.955 --> 00:50:22.789 
我們的東西被填充

00:50:23.290 --> 00:50:24.925 
然後這裏我們有實質的數據

00:50:24.992 --> 00:50:25.826 
這告訴我們...

00:50:32.032 --> 00:50:34.568 
這告訴我們比賽在11點開始

00:50:34.635 --> 00:50:36.203 
這是正確的行爲 您記得嗎？

00:50:36.270 --> 00:50:37.504 
我們就是要看

00:50:37.571 --> 00:50:39.373 
11點到12:30的比賽

00:50:39.439 --> 00:50:41.141 
90分鐘後

00:50:41.508 --> 00:50:43.277 
如果我們把
Time Travel往前

00:50:43.343 --> 00:50:46.146 
直到12:30

00:50:46.213 --> 00:50:48.916 
我們應該可以看到下一個比賽的更改

00:50:49.283 --> 00:50:52.252 
所以Time Travel到3點
都還能發揮作用

00:50:52.319 --> 00:50:53.987 
我們應該可以開始看見再下一個比賽

00:50:54.054 --> 00:50:54.922 
啊 我超時了

00:50:55.656 --> 00:50:58.292 
我們的Time Travel有效

00:50:58.492 --> 00:51:00.627 
而我們主要要做的

00:51:00.694 --> 00:51:02.796 
是寫好三個最重要的方法

00:51:03.030 --> 00:51:05.132 
這樣就能有個實用的
Complication

00:51:05.199 --> 00:51:08.335 
現在我會交給保羅來告訴我們

00:51:08.402 --> 00:51:11.405 
如何安排Complication

00:51:11.572 --> 00:51:13.707 
來實時更新世上的信息

00:51:23.050 --> 00:51:23.851 
謝謝伊莉莎

00:51:27.354 --> 00:51:30.157 
既然我們的
Complication都弄好了

00:51:30.224 --> 00:51:31.658 
我們要確保的就是

00:51:31.725 --> 00:51:33.861 
我們顯示的東西是正確的

00:51:34.394 --> 00:51:36.230 
所以Watch OS2裏有很多方式

00:51:36.296 --> 00:51:37.898 
可以讓您把世上每一個角落的信息

00:51:37.965 --> 00:51:40.167 
都收集到您的手錶裏

00:51:41.034 --> 00:51:43.871 
您可以使用新的Watch
Connectivity APIs

00:51:43.937 --> 00:51:46.607 
來和其他iOS應用程序溝通
並索取更多資料到您的手錶裏

00:51:46.840 --> 00:51:50.210 
或者直接使用
NSURLSession和網站溝通

00:51:50.277 --> 00:51:51.445 
並把信息帶進手錶裏

00:51:53.013 --> 00:51:55.682 
假設我們的Complication
時間軸已經設立好了

00:51:55.949 --> 00:51:57.551 
而且我們和網站溝通了

00:51:57.618 --> 00:51:58.919 
並拿到了新的信息

00:52:00.187 --> 00:52:02.389 
如果那些信息已經廢止了
我們原有的信息

00:52:02.456 --> 00:52:05.025 
我們就要告訴鐘面刷新時間軸

00:52:05.792 --> 00:52:10.264 
我們可以進入
時鐘Complications服務器

00:52:11.231 --> 00:52:13.233 
它是我們和鐘面溝通的接口

00:52:14.001 --> 00:52:15.402 
我們可以

00:52:15.469 --> 00:52:18.205 
要求鐘面刷新我們的數據

00:52:18.272 --> 00:52:19.973 
然後丟掉之前所有的信息

00:52:20.040 --> 00:52:22.743 
然後以尋找現時時間軸的方法

00:52:22.809 --> 00:52:25.145 
重新啓動我們的溝通渠道

00:52:26.046 --> 00:52:26.780 
您可能已經發現

00:52:26.847 --> 00:52:30.150 
這是個毀滅性有點大的動作

00:52:30.250 --> 00:52:32.386 
如果您有個股票
Complication

00:52:32.452 --> 00:52:34.688 
而您之前的數據還有用的話

00:52:35.622 --> 00:52:37.090 
鐘面現在可不會向您二次確認了

00:52:37.391 --> 00:52:38.825 
那其實是您的責任

00:52:38.892 --> 00:52:40.894 
您必須告訴我們是要廢止

00:52:40.961 --> 00:52:42.930 
還是延長您的信息

00:52:43.530 --> 00:52:44.698 
所以除了丟掉信息

00:52:44.765 --> 00:52:46.800 
您還可以要求延長信息

00:52:49.069 --> 00:52:51.738 
這樣我們就不會要求您刷新所有東西

00:52:51.805 --> 00:52:56.109 
反而會在尾段
附加最新的信息

00:53:01.415 --> 00:53:03.283 
那這些在數碼裏會是什麼樣的呢？

00:53:03.350 --> 00:53:05.118 
您可以進入Complication

00:53:05.185 --> 00:53:07.754 
我是說時鐘Complication
服務器共享實例

00:53:08.589 --> 00:53:11.959 
您可以在這裏詢問所有
	活動的Complication

00:53:12.426 --> 00:53:14.828 
有一個活動Complication
現在就能在

00:53:14.895 --> 00:53:16.997 
您的鐘面上被看到

00:53:17.798 --> 00:53:20.167 
而任何一個Complication
都會給予您

00:53:20.234 --> 00:53:22.402 
向服務器要求

00:53:22.469 --> 00:53:24.771 
延長或刷新時間軸的權利

00:53:26.607 --> 00:53:29.510 
所以很棒
我們知道我們有責任告訴手錶

00:53:29.910 --> 00:53:32.613 
我們需要更新信息
但我們什麼時候纔有機會那麼做？

00:53:34.081 --> 00:53:36.183 
其實只要您的程序在進行着

00:53:36.517 --> 00:53:38.986 
您就可以通過時鐘
Complication服務

00:53:39.052 --> 00:53:39.786 
和手錶溝通

00:53:40.521 --> 00:53:44.391 
這會在幾種時候發生
比如當您手錶裏有最重要的應用程序時

00:53:45.659 --> 00:53:47.895 
但您還是有機會
通過呼喚後臺啓動

00:53:48.195 --> 00:53:49.863 
甚至通過新表的

00:53:50.664 --> 00:53:55.169 
iOS伴侶應用程序的
Connectivity APIs

00:53:55.369 --> 00:53:59.439 
來喚醒程序
好讓電話接收您傳送的信息

00:54:00.941 --> 00:54:04.811 
但由於它們都是在後臺啓動程序的
所以不能經常使用

00:54:05.179 --> 00:54:09.449 
如果您在後臺加很多工
您就會把錢花光

00:54:09.983 --> 00:54:11.318 
而在您把錢存回來前

00:54:11.385 --> 00:54:14.688 
您都無法更新您的
Complication直到晚上

00:54:16.657 --> 00:54:19.560 
若想更瞭解
Watch Connectivity APIs

00:54:19.626 --> 00:54:21.995 
請到介紹Watch
Connectivity會話課

00:54:22.396 --> 00:54:26.500 
我們還在這手錶里加了一個很酷的功能
來支持Complication數據的使用

00:54:28.368 --> 00:54:31.939 
我們再來經由Complication數據
來源協議來談談

00:54:32.005 --> 00:54:33.774 
如何利用後臺功能

00:54:34.141 --> 00:54:36.910 
來更新Complication數據

00:54:37.511 --> 00:54:40.147 
您只需要讓處理器給我們一個日期

00:54:40.914 --> 00:54:43.417 
我們就會把它運用在
所有的Complication上

00:54:43.483 --> 00:54:44.952 
而不是其中一個Complication

00:54:45.886 --> 00:54:47.988 
拿到這個日期時
我們會把它

00:54:48.589 --> 00:54:50.023 
當成提示
所以如果有金錢資助

00:54:50.090 --> 00:54:51.425 
或系統的狀況良好

00:54:51.491 --> 00:54:52.726 
我們就會在後臺啓動這時

00:54:53.227 --> 00:54:57.865 
您的數據會從WatchConnectivity
和NSURL進入手錶

00:54:58.198 --> 00:55:02.369 
而確保信息已被更新
和要求讓手錶更新信息

00:55:02.436 --> 00:55:04.171 
是您的責任

00:55:06.039 --> 00:55:08.775 
我們的Complication課程
已接近尾聲了

00:55:09.343 --> 00:55:12.913 
我們希望您已經學會如何建造時間軸

00:55:13.113 --> 00:55:16.483 
及如何將模板
和其他相關的內容提供給我們

00:55:17.317 --> 00:55:19.887 
還有如何利用Watch OS

00:55:19.953 --> 00:55:23.056 
來製造並輸入信息到文字提供裏

00:55:24.358 --> 00:55:27.060 
學會如何輕鬆地刷新數據

00:55:28.595 --> 00:55:31.298 
如果您是不常用後臺更新的
良好市民

00:55:31.532 --> 00:55:33.367 
您會有更多機會使用手錶

00:55:34.401 --> 00:55:37.171 
若想得到更多資料
請查看您的文件和示例代碼

00:55:37.604 --> 00:55:40.240 
我們有良好的技術支持和老師

00:55:41.208 --> 00:55:43.810 
也有很多很棒的課讓您
更瞭解WatchKit

00:55:44.311 --> 00:55:44.978 
謝謝！