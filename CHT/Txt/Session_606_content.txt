《SceneKit改進》
謝謝大家
下午好 歡迎參加《SceneKit改進》講座環節
我叫 託馬斯·古森斯
如果您還不知道SceneKit是什麼
這裏有一個關於iOS 10上的各種不同框架的概述
SceneKit和SpriteKit是高級API
SpriteKit 是2D 的而 SceneKit 是3D 的
您可以將他們與其他遊戲開發技術配合使用
如Model I/O GameplayKit 以及 GameController
有需要的話SceneKit也 可以讓您使用低級API
即OpenGL和Metal
SceneKit是隨OS XMountain Lion推出的
而且去年也在iOS 8上推出了
去年 我們在SceneKit上添加了一些新的特性
使其方便用於休閒遊戲如粒子系統
物理學 力場以及與SpriteKit的集成
例如對於所有2D遊戲場景疊加
今年對SceneKit的兩個主要擴展
是向Metal的過渡
以及新的場景編輯器
我們的這個演示將從
向您展示最新的場景編輯器開始
然後解釋爲何我們過渡到Metal
以及它的採用對您意味着什麼
最後我們將展示一些
我們今年對引擎添加的新特性
好最新的場景編輯器
它在Xcode 7上提供
因此我們可以在El Capitan或 Yosemite上運行它
而且它也在Force Field中提供對力場的支持
要打開它
只須打開一個SceneKit支持的3D文件
如DAE OBJ Alembic
或者您可以使用模版選擇器
創建一個新的
SceneKit文件那樣它將創建一個新的
擴展名爲.scn的空SceneKit文件
而scn文件不過是一個由NSKeyedarchiver存檔
的一個scn場景實例
那意味着若您願意您可以使用程序代碼 
製作一個您自己的SceneKit文件
而這對生產流程而言是很方便的
那麼場景編輯器的主要目的是
讓您爲您的遊戲構建多個平面
您會發現
通過引用原始資源
將來自於不同文件的多種資源
結合起來而構成一個單一場景
確實是容易的
場景編輯器也爲SceneKit的一些關鍵特性
加入了一些視覺效果編輯器
例如 讓您在一個3D場景中實時配置粒子系統
配置您的物理學
檢查並配置您的對象的物理形狀
並對模擬效果進行預覽
如力場的感知而
且它還包含一個動作編輯器
讓您通過圖形用戶界面
構建動作序列
場景編輯器也包含一些更高級的特性
如 如果您希望在您的場景中
實時編輯共享修改器
以及一些烘培工具
如烘培環境光遮蔽
關於此內容
請參考 MondelIo 講座環節以瞭解更多信息
好了 最好還是爲您做一個這方面的展示
那麼現在讓我請Amaury上臺演示Xcode 7 謝謝
大家好 我叫 阿莫瑞是SceneKit團隊的
一名軟件工程師
我們極大地改進了Xcode 7中的SceneKit編輯器
而且由於它的最新編輯功能
現在很容易完全
以直觀和互動的方式構建場景
稍後在本節講座中我將向您展示
如何在編輯器中使用SceneKit
構建拼圖遊戲Red Panda
但是目前我們將從一些更簡單的東西開始
一個物理尺寸的小遊戲
它包括構建一個由木塊組成的塔
隨着我們把木塊從它上面移除
塔將最終倒掉
那麼您在這裏看到的是
一個顯示空場景的SceneKit場景編輯器
在右側通常是應用區
這裏有檢測器和庫
在對象庫裏面
您可以發現很多SceneKit對象
比如模式
光線
照相機
幾何參數
以及物理場
現在 對於我們的木塊
我們使用一個簡單的幾何形狀盒子
爲了對它的外觀進行自定義
我可以把它拖放到這裏看看效果
那麼現在正如在Interface Builder中
檢測器也能編輯您的3D對象的所有屬性
例如 在屬性檢測器中
我可以把幾何形狀的大小
改爲2… X 1... X 6
而爲了把它放置在場景中央
我可以使用節點檢測器
並將其位置設爲...零
但是實際上有一個更簡單的做法
即使用 3D 操縱器
我可以自由地在場景中移動對象
好了 那麼既然我們的木塊已經準備好了
我們將把它作爲一個構建其他木塊的模版
使用3D操縱器我可以輕易地通過按住alt鍵盤
進行復制
我可以重複這個操作
進行選擇
把選定的部分複製
旋轉
再重新選擇
重複操作
再最後一次複製以完成塔的構建
我們現在準備好使用SceneKit 內置的物理引擎
來使場景更有吸引力
我將直接選定所有對象
來到物理檢測器界面
並向每個木塊添加一個動態實體
現在我們已經準備好運行模擬
如您所見 我們的木塊現在受到重力影響
無限下落
爲防止這種情況我們將向場景添加一個地板
因此我打開對象庫
放一個地板
將其定位
我需要一個靜態實體
以便讓它參與模擬
但卻不允許移動
如果我們再次運行模擬什麼都不會發生
但是當我們從塔上移除一些木塊時
我們就很好地瞭解了遊戲會是什麼樣子
另外一個我想爲您展示的特性是場景檢查
您可以在編輯器的左下角進行場景檢查
在場景檢查中您可以查看場景中的所有節點
也可以編輯節點層次
例如 我們有地板
很多木盒子
但是我們也有聚光燈
建立了工程之後
我就把這個燈放在場景右邊
目前它是隱藏並沒有效果的
讓我們把它顯示出來
爲了進一步改善照明
也爲了避免這些完全黑暗的區域
我將直接向場景添加環境光線
就是這樣
僅僅通過編輯器我們就構建了整個場景
它包括3D對象
質地燈光和動態實體
在我們執行了手勢之後
它們就會組成一個不錯的遊戲
因此SceneKit場景編輯器確實能夠
讓您以更少的代碼
編寫遊戲
通過編輯器您實際上還可以做更多事情
而爲了說明那一點
讓我們切換到
Red Panda演示
並再次查看那個演示
那麼Red Panda是一個3D拼圖遊戲
在裏面您可以通過全景動作操縱攝像機
並控制角色的行走路線
遊戲的目標是收集這些花
而這裏是第一朵花
在它的路上 Red Panda將必須收集物品
您看 有了那麼多細節
這個世界是多麼豐富多彩栩栩如生
我們有大量的粒子系統和具有動畫效果的植物
現在Red Panda可以在平面上到處遊逛
例如 它可以爬山
但是在它的路上 Red Panda還必須躲開障礙
是否注意到當我們強行推進的時候叫聲就會變大？
這是因爲我們使用了SceneKit最新API的3D音頻
這裏很多特性都在起作用
我們有用於導航和碰撞檢測的物理引擎
我們有很多粒子系統
而陰影修改器和各種動作讓場景變得生靈活現
那麼我們剛剛收集了第七朵花
而通過移動攝像機
我們可以看到物體藏在哪裏
讓我們快速走過拱門
這一關就完成了
謝謝你託馬斯
那麼我們現在將看一下
如何通過SceneKit場景編輯器
構建這個遊戲
那麼這是我們的遊戲起點
一個快速而簡易
和立刻改進您的場景的方式
是添加一個貴賓看臺
貴賓看臺...
只不過是代表環境的一組六張圖片
在我們向場景添加了貴賓看臺後
我們有了一個可以構建這個平面的環境
那麼如果我們看一下在我們項目中的資源
我們可以看到我們的藝術家爲我們
提供了很多構成要素
就是說我們有用於竹子
要採集的花
珍珠以及很多結構元素
所需的不同文件
那麼現在您如何在您的場景中
使用這些外部構件呢？
你到場景中
並把一個外部構件拖拽並放置到場景中
您可以看到這個小的箭頭圖標
表明參照節點已被建立
有這些外部文件作爲外部資源是很好很方便的
因爲那樣您就可以設計這個平面
而以後仍有機會編輯這些資源
您也可以將這些資源再次用於
您的遊戲的其他平面
那麼我把這個項目加入進來
如您所見我已爲其他工業元素
加入其他參考節點
那麼這就是您通常如何構建一個遊戲平面
您要一個接一個地添加構件
進行迭代
您要爲將要採集的花和珍珠
做同樣的操作
最後是植物
那麼這裏您可以看到只是通過一個簡單的操作
我們就能達到什麼樣的狀態
大家記得由於有了很多細節
是豐富的動畫效果的
我們有很多粒子系統
而且我們也有栩栩如生的植物
很多動畫是通過“蒙皮” 
這種相當複雜的動畫特技實現的
它需要一個特殊工具完成
但是我們都使用陰影修改器
實際上這裏還有最後一個元素
需要做成動畫
它就在小瀑布裏面
那麼爲了實現它
我將爲我們的瀑布打開場景
現在SceneKit的編輯器讓您能夠
直接向場景中添加修改器以便獲得即時反饋
和解決實時編譯問題
您可以在輔助編輯器中
添加並修改每個修改器
那麼在這裏我將選定瀑布
並選擇添加一個幾何形狀修改器
我添加修改器
而你可以立刻看到它生效了
你可以把玩一下陰影修改器
並試圖對瀑布的最後效果圖進行微調
你可以試圖弄清最後的修改器是什麼
一旦你對您的場景滿意
您就關閉輔助編輯器
並回到您的主平面
如您所見
我們的山現在具有動畫效果
這是因爲我們使用了參考節點
而且當您編輯資源時
它們會自動在場景中有所反映
這裏我們想做的最後一件事情
是在場景中添加一個敵人
那麼這就是我們的敵人的場景
如您所見
它是靜態的
它沒有任何行爲
爲了添加行爲我們使用動作
現在場景編輯器讓您能夠直接在場景中
添加和編輯動作
那麼這就是動作編輯器
我將選定我的敵人
選擇一個行檢測
添加它
將其設爲沿 Y 軸旋轉
並讓它永遠...重複
那麼這就是我們爲敵人賦予的簡單行爲
但是動作編輯器也讓您構建一些複雜的情景
而關於那個話題的更多信息我邀您觀看
“SpriteKit中的新特性”這一講座環節
現在可以回到我們的遊戲平面
向我們的敵人添加一個參考
那麼我們的場景就建完了
那麼剛纔我們看到了編輯器如何讓您
使用來自於外部的構成要素構建整個遊戲平面
以及如何藉助陰影修改器和動作
讓場景變得栩栩如生
話到此處我要把舞臺還給託馬斯
他將談一下游戲架構
是的我們非常樂於
將這個不錯的演示作爲示例代碼提供給您
它在開發者站點上提供下載
你將看到它是非常簡單和直接的
那裏有大約一千個同時適用於iOS 和 OS X的代碼項目
它包括諸如聲音和控件等一切
您剛纔看到的一切
Amaury剛纔向您展示了
爲了構建此演示在Xcode 7中所做的工作
我將快速地展示剩餘的內容
包括在內部和外部的工作
我們做的第一件事
是爲我們的遊戲
定義一個方向和一個簡單的遊戲播放控制
我們是從遊戲的主要角色開始的
然後我們定義了我們的平面的形狀
包括可收集物品應在的位置
以及敵人應在的位置
而且我們定義了我們希望通過使用SceneKit
而實現的外觀
然後下一步就是
在3D工具中仔細查看3D模型
描繪出不同的質地配置我們的角色
並使其具有動畫效果
最後的潤色
是通過添加某些粒子
植物以及煙霧完成的
我們最後通過在上面
添加一些二維疊加層而完成的遊戲的製作
然後在代碼方面的第一個挑戰是
對碰撞的處理
比如 我們不希望我們的角色穿過牆壁
爲了通過碰撞實現它
我們採用了“碰撞網”
“碰撞網”簡化版本的圓形網格
它有一個類似的形狀
因此碰撞的感覺與您在屏幕上所看到的一致
當您出於性能原因處理物理問題或碰撞時
應採用“碰撞網”而不是“渲染網”
這一點是很重要的
而對於地面
我們希望角色能夠
在平臺上各處行進
但仍然緊貼地面
因此我們需要知道 
在3D世界裏任一點的標高
對此有幾個解決方案
我們這裏仍然採用了“碰撞網”
我們繪製了
陣列交叉垂直陣列以及網格
這給了我們一個交叉點
是我們應該放置角色的位置
然後當我們使用觸屏或鍵盤移動角色時
我們只是在X平面或Z平面上移動它
然後我們在角色所在位置繪製了一個新的交叉
這爲我們提供了一個新的交叉點
我們利用這個點調整我們的角色在Y平面上的位置
我們在每個幀上都重複操作這說明瞭讓我們的角色
在遊戲中動起來是多麼的簡單
然後是多個動畫
遊戲中有幾個動畫元素
角色不管在空閒或工作時都是動畫的
草和竹子的動畫
是爲了模擬風的效果
作爲一個不錯的意外效果
你會發現竹子投射的影子
也自動具有動畫效果
所有這些動畫都是重要的
因爲它們都有助於讓您的遊戲更加栩栩如生
在技術上
角色和竹子是通過蒙皮而實現的動畫效果
因此藝術家們已經在3D工具中構建了骨架和動畫
並已將其導出爲DAE文件
因此在這裏開發者完全沒有什麼好做的
草的動畫是直接在Xcode 7中
通過陰影修改器實現的
與動畫相關的是顆粒效果
遊戲中已有了幾種粒子效果
而且它們也是全部在Xcode7中完成的
<br/>這裏沒有代碼
對於珍珠和鮮花燃燒的火球發出的一些火花
以及敵人吐出的一些火苗
都是通過顏色漸變的調節而完成的
由白色到黃色然後到紅色
環境的顆粒效果
是四張由隨機大小
且或多或少模糊的點
構成的圖造成的
而且那些點都具有初始速度
以模擬風的效果
現在需要提一下我們的材質
以及我們如何在遊戲中實現這種看起來很棒的材質效果
這裏就是...
我們的木塊在遊戲中的樣子
但是如果您只是取它的幾何形狀
並用單調的顏色渲染它
它看上去就像是這個樣子
有點過於簡單化了
因此我們做的第一件事
是設置發散性的質地
這給了我們物體的基本顏色
然後我們添加一個常規圖
它使我們的表面進一步變得極其細化
同時不會增加大量的多邊形
因此這是很容易做到的
然後我們添加一個光線圖
使用此次版本中最新的
自照明屬性
在對我們的物體的整體照明方面
光線圖讓細部進一步細化
比如您可以看到...
石頭的角
您可以看到一些光的遮蔽
例如它在光線圖中具有烘培效果
然後我們做的最後一件事是建立一個反射立方圖
以便反映環境
尤其是天空
反射立方圖
看起來就是這樣
我們使用衰減器使環境效果逐漸減弱
使朝向目光方向的
表面上的反射減弱
現在關於光線圖還有一點需要注意
它只烘培整體照明
而不烘培直射的主要光線和主要陰影
因爲我們希望整體照明
保持充分的動態感
如果我們想 有需要時我們可以讓太陽的位置也動起來
但是最重要的是
在遊戲中角色可以行進
它的影子也是活躍和自動的
在這裏您無事可做
那麼那就是演示內容
我把舞臺移交給塞巴斯蒂安
他將繼續討論向Metal的過渡謝謝大家
謝謝你 託馬斯
我是 塞巴斯蒂安
我正在從事SceneKit研發
我將跟大家談談向Metal
以及我們今年增加的
很多新特性的過渡
那麼SceneKit正朝Metal過渡
大家知道Metal是一個非常低水平的
低開銷的圖形 API
它爲多個平臺帶來了更優的性能
以及更加現代的API
對您們SceneKit用戶來說最重要的是它確實奏效
它也爲SceneKit帶來了一些新特性
比如對陰影着色的計算因此您可以僅使用...Metal
或是幾何資源或是Metal質地
作爲材質屬性
它還讓我們進行自動批處理
所以如果您的幾何資源被多個物體使用
而且使用相同的材質
我們可以極大地降低[聽不清] 的數量
我將通過演示向您表明這一點
您看到的是一個運行在OpenGL ES編輯器上的
簡單的SceneKit 應用
它顯示的是一個有小行星圍繞其軌道運動的行星
僅是顯示小行星就讓
OpenGL佔用了大量的CPU空間
如您所見
不增大CPU並降低幀速率的話
我們無法添加更多小行星
但如果我們轉到Metal渲染器上運行的同樣的應用
我們可以增添多得多的小行星
過一會兒您就會看到
當然CPU也開始被吃掉
但是我們可以大幅增加小行星的數量
我覺得這是很棒的
謝謝大家
那麼您怎樣在您的SceneKit應用上採用Metal呢？
首先它是默認在iOS 9上運行的
因此您將不得不使用最新的SDK對您的應用進行重新編譯
然後它將在所有支持它的硬件上使用Metal的硬件上運行
它也是向後兼容的
因此如果您現有一個應用
您沒有對其進行更改也沒有進行重編譯
它將默認在OpenGL上運行
而且如果您想的話
您可以選擇使用OpenGL渲染器
比如如果您有專用於OpenGL的
自定義着色器的話
選擇渲染器是非常簡單的
如果您有一個配有內置渲染器的內置應用
您只須使用這個小小的按鈕
更改默認選項
您也可以通過編程方式實現
因此 如果您在運行時
創建了自己的場景視圖
您將爲其做出正確的選擇那就是使用Metal或OpenGL
由您任選
關於...Meta的新特性
我們也增加了對Metal着色器的支持
那麼您如何使用配有最新API的SceneKit處理着色器呢？
在SceneKit上使用自定義着色器的第一種方法
是使用Metal陰影修改器
陰影修改器曾只用GLSL編寫
現在我們同時支持這兩種語言
如果您添加一個GLSL修改器
在OpenGL上它將以當前格式運行
而在Metal上它將被轉換成Metal格式
它在大多數情況下可行
如果您使用Metal着色語言編寫了自己的陰影修改器
在OpenGL渲染器上
它將變爲不可行 而被忽略
但是在Metal上將以當前格式運行
在SceneKit中使用着色器的第二種方法
是使用SCNPrograms
這種情況下是沒有自動轉換的
因此您將手動進行
您將必須轉換您的所有代碼
這是被支持的
它支持GLSL和Metal兩種着色語言
因此您可以在相同的應用中
同時支持兩種語言
您可以離線編譯它們
您只須提供着色器片段
以及定點着色器的函數名稱
或者您可以運行時編譯它
在本例中除了函數名稱外
您只須給出源代碼
現在我將向您展示您如何通過創建一個
將能在SceneKit中工作的
極其小巧的着色器來實現
您要做的第一步操作
是加入我們的SceneKit標頭
以便您能夠...
讀取一些頂點語義
以及默認度量指標
在這裏我們確定我們的自定義頂點結構
由於語義上的定義
這是SceneKit所與生俱來的正確數據
我們還可以闡明標準度量指標的使用
比如 模型視圖投影
而且我們可以使用我們自己的數據
爲自己將試圖使用的算法定義我們自己的結構
然後 我們只須通過爲我們已經定義的結構
給出參數
從而創建頂點函數
真的很簡單
然後在程序中
我們只須定義同樣的結構
我們必須爲我們在Metal定義中使用的結構
使用同樣的類型以及同樣的佈局
我們創建了程序
給出了頂點以及片段的函數名稱
然後我們可以通過使用該結構
並將其圍繞時間戳進行封裝 
提供一些數據
非常簡單
在SceneKit中使用着色器的
最後一種方式是使用技巧
技巧是去年推出的
它是對您的所有在角色場景上的應用
進行後期處理的
一種很不錯的方式
在本例中
您只須給出在您的Pass定義中的
Metal着色器的正確函數名稱
就是那麼簡單
它的工作原理將與OpenGL版本類似
關於Metal就講那麼多
讓我們繼續往下進行查看一些
今年我們爲您添加的新特性
第一個...
是與Model I/O的集成
我們已經增加了對Model I/O的支持
包括將你們的模型和場景
導入...導出
如您所見
並不是所有的文件格式都支持
我們在SceneKit中支持的所有數據
因此請選擇最適合您的應用的那個
我們也已經增加了場景過渡
只用了一行代碼非常簡單
所以您可以在場景之間建立過渡
而且有不錯的動畫
確實簡單易用
我們也增加了調試選項
因此您可以一次性地把您的箱子 各種物理形狀
所有東西進行視覺化處理以便調試
我們也增加了材質的混合模式
因此您可以爲每個節點
爲您應用中的每種材質
選擇透明度的工作方式
您可以用它創建新的特效
此外 我們還增加了一個能夠在SceneKit中
爲所有元素工作的音頻引擎
我們可以創建...
3D聲音
將它們附加到各個節點
然後它們將隨着節點在場景中移動
它也能與環境和音樂協同工作
因此您可以禁用位置音頻
並讓自己創建的聲音循環
監聽器被放在了攝像頭節點
但是您可以把它移動到場景中的任何節點
真的是很簡單的
它是基於AVAudioEngine的
因此您只須從AV音頻節點進行備註
而且如果您想或您有現有音頻引擎的話
您可以進行自己的音頻處理工作
最後 我們也添加了一種創建聲音動作的方式
因此 您可以把聲音整合到您的動作序列中
真是簡單易行的
這裏講一下如何使用聲音API
首先您必須從文件名上
把一個聲音實例化
然後您創建一個播放器並把它附加到場景中的任意節點
它將立刻開始播放
當聲音結束時即會停止
如果您希望播放音效或音樂
您必須進行切換操作
如 數字音效 位置聲音以及開始循環播放
最後
非常容易創建一個歌曲播放選項
它只有一行
您可以手動執行或將其添加到
一個現有的動作序列上
這個API 曾在示例代碼中
被用於所有聲音
而我們使用碰撞網...
剛纔託馬斯向您展示了
來探測行走中的角色腳下的地面
比如
當他在草上行走時
或者當他在岩石上行走時
真的很簡單易行
那麼 就講那麼多了
我將把舞臺還給託馬斯
來爲這個講座進行一下總結謝謝大家
這就是我們今年爲SceneKit添加的特性的概述
一個很棒的場景編輯器將爲您節省無數行的代碼
並將爲您的Game Insight工具做更多的工作
這通常是一個不錯的主意
向Metal的平滑過渡
將提升您的遊戲的表現
而且多數時間您自己什麼都不用做
在這個講座中我們也展示了
一些新的特性
但是爲了獲得活動列表請查看在線文稿
還有一個令人驚歎的演示app
我們將極其自豪地與您分享它的代碼
在開發者站點上搜索 "Fox"
你們應該能找到它
如想獲取更多信息
請查看我們的網上資源和在線文稿
一般事務的問詢
請聯繫我們的技術傳播者Allan Schaffer
還有一些相關講座
如Model I/O
今年推出的很棒的新框架
並請查看
《SpriteKit中的新特性》講座
他們有一個確實很棒的關於場景編輯器的演示
會更加深入詳細
因此您一定會希望觀看那個講座
就講這麼多
謝謝敬請暢享講座
謝謝大家