从iPad iOS 9的多任务开始
今天我很高兴能在这里
为您介绍iPad上的多任务执行
我的名字是彼得·哈加斯我是一名UIKit的框架工程师
待会儿我的同事会加入我们
他们是雅各布·肖和库尔特·雷维斯
所以您可以看到UIKit的这次演说也是“多任务”
多任务执行是一个巨大的功能
所以我们把它分成三部分来介绍
这是第一部分
明天下午您可以听到
我们带给iPad和iOS 9的所有伟大且全新的媒体功能介绍
并能了解picture-in-picture视频
以及在多任务执行时app如何与其它app一起使用摄像头
明天下午之后还有一个关于您的app非常棒的讲座
在与其它app一起在iPad上执行多任务时如何成为杰出的“公民”
我非常推荐您明天去这两场讲座都去听
今天我们要讨论三个主题
第一 在您的app上的多任务执行
是什么
您为什么要采用它您如何采用它
以及在UIKit的层面上它意味着什么？
第二 我们对UIKit做出的改变
它让您使用多任务执行变得非常简单
第三是做出了最新的也最棒的UIKit API
来确保您的app在多任务执行时能真正出彩
让我们开始吧
正如您在Keynote上看到的
多任务执行为iPad用户带来了一种很棒的新体验
他们可以做一件自己喜欢的事情
比如浏览网页
然后从右侧滑入来与另一个app进行交互
我们把这种模式叫作“slide over”
然后用户可以把分配器滑动到屏幕的左侧
在上方点击以并排显示app
如您在Keynote上看到的
我们把这种模式叫作“Split View”
鉴于你们都是iOS开发者
我敢肯定你们都非常熟悉
我们的UI Splitview Controller API
我可以肯定地告诉您
它跟Split View是完全不同的
用户可以拖动两个应用程序之间的分配器
并调整它们的大小以获取一个50/50Split View界面
然后他们就可以保留分配器并持续拖动到左侧
来使用边上这个app
在这个案例里 全屏显示的是地图
然后他们可能会选择滑入另一个app
或再次从侧面滑入同一个app
通过iPad上iOS 9的多任务执行
用户掌控他们的体验
掌控运行中的app以及其运行大小
iPad和iOS9的多任务执行还有一个很酷的特征
就是picture-in-picture视频
关于这个您都可以在明天的媒体多任务执行讲座中听到
今天我们要解释您的app如何使用split view和slide over
为了了解如何使用它们
我们有必要先讲一讲
在UIKit app中正变得越来越重要的一样东西
以及它的适应性
在过去 我们曾经鼓励您把您的app做成普遍通用的
这意味着相同的app可以在iPhone和iPad上运行
去年我们介绍给您一个简单的方法
来查看您应该向您的用户提供什么类型的界面
通过介绍水平尺寸等级
去年 iPhone竖直时拥有紧凑的水平尺寸
它们按传统方式显示一个单列的内容
而iPad拥有常规的水平尺寸
许多苹果本身的系统app都以此指示
它们应该显示多列内容
并更改呈现给用户的信息格式
另外 在去年的全球研发大会上
这个设置在横向时也是适用的
iPhone用紧凑的水平尺寸
iPad用常规的水平尺寸
那就是去年的全球研发大会
但是如果您仔细观察
去年还有一个很明显的消息如果您用显微镜看的话
我们当时在提示您为iPhone 6+做好准备
就像我们现有的iPhone手机一样
iPhone 6+也有紧凑的水平尺寸
但是当旋转为横向时
它就是常规的水平尺寸了
这是第一次一个app在运行时就可以有不同的尺寸
我们就那样来到了今年
同样的 如果您接受了今年的邀请
然后画了线条并且旋转它
你知道在逻辑上来说这是合理的它就形成了一个“P”
“iPad的多任务执行”中的这个“P”字
显而易见
谢谢
那么iPad的多任务执行如何与适应性达到协调呢？
让我们举一个slide over app的例子
用户从右侧显示屏滑过
app以紧凑的水平尺寸出现
这显示了我们通常拥有的iPhone体验
接着用户可能会选择把他们的app调整为全屏显示
这样它会就变成常规的横向尺寸
并显示它传统的iPad UI
两个以前从不可能在iPad上发生的事情 现在发生了
首先app开始以紧凑的水平尺寸类显示
这在以前的iPad上是完全不可能的
第二 当用户调整它时app的尺寸级别也产生改变
这也是全新的iOS 9功能
所以 这为您的app和您的用户带来了什么？
让我们从这些用户的观点来看看
他们可以浏览网络并与iPad上他们喜爱的另一个app进行交互
因此 他们会从右侧滑入
他们会想在这个列表中看到app
通过在您的app采用多任务执行在iPad和iOS 9中
您可以让用户更频繁地进入您的app
在使用其他喜欢的iPad app时花更多的时间在您的app上
并以您可能从来没有想象过的全新的方式
与其他的app一起使用您的app
用户会希望所有在他们的iPad上的app都支持多任务执行
而我们就在这里帮您采用它
让我们来看看 添加多任务执行到您的iOS app有多么容易
我有好消息告诉大家这真的很简单
您所需要做的就是使用Xcode7测试版
并创建一个新的项目
所有用Xcode 7创建的新项目
都默认启用iPad多任务程序
而且您所写的所有代码都会在多任务执行中运行
仅此而已就只是做一个新项目
现在就在这场讲座之前台下的一些我的同事提醒我
有一两个现有的app可以选择采用多任务执行
而对于这些app也很简单
您只需要按照三个简单的步骤来做
首先 使用iOS 9 SDK创建您的app
您可以在Xcode的构建设置里这么做
其次支持全方位app的iPad版本
在去年的会议上我们鼓励您去思考
随着简单界限大小的变换环境如何变化
而这个建议也将保持在iOS 9中
因为一个多重任务的大小调整只是一个范围的大小变化
但是 因为用户掌控着他们手里的iPad的环境
在多重任务里您的iPad app要支持所有的环境是非常重要的
最后第三样您需要做的是使用启动记事板
去年介绍的启动记事板对您来说是一个伟大的程式
它帮您的app明确一个记事板的启用外观
这个外观适用于iOS支持的
所有大小 配置 方位 装置
在iPad的多重任务所支持多种不同的尺寸下
使用启动记事板是将其加入的一个必要条件
其中一个要点是
如果您的app需要一个全屏的体验
您可以在您的信息栏中使用UI全屏按键
选择退出
现在我们已经知道用您现有的项目
创建或添加一个新的多任务执行项目是多么简单
让我们看看它在您的ipad和UIKit级别上是如何运作的
有一些非常重要的变化是您应该注意的
在过去 UI屏幕边界会返回
装置整个展示的可视范围
这也发生在iOS 9上
无论您的app正在全屏操作或在多重任务中被重新调整了尺寸
一个真正重要的改变是该UI窗口边界
好吧它返回您的窗口边界
但是您的窗口边界不总是与该设置的屏幕边界相同
例如 当您的app在多任务执行中被调整大小
另一个重要改变是
您的窗口框架原点总是在左上角
（0,0）
<br/>不管您在屏幕的左侧运行
还是在右侧运行
我们不希望您担心您在屏幕的哪一边运行
或者您正在运行其他哪些程序等等
我们只希望您关注您的app使用体验
现在让我们来谈谈在您的app被调整的时候
哪些不同类型的转移可以发生
举个例子 在iOS9中完美表现多任务执行的app
全新的Notes app
这是在iPad上新的Notes app
作为一个slide overapp在运行
您会发现它看起来很像iPhone的Notes app
它显示单列的UI
我们称之为横向尺寸紧凑级
随后 用户可能会调整我们的app
而在某一点我们会改变哪个级别的体验是我们需要提供给用户的
请注意现在的Notes显示两列的内容
这是相同的常规水平尺寸就如我们之前看到的那样
请留意注释如何改变了该app的信息架构
以在左侧显示您的注意列表并在右侧显示一个注释
这类型的变换是您应该使用尺寸转换来影响的
关于这转换有重要的一点需要注意
并不是所有的尺寸调整都会导致尺寸变化
例如 如果Notes在iPad上以split view运行
而用户稍微调整了该app
这不会改变尺寸级别
它将仍然显示一个单列UI
为了不改变用户体验
Notes使用这个新尺寸来影响其视图的定位和排版
再看看我们把app弄得稍微小了一点
仍然是单列UI
UIKit已对我们当前的API作出了一些重要的变化
以使您的app更容易地采用它
我们鼓励您使用的其中一种技术是是自动排版
UIKit和AppKit的声明视图布局体系
自动布局让您使用限制来定位您的观点
然后当范围更改时自动排版将重新设置适当的中心和框架
这真的很容易使用
在新的iOS 9里我们增加了一些伟大的新限制便利
API创建自动排版限制变得非常简单
此外 如果您使用领先和尾部排版属性
在您的app里您将得到很多从右到左的免费语言支持
我们看到的另一个帮助app调整的重要领域
是以易读性的形式呈现的
我们在UIView上引入新的API
“可读性内容指南”
这将返回一个UI排版指南
它代表着一个UIView的可阅范围
这意味着 如果您使用这个可读性内容指南定位您的观点
它们将总是保持在可阅宽度内
举个例子
在这个app示例中我们采用了可阅性内容指南
视图是全尺寸它的尺寸是整个iPad
但可阅性内容指南提供了足够的间隔
以确保文字是是很容易被阅读的
可阅性内容指南的一个很大的特点
是会自动调整
这取决于当前app的尺寸级别和装置
它与动态类型也配合地相当完美
这是我们鼓励所有app采用的
您可以决定是否使用自动排版
许多iOS app中常见的组件是UI表视图
我们想让可阅性在那里也很容易被使用
所以我们在UI表视图推出了新的工具
“可阅宽度决定单元排版间隔”
当此属性设置为是时
您的表视图的单元内容外观将有排版的间隔
相对于那些边距设定这样的内容制定
是给用户一个合适的可阅的宽度
这意味着 通过简单地使用排版边距
在您的UI表视图的单元内容呈现中
其内容在您的单元中 会以一个合适的宽度在iPad上全屏运行
或在一个例如纵向iPhone的小屏幕上运行
现在 我们已经谈到了多任务执行的一些很大的改进
我想把它交给我的朋友兼同事雅各布肖
来谈谈UIKit里什么在改变以及一些您的app应该遵循的最佳实践
雅各布？
谢谢 彼得
我想告诉大家一些为了支持多任务执行的iOS改变
还有一些运作已变更的app的最佳实践
所以去年我们要求
您通过使用特征和尺寸让您的app普遍通用
您可以看到更多的相关信息
呈现在“与UIKit创建普遍化应用套件”去年的谈论中
那么现在iPad的多任务执行就在这里到底发生了什么变化？
其实答案是没有多少
仅此而已请尽情享受这会谈
好吧 所以有几个重要的变更是您必须要牢记的
这能给您的app一个很棒的多任务执行体验
让我们来谈谈当中的一些要素
让我们先从方位开始谈起
你们有多少人的app代码看起来是这样的？
没关系这是一个免判定区域
这种代码在过去有很大的意义
它让您的app在纵向或横向时有一个不同的排版
以便真正最佳地利用空间这是您可以用到的
但是您要想想这如何运行于iPad上的多任务执行
例如 这里虽然iPad本身就是横向的
我们并不希望在这里使用横向版本的排版
因为我们有太多的垂直空间
这让我们使用以前的排版更合理
我们称那为纵向排版
因此在多任务执行中最好避免过度考虑尤其是关于界面方位要素的
让我们来看看您可以怎么做来应对这种变化
为了更好地理解这一点
让我们来仔细看看在旋转过程中发生了什么
首先让我们来看看一个iPhone的旋转
当装置旋转时您的app将被调整并与其一起旋转
而实际上我们可以把这个转化分成两部分
首先您的app被调整成新的内容的尺寸
然后它实际上是旋转了方向其实只是用户看到了正面
现在我们可以在iPad上做一些相似的旋转 包括多任务执行
再次 这是旋转本身的样子
我们首先可以将它拆开为首先是内容调整尺寸
然后是旋转
现在当用户在查看此旋转时这两个变化将同时发生
但是不妨想想把它们当作两次独立的变更
这样做的一个很大的好处是
您确实可以用多任务执行的尺寸调整共享很多东西
在这里 相同的事情正在发生
只是尺寸调整部分而不包括旋转
因此当用户调整app时
它仅仅是一个内容边界尺寸变化
因此在过去如果您使用的是界面方位
明确地说我会鼓励您做而不是去思考您该怎么处理相关的视图尺寸变化
针对于这类型的排版变更
另一个很好的选择就是考虑使用垂直或水平尺寸
不管用其中哪一种方法都能让您的应用程序非常契合地运行多任务执行
那么接下来就让我们一起来仔细看看
类似旋转和多任务执行的尺寸调整的转变
以前我们有提及您的应用程序的相关旋转
但是这些回调都明确地运行界面的方位变更
因此相对的在iOS 8我们推出了新的相关回调
以针对特性组合或视图尺寸的变化
我们强烈鼓励您使用这些
现在为了更好地了解这类旋转转移的发生
让我们来看看时间表在这当中的转变
让我们从旋转开始谈起
现在我们可以把这个旋转转移分成几个不同的阶段
首先我们将设置即将产生的变更
然后我们将创建我们将给用户展示的动画
然后我们将实际运行这些动画
而这一阶段是旋转发生时该用户实际看到的部分
接着当一切都完成后我们要进行一些清理
现在当转移中的尺寸与其尺寸级别实际上为您的app变更了
此为最后的“设置”阶段
所以现在我们已看见各阶段的这种转变
让我们来看看这些回调又怎么融入
所有转移回调都发生于
这些转移的“设置”阶段
现在同样的 当尺寸改变时这被称作“特征组合已变更”
在您的视图和视图控制器里
现在两个转移回调不只给您有关即将发生的更改的信息
它们也给您的app带来一个转移协调
转移协调可以使用的API来添加自己要运行的动画区块
作为主要动画的一部分
如果您那么做它们将设置于“创建动画”阶段
同样的 如果您添加完整区块到转移协调它们将在最后运行
作为“清理”阶段的一部分
现在请留意 在您的app的“运行动画”的明确阶段没有任何回调
这是因为它一般能比较好地执行您想要的那些任务
不论是在这些转移的开始或最末端
所以现在我们谈过了旋转转移和一切事件发生的时间表
让我们一起来看看多任务执行的尺寸调整
现在这个转移过程中我们先进行一些设置
然后再创建一些动画
好了希望您能看见这里的这个图像
这些都是完全相同的阶段
而回调完全以与多任务执行的尺寸调整相同的方式发生
这就是关于新回调的特别好的地方
它允许您使用和多重任务尺寸调整相同的旋转代码
现在有一个重要的内容要牢记尤其是关于转移的尺寸调整
那就是您的app有一个时间限制来让您进行想要的变更
就像使app的启动
如果您的app花费过长时间来做出这些变更它将会被中止
但我敢肯定这不会发生在你们任何人身上
因此有一点要记住
如果您在您里的转移回调同时执行这两种
那“将转换到特征组合”会发生在“视角将转移到尺寸”之前
这是非常有用的要牢记
然而如彼得之前提到的有一些多任务执行的尺寸调整当中
您的app只有尺寸会更改
而尺寸级别是保持不变的
当这种情况发生时特征组合不会改变
所以我们不会采用特征组合的回调之类的方法
我们只能称之为“视角将转移到尺寸”
您仍然可以使用转移协调的API
以添加到动画和完成块
现在类似的有一些情况下
就只有特征组合会在您的app上发生变化
但尺寸将保持不变
这很可能发生例如当您改写视图控制器的特征组合时
所以您在实施这些回调时
请确保它们当中只有仅仅一个被调用因为事实上其它也可能被同时调用
这就是转移
接下来让我们看看窗口
特别是UI窗口
一般情况下当您的app被启动后
您将创建一个新的UI窗口并给它一个框架
这同等于您的主界面画面界限
那么当这种情况发生时
如果用户调整您的多任务执行过程中的app
那么该用户界面窗口的框架将自动调整其尺寸
以匹配新的app尺寸
而这将继续下去只要用户调整您的app就会发生
但是如果您创建一个UI窗口
它的大小不同于屏幕上的界限
就在您的app被调整尺寸的时候那么我们会把窗口调整到相同的尺寸
正如彼得所说
原先的UI窗口处在左上角即使您的app被调整了尺寸
因此所有的UI窗口都将在您app的其余部分运行
现在一般来说在过去做一个全屏尺寸的窗口
您必须要创建UI窗口并明确给它一个框架
这还要同等于主UI屏幕的界限
而您仍然可以做到这一点凭借iPad的多任务执行
但在iOS 9我们已经把这变得更简单
现在您可以创建一个新的UI窗口
而不经过任何的明确框架
我们将正确地调整其尺寸以符合您的app当前使用状况
再自动调整其尺寸
用于所有的多任务执行尺寸调整
好的现在让我们一起来看看这绪论
在iOS 8中我们引入了UI演示控制器
这是一个了不起的类别它用来制作特制的个性化演示
或用于运行自带系统的演示
您可以看到“进去看看演示控制器”
这是去年WWDC的一个讲座您可以了解更多信息关于这类使用
一个关于演示控制器的重大事件为
多任务执行是对自适应性的支持
因此举例来说您可以在iPad上展现弹出式演示
当您的app的尺寸级别变更
在这种情况下比如紧凑的水平尺寸
就会自动变换该演示文稿为一种适当的风格
所以在这里我们已经适应了一个全屏模式的风格
而这种情况发生在装置之间
例如如果您在iPhone上执行同样的弹出式演示
这也会自动以全屏幕模式的风格展示
在iPhone 6+的景观方面
我们同样会把它做成一种表格来展示给您
而且所有的这些改变在您的app当中自动发生
只要通过使用“视图控制器演示”就可以
然而您可能也想要深入了解这些变化是怎么发生的
例如在这个app中
当我们在全屏模式中以弹出式窗口演示
我们希望在导航栏显示一个“完成”按键
以便用户可以关闭该演示
但是当我们使用原生的弹窗呈现风格时
我们并不需要显示那个“完成” 按键
因为用户可以通过点击弹窗外的任何地方来关闭它
而且我们可以做出这类的变更
借助“自适应演示控制授权”API
事实上在iOS 8.3中我们引入了一些新的方法到这个草案中
当您的视图控制器演示被采用时这些方法让您能控制更多发生的变更
这样您可以做类似于隐藏和显示导航栏
或其他任何对您的app有用的变更
现在最后关于弹窗演示请务必要特别记住的是
从弹窗出来的箭头指向那个弹窗正确的来源
这特别重要
尤其当您的app在横向紧凑和常规尺寸级别中适应时
您可以很容易地做到用一个弹窗演示控制器API
不论是设置工具条按键对象
还是在源代码方阵当中设置源代码视图
这就是演示的呈现了
我最后想要告诉您关于多任务执行当中键盘的变更
现在当用户用您的app进行多任务执行
如果他们点击到文字区域像地图中的搜索条
那么键盘会确实地出现在用户正在交互的所有app的顶端
这意味着它对您真的很重要
它让您要考虑是否要把您app的一部分移出键盘
以确保用户依然可以与它们交互
您可以通过UI键盘 通知API实施
就像您在过去做的一样
您可以用这些通知变更您的app
比如设置滚动浏览内容插图
或者移动重要的UI元素以维持可见度
所以举例来说 在这个app当中
我们可能想要移动评论和评价视图以确保其仍然可见
而且这真的是一项重要的变更
因为在过去您的app唯一能够与键盘交互的时候
就是它明确地自己显示出键盘时
但现在有了多任务执行
用户采用的其他app就可以促使键盘显现
所以您会想要考虑
是否app中的任意一个视图都需要移动其UI
以在键盘显示的时候仍维持可见度
以下是一些有关iPad多任务执行的变更和最佳实践
几个重要的事项要牢记
在您的app旋转的时候务必考虑其尺寸和尺寸级别而不是方位
还有要思考您如何针对位置转移变化做出协调
比如旋转和多任务执行的尺寸调整时
最后使用自适应弹窗演示
好让您的app契合运行于我们所有的装置
以及它被使用的各种环境当中
现在我要交给库尔特雷维斯
让他来告诉你们如何最有效地利用多任务执行
谢谢
谢谢您 雅各布谢谢您 彼特
那么现在您知道您的app如何以及为什么能够采用多任务执行了
您知道什么改变了其实并不多
您知道该去做什么不该去做什么
那我在这里告诉大家你们的app该如何有效利用多任务执行
并传送一流的体验给您的用户
您的app确实需要自适应性设计
而我将重申三我们之前说过的事情
首先 您的app应该是普遍通用的
您的app应当能在iPhone和iPad上运行
其次 不要再想像这是iPhone和iPad的用户体验
想象它们是紧凑和常规宽度
因为现在紧凑宽度已经可以在iPad上体验得到
最后 使用自适应性在它们之间进行更换
尤其在用户调整您的app尺寸时
这样设计的自适应性的挑战
是为了让您的app能自行适应各类动态的尺寸变化
接着我会给您两样东西事实上为六大策略
您的app可以采用以使其更加灵活以及更能适应动态的尺寸变更
接下来我会谈及可能出现的一些细节
一些您在采用多任务执行中可能会遇到的事项
和如何处理这些事项的指导方针
那么我们开始
第一条策略 灵活
不要辛苦地编码尺寸不要擅自假设
您的app应当着眼于它的尺寸
并在那个基础上做些什么
而且它应该对尺寸变化有所反应
唯一能找出您的app灵活与否的方法是真正地去尝试尝试延伸
我们在这里做一些运动一点点的热身
您会发现有一张瑜伽垫就在您座位前方的地面上
请把它拿出来！
不不幸的是我只是在说您的app
但我们还是会做同样的事情
我们会让您的app做一个热身练习
我们会运行所有的多任务执行场景
而且我们会小心地观察您app的UI
请留意哪些好用 哪些不好用
当您在做这个时集中注意力到布局排版上
您的视图是什么
不要担心这些动画或其它类似的特别是如果您是在模拟器上这么做
因为您的体验会跟真的装置上不一样
让我们开始吧
您的app采用了多任务执行
您可以开始用Slide Over启动它
然后变更您的app尺寸为更大
这是一个尺寸变更
再让它变大它会变成全屏 另外的尺寸改变
现在Slide Over另一个app
并按下按键以使用Split View
您的app会变小
最后让我们旋转整个iPad
这样我们就得到一个尺寸变化
这会产生旋转方位也会变更
而且这是动画的
那么这就是所有可能发生到您的app上的事项
而且您应该在app所有地方进行尝试
以确保它可以处理这些事情
当您尝试这个时或许您会发现有些东西 好用有一些不好用
所以为了帮助修复这些不好用的东西 好好听着
第二条策略使用自动布局排版
这应该并不奇怪
这是为了让您的app UI变得灵活的方法之一
所有您需要做的就是提供视图和限制条件
系统会考虑所有的限制条件
并在那些基础上设置您的视图框架
所以您不用辛苦地编码任何事项
您也可以使用页边距和UIK给您提供的指导方针来构建这些限制条件
而且在iOS 9中 有新的API可以促使这整个过程更便利
那么想更多了解这个
请参考星期四的两个自动布局排版的讲座 我保证您会学到很多
那么让我们看看不久前的这个例子
我们有...
不好意思
我们有这个app显示一些文字而且它有这些可阅性页边距
现在当您的视图尺寸变大时这将如何运行
但可阅性内容指南变小了
我们并不希望您的app有所顾虑
“这是一个iPad 它又大又宽我需要用不同的方式处理这些页边距”
您只需要用这个指导方针它就会自动运行
所以这就是如何在代码中做这个
首先做一个标签我们会把我们的文字放在里面
第二步标签来到了一些超级视图里
我们会从超级视图中得到可阅性内容指南
现在我们会设置一些限制条件让此标签适合该可阅性内容指南
那么这些限制条件是一个排列
而我们实施的第一项就是让这个标签引领锚杆
这是引领的一侧
相当于这个可阅性内容指南的引领锚杆为引领的一侧
记住这是使用新的iOS 9的方便API
我们对两个侧边的拖拽锚都做出同样的运行
现在这个标签的宽度会匹配可阅性内容指南的宽度
接下来我们需要做的所有事项就是激活这两条限制条件
再让自动布局完成其余的事项
我们并不需要做完所有的事项
当然我也可以用Xcode做这个
我可以用我的画板进行设计这会将我引导到下一个策略
充分利用Xcode支持的尺寸级别
您可以设置您的UI在不同的尺寸级别中运行不同的事项
比如说使用Interface Builder
当您在编辑一个画板或者XIB文件时
您可以从不同的尺寸级别添加或删除用户限制条件
而且您也可以改变视图的属性比如字体的大小等等
您也可以使用资产目录的优势
让应用不同版本的图片处于不同的尺寸级别
记住这不仅可应用在您第一次初始化加载您的UI
同样也可以用在动态尺寸变更时
我们记住这所有的幕后事项当尺寸变更时我们都会使用这些
我再举个例子
这里我已经做好了画板也设置了有两个视图的UI
这有一张图片和一些文字
我把它们并排在一起我让限制条件来执行这事项
我在默认的UI运行我的app
使用的是“任意宽度”级别
我想要做一个版本那会有一点有别于紧凑尺寸级别
那么我要做的就是点击控制我变更它到紧凑宽度
我得到了同样的两个视图
但我改变了我的限制条件让这个布局排版变得不一样
现在图片在顶部 文字在底部
我通过点击控制底部做这个将它改变到紧凑级别
而且您还可以看到有蓝色文字在告诉我正处于一个不同的 更特殊的模式
现在我可以在这个点运行我的app
并尝试改变它的尺寸看看会发生什么
但很好的是实际上我并不需要真的这么做
我可以在Xcode看到动态的预览
仅仅使用Xcode中的窗格助理功能
您就可以同时处于不同的配置下在您的记事板中拥有不止一个预览
所以这里我用iPad三分之一宽度
即Slide Over和app时所发生的事 即紧凑布局
在我看着iPad全屏的同时也看着其他的布局排版
所以您想做多少次这预览就可以做多少次
仅仅点击角上的“+”按键
并选择iPhone上的任意尺寸
iPad上的任意尺寸的多任务执行配置
您可以立刻看见它们而且它们都是动态的
我们也可以使用资产目录
我会展示它如何运行
这里我已经有一个资产目录我在看着一个特定的资产
我会把这设置为普遍通用的以便它能在所有的装置上运行
然后我会做和之前差不多的步骤我会设置两个不同的版本
一个默认的用于任何宽度另一个用于紧凑宽度
现在您可以看见我已经取得这两个图片
这是两个不同的版本
我可以拉一个大星星来运行用于任何通常宽度的配置
我拉一个小点的图片作为紧凑宽度
这就是Xcode
现在您也可以顺便在文档或代码
如果您有兴趣的话 试试看这么做
就这么使用自适应性回调的优势
以下是运行的方法
如果您在一个视图控制器中
您可以重载“将转移到特征组合”
我们会给您更换的新组合
又或者您可以重载“视图将转移到尺寸”
我们就会给您更换的的尺寸
现在比如说我想要我的app根据不同水平尺寸级有不同的UI
我们来重载“将转移到特征组合”
我们必须要做的第一件事
叫“超级无敌”让系统进行常规运行
然后我们添加我们的代码
我们将查看这个新组合的水平尺寸级别
并且根据它是哪个级别我们会做一些不同的事
这里是您存放代码的地方
如为紧凑级别变更您的UI以用于紧凑宽度
如为常规级别变更您的UI以用于常规宽度
如无所显示那就意味着我们在创建和摧毁之间
那就什么也不要做
现在比如说我有那个类似的更换但我想要它和其他事项一起进行
比方说当我旋转iPad时
我想要在改变的同时让动画旋转到侧边
是这样的
我们以同样的方式开始
用“超级无敌”同样的方法重载
然后不直接做这个变换
我们提供一个区块
然后再把我们的变化放在该区块当中
在这里我们得到一个区块叫做“动画”
接着我们使用这个代码变更里面的UI
然后把这个区块放到协调的“动画侧边的转移”方法里
这个方法会关注该区块并在动画设置完成的同时调用它
您在当中完成的一些更换都会由该区块自动地转换成动画
这就是如何在低水平的代码中运行
我会讲一些高级API尤其是UIKit提供给您的
首先正如雅各布之前提到的自适应演示控制器
其次是经典的UI表格视图和UI组合视图
这些让您能在小事物的基础上建立一个更大的UI
就像一个组合中的一个单行或单个元素
同样是iOS 9的新功能有个叫做UI堆栈视图
这能让您创建一个视图列表
并把它们放到一个垂直的堆栈或者水平的队列中
以及设置一些它们如何放置的参数
同样的想了解更多的话请查看第一个自动布局的相关讲座
高级API的最后一点是它大得足以拥有自己的数字
那就是UI SplitView控制器
我们在日常的app中用得很多比如邮件 信息和注释
如果它对您的app也有用那就使用它
我把邮件作为一个例子
这里我们看着全屏iPad
您可以看到该app被分成两个部分
注意这有别于您看见的split view多任务执行
这是一个app
那么我们有一侧是可以查看的信息列表
您可以选择一个
另一方面我们有一个视图展示了相关细节
在这情况下这是一个特定的信息
所以如果您的app能处理一个相同或类似的配置
我们极力推荐您采用SplitView控制器
因为它会在多任务执行当中为您处理很多事项
我稍后会展示一些
但首先这是您如何采用它
您在您的app内创建一个UISplit View控制器
这是典型的根视图控制器是您最高等级的UI
它是一个容器视图控制器并且有子控制器
我们称它们为主控制器和二级视图控制器
在邮件里有一个表格视图包括了信息列表
而在二级控制器的一侧有一个自定义的视图显示您的信息
当中的一条信息填充在其中
您提供视图控制器
UI Split View控制器
专门决定在哪里及在什么时候显示这两个视图控制器
回到邮件
在全屏时我们有很多的空间我们可以并列呈现这些空间
如果用户切换到一个不同的app
然后从侧面把邮件滑动出来的话会发生什么呢？
在那种情况下它是紧凑宽度 空间更小
那么这个Split View控制器就会做出自行调适
这决定了它会显示二级视图控制器以启动这个邮件信息
也提供导航控制器
以返回其它列表或主列表
一旦用户选择了其中之一他们就可以再次回到之前的二级列表
这些视图控制器依然是独立的它们并不需要做这些选择
所以这里要注意的事项是
这里有着我们之前看到的两个完全相同的视图控制器
不同之处在于它们变小了
而且我们在以不同的方式导航运行
因此如果您想要尝试这个
您必须确定在您的电脑中有这个代码
只需要做一个新的Xcode在其中做一个新的iOS应用程序
并使用“主从复合应用程序”的模板
它就会自动设置一个画板
其中包括一个Split View控制器
以及每个侧边的视图控制器
您可以在这上面创建您自己的app
或者你也可以仅把它作为一个测试台来使用搭配Split View控制器
再看看它能做什么
这就是我会给您的6条策略
请尽情合理地混搭它们以在您的app当中发挥作用
您可以看看我们的代码示例以比较实例
这是一个app叫做“自适应图片”您可以在开发者网站上搜索它
在所有型号的iPhone和iPad上
以及iPad的多任务执行上测试它看看它能做什么
这就是策略
如果您使用这些您的app会开始做出合适的尺寸调整
这或许会运行得很好
但您也可能会遇到一些新事情
所以一旦您采用了多任务执行这些新事情很可能就是一些小陷阱
我会给您一些指导方针来妥善处理它们
第一条指南 也是最重要的
用户控制您的app尺寸
用户总是掌握着它们的大小
所以您的app不能制止尺寸变换发生
我知道有时候这很不方便但这也是您的app所不能阻止的
同时您的app不能促使尺寸的变化
您不能说“我的app现在想要全屏”这种方式没有用
而且我想说尺寸变化可以在任何时候发生
用户可能在任何时间选择改变app的尺寸
这就像按Home键一样
他们可以在任何时间这么做
那么我们该如何应对尺寸变化？
好的 我们的指南是保持用户导向
不要让用户迷茫
我会用一个真实的app具体实例解释这状况
我有一个待做事务列表app
它有一个我需要完成的事项串
而且我已经把它们分成三个目录
家 工作和学校
现在我将要穿上我的设计帽
我选择做一些UI用于常规宽度和紧凑宽度
在常规宽度 我想 “好的把它们放在滚动视图中是合理的
我们把它们彼此叠放
我们让用户滚动浏览它们”
在紧凑宽度 我想 “好的我们一次仅显示目录中的其中一个
每个都在不同的页面而且让用户滚动页面
但一次只有一个是可见的”
那么这很好
我有了两个UI
但现在我需要想该怎样从一个到另一个地变化
比如说我正在查看学校
而用户把app的尺寸更换成常规宽度
我该怎么做？
好 如果我仅仅做一个新的滚动视图并把我的事项放进去
它很有可能滚动到非常顶端在(0,0)位置
学校于是变得不可见了
那用户可能迷茫了我们并不想那么做
app应当选择并制作一个好的选择和滚动以便相同的事项再度可见
所以学校是可见的
这不会自动发生您的app需要做出相应的选择
比如说用户持续使用app他们往下滚动一点
他们写一些代码再完成运行
很好今天写了一些代码
然后他们决定把app的尺寸调整成紧凑类
我们该怎么做？
您会看到所有的三个目录都同时出现在屏幕上
所以我们可以做一个示范让它们中的任意一个可见
但在这个示范中 这或许很合理
当他们最后一次检查工作中完成的事情时
他们依然看着它并且没有作出任何控制
那我们应该选择去那个页面
不过这里有app必须做的决定而您的app也必须做出类似的决定
所以保持用户至上
千万不要做出突然的改变
尤其当一个尺寸改变到另一个尺寸时
尝试保持同一事项是可见的
您或许需要用新的方式来呈现你的聪明才智
您或许需要做点什么比如持续留意用户最近最常看或点击的
这是您之前不需要做的
再说这也是特别重要的
尤其当您从大尺寸更换成小尺寸因为您不能显示之前的一切事项
所以说调整尺寸在这里是另一件可能会发生的新事情
尤其一旦您的app采用了多任务执行
譬如说您的app处于非活动状态用户按下Home键
随后您app的尺寸可能会有变更
该系统或许会依据不同的尺寸级别做一个app的屏幕截图
当这发生时和之前相同的自适应方式就会被调用
但没有什么是可见的用户不会看到任何东西
当这完成后
系统将恢复到原始尺寸
现在这或许有点棘手 但我已经给了您一些相关的指南去妥善处理
接下来我会多展示一个实例
我又拿出了我的app
我处于活跃状态它是紧凑宽度而我在看着工作页面
现在用户按了Home键
系统会马上做屏幕截图
现在这不是一个新事情了我们已经做这个很久了
即将发生的是用户会截这个屏幕截图
接着该app会恢复活跃状态
我们会先展示该屏幕截图再像之前那样淡出到实时的app
记住这个屏幕截图就在这里我们在工作当中它是紫色的
现在有了多任务执行
系统会调整我们的尺寸至常规尺寸并截个屏幕截图为己用
现在系统将把我们的尺寸调整成紧凑类别
此刻app必须做出选择了
我会给您展示如果做了不好的选择和好的选择分别会发生什么
以及这两者之间的不同
我们先做不好的选择
我们回到紧凑类别
我的app决定“好的 家在顶端所以我们会再一次显示家”
app稍微保持一会儿不活跃状态
接着用户返回并重新激活了app
然后系统再次显示了步骤3的屏幕截图
记住我们紫色是在工作这是相同的屏幕截图
现在这个在家里在家里的系统会从这个淡出到活跃状态的app
这看起来不太好
这真的是一个丑陋的的动画而且没有做到用户想要的
他们在一个地方然后离开app
接着又返回于是显示了其它地方
这不好
所以我们应该做的是从头再来
我们在常规宽度系统将把我们的尺寸调整至紧凑类别
我们应当调整尺寸...
我们应当把app调整回原先不活跃时的状态
然后用户激活这个app
系统显示屏幕截图这是相同的事项
我们淡出到活跃的app这是同样的事项
无缝连接
那么这就是您想要处理问题的方式
当app不活跃而且尺寸又变换时保持同样的外观
您可以这么做...
当您的app处于不活跃状态时记住您的尺寸和状态 在哪一页
当您的尺寸变换时而您仍处于不活跃状态
并且尺寸又返回到最初尺寸
那个应用记得您的状态回到最初的页面
那么我们进入最后的两项指南
这会关系到接下来我们将谈及的多任务执行相关讲座
不过首先我想介绍一些术语
那么有两个app在运行中
主app是那个全屏启动的
这就是您一般在app运行时所想的
当您Slide Over另一个app 我们称作第二app
现在不管您怎样调整app的尺寸它们都保持不变 它们始终是一样的
通常我们用完全相同的方式对待这些app
它们确实没有太大区别
区别就发生在当我们讨论资源时那不可被轻易共享的两个app
其中之一可能是一个终端显示
如果您用AppleTV衔接把您的iPad插入电视或使用飞机镜像
您可以在iPad和外接屏幕上同时显示UI
使用多任务执行只有主app可以看见外接显示
不是第二app
通常app使用外接显示会在iPad和外接显示屏上分隔它们的UI
当一个显示屏被激活又或者当用户接入装置时
那是他们所期待的
他们只是接入什么装置然后就会期待什么事情会发生
现在的多任务执行有一个怪癖
比如说您的app是第二app
当用户快速调整其尺寸至主app时
只要它处于全屏幕状态
这时候您的app就会得到一个通知
说有屏幕可用并且外接屏幕可用
如果您的app选择快速打开其UI并且在iPad和其他屏幕分隔显示
这或许不是用户所希望的但这完全取决于您的app
那么在您的app中试一试
确保您所做是对用户有用途的事项
最后一项指南是关于性能方面的
同样的我们有关于这方面的完整讲座所以我只会提及一些要点
我们之前说过
如果您的app对于尺寸转换无法做出适当的应对 它将会被终止
所以在尺寸变更时尽您所能少运行程序
如果您有任何做起来比较慢的事项
采用完成区块和“视图将转移到尺寸”或“将转移至特征组合”
r同样的在动画区块当中
不要任何做多余的布局排版也不要调用“在需要时布局”
系统会在适当的时候做出布局排版并且妥善利用这点优势
仅仅调用“设置必要布局”来完成布局因为布局相当耗费时间
这就是策略这就是指导方针
现在您已经知道很多关于如何让您的app更优秀地运行多任务执行
您已经知道怎样和为什么要在您的app当中采用多任务执行
您知道自适应性自从iOS 8就已开始普及
我们在iOS 9当中做的并不是一个很大的延伸
您知道怎么提供好的用户体验
您有技术
因此您的用户想要采用多任务执行让他们使用吧
想了解更多信息请查看我们的文档
特别是“在iPad采用多重任务处理改进”
查看我们的代码示例
您可以和DTS即研发这论坛的技术支持对话
一般的查询 请询问库尔特罗赫特他是我们的传道士
如果您有更多问题我们还有更多的讲座
再说一次如果您想找到picture-in-picture或共享相机
请到去“媒体为基础的多任务执行app概要”
如果您想知道怎样做一个好公民
比如通过app共享CPU或存档资源
请去“优化您的多任务执行APP”
最后到“Cocoa Touch与多任务执行室”来拜访我们吧
我们会针对您的app协助您
感谢大家今天的到来一起与多任务执行向前迈