00:00:22.055 --> 00:00:25.959 
網絡擴展和VPN新功能

00:00:32.499 --> 00:00:33.767 
謝謝

00:00:34.268 --> 00:00:35.369 
大家早上好

00:00:35.502 --> 00:00:37.171 
歡迎大家學習第717課

00:00:37.738 --> 00:00:41.074 
我叫傑米·伍德今天我和
同事湯米·保利一起

00:00:41.308 --> 00:00:44.144 
我們是Apple核心操作系統
網絡部門的網絡工程師

00:00:44.912 --> 00:00:48.115 
我們很高興向你們介紹

00:00:48.415 --> 00:00:50.017 
網絡擴展和VPN的新功能

00:00:51.785 --> 00:00:55.722 
你們可能會問什麼是網絡擴展框架？

00:00:55.789 --> 00:00:58.025 
它能爲我提供什麼功能

00:00:58.225 --> 00:00:59.660 
供我的App使用？

00:01:00.694 --> 00:01:04.230 
網絡擴展框架提供大量的API

00:01:04.765 --> 00:01:07.901 
可以定義和擴展Apple平臺

00:01:07.968 --> 00:01:08.969 
的核心網絡功能

00:01:09.803 --> 00:01:12.005 
讓我們來看一些具體的例子

00:01:12.072 --> 00:01:15.442 
來瞭解如何使用
網絡擴展API創建App

00:01:16.710 --> 00:01:19.780 
如果貴公司在公共區域
部署Wifi熱點

00:01:20.147 --> 00:01:24.618 
就像酒店、機場和咖啡館一樣

00:01:25.385 --> 00:01:28.789 
你可以使用任何熱點
幫助器 API來創建APP

00:01:28.856 --> 00:01:30.424 
以連接到Wi-Fi熱點

00:01:32.326 --> 00:01:34.995 
如果貴公司創建一個專用vpn服務

00:01:35.162 --> 00:01:37.764 
讓你的用戶安全地瀏覽互聯網內容

00:01:38.432 --> 00:01:42.135 
可使用
NEVPN管理器API創建APP

00:01:42.202 --> 00:01:44.004 
以連接到你的個人VPN服務

00:01:45.873 --> 00:01:49.176 
如果你的公司
創建遠程訪問VPN服務器

00:01:49.877 --> 00:01:52.646 
可以使用任何隧道系列API

00:01:52.880 --> 00:01:55.015 
創建APP以連接到VPN服務器

00:01:56.984 --> 00:02:01.955 
最後 如果你的學校想要
創建網絡內容過濾器供學校使用

00:02:02.022 --> 00:02:03.957 
以保護學生安全地上網

00:02:04.825 --> 00:02:07.694 
你可以使用過濾器提供者系列API

00:02:07.761 --> 00:02:11.732 
創建APP過濾網絡內容

00:02:15.335 --> 00:02:22.176 
今天的課程我將會講解網絡擴展API

00:02:23.677 --> 00:02:27.614 
讓我們來深入講解熱點幫助器API

00:02:32.186 --> 00:02:38.325 
熱點幫助器API用於創建APP
以連接到Wi-Fi熱點

00:02:40.594 --> 00:02:42.029 
你們可能已經知道

00:02:42.095 --> 00:02:44.398 
一些API可用於創建APP

00:02:44.598 --> 00:02:46.533 
來連接到Wi-Fi熱點

00:02:46.600 --> 00:02:48.802 
它們包括
CNSetSupportedSSID

00:02:48.869 --> 00:02:51.004 
CNMarkPortalOnline 
API

00:02:51.405 --> 00:02:53.440 
但是這些API具有侷限性

00:02:55.742 --> 00:03:00.514 
其中一個問題是可以傳遞給
CNSetSupportedSSID

00:03:00.581 --> 00:03:02.482 
的熱點列表數量受到限制

00:03:02.583 --> 00:03:05.752 
如果你有一個WiFi熱點全局網絡

00:03:05.819 --> 00:03:08.322 
並且想將你的APP
連接到網絡 你很快就會

00:03:08.388 --> 00:03:09.623 
達到數量限值

00:03:11.225 --> 00:03:12.593 
另一個缺點是

00:03:12.659 --> 00:03:15.028 
爲了調用
CNMarkPortalOnline

00:03:15.162 --> 00:03:17.130 
用戶必須手動運行應用程序

00:03:17.965 --> 00:03:22.836 
更糟糕的是並不會有提示信息
來提示用戶運行APP

00:03:23.270 --> 00:03:24.972 
這不利於用戶體驗

00:03:25.072 --> 00:03:26.907 
用戶並不知道他們需要進入APP

00:03:26.974 --> 00:03:28.642 
才能連接到WiFi熱點

00:03:30.210 --> 00:03:34.548 
因此我們引入熱點幫助器API

00:03:34.781 --> 00:03:36.350 
來解決這些限制問題

00:03:37.317 --> 00:03:39.920 
實現方法是首先將你的APP

00:03:39.987 --> 00:03:41.722 
作爲一個熱點幫助器註冊到系統

00:03:42.990 --> 00:03:46.994 
然後當設備進入WiFi網絡範圍之內

00:03:47.060 --> 00:03:50.464 
掃描WiFi網絡或者用戶選擇他

00:03:50.531 --> 00:03:54.968 
進行連接時 系統將調用你的APP

00:03:55.035 --> 00:03:57.004 
在後臺運行APP調用你的APP

00:03:57.538 --> 00:04:00.474 
讓你的APP有機會聲明爲具有
一定機密等級的Wi-Fi熱點

00:04:00.874 --> 00:04:03.911 
機密等級包括高、中或低

00:04:04.444 --> 00:04:07.714 
如果聲明爲高機密等級的熱點

00:04:08.215 --> 00:04:09.883 
系統將會提醒你

00:04:09.950 --> 00:04:12.586 
進行WiFi熱點身份驗證

00:04:13.287 --> 00:04:15.522 
它會定期要求你

00:04:15.722 --> 00:04:17.891 
保持身份驗證會話

00:04:19.493 --> 00:04:22.029 
熱點幫助器API還允許你

00:04:22.563 --> 00:04:28.535 
在設置APP時
標註在Wi-Fi管理器中

00:04:29.369 --> 00:04:32.139 
顯示的WiFi網絡
你可以使用APP名稱

00:04:32.206 --> 00:04:34.708 
或公司名稱標註這些WiFi網絡

00:04:36.076 --> 00:04:38.245 
這就是熱點幫助器API的功能

00:04:38.645 --> 00:04:40.814 
你可以使用這個API來創建APP

00:04:40.881 --> 00:04:43.016 
無縫連接到Wi-Fi熱點

00:04:45.886 --> 00:04:48.121 
接着來看NEVPN管理器API

00:04:48.522 --> 00:04:50.591 
你可以使用這個API創建APP

00:04:50.958 --> 00:04:53.060 
連接到個人VPN服務
用戶可以使用此服務

00:04:53.126 --> 00:04:55.495 
安全瀏覽互聯網內容

00:04:57.998 --> 00:05:01.902 
NEVPN管理器
API是並不是iOS 9的新功能

00:05:02.302 --> 00:05:04.938 
iOS 8已經有這個API

00:05:05.539 --> 00:05:09.776 
我們對這個API進行增強
讓這個API可用於

00:05:09.943 --> 00:05:11.945 
OS X和
OS X El Capitan

00:05:13.647 --> 00:05:16.884 
方法是先使用NEVPN管理器API

00:05:16.950 --> 00:05:19.653 
在平臺上配置和控制

00:05:20.254 --> 00:05:21.321 
內置IPSEC客戶端

00:05:23.223 --> 00:05:25.959 
你可以創建一個個人VPN配置

00:05:26.026 --> 00:05:29.296 
稍後我會講解個人VPN配置是什麼

00:05:31.498 --> 00:05:34.334 
內置IPSEC
客戶端支持IKE v1

00:05:34.401 --> 00:05:36.503 
和IKE v2密鑰交換協議

00:05:36.570 --> 00:05:38.172 
你可以使用其中一項協議

00:05:39.940 --> 00:05:44.811 
你可以配置VPN
以便在特定網絡條件下自動連接

00:05:48.148 --> 00:05:51.185 
作爲iOS 9和OS X El Capitan
中的新功能

00:05:51.251 --> 00:05:53.587 
你可以配置http代理

00:05:53.654 --> 00:05:57.157 
通過VPN隧道傳輸http流量

00:06:00.160 --> 00:06:04.064 
多個個人VPN配置可以共存

00:06:04.131 --> 00:06:05.933 
並且與企業VPN協作

00:06:06.333 --> 00:06:09.036 
假設用戶使用你的APP

00:06:09.102 --> 00:06:10.504 
連接你的個人VPN服務

00:06:10.771 --> 00:06:13.307 
他們可以安全地互聯網內容

00:06:13.807 --> 00:06:17.344 
並且可以訪問公司內部網絡的內容

00:06:18.212 --> 00:06:20.914 
當他們連接企業VPN時

00:06:22.749 --> 00:06:25.452 
所有供內部人員

00:06:25.519 --> 00:06:26.887 
使用的信息

00:06:26.954 --> 00:06:28.555 
將使用企業VPN傳輸

00:06:29.156 --> 00:06:30.457 
其他任何不經過

00:06:30.524 --> 00:06:31.592 
企業VPN傳輸的內容

00:06:31.658 --> 00:06:33.360 
將繼續通過個人VPN傳輸

00:06:33.727 --> 00:06:35.229 
個人VPN保持連接狀態

00:06:35.562 --> 00:06:37.631 
繼續通過隧道傳輸流量

00:06:39.633 --> 00:06:45.272 
是NEVPN管理器API提供的功能

00:06:46.773 --> 00:06:49.877 
我們還對NEVPN管理器
進行了其他方面的增強

00:06:49.943 --> 00:06:51.879 
即增強了IKE v2協議支持

00:06:52.412 --> 00:06:55.482 
IKE v2是一個很不錯的隧道協議

00:06:55.983 --> 00:06:58.085 
在這版本中我們讓它變得更好

00:06:59.920 --> 00:07:01.255 
現在我們還支持MOBIKE

00:07:01.855 --> 00:07:07.294 
我們可以將IKE v2隧道流量

00:07:07.728 --> 00:07:09.563 
從一個網絡接口0轉到另一個網絡接口

00:07:09.963 --> 00:07:12.933 
例如如果你的隧道

00:07:12.999 --> 00:07:16.436 
通過WiFi接口連接但是當用戶走出

00:07:16.503 --> 00:07:17.538 
WiFi網絡範圍時

00:07:17.604 --> 00:07:20.340 
設備可切換到蜂窩網絡接口

00:07:21.008 --> 00:07:23.143 
IKE v2隧道將無縫切換數據傳輸

00:07:25.546 --> 00:07:26.380 
非常不錯

00:07:30.684 --> 00:07:33.253 
現在我們全面支持IPv6

00:07:33.320 --> 00:07:35.155 
無論是在IKE v2隧道之內或之外

00:07:37.224 --> 00:07:39.126 
現在我們還支持IKE報文分割

00:07:39.493 --> 00:07:44.398 
從而使IKE v2隧道
能夠在各種網絡環境中更可靠地工作

00:07:46.166 --> 00:07:48.135 
另外還支持IKE重定向

00:07:48.202 --> 00:07:50.037 
使你能夠平衡
IKE v2服務器的負載

00:07:51.605 --> 00:07:54.007 
在進行這些增強之後

00:07:54.074 --> 00:07:55.075 
此協議變得更好用了

00:07:55.142 --> 00:07:56.510 
IKE v2的性能更優化

00:07:56.810 --> 00:08:00.013 
能夠在各種網絡環境中更可靠地運行

00:08:03.116 --> 00:08:04.985 
現在讓我們來看一些代碼

00:08:05.052 --> 00:08:06.854 
該如何使用NEVPN管理器API？

00:08:06.920 --> 00:08:08.856 
在這裏我展示一些代碼

00:08:08.922 --> 00:08:12.659 
代碼的功能是這個個人VPN配置

00:08:15.596 --> 00:08:18.699 
每個使用
NEVPN管理器API的APP

00:08:18.765 --> 00:08:21.368 
訪問一個個人VPN配置

00:08:21.435 --> 00:08:24.605 
這個配置使用一個
NEVPN管理器對象表示

00:08:25.205 --> 00:08:27.474 
首先我獲得共享管理器對象的引用

00:08:28.275 --> 00:08:30.544 
而且系統上的所有VPN配置

00:08:30.611 --> 00:08:32.578 
存儲在網絡擴展首選項之中

00:08:33.046 --> 00:08:35.048 
當我在代碼中處理配置之前

00:08:35.515 --> 00:08:40.821 
我需要調用完成處理操作
從首選項中載入這個配置 

00:08:42.722 --> 00:08:46.493 
在完成處理操作中
我首先要做的是進行檢查

00:08:46.560 --> 00:08:48.295 
查看我的配置是否存在

00:08:48.829 --> 00:08:51.965 
我查看管理器對象上的協議資產

00:08:52.533 --> 00:08:54.801 
如果它顯示爲nil就說明還沒有配置

00:08:55.002 --> 00:08:55.936 
我需要設置一個配置

00:08:56.470 --> 00:08:58.438 
在這裏我將設置一個IKE v2配置

00:08:59.206 --> 00:09:04.912 
然後填入所有的
IKE v2專有配置參數

00:09:06.647 --> 00:09:09.216 
完成後我將在管理器對象上

00:09:09.283 --> 00:09:13.086 
設置協議資產並且啓用VPN配置

00:09:13.187 --> 00:09:14.188 
在系統上 

00:09:14.521 --> 00:09:17.257 
一次只能啓用一個VPN配置

00:09:20.260 --> 00:09:22.029 
完成之後我將保存首選項

00:09:22.095 --> 00:09:24.831 
將配置保存到

00:09:24.898 --> 00:09:26.066 
網絡擴展首選項之中

00:09:26.133 --> 00:09:27.935 
並應用系統配置

00:09:28.168 --> 00:09:29.336 
以使用這些配置

00:09:30.270 --> 00:09:33.106 
在這裏你可以使用API手動啓動

00:09:33.173 --> 00:09:37.411 
和停止VPN隧道檢索VPN隧道狀態

00:09:37.678 --> 00:09:38.879 
以確定是否連接

00:09:38.946 --> 00:09:39.947 
或斷開連接等

00:09:41.215 --> 00:09:44.985 
但是爲了良好的用戶體驗
我們還需要

00:09:45.118 --> 00:09:47.321 
配置按需連接

00:09:48.222 --> 00:09:50.958 
利用按需連接功能你可以設置規則

00:09:51.358 --> 00:09:53.393 
說明何時應該自動連接VPN

00:09:54.962 --> 00:09:57.965 
因此在本例中我需要設置一個規則

00:09:58.131 --> 00:10:01.301 
規定當設備位於WiFi網絡之內時

00:10:01.368 --> 00:10:02.336 
應該連接我的VPN

00:10:03.804 --> 00:10:04.905 
因此首先要做的事情是

00:10:04.972 --> 00:10:08.041 
我需要創建一個按需連接規則對象

00:10:08.609 --> 00:10:10.911 
這個規則說明

00:10:11.044 --> 00:10:13.180 
當符合這個規則時將會連接VPN

00:10:16.083 --> 00:10:19.953 
接下來 我需要爲我的規則
設置接口類型匹配條件

00:10:20.988 --> 00:10:24.625 
當它提示設備位於
特定類型的網絡接口上時

00:10:25.192 --> 00:10:26.026 
即符合此條規則

00:10:26.093 --> 00:10:27.895 
我將這個網絡接口類型
設置爲Wi-Fi

00:10:28.095 --> 00:10:30.664 
當設備位於WiFi網絡上時
即符合此條規則

00:10:32.165 --> 00:10:34.067 
我將設置按需連接規則組

00:10:34.168 --> 00:10:36.036 
以包含這條新規則

00:10:36.503 --> 00:10:38.872 
並將結果保存到首選項之中

00:10:39.606 --> 00:10:43.777 
現在當設備位於WiFi網絡上時
將會自動連接我的VPN

00:10:48.048 --> 00:10:49.816 
這就是NEVPN管理器API的功能

00:10:50.117 --> 00:10:51.952 
你可以使用這個API創建APP

00:10:52.019 --> 00:10:54.021 
來連接到你的個人VPN服務

00:10:55.455 --> 00:10:56.957 
讓我們來繼續瞭解

00:10:57.024 --> 00:10:59.526 
隧道提供者系列API

00:10:59.993 --> 00:11:02.362 
你可以使用這些API創建APP

00:11:02.696 --> 00:11:04.631 
以連接到企業VPN服務器

00:11:08.135 --> 00:11:11.905 
爲此 你需要創建一個自定義VPN

00:11:11.972 --> 00:11:12.840 
協議提供者

00:11:13.674 --> 00:11:16.109 
這實質上是自定義隧道協議

00:11:16.176 --> 00:11:18.879 
的客戶端側實現

00:11:21.215 --> 00:11:23.550 
這些協議提供者作爲APP擴展運行

00:11:23.617 --> 00:11:25.853 
它們在後臺運行處理後臺流量

00:11:27.688 --> 00:11:31.091 
你可以創建兩種類型的隧道提供者

00:11:31.158 --> 00:11:32.993 
你可以創建一個數據包隧道提供者

00:11:33.660 --> 00:11:36.263 
這些隧道在IP層傳輸數據

00:11:38.065 --> 00:11:40.934 
你可以創建 或者說
你能夠創建一個App代理提供者

00:11:41.435 --> 00:11:43.303 
在APP層通過隧道傳輸數據

00:11:46.340 --> 00:11:48.942 
隧道提供者系列
API中的一些API允許你

00:11:49.009 --> 00:11:52.346 
在你的APP中配置和控制協議提供者

00:11:52.479 --> 00:11:54.948 
這與VPN管理器API相似可配置

00:11:55.015 --> 00:11:57.951 
和控制IPSEC客戶端API允許你

00:11:58.018 --> 00:12:01.021 
配置和控制你的自定義協議提供者

00:12:05.359 --> 00:12:08.962 
讓我們來深入瞭解
NEPacket隧道提供者API

00:12:09.329 --> 00:12:10.230 
它的原理是怎樣的？

00:12:10.964 --> 00:12:15.502 
假設有一個NEPacket
隧道提供者在系統上運行

00:12:16.103 --> 00:12:18.272 
而且它已經連接到VPN服務器

00:12:18.338 --> 00:12:21.675 
並且提供一個
通向某個內部網絡的隧道

00:12:22.976 --> 00:12:28.382 
這樣 你的APP將會嘗試連接到
內部網絡中的某個資源

00:12:29.616 --> 00:12:31.118 
APP將會打開網絡連接

00:12:31.185 --> 00:12:35.155 
創建一個
socket並建立TCP/IP連接

00:12:36.023 --> 00:12:41.128 
TCP/IP鏈路數據包
將路由到UTUN0接口

00:12:41.562 --> 00:12:45.732 
這是一個虛擬接口它並不通過物理網絡

00:12:45.799 --> 00:12:49.303 
發送數據包而是將數據包轉發到

00:12:49.503 --> 00:12:50.971 
NEPacket隧道提供者

00:12:52.639 --> 00:12:54.842 
數據隧道提供者接受這些數據包

00:12:54.908 --> 00:12:57.477 
將它們封裝爲隧道協議格式

00:12:58.045 --> 00:13:00.113 
發送到隧道服務器

00:13:00.681 --> 00:13:02.316 
隧道服務器解封這些數據包

00:13:02.382 --> 00:13:04.251 
將它們發送到內部網絡

00:13:04.318 --> 00:13:06.386 
然後轉送到最終目的地

00:13:07.020 --> 00:13:09.690 
返回數據包經過服務器的封裝

00:13:09.890 --> 00:13:12.960 
被傳輸給提供者提供者解封它們

00:13:13.427 --> 00:13:16.296 
通過UTUN0接口
將它們注入到網絡傳輸堆棧

00:13:16.363 --> 00:13:18.398 
然後通過TCP/IP協議棧

00:13:18.465 --> 00:13:21.068 
將數據包返回給應用程序

00:13:22.202 --> 00:13:24.471 
這就是其基本工作原理

00:13:24.838 --> 00:13:27.708 
NEPacket隧道提供者有很多的

00:13:27.774 --> 00:13:29.810 
UTUN0接口控制功能

00:13:30.344 --> 00:13:32.980 
最重要的是它可以指定路由

00:13:33.146 --> 00:13:37.985 
IP目的地將被路由至UTUN0接口

00:13:38.051 --> 00:13:38.986 
並經過隧道

00:13:40.187 --> 00:13:42.823 
數據包隧道提供者
可以指定虛擬地址

00:13:42.890 --> 00:13:45.792 
以分配給接口另外還可指定DNS

00:13:45.859 --> 00:13:47.761 
和應該使用的代理設置

00:13:47.828 --> 00:13:49.296 
以用於路由經過隧道的數據流量

00:13:52.232 --> 00:13:55.135 
接下來湯米·保利
將爲我們簡要介紹

00:13:55.269 --> 00:13:57.437 
如何創建一個
NEPacket 隧道提供者

00:14:03.210 --> 00:14:07.714 
謝謝傑米我們很高興告訴你們
現在你們可以編寫自己的

00:14:07.781 --> 00:14:10.150 
自定義VPN協議提供者

00:14:10.217 --> 00:14:13.053 
爲了幫助你們做到這一點
我想向你們介紹

00:14:13.754 --> 00:14:16.456 
如何創建數據包隧道提供者

00:14:17.057 --> 00:14:19.626 
我從一個Xcode項目開始

00:14:19.693 --> 00:14:22.162 
在這個項目中已經有一個APP

00:14:22.229 --> 00:14:25.899 
APP使用管理器API創建一個配置

00:14:25.966 --> 00:14:27.334 
我們將跳過這個部分

00:14:27.601 --> 00:14:29.603 
假設我已經實現一個框架

00:14:29.970 --> 00:14:33.607 
來進行我的自定義協議協商

00:14:33.974 --> 00:14:36.210 
我將介紹如何構建這個新擴展

00:14:36.577 --> 00:14:38.545 
並將所有部分組合起來 好的

00:14:41.915 --> 00:14:43.851 
這是我的項目

00:14:45.519 --> 00:14:48.488 
首先要做的事情是
爲你的擴展添加一個新目標

00:14:49.489 --> 00:14:52.659 
爲此我們需要在OS X El
Capitan中

00:14:53.160 --> 00:14:56.997 
將這個目標添加到網絡擴展框架之中

00:14:57.898 --> 00:15:02.769 
這樣在你的系統上
如果你訪問系統、庫、框架

00:15:03.270 --> 00:15:04.671 
網絡擴展框架

00:15:05.839 --> 00:15:09.977 
你將會進入資源文件夾
我們提供一個模板安裝程序

00:15:10.043 --> 00:15:12.479 
適用於這些目標類型

00:15:13.647 --> 00:15:14.681 
你可以進入安裝程序

00:15:15.682 --> 00:15:17.951 
我爲這個用戶進行安裝

00:15:21.054 --> 00:15:22.456 
現在我們看到這些模塊

00:15:22.523 --> 00:15:26.193 
如果進入我的項目在應用擴展下方

00:15:27.995 --> 00:15:30.964 
嘗試創建一個新目標
現在我有四個新目標類型

00:15:31.431 --> 00:15:34.968 
還有App Proxy
提供者可用於應用層VPN

00:15:35.435 --> 00:15:39.206 
這裏有兩個過濾器控件
和一個數據提供者

00:15:39.606 --> 00:15:41.308 
讓我能夠進行數據過濾

00:15:41.375 --> 00:15:43.911 
稍後我將會講解數據過濾
還有一個數據包隧道提供者

00:15:44.578 --> 00:15:49.349 
在這個例子中 我的協議
爲我的VPN使用IP級隧道

00:15:49.416 --> 00:15:50.984 
我將選擇數據包隧道提供者

00:15:53.887 --> 00:15:58.792 
我們在Swift中寫入它的名稱
稱爲數據包隧道

00:16:01.562 --> 00:16:03.430 
很好 現在我有了一個新目標

00:16:03.497 --> 00:16:05.999 
我可以開始構建我的VPN提供者

00:16:08.001 --> 00:16:10.204 
讓我們進入實際代碼編寫

00:16:11.305 --> 00:16:13.607 
我的協議基於UDP協議

00:16:14.274 --> 00:16:16.143 
它使用UDP協議與服務器對話

00:16:16.210 --> 00:16:18.512 
並通過隧道傳輸系統數據流量

00:16:20.347 --> 00:16:24.484 
我已經細化
NEPacket隧道提供者類

00:16:25.452 --> 00:16:28.288 
在我的擴展中將會調用這個類

00:16:28.355 --> 00:16:29.957 
以啓動和停止我的VPN

00:16:30.390 --> 00:16:32.726 
在這裏 我需要覆蓋的最重要函數

00:16:32.793 --> 00:16:35.362 
startTunnelwithOptions
函數

00:16:35.596 --> 00:16:39.766 
當用戶或系統要自動啓動你的VPN時
將會調用這個函數

00:16:41.201 --> 00:16:45.005 
你會發現 
它調用這個函數並傳遞其結果值

00:16:45.439 --> 00:16:49.610 
你可以使用這個函數來通知系統

00:16:49.676 --> 00:16:50.911 
你已經完成設置VPN

00:16:50.978 --> 00:16:53.580 
當你調用這個函數時
系統將知道你已經完成連接

00:16:53.647 --> 00:16:54.848 
而且準備就緒

00:16:57.484 --> 00:17:00.254 
前面我說過我的協議基於UDP

00:17:00.587 --> 00:17:04.558 
在開始時 我想要
建立與服務器之間的UDP連接

00:17:06.960 --> 00:17:11.632 
爲此需要創建一個NWUDP會話對象

00:17:12.299 --> 00:17:17.538 
這是我們已經爲網絡擴展框架
添加的衆多便利性網絡API之一

00:17:18.070 --> 00:17:19.406 
它可以幫助你

00:17:19.473 --> 00:17:22.675 
可靠高效地進行連接

00:17:23.143 --> 00:17:24.611 
因此UDP會話讓我能夠

00:17:24.678 --> 00:17:27.446 
連接到一個主機

00:17:27.513 --> 00:17:29.550 
它將爲我完成所有的DNS解析工作

00:17:29.983 --> 00:17:33.187 
並且異步通知我是否已經準備就緒

00:17:33.887 --> 00:17:39.626 
我可以同時讀寫多個數據報文

00:17:39.693 --> 00:17:41.361 
以實現最高效的連接		

00:17:43.430 --> 00:17:45.399 
現在讓我們來實現這個函數

00:17:47.935 --> 00:17:49.736 
我首先要做的事情是

00:17:49.803 --> 00:17:51.471 
確定連接目標

00:17:51.538 --> 00:17:53.841 
我查看一下配置來獲取服務器地址

00:17:54.241 --> 00:17:56.610 
這可能是一個IP地址或是主機名稱

00:17:59.012 --> 00:18:01.915 
我這裏加入一個NW主機端點

00:18:02.216 --> 00:18:05.853 
這是一個容器對象它接收地址

00:18:05.919 --> 00:18:08.322 
或主機名稱並且將它們與

00:18:08.689 --> 00:18:09.923 
協議端口進行組合

00:18:13.193 --> 00:18:19.299 
然後我調用這個函數
開始DNS解析過程

00:18:19.733 --> 00:18:21.368 
建立服務器連接

00:18:22.603 --> 00:18:24.838 
此時系統開始執行這些操作

00:18:24.905 --> 00:18:27.641 
然後我等待需要讀取和寫入的事件

00:18:29.910 --> 00:18:34.248 
我執行KeyVO
以觀察UDP會話的狀態屬性

00:18:34.314 --> 00:18:35.449 
以獲得這些臨時值

00:18:37.017 --> 00:18:40.120 
此至我的啓動調用基本完成

00:18:40.187 --> 00:18:42.289 
我最後要做的事情是

00:18:42.456 --> 00:18:44.591 
保存在開始位置編寫的此函數

00:18:44.925 --> 00:18:48.028 
因爲我還沒有完成我的VPN連接

00:18:48.962 --> 00:18:52.065 
因此我要聲明一個
pendingStartCompletion

00:18:53.901 --> 00:18:56.870 
稍後我會保存它

00:18:58.305 --> 00:18:59.907 
好了 現在我要跳過

00:18:59.973 --> 00:19:02.009 
與服務器協商的部分

00:19:02.075 --> 00:19:05.212 
假設協議已經知道如何這樣做

00:19:05.612 --> 00:19:08.749 
現在我將跳到已經分配地址

00:19:08.815 --> 00:19:09.850 
和其他網絡設置的部分

00:19:09.917 --> 00:19:13.554 
將這些設置應用於系統並讓系統知道

00:19:13.620 --> 00:19:14.988 
我們將要使用VPN

00:19:15.856 --> 00:19:20.861 
這是我編寫的自定義函數

00:19:20.928 --> 00:19:22.930 
它說明我已經建立連接

00:19:24.164 --> 00:19:25.866 
接下來我要做的是

00:19:25.933 --> 00:19:29.169 
創建
NEPacketTunnelnetworksettings

00:19:29.236 --> 00:19:30.571 
這是一系列的設置

00:19:30.637 --> 00:19:32.105 
我可以在系統中應用這些設置

00:19:33.140 --> 00:19:35.876 
我可以設定IPv4設置

00:19:35.943 --> 00:19:37.778 
我已經指定了地址和子網

00:19:39.580 --> 00:19:41.381 
以及路由設置

00:19:41.448 --> 00:19:43.584 
在這個例子中
我想使用系統的默認路由

00:19:43.951 --> 00:19:47.287 
但是我也可以
設置一個較長的隧道分離路由列表

00:19:49.489 --> 00:19:52.860 
我可以定義隧道使用的開銷字節

00:19:53.327 --> 00:19:55.963 
對於每個數據包規定使用多少字節

00:19:56.263 --> 00:19:57.931 
進行加密和封裝

00:19:58.065 --> 00:20:02.069 
這樣系統就知道
所發送的數據包的大小

00:20:03.837 --> 00:20:05.973 
最後 我可以設定DNS設置

00:20:06.340 --> 00:20:09.309 
我可以設定分配的DNS服務器或域

00:20:10.777 --> 00:20:12.246 
爲了將這些設置應用於系統

00:20:12.446 --> 00:20:15.082 
我只需調用此函數

00:20:15.549 --> 00:20:18.118 
在調用完成之後
我得到一個回調處理程序

00:20:18.552 --> 00:20:21.355 
讓我知道已經成功應用設置

00:20:21.421 --> 00:20:23.957 
然後我可以調用此函數

00:20:24.024 --> 00:20:25.859 
讓系統知道我已經啓用VPN

00:20:26.927 --> 00:20:29.396 
這個功能很不錯 我已經完成連接

00:20:29.897 --> 00:20:33.100 
但是現在我還不能
設置向前和向後數據傳輸路由

00:20:33.267 --> 00:20:35.402 
讓我們來看看代碼

00:20:38.872 --> 00:20:42.176 
前面傑米講過
它的實現方法是這樣的

00:20:42.242 --> 00:20:43.443 
我們有一個虛擬接口

00:20:43.911 --> 00:20:47.814 
將數據包發送給協議提供者

00:20:48.682 --> 00:20:49.983 
後者將數據發送給服務器

00:20:50.050 --> 00:20:51.485 
從服務器接收返回的數據包時

00:20:51.552 --> 00:20:53.554 
我們重新將數據包注入堆棧

00:20:54.988 --> 00:20:57.257 
我們首先從輸出數據流開始

00:21:00.827 --> 00:21:03.230 
數據包隧道提供者具有
一個名爲數據包流的屬性

00:21:03.463 --> 00:21:04.531 
它表示你可以

00:21:04.598 --> 00:21:06.700 
讀取和寫入的虛擬接口

00:21:07.968 --> 00:21:10.304 
如果我調用此函數

00:21:11.138 --> 00:21:17.244 
系統將使用一組已經
發送至網絡的數據包進行回調

00:21:20.881 --> 00:21:23.350 
我可以將這些數據包發送至
我的協議處理程序進行封裝

00:21:23.617 --> 00:21:25.652 
和加密 然後生成

00:21:25.752 --> 00:21:28.355 
一組新的加密數據包流量

00:21:30.123 --> 00:21:33.193 
我可以輕鬆地將它們作爲多個數據報文

00:21:33.727 --> 00:21:36.897 
一次性寫入UDP會話以發送給服務器

00:21:37.731 --> 00:21:39.600 
這是在向外發送數據包時所需做的全部

00:21:41.535 --> 00:21:42.970 
接收數據包的方式與此類似

00:21:43.704 --> 00:21:47.241 
這裏有一個函數接收UDP服務器

00:21:47.941 --> 00:21:50.377 
返回的數據包

00:21:54.448 --> 00:21:56.683 
我只需要將它們發送給我的協議

00:21:56.750 --> 00:22:00.921 
就可以解封它們生成IP數據包 然後

00:22:00.988 --> 00:22:02.956 
我可以將它們寫入數據流量屬性

00:22:07.227 --> 00:22:10.264 
現在 我建立了一個連接

00:22:10.330 --> 00:22:12.332 
並且可以進行讀取和寫入

00:22:14.034 --> 00:22:15.969 
讓我們來看看實際效果

00:22:19.139 --> 00:22:21.475 
好的 這是我的設備

00:22:21.542 --> 00:22:24.745 
會看到我已經安裝我的VPN APP

00:22:26.580 --> 00:22:28.515 
你會看到如果我進入Safari

00:22:28.582 --> 00:22:30.417 
嘗試訪問內部網站

00:22:30.617 --> 00:22:32.452 
現在我確實可以訪問內部網站

00:22:35.789 --> 00:22:39.893 
我可以進入“我的VPN”APP
我點擊“start VPN”

00:22:41.361 --> 00:22:42.362 
APP所做的事情是

00:22:42.429 --> 00:22:45.966 
在後臺啓動隧道數據包提供者

00:22:46.733 --> 00:22:50.571 
你可以看到狀態欄中顯示VPN圖標

00:22:50.637 --> 00:22:52.873 
它實際上已經啓動並建立連接

00:22:54.474 --> 00:22:56.143 
我可以返回Safari

00:22:56.210 --> 00:22:58.512 
看到我的內部網頁已經加載

00:22:59.012 --> 00:23:03.283 
這表明我們在Swift中
編寫的VPN協議提供者程序

00:23:03.483 --> 00:23:05.619 
完全正常地運行 就是這麼簡單

00:23:11.425 --> 00:23:12.726 
交給傑米

00:23:14.494 --> 00:23:15.762 
好的 謝謝Tommy

00:23:16.263 --> 00:23:19.433 
剛纔Tommy向我們介紹如何
創建一個數據包隧道提供者

00:23:19.967 --> 00:23:22.202 
這不僅容易實現而且功能十分強大

00:23:24.571 --> 00:23:27.007 
討論Packet 
Tunnel Provider對象

00:23:27.074 --> 00:23:30.811 
我想花一點時間介紹用於託管
APP的Per-App VPN 

00:23:31.578 --> 00:23:37.251 
Per-App VPN十分適合
BYOD應用也就是使用你自己的設備

00:23:37.784 --> 00:23:40.621 
在BYOD應用中公司員工

00:23:40.687 --> 00:23:42.689 
希望使用他們自己的個人設備

00:23:42.923 --> 00:23:44.758 
連接他們的設備到公司的內部網絡

00:23:44.825 --> 00:23:46.059 
訪問網絡資源

00:23:46.627 --> 00:23:48.996 
而且 他們不希望
他們的所有互聯網訪問流量

00:23:49.062 --> 00:23:51.198 
都通過企業VPN進行路由

00:23:51.999 --> 00:23:56.136 
另外  企業希望爲員工提供訪問權限

00:23:56.203 --> 00:23:58.238 
同時想要限制某些應用程序

00:23:58.472 --> 00:24:00.340 
訪問他們的內部網絡

00:24:01.341 --> 00:24:04.811 
這時適合使用Per-App VPN

00:24:05.579 --> 00:24:07.848 
利用Per-App VPN
你可以設置VPN

00:24:07.915 --> 00:24:11.151 
僅允許某些特定的託管應用使用VPN

00:24:12.653 --> 00:24:15.889 
這種設置方法是
使用Apple自己的MDM

00:24:15.956 --> 00:24:17.524 
MDM的含義是託管設備管理協議

00:24:18.926 --> 00:24:22.863 
你將設備註冊到一個MDM服務

00:24:23.230 --> 00:24:25.032 
這個MDM服務就能夠

00:24:25.332 --> 00:24:28.902 
提供相應的配置包括VPN配置

00:24:29.436 --> 00:24:31.371 
和託管應用程序

00:24:32.139 --> 00:24:36.610 
MDM服務還可以將這些託管應用程序

00:24:36.677 --> 00:24:39.646 
與Per-App VPN
配置進行關聯以發送

00:24:39.713 --> 00:24:41.448 
Per-App VPN部署

00:24:43.183 --> 00:24:48.922 
現在我們支持Per-App VPN
實際上我們一直都通過

00:24:48.989 --> 00:24:51.024 
自定義App代理提供者支持它

00:24:51.625 --> 00:24:55.495 
在iOS 9和OS X
El Capitan中通過自定義

00:24:55.796 --> 00:24:58.999 
數據包隧道提供者
支持Per-App VPN

00:24:59.433 --> 00:25:03.937 
並且通過平臺內置IPSEC客戶端
支持Per-App VPN

00:25:05.806 --> 00:25:10.244 
現在來看Per-App VPN
如何在網絡數據路徑中運行

00:25:11.011 --> 00:25:13.981 
有一個數據包隧道提供者它和前面一樣

00:25:14.815 --> 00:25:18.252 
我們還有一個UTUN0接口
數據流量被路由到這個接口

00:25:19.152 --> 00:25:21.088 
另外有一個託管APP

00:25:21.355 --> 00:25:23.524 
鏈接到VPN配置

00:25:24.358 --> 00:25:29.229 
不同於按IP地址
將數據流量路由到UTUN0接口

00:25:29.296 --> 00:25:34.601 
現在將會按應用程序
將數據流量路由到UTUN0接口

00:25:35.068 --> 00:25:37.971 
只有這個託管應用程序才能訪問VPN

00:25:38.572 --> 00:25:41.808 
如果用戶使用其他非託管應用程序

00:25:42.309 --> 00:25:44.578 
在物理接口之外

00:25:44.645 --> 00:25:45.946 
連接到網絡

00:25:46.013 --> 00:25:49.917 
即使它想要連接到與託管應用程序
相同的目標IP也不會成功 

00:25:51.518 --> 00:25:54.021 
Per-App VPN的工作原理

00:25:54.354 --> 00:25:56.390 
Tommy將向我們簡要介紹

00:25:56.456 --> 00:25:58.325 
如何配置Per-App VPN

00:25:58.992 --> 00:26:00.794 
好的 謝謝傑米

00:26:01.361 --> 00:26:02.930 
讓我們感到興奮的是

00:26:03.197 --> 00:26:06.700 
現在每個人只需要
編寫一個自定義協議程序

00:26:06.867 --> 00:26:09.303 
或者使用內置的IPSEC協議 

00:26:09.469 --> 00:26:13.340 
就可以部署Per-App VPN 
來提供良好的UID解決方案

00:26:15.342 --> 00:26:20.914 
前面傑米講過 
我們通過MDM(託管設備管理協議)

00:26:21.148 --> 00:26:26.920 
創建這些Per-App配置MDM將
選擇VPN的配置文件

00:26:27.654 --> 00:26:29.890 
並且將託管應用程序

00:26:29.957 --> 00:26:31.191 
與這個VPN相關聯

00:26:32.259 --> 00:26:36.964 
現在我將介紹如何修改
現有的VPN配置文件

00:26:37.264 --> 00:26:39.199 
使它配合Per-App VPN工作

00:26:39.299 --> 00:26:40.901 
這個配置文件

00:26:40.968 --> 00:26:43.437 
配置我剛纔創建的APP

00:26:47.908 --> 00:26:50.544 
讓我們來看VPN配置文件

00:26:50.611 --> 00:26:51.478 
這裏有很多的內容

00:26:51.545 --> 00:26:52.813 
現在並不需要理解它們

00:26:52.880 --> 00:26:55.616 
我將高亮標出一些獨特的部分

00:26:55.682 --> 00:26:57.918 
只需要進行三處修改

00:26:57.985 --> 00:27:00.821 
就可以讓這個配置文件
配合Per-App VPN工作

00:27:01.922 --> 00:27:03.290 
第一處是負載類型

00:27:03.590 --> 00:27:07.027 
通常情況下它是
com.Apple.vpn.managed 

00:27:08.662 --> 00:27:15.035 
只需要在末尾加上applayer
就可設定爲Per-App VPN

00:27:15.202 --> 00:27:17.538 
前面我們說過有多種類型的提供者

00:27:17.604 --> 00:27:20.274 
可以配合Per-App VPN工作

00:27:20.607 --> 00:27:22.809 
我們需要說明你想要使用哪種類型

00:27:23.210 --> 00:27:27.114 
在VPN負載內部我們用一個新的鍵值

00:27:27.181 --> 00:27:28.282 
表示提供者類型

00:27:28.982 --> 00:27:31.952 
你可以指定數據包隧道或App代理

00:27:32.119 --> 00:27:36.223 
在本例中你看到我的APP
使用數據包隧道協議

00:27:36.757 --> 00:27:38.125 
我指定了這個協議

00:27:39.660 --> 00:27:42.930 
最後一個
需要添加的字段名是VPN UUID

00:27:43.931 --> 00:27:47.000 
是一個任意字符串

00:27:47.234 --> 00:27:53.373 
作爲VPN配置與
託管APP之間的關聯符

00:27:53.440 --> 00:27:58.078 
當MDM服務器選擇
託管APP時 將會使用

00:27:58.178 --> 00:27:59.980 
相同的VPN UUID標記它們

00:28:00.180 --> 00:28:04.785 
這樣系統就知道只有這些APP才能 

00:28:04.852 --> 00:28:06.320 
通過那個VPN路由數據流量

00:28:07.821 --> 00:28:10.924 
這個配置文件應該可以用於
Per-App VPN

00:28:13.327 --> 00:28:16.496 
我們希望你們能夠創建

00:28:16.563 --> 00:28:18.465 
支持Per-App VPN的APP

00:28:19.199 --> 00:28:21.835 
希望你們能夠輕鬆地利用它來進行開發

00:28:22.436 --> 00:28:24.037 
在你們進行開發時可能無法獲得

00:28:24.104 --> 00:28:25.939 
一個完整的MDM解決方案

00:28:27.040 --> 00:28:31.845 
我們只能爲你們提供開發版本支持

00:28:31.945 --> 00:28:32.946 
而不是發行版本支持

00:28:33.881 --> 00:28:36.416 
在信息Plist中指定將哪些APP

00:28:37.284 --> 00:28:39.586 
與你的VPN配置相關聯

00:28:39.653 --> 00:28:41.688 
能夠讓你更容易地
測試Per-App VPN

00:28:43.457 --> 00:28:48.262 
讓我們來看你的APP
的信息Plist 它很簡短

00:28:48.328 --> 00:28:53.467 
我們看到一個新的鍵值名稱爲
NETest App Mapping

00:28:53.834 --> 00:28:55.569 
這是一個數組字典

00:28:55.636 --> 00:28:58.605 
鍵值與前面所述的UUID 相同

00:28:58.672 --> 00:29:01.708 
這個關聯符將配置與APP關聯在一起

00:29:02.910 --> 00:29:08.248 
在數組內你可以指定想要
數據流量強制經過VPN的

00:29:08.348 --> 00:29:11.218 
APP的字符串束標識符

00:29:11.685 --> 00:29:13.754 
在本例中我將使用Box APP

00:29:15.656 --> 00:29:17.124 
讓我們來看看它是什麼樣的

00:29:17.191 --> 00:29:21.195 
我已經在我的設備上安裝
配置文件和信息Plist

00:29:23.430 --> 00:29:25.199 
這裏有一個配置

00:29:25.699 --> 00:29:27.134 
用於我的Per-App VPN

00:29:27.201 --> 00:29:31.471 
你可以看到我
 我設置爲自定義數據包隧道協議

00:29:32.506 --> 00:29:36.910 
這裏還列出了關聯的APPBox

00:29:36.977 --> 00:29:38.779 
VPN配置內的一個關聯APP

00:29:39.112 --> 00:29:41.415 
只需要進行設置
就可以讓Per-App VPN

00:29:41.481 --> 00:29:44.351 
配合你的協議工作 謝謝

00:29:49.623 --> 00:29:50.757 
好的 謝謝Tommy

00:29:50.991 --> 00:29:54.494 
Per-App VPN十分適合

00:29:54.561 --> 00:29:57.164 
BYOD部署能夠爲公司員工 

00:29:57.231 --> 00:29:58.799 
提供良好的用戶體驗

00:29:58.866 --> 00:30:00.801 
我們強烈鼓勵你部署它

00:30:03.704 --> 00:30:08.509 
接下來我想介紹
NEApp代理提供者API

00:30:09.243 --> 00:30:12.980 
現在任何App代理提供者
都可以獨佔性地配合

00:30:13.247 --> 00:30:14.548 
Per-App VPN工作

00:30:15.616 --> 00:30:17.918 
讓我們來看它們是如何工作的

00:30:17.985 --> 00:30:19.987 
以及它們與數據包隧道提供者之間區別

00:30:20.487 --> 00:30:24.358 
我們有一個託管APP
一個在系統上系統運行的

00:30:25.092 --> 00:30:26.793 
APP代理提供者APP想要連接到

00:30:26.860 --> 00:30:28.729 
內部網絡資源

00:30:29.396 --> 00:30:32.866 
不同於將IP
數據包路由到UTUN0接口

00:30:34.268 --> 00:30:37.137 
託管APP寫入到其socket的

00:30:37.204 --> 00:30:40.007 
數據被直接轉發到代理提供者

00:30:41.241 --> 00:30:45.212 
在那裏 NEApp代理提供者
可以將數據發送到代理服務器

00:30:45.879 --> 00:30:47.147 
代理服務器的返回數據

00:30:47.214 --> 00:30:50.250 
將被髮送回代理提供者

00:30:50.450 --> 00:30:51.952 
後者將數據注入socket

00:30:52.019 --> 00:30:53.820 
然後發送給APP

00:30:55.055 --> 00:31:00.060 
添加NEApp代理提供者API原因

00:31:00.394 --> 00:31:01.662 
實際上跟服務器有關

00:31:01.762 --> 00:31:03.964 
你可以連接到這些透明的

00:31:04.031 --> 00:31:04.965 
網絡代理服務器

00:31:05.499 --> 00:31:10.537 
這些服務器通常比配置完好的
IP層VPN更容易部署

00:31:11.038 --> 00:31:15.776 
你不必配置虛擬IP
以分配給UTUN0接口

00:31:16.376 --> 00:31:19.213 
而且它們的擴展性更好

00:31:19.446 --> 00:31:21.782 
我們提供NEApp代理提供者API

00:31:21.849 --> 00:31:23.817 
來連接到這些服務器

00:31:26.386 --> 00:31:30.557 
iOS 9和
OS X El Capitan中的

00:31:30.757 --> 00:31:35.996 
APP代理提供者新增功能是
不僅能夠代理TCP流量

00:31:36.063 --> 00:31:37.364 
而且能夠代理UDP流量

00:31:40.667 --> 00:31:41.935 
這裏有一個託管APP

00:31:42.002 --> 00:31:45.305 
用它來描述在物理接口之外進行連接

00:31:47.641 --> 00:31:51.879 
這是
NETunnel提供者系列API

00:31:52.112 --> 00:31:54.948 
你可以使用這些API爲你的隧道協議

00:31:55.015 --> 00:31:56.216 
創建客戶端

00:31:56.416 --> 00:31:58.785 
用於連接到企業VPN服務器

00:32:00.921 --> 00:32:01.788 
現在讓我們來看

00:32:01.855 --> 00:32:04.157 
NEFilter提供者系列API

00:32:04.291 --> 00:32:06.760 
我們可以使用這些API爲學校創建

00:32:06.827 --> 00:32:07.961 
網絡內容過濾解決方案

00:32:09.963 --> 00:32:13.834 
目前學校可以
使用幾種方法利用iOS設備

00:32:14.234 --> 00:32:15.369 
進行網絡內容過濾

00:32:17.671 --> 00:32:22.376 
他們可以部署現場內容過濾器
將設備放在他們的局域網內

00:32:23.010 --> 00:32:25.479 
將所有互聯網流量路由

00:32:25.546 --> 00:32:26.780 
經過內容過濾器

00:32:27.281 --> 00:32:28.982 
過濾內容

00:32:29.316 --> 00:32:31.218 
其缺點是 這種方法

00:32:31.285 --> 00:32:32.986 
只能在學校局域網內使用

00:32:33.153 --> 00:32:35.989 
如果學生想要把學校iPad

00:32:36.190 --> 00:32:38.325 
或iPhone帶回家
當他們回家後他們要麼

00:32:38.659 --> 00:32:43.997 
完全不能瀏覽互聯網內容
或者互聯網內容將不會過濾

00:32:44.364 --> 00:32:45.866 
這樣可不好

00:32:47.401 --> 00:32:49.336 
爲了解決這種問題 

00:32:49.403 --> 00:32:52.139 
學校可以部署代理將它放入互聯網接口

00:32:52.606 --> 00:32:54.942 
將所有互聯網流量路由經過代理

00:32:55.008 --> 00:32:56.276 
以進行流量過濾

00:32:56.877 --> 00:33:00.914 
其缺點是學校必須部署和維護代理

00:33:01.515 --> 00:33:04.384 
並不是所有的學校
都有足夠的資源來這樣做

00:33:06.286 --> 00:33:08.622 
另一個解決方案是使用全隧道VPN

00:33:08.822 --> 00:33:11.091 
與全局代理一樣它也有很多問題

00:33:11.158 --> 00:33:13.293 
而且可能更難以部署和維護

00:33:14.361 --> 00:33:16.463 
對學校來說最好的解決方案是

00:33:16.530 --> 00:33:18.765 
在設備上過濾網絡內容

00:33:18.966 --> 00:33:20.167 
在離開設備之前

00:33:20.400 --> 00:33:23.203 
和實際提供給用戶之前

00:33:24.438 --> 00:33:28.942 
NEFilter提供者
系列API允許這樣做

00:33:31.144 --> 00:33:35.115 
目前NEFilter提供者
API只能在iOS中使用

00:33:36.049 --> 00:33:37.784 
通過使用API可以執行

00:33:37.851 --> 00:33:41.321 
網絡內容態評估

00:33:43.891 --> 00:33:46.994 
能夠隨時更新過濾規則

00:33:47.561 --> 00:33:49.730 
例如 限制網絡下載

00:33:51.565 --> 00:33:53.767 
當用戶訪問一些禁止訪問的內容時

00:33:53.834 --> 00:33:56.637 
你可以發送一個
可自定義的禁止訪問頁面

00:33:56.770 --> 00:33:58.772 
提示禁止訪問這些內容

00:34:03.043 --> 00:34:06.880 
目前NEFilter提供者
只能在受監管設備上運行

00:34:06.947 --> 00:34:08.482 
其目標用戶是學校

00:34:08.782 --> 00:34:11.985 
學校擁有自己的設備並對設備加鎖

00:34:12.052 --> 00:34:15.022 
使學生不能安裝新的APP或更改設置

00:34:15.755 --> 00:34:17.658 
這時過濾器提供者正好派上用場

00:34:20.194 --> 00:34:23.764 
讓我們來看
過濾器提供者如何在數據路徑中工作

00:34:24.630 --> 00:34:27.501 
有個NEFilter數據提供者擴展

00:34:27.568 --> 00:34:28.969 
運行在系統上

00:34:29.335 --> 00:34:32.306 
它的作用是允許和禁止

00:34:32.371 --> 00:34:34.608 
網絡內容經過系統

00:34:36.076 --> 00:34:38.612 
由於它能夠訪問所有網絡內容

00:34:38.911 --> 00:34:40.914 
我們已經鎖定這個數據提供者

00:34:40.981 --> 00:34:42.114 
讓它在只讀沙盒中運行

00:34:42.649 --> 00:34:43.984 
它不能訪問網絡

00:34:44.318 --> 00:34:46.520 
而只能讀取磁盤

00:34:48.755 --> 00:34:51.891 
我們還提供另外一個擴展

00:34:51.992 --> 00:34:54.928 
即NEFilter控制提供者
它的作用是

00:34:54.995 --> 00:34:57.331 
爲過濾器數據提供者提供數據

00:34:57.397 --> 00:34:58.498 
使過濾器能夠發揮作用

00:34:58.732 --> 00:35:00.834 
例如互聯網下載規則

00:35:01.168 --> 00:35:02.803 
要求將下載數據定入到

00:35:02.970 --> 00:35:04.705 
數據提供者可以訪問的磁盤位置

00:35:07.808 --> 00:35:11.612 
現在假設用戶使用
Web kit 運行一個APP

00:35:12.079 --> 00:35:17.951 
是吧
在它們的UI中有個UI Web視圖

00:35:18.018 --> 00:35:19.586 
進入Web kit 的所有內容

00:35:19.653 --> 00:35:22.890 
被傳輸給過濾器提供者 

00:35:22.956 --> 00:35:25.125 
他決定允許或禁止該數據

00:35:27.461 --> 00:35:30.764 
並非所有APP都使用Web kit

00:35:31.431 --> 00:35:34.301 
有一些APP使用其他網絡API

00:35:34.368 --> 00:35:36.837 
例如NSURL會話NSURL連接

00:35:37.070 --> 00:35:38.472 
以及部分Network API

00:35:39.072 --> 00:35:43.911 
對於這些API 
我們在socket層中添加一個掛鉤

00:35:43.977 --> 00:35:45.913 
將流量引導至過濾器數據提供者

00:35:45.979 --> 00:35:48.348 
這樣數據提供者就進行允許/禁止決定

00:35:50.184 --> 00:35:52.920 
你可以看到過濾器控制提供者

00:35:52.986 --> 00:35:54.855 
和數據提供者一起在設備上

00:35:54.922 --> 00:35:58.458 
提供全面的內容過濾解決方案

00:36:00.594 --> 00:36:02.095 
因此對於Web kit APP來說

00:36:02.729 --> 00:36:04.998 
當數據提供者做出禁止決定

00:36:05.065 --> 00:36:07.968 
禁止某些內容訪問操作時

00:36:08.702 --> 00:36:12.272 
數據提供者可以命令Web kit

00:36:12.506 --> 00:36:14.007 
顯示禁止訪問頁面

00:36:14.341 --> 00:36:15.943 
這是一個禁止訪問頁面示例

00:36:16.677 --> 00:36:20.447 
你可以使用API通過多種方式

00:36:20.514 --> 00:36:21.715 
自定義這個禁止訪問頁面

00:36:21.782 --> 00:36:23.550 
你可以更改顯示內容結構

00:36:23.817 --> 00:36:25.953 
例如可以顯示學校名稱

00:36:26.520 --> 00:36:29.623 
可以自定義這個請求訪問鏈接

00:36:30.123 --> 00:36:32.292 
你可選擇不顯示鏈接

00:36:32.359 --> 00:36:35.128 
不向用戶提供內容訪問選項

00:36:35.896 --> 00:36:39.132 
如果你需要顯示內容可以顯示鏈接文本

00:36:39.600 --> 00:36:40.968 
和鏈接目標

00:36:41.168 --> 00:36:45.138 
這個目標指向
Web服務用戶可以訪問此服務

00:36:45.205 --> 00:36:46.507 
請求訪問被禁止的內容

00:36:48.575 --> 00:36:52.212 
這就是NEFilter
提供者系列API的原理

00:36:52.412 --> 00:36:55.249 
你可以使用這些API爲學校
創建功能強大、全面的

00:36:55.682 --> 00:36:59.086 
基於設備的網絡內容過濾解決方案

00:37:01.922 --> 00:37:06.894 
這是今天網絡擴展API的所有內容

00:37:07.895 --> 00:37:10.330 
你可以使用這些APP

00:37:10.797 --> 00:37:12.966 
開發一些不錯的APP

00:37:13.333 --> 00:37:17.271 
你可以開發APP以便於
使用Wi-Fi熱點、個人VPN服務

00:37:17.871 --> 00:37:19.439 
企業遠程訪問VPN

00:37:19.706 --> 00:37:22.242 
還可以爲學校開發基於設備的

00:37:22.309 --> 00:37:23.510 
網絡內容過濾解決方案

00:37:24.912 --> 00:37:27.614 
你可以看到這些API功能很強大

00:37:27.881 --> 00:37:32.786 
你可以使用這些API擴展和
自定義Apple平臺的核心網絡功能

00:37:33.754 --> 00:37:36.890 
因爲這些是非常強大的API要求你們

00:37:36.957 --> 00:37:39.293 
具備一定的能力來熟練使用它們

00:37:40.427 --> 00:37:42.062 
爲了使用NEVPN管理器API

00:37:42.129 --> 00:37:45.599 
你需要在項目設置的Xcode中

00:37:45.866 --> 00:37:47.901 
選擇個人VPN功能

00:37:50.270 --> 00:37:54.241 
爲了使用熱點
幫助器API、NETunnel系列

00:37:54.308 --> 00:37:57.211 
API和
NEFilter提供者系列API

00:37:57.711 --> 00:38:00.113 
你需要查看其他一些專門資料

00:38:00.848 --> 00:38:03.450 
你可以發送電子郵件至
networkextension@Apple.com

00:38:03.517 --> 00:38:05.118 
來索取這些資料

00:38:05.853 --> 00:38:07.588 
發送一份問卷調查給你你需要填寫問卷

00:38:07.855 --> 00:38:12.492 
並寄回給我們讓我們能夠處理你的請求

00:38:12.693 --> 00:38:15.863 
我們很高興將這些API介紹給你們

00:38:15.929 --> 00:38:17.931 
我們期待收到你們的請求

00:38:18.565 --> 00:38:20.334 
爲你們提供這些API

00:38:23.537 --> 00:38:25.272 
你們需要做的是

00:38:26.039 --> 00:38:27.875 
設置Captive 
Network APP端口

00:38:27.941 --> 00:38:33.814 
以使用NEHotspot幫助器 
它可無縫連接

00:38:35.315 --> 00:38:38.519 
在你的個人VPN APP中
使用NEManager API

00:38:38.886 --> 00:38:41.855 
爲使用你的個人VPN的用戶提供

00:38:42.055 --> 00:38:43.991 
無縫的用戶體驗

00:38:46.093 --> 00:38:47.694 
你可以使用NETunnel

00:38:47.761 --> 00:38:52.165 
提供者來創建功能強大的
自定義企業VPN APP

00:38:53.300 --> 00:38:54.535 
來連接到你的VPN服務器 

00:38:56.470 --> 00:38:58.805 
你可以使用MDM來部署
Per-App VPN

00:38:58.872 --> 00:39:01.642 
提供良好的BYOD用戶體驗

00:39:04.178 --> 00:39:06.713 
還可以
使用NEFilter提供者API

00:39:06.780 --> 00:39:10.484 
爲學校創建動態的
基於設備的網絡內容過濾解決方案

00:39:13.754 --> 00:39:15.556 
在這裏你可以獲得更多的信息

00:39:15.622 --> 00:39:18.559 
但是 這些文檔還沒有發佈
它們即將發佈

00:39:18.625 --> 00:39:21.628 
請經常在開發者網站上搜索相關內容

00:39:22.462 --> 00:39:24.631 
另外示例代碼還不是很完善

00:39:25.032 --> 00:39:26.934 
請經常搜索簡單的隧道應用示例

00:39:27.367 --> 00:39:29.303 
我們會發布一些不錯的示例代碼

00:39:29.369 --> 00:39:30.938 
但是目前還沒有完成

00:39:31.505 --> 00:39:33.273 
請經常搜索它們

00:39:36.143 --> 00:39:38.345 
如果你想了解更多信息

00:39:38.712 --> 00:39:41.949 
請參與開發論壇
聯繫開發人員技術支持部門

00:39:42.516 --> 00:39:45.052 
可以聯繫我們的主要講師
保羅·丹博

00:39:45.619 --> 00:39:51.024 
可將網絡擴展相關問題發送到這個地址

00:39:54.294 --> 00:39:55.395 
還有其他一些講座

00:39:55.462 --> 00:39:57.064 
也希望你們給予關注

00:39:57.130 --> 00:39:58.665 
特別介紹今天上午11:00

00:39:58.832 --> 00:40:02.369 
舉行的其他核心操作系統網絡功能講座

00:40:02.436 --> 00:40:04.238 
將會介紹APP開發和下一代網絡

00:40:05.572 --> 00:40:07.508 
謝謝你們參加講座 祝你們愉快