00:00:23.857 --> 00:00:27.294 
《Apple Watch
設計的技巧和陷阱》

00:00:31.298 --> 00:00:32.165 
大家好

00:00:35.602 --> 00:00:36.703 
我是邁克·斯特恩

00:00:36.770 --> 00:00:38.839 
我是Apple用戶體驗主講師

00:00:38.906 --> 00:00:40.707 
今天很高興和大家在一起

00:00:41.441 --> 00:00:44.511 
今天的講座主題是
面向Apple Watch的設計

00:00:44.578 --> 00:00:46.780 
具體來說
我們將會討論

00:00:46.847 --> 00:00:48.482 
一些設計技巧和陷阱

00:00:49.249 --> 00:00:51.251 
星期三我舉行了另外一場

00:00:51.485 --> 00:00:53.187 
相同主題的講座

00:00:53.654 --> 00:00:56.089 
但是內容有點不一樣

00:00:56.490 --> 00:00:58.525 
如果你們沒有參加那個講座

00:00:59.159 --> 00:01:00.027 
也沒有關係

00:01:00.294 --> 00:01:01.328 
我不會感到難受

00:01:01.929 --> 00:01:04.831 
但是我希望你們能夠
比較容易地理解我所講的內容

00:01:05.364 --> 00:01:07.901 
上次的講座討論
三個重要的主題

00:01:07.968 --> 00:01:09.403 
我將簡要進行回顧

00:01:10.070 --> 00:01:12.372 
這三個主題分別是
個性化交流

00:01:12.840 --> 00:01:13.907 
整體設計

00:01:13.974 --> 00:01:15.709 
和輕量級交互

00:01:16.677 --> 00:01:19.913 
個性化交流主要討論

00:01:20.113 --> 00:01:23.116 
高效和低效的個人間交流 

00:01:23.517 --> 00:01:24.818 
並且參考它們

00:01:24.885 --> 00:01:27.721 
來設計我們的Apple Watch
APP信息交流模型 

00:01:29.223 --> 00:01:32.459 
現在新技術讓Apple Watch

00:01:32.526 --> 00:01:34.695 
上的交互操作變得
更加人性化和個性化

00:01:35.162 --> 00:01:36.830 
因此很重要的一點是 

00:01:36.897 --> 00:01:38.732 
你的Apple Watch
APP設計

00:01:39.032 --> 00:01:42.736 
應該充分利用這些技術
讓用戶體驗得人性化和個性化

00:01:44.338 --> 00:01:46.707 
整體設計是指模糊

00:01:46.773 --> 00:01:48.275 
軟件和硬件之間的界線

00:01:48.709 --> 00:01:52.045 
這可以通過APP界面的
外觀設計來實現

00:01:52.112 --> 00:01:54.181 
你將可以APP界面

00:01:54.248 --> 00:01:55.949 
與Apple Watch錶盤
無縫融合

00:01:56.850 --> 00:01:59.253 
我們需要使用
Force Touch顯示屏的功能

00:01:59.319 --> 00:02:01.688 
並且正確使用這些功能

00:02:03.123 --> 00:02:04.958 
對於Digital Crown
也是同樣如此

00:02:06.593 --> 00:02:08.495 
現在...要特別說一下

00:02:08.628 --> 00:02:10.597 
Taptic Engine
觸覺反饋技術

00:02:11.532 --> 00:02:14.034 
你可以使用這些技術
提供更加擬真

00:02:14.101 --> 00:02:16.703 
完善和細緻入微的

00:02:17.104 --> 00:02:18.772 
APP使用體驗

00:02:20.140 --> 00:02:21.441 
交量級交互是指

00:02:21.875 --> 00:02:23.911 
設計可以快速查看

00:02:23.977 --> 00:02:25.546 
和處理的交互操作

00:02:26.180 --> 00:02:27.581 
我們應該利用

00:02:27.648 --> 00:02:30.417 
Watch位於用戶手腕上
這一獨特優勢

00:02:32.085 --> 00:02:35.455 
這三個主題是一些基本的
技術和知識

00:02:35.522 --> 00:02:37.758 
可以幫助你爲
Apple Watch 

00:02:38.025 --> 00:02:40.727 
設計出色的APP
通知和Glance

00:02:41.395 --> 00:02:43.363 
今天我們所討論的內容

00:02:43.530 --> 00:02:47.301 
在某些方面與
這三個主題相關

00:02:48.068 --> 00:02:50.137 
但是本講座還是有所不同

00:02:51.371 --> 00:02:53.507 
在今天的講座中

00:02:53.574 --> 00:02:55.676 
我們不會重複以前的話題

00:02:56.076 --> 00:02:59.046 
我們將會討論一些非常具體的事情

00:02:59.346 --> 00:03:00.380 
比如設計要素 控件等

00:03:00.447 --> 00:03:01.415 
幫助你設計具有

00:03:01.782 --> 00:03:04.818 
吸引力的Apple Watch
APP通知和Glance等

00:03:05.853 --> 00:03:06.954 
我們還會介紹

00:03:07.020 --> 00:03:09.857 
許多開發人員在設計Apple
Watch APP時

00:03:10.290 --> 00:03:13.560 
經常會遇到的10個陷阱

00:03:14.461 --> 00:03:18.932 
Apple Watch是一個全新的
Apple產品

00:03:19.333 --> 00:03:21.268 
即使像我這樣的人

00:03:21.335 --> 00:03:23.470 
以前也沒有爲可穿戴式設備
設計過APP

00:03:23.770 --> 00:03:26.273 
因此有一些內容可能不容易理解
或者會讓人感到陌生

00:03:26.807 --> 00:03:28.876 
我們會看到
一些普遍性的錯誤做法

00:03:29.409 --> 00:03:30.944 
讓我們來回顧一下

00:03:31.011 --> 00:03:33.380 
在以前的開發工作中
遇到的一些問題

00:03:33.981 --> 00:03:35.148 
你們對此有意見嗎？

00:03:35.215 --> 00:03:37.117 
你們準備好了嗎？

00:03:37.784 --> 00:03:38.619 
是嗎

00:03:38.685 --> 00:03:39.553 
好的

00:03:40.087 --> 00:03:41.355 
好極了

00:03:41.421 --> 00:03:43.457 
我早就想要一吐爲快了

00:03:43.524 --> 00:03:44.658 
讓我們閒話少說

00:03:44.992 --> 00:03:47.661 
我們來看第一個常見的陷阱

00:03:47.961 --> 00:03:48.795 
這是...

00:03:52.566 --> 00:03:53.400 
這...

00:03:53.600 --> 00:03:55.502 
可不是良好的用戶體驗

00:03:56.270 --> 00:03:58.005 
第一個

00:03:58.305 --> 00:03:59.139 
常見陷阱

00:03:59.573 --> 00:04:00.741 
是蝸牛般的APP速度

00:04:01.775 --> 00:04:04.144 
Apple Watch的目的
是提供便利性

00:04:04.678 --> 00:04:07.080 
如果你的APP需要很長的時間
來安裝

00:04:07.581 --> 00:04:09.082 
需要很長的時間來啓動

00:04:09.149 --> 00:04:11.084 
或者需要很長時間載入頁面

00:04:11.385 --> 00:04:13.887 
對用戶來說將是很不方便的

00:04:15.155 --> 00:04:16.957 
APP的UI設計

00:04:17.224 --> 00:04:19.059 
和圖片生成方式

00:04:19.426 --> 00:04:20.527 
對APP的性能

00:04:20.594 --> 00:04:21.928 
具有十分重要的影響

00:04:22.930 --> 00:04:24.798 
你的設計應該確保高性能

00:04:25.799 --> 00:04:28.001 
因此 舉例來說
儘可能的話

00:04:28.569 --> 00:04:30.704 
你應該使用
漸進式頁面載入方法

00:04:31.305 --> 00:04:34.041 
這意味着在用戶進入頁面之後

00:04:34.107 --> 00:04:36.944 
用戶不需要等待
整個頁面載入完之後

00:04:37.244 --> 00:04:39.179 
才能看到內容

00:04:39.780 --> 00:04:42.015 
他們可以先看到一些內容

00:04:42.082 --> 00:04:44.751 
然後再看到其它載入的內容

00:04:46.119 --> 00:04:47.955 
讓用戶等待是不合適的

00:04:48.622 --> 00:04:49.556 
我們應該避免這一點

00:04:49.623 --> 00:04:52.693 
當用戶點擊按鈕載入新頁面
或者當他們掃動頁面時

00:04:53.060 --> 00:04:54.928 
應該立即能夠看到頁面內容

00:04:55.229 --> 00:04:56.830 
這種期待是合理的

00:04:57.898 --> 00:04:59.132 
讓我們來看一個例子

00:04:59.333 --> 00:05:00.534 
假設我們有一個APP

00:05:00.901 --> 00:05:04.404 
它列出附近的
Apple零售店地址

00:05:05.272 --> 00:05:08.408 
現在 在這個屏幕上
顯示所有的零售店

00:05:08.475 --> 00:05:10.477 
我們看到商店名稱和地址

00:05:10.811 --> 00:05:13.280 
以及它們與我們的
當前位置之間的距離

00:05:14.081 --> 00:05:16.517 
現在 所有這些信息
都將顯示在

00:05:16.750 --> 00:05:19.086 
零售店詳細信息屏幕上

00:05:19.553 --> 00:05:23.323 
很多數據已經可用
而且本地存儲在Watch上

00:05:24.124 --> 00:05:25.626 
當我們轉到詳情頁面時

00:05:25.759 --> 00:05:27.561 
立即可以看到大量的內容

00:05:28.395 --> 00:05:31.131 
其他內容
例如營業時間

00:05:31.198 --> 00:05:32.499 
或交通路線信息等

00:05:32.866 --> 00:05:34.968 
它們全部是文本
載入速度很快

00:05:35.769 --> 00:05:37.704 
現在可能還有一張零售店...

00:05:37.971 --> 00:05:38.972 
照片

00:05:39.640 --> 00:05:42.109 
不應該讓用戶等待

00:05:42.342 --> 00:05:43.977 
圖片在Watch頁面...

00:05:44.444 --> 00:05:46.079 
上顯示

00:05:46.847 --> 00:05:48.382 
更好的做法是讓用戶

00:05:48.448 --> 00:05:49.750 
首先進入詳情頁面

00:05:50.184 --> 00:05:53.720 
讓他們知道等待查看的
內容是什麼

00:05:54.555 --> 00:05:55.389 
我的意思是

00:05:55.489 --> 00:05:57.424 
可以顯示一個圖片標籤

00:05:57.491 --> 00:05:58.425 
這個標籤

00:05:58.759 --> 00:06:00.727 
說明將在頁面上

00:06:00.794 --> 00:06:02.229 
載入的內容是什麼

00:06:02.696 --> 00:06:06.033 
用戶可能根本不想
查看零商店照片

00:06:06.400 --> 00:06:07.668 
這樣 他們可以

00:06:07.968 --> 00:06:10.037 
查看頁面上的其它內容

00:06:10.103 --> 00:06:11.738 
看到想要的內容之後
就可以離開了

00:06:13.207 --> 00:06:15.309 
如果你使用這樣的進度指示

00:06:15.809 --> 00:06:17.945 
你需要始終使用佔位圖片

00:06:18.011 --> 00:06:19.947 
爲將要載入的內容

00:06:20.380 --> 00:06:22.249 
預留出空間

00:06:22.649 --> 00:06:25.552 
這樣做的原因是
當圖片最終載入時

00:06:25.619 --> 00:06:27.821 
你不希望頁面高度發生改變

00:06:28.222 --> 00:06:29.723 
因爲如果你正在查看...

00:06:30.023 --> 00:06:31.191 
圖片下方的內容

00:06:31.258 --> 00:06:32.726 
這些內容將會從...

00:06:33.026 --> 00:06:34.161 
視圖中消失

00:06:34.494 --> 00:06:35.729 
它們實際上會轉到底部位置

00:06:35.996 --> 00:06:37.397 
這樣會讓用戶感到困惑

00:06:37.464 --> 00:06:39.099 
因此你需要保留
這個圖片顯示區域

00:06:40.567 --> 00:06:42.836 
如果你使用這項技術
你還需要思考

00:06:42.903 --> 00:06:45.205 
如何設置頁面上的
內容顯示順序

00:06:45.772 --> 00:06:48.442 
你應該將載入時間更長的內容

00:06:48.509 --> 00:06:50.644 
放到頁面底部位置

00:06:51.745 --> 00:06:55.148 
當照片不在屏幕上時
將需要更多的時間載入它

00:06:55.482 --> 00:06:59.052 
然後用戶才能滾動看到它

00:06:59.653 --> 00:07:02.055 
當用戶首次進入這個頁面時

00:07:02.122 --> 00:07:04.458 
用戶可能不會意識到
照片此前並不在當前屏幕

00:07:06.493 --> 00:07:08.729 
第二個提高性能的設計方法是

00:07:08.795 --> 00:07:10.531 
優化你的圖片

00:07:11.164 --> 00:07:13.600 
最後的辦法是壓縮圖片

00:07:14.535 --> 00:07:15.836 
在你製作圖片時

00:07:16.170 --> 00:07:17.638 
很重要的一點是

00:07:17.704 --> 00:07:20.641 
選擇合適的壓縮類型
和正常的設置

00:07:21.441 --> 00:07:22.910 
舉例來說 對於照片

00:07:22.976 --> 00:07:24.611 
大多數時候你會使用JPEG

00:07:25.279 --> 00:07:27.347 
JPEG是一種有損格式

00:07:27.414 --> 00:07:30.517 
這意味着
你看到的JPEG圖片

00:07:30.751 --> 00:07:33.453 
其視覺質量和圖像保真度
有一定的損失

00:07:34.054 --> 00:07:35.956 
但是在中等壓縮率下
並不會有什麼影響

00:07:36.023 --> 00:07:39.159 
這不會嚴重影響
你看到的圖像質量

00:07:40.060 --> 00:07:42.229 
讓我們來壓縮這張圖片

00:07:42.763 --> 00:07:44.064 
它給人以膨脹感

00:07:44.331 --> 00:07:45.566 
看上去是像素圖片

00:07:45.766 --> 00:07:47.301 
讓我們來壓縮這張圖片

00:07:48.335 --> 00:07:50.304 
在最高質量JPEG設置下

00:07:50.370 --> 00:07:53.140 
它的大小是125 K

00:07:54.074 --> 00:07:57.811 
我們降低質量設置
看到文件大小

00:07:57.878 --> 00:07:59.580 
開始急速下降

00:08:00.047 --> 00:08:02.449 
在最高壓縮率

00:08:02.516 --> 00:08:03.717 
和最低質量設置下

00:08:04.017 --> 00:08:05.285 
它的大小僅爲25 K左右

00:08:05.352 --> 00:08:08.021 
大約爲最高質量圖片的20%

00:08:08.589 --> 00:08:10.490 
文件大小縮減非常明顯

00:08:10.958 --> 00:08:13.060 
但是看上去慘不忍睹

00:08:13.427 --> 00:08:14.928 
通常情況下
當你壓縮JPEG時

00:08:14.995 --> 00:08:15.996 
需要使用適中...

00:08:16.263 --> 00:08:17.097 
的壓縮率

00:08:17.764 --> 00:08:19.266 
我們需要找到

00:08:19.333 --> 00:08:20.968 
一個圖片質量下降臨界點

00:08:21.869 --> 00:08:23.237 
讓我們把它們放在...

00:08:23.470 --> 00:08:24.705 
一起比較

00:08:25.539 --> 00:08:27.007 
幾乎很難看到

00:08:27.074 --> 00:08:29.076 
圖片質量有區別

00:08:29.309 --> 00:08:31.845 
但是文件大小減少了三分之二

00:08:32.679 --> 00:08:35.682 
只有在近距離觀察時
纔會看到

00:08:36.116 --> 00:08:37.583 
壓縮造成的細微差別

00:08:38.318 --> 00:08:40.888 
但是用戶不會
這樣認真地觀察它們

00:08:40.953 --> 00:08:42.389 
這不符合我們的習慣

00:08:42.890 --> 00:08:45.893 
用戶的Watch使用高分辨率的
視網膜顯示屏

00:08:46.226 --> 00:08:47.461 
而且會經常移動

00:08:47.661 --> 00:08:51.131 
因爲手錶繫帶在
他們的手腕上

00:08:51.598 --> 00:08:53.767 
因此很難看到這些細微差別

00:08:54.835 --> 00:08:56.670 
接下來
讓我們來看PNG

00:08:57.638 --> 00:09:00.741 
現在 PNG幾乎已經成爲
除照片之外的其他大多數圖片

00:09:00.807 --> 00:09:03.076 
所使用的格式默認設置下

00:09:03.744 --> 00:09:06.547 
PNG使用24位顏色

00:09:07.080 --> 00:09:10.784 
這意味着可以使用數百萬種顏色

00:09:10.851 --> 00:09:12.686 
來繪製圖片

00:09:13.520 --> 00:09:15.622 
但是對於圖標等大多數圖片來說

00:09:15.689 --> 00:09:18.125 
這已經遠遠超過實際需求

00:09:19.259 --> 00:09:21.195 
當你保存PNG圖片時

00:09:21.261 --> 00:09:23.630 
應該知道你還可以使用

00:09:24.031 --> 00:09:24.898 
8位顏色設置

00:09:25.899 --> 00:09:28.769 
這意味着可以
使用256種或

00:09:29.069 --> 00:09:29.903 
更少的顏色

00:09:30.103 --> 00:09:31.271 
來繪製你的圖片

00:09:31.705 --> 00:09:33.440 
但是對於這個圖片來說
這已經綽綽有餘

00:09:33.507 --> 00:09:34.341 
事實上

00:09:34.408 --> 00:09:36.043 
只有當顏色數量爲200

00:09:36.476 --> 00:09:38.645 
或更少時
我們纔會開始看到

00:09:38.712 --> 00:09:40.881 
圖片中的遞色和色調分離

00:09:41.615 --> 00:09:43.150 
使用8位PNG

00:09:43.283 --> 00:09:44.284 
可以大幅減小

00:09:44.651 --> 00:09:46.153 
文件大小

00:09:47.221 --> 00:09:48.488 
在這裏你可以看到

00:09:49.056 --> 00:09:51.358 
文件大小縮減幅度
非常顯著

00:09:51.859 --> 00:09:54.761 
幾乎減小了十倍

00:09:55.562 --> 00:09:59.032 
圖片質量卻沒有明顯的區別

00:10:00.133 --> 00:10:01.902 
當你的APP使用
大量的圖片時

00:10:01.969 --> 00:10:05.038 
總體文件大小縮減
是十分驚人的

00:10:05.439 --> 00:10:08.242 
特別是當你使用
圖片序列動畫時

00:10:08.542 --> 00:10:11.979 
這可以顯著減小你的APP大小

00:10:12.312 --> 00:10:14.815 
因此你應該認真考慮
使用這項技術

00:10:16.183 --> 00:10:18.318 
接下來
你需要做的事情是

00:10:18.385 --> 00:10:19.987 
避免使用不必要的透明圖片

00:10:20.320 --> 00:10:22.289 
透明圖片意味着需要
Alpha通道

00:10:22.356 --> 00:10:24.691 
Alpha通道會增加文件大小

00:10:25.092 --> 00:10:26.994 
因此應該儘量避免
除非你確實需要使用它

00:10:27.427 --> 00:10:29.596 
有時候 你確實需要
使用透明圖片

00:10:29.963 --> 00:10:31.398 
例如
這個天氣...

00:10:31.632 --> 00:10:32.633 
Glance圖片

00:10:32.933 --> 00:10:35.435 
這個圖片顯示在半透明

00:10:35.869 --> 00:10:36.837 
黑色背景上

00:10:36.904 --> 00:10:39.106 
使其背後的錶盤變得模糊

00:10:39.673 --> 00:10:41.575 
因此你需要透明設置

00:10:41.642 --> 00:10:43.410 
以顯示彩色信息

00:10:44.178 --> 00:10:46.213 
但是這個天氣APP中的
一個類似的標

00:10:46.480 --> 00:10:48.215 
並不需要這種透明格式

00:10:48.282 --> 00:10:50.117 
它始終顯在黑色背景上

00:10:50.918 --> 00:10:53.954 
由於我們無需改變黑色背景

00:10:54.021 --> 00:10:55.822 
因此不需要alpha通道

00:10:58.792 --> 00:11:00.327 
最後一項圖片...

00:11:00.460 --> 00:11:01.728 
優化技術是

00:11:02.062 --> 00:11:05.666 
儘量使用實際所需要的圖片大小

00:11:06.166 --> 00:11:08.268 
當你在運行時發送圖片時

00:11:08.335 --> 00:11:10.037 
這一點顯得尤爲重要

00:11:10.938 --> 00:11:14.174 
圖片和視頻的尺寸大小

00:11:14.241 --> 00:11:16.276 
只需要滿足Watch
顯示要求...

00:11:16.610 --> 00:11:17.444 
就可以了

00:11:18.011 --> 00:11:20.614 
尤其是當圖片可能

00:11:20.681 --> 00:11:22.549 
會超出顯示屏邊界時

00:11:22.816 --> 00:11:25.419 
應確保使用合適的圖片
和視頻尺寸

00:11:26.286 --> 00:11:28.121 
讓我們來回顧一下
高性能設計

00:11:28.488 --> 00:11:30.724 
意味着需要在頁面上
逐步載入內容

00:11:31.058 --> 00:11:32.593 
這意味着對內容進行排序

00:11:32.659 --> 00:11:34.995 
讓用戶不會發現
你在逐步載入內容

00:11:35.262 --> 00:11:36.730 
另外應該通過壓縮

00:11:36.797 --> 00:11:38.498 
來優化圖片 避免使用

00:11:38.699 --> 00:11:39.633 
透明圖片

00:11:39.933 --> 00:11:41.735 
以及使用正確的圖片尺寸 

00:11:42.236 --> 00:11:43.504 
如果想要更多的信息

00:11:43.570 --> 00:11:45.506 
我建議觀看這個講座視頻

00:11:45.939 --> 00:11:48.542 
這個講座從工程設計的角度

00:11:48.609 --> 00:11:51.378 
詳細地討論
一些性能優化技巧和陷阱

00:11:52.446 --> 00:11:55.015 
現在 我想爲你們介紹一個

00:11:55.482 --> 00:11:57.951 
另外一個很好的APP性能優化技術

00:11:59.786 --> 00:12:02.656 
這項技術非常有用

00:12:03.056 --> 00:12:03.957 
其主旨是

00:12:04.558 --> 00:12:06.560 
避免APP變得過於複雜

00:12:07.261 --> 00:12:08.595 
這是第二個常見陷阱

00:12:10.364 --> 00:12:11.732 
前面我說過我不會重複

00:12:11.798 --> 00:12:13.834 
我的上次講座的內容

00:12:14.201 --> 00:12:15.369 
可能並非完全如此

00:12:15.435 --> 00:12:17.204 
因爲我需要重複一下以前的內容

00:12:18.672 --> 00:12:21.074 
Apple Watch並不是
小型化的iPhone

00:12:21.141 --> 00:12:22.042 
這一點很重要

00:12:22.342 --> 00:12:23.844 
因此我再次強調

00:12:24.311 --> 00:12:26.880 
我們看到很多開發人員
經常陷入這種誤區

00:12:27.114 --> 00:12:30.083 
我們很多人會自然而然地

00:12:30.150 --> 00:12:31.652 
將想將iPhone APP

00:12:31.985 --> 00:12:33.620 
移植到Watch

00:12:34.087 --> 00:12:36.190 
但是結果發現Watch APP

00:12:36.256 --> 00:12:37.758 
難以使用和瀏覽

00:12:38.659 --> 00:12:40.594 
Apple Watch
十分適合...

00:12:41.094 --> 00:12:42.062 
快速查看

00:12:42.729 --> 00:12:45.632 
以進行方便
簡0單的交互操作

00:12:46.233 --> 00:12:47.201 
那麼

00:12:47.267 --> 00:12:49.069 
iOS APP上的哪些信息和功能

00:12:49.136 --> 00:12:51.438 
是用戶確實想要而且能夠

00:12:51.505 --> 00:12:52.506 
快速和方便地...

00:12:52.806 --> 00:12:53.841 
查看和操作的？

00:12:54.975 --> 00:12:57.144 
應確保僅關注最重要的信息

00:12:57.211 --> 00:12:59.112 
不要將過多的信息和功能

00:12:59.179 --> 00:13:00.314 
堆積到你的APP上

00:13:01.081 --> 00:13:04.818 
這是提高Apple Watch
可用性的一個很好方法

00:13:05.485 --> 00:13:07.254 
例如 iPhone上的日曆表APP

00:13:07.521 --> 00:13:09.590 
具有許多Apple Watch 

00:13:09.656 --> 00:13:12.025 
日曆表APP
所不具備的功能

00:13:13.360 --> 00:13:14.962 
Apple Watch日曆表APP

00:13:15.128 --> 00:13:16.129 
不支持搜索

00:13:16.730 --> 00:13:17.898 
不能添加事件

00:13:18.565 --> 00:13:20.033 
不能管理你的日程

00:13:20.734 --> 00:13:23.303 
不能查看未來幾天

00:13:24.171 --> 00:13:25.672 
過去幾天的事件

00:13:26.540 --> 00:13:28.342 
Apple Watch上的
日曆表APP

00:13:28.509 --> 00:13:32.412 
僅包含iPhone APP
全部功能的一部分

00:13:32.479 --> 00:13:34.248 
但是很符合Watch的...

00:13:34.681 --> 00:13:35.516 
使用情況 

00:13:36.183 --> 00:13:38.318 
可以檢查你的日曆表
查看今天有什麼活動

00:13:38.919 --> 00:13:40.621 
接下來幾天有幹什麼安排

00:13:41.121 --> 00:13:42.656 
可以查看日曆表中的

00:13:42.723 --> 00:13:43.991 
每項活動的具體細息

00:13:44.324 --> 00:13:46.660 
你可以接收和拒絕邀請
當你趕上不會議

00:13:46.727 --> 00:13:48.428 
或需要放棄會議時

00:13:48.929 --> 00:13:50.297 
你可以聯繫會議組織者

00:13:51.331 --> 00:13:53.834 
這些都符合Watch的
使用情況

00:13:54.234 --> 00:13:56.537 
你並不需要
iPhone上的所有功能

00:13:57.504 --> 00:14:00.641 
Apple Watch APP應該
是iPhone APP的補充

00:14:01.175 --> 00:14:03.911 
如同我們剛纔
在日程表APP上看到的那些

00:14:03.977 --> 00:14:05.846 
應該在Apple Watch
上提供

00:14:05.913 --> 00:14:07.814 
全部iPhone功能
的一小部分功能

00:14:08.215 --> 00:14:10.551 
或者也可以擴展...

00:14:11.218 --> 00:14:12.386 
iOS APP的功能

00:14:13.320 --> 00:14:16.256 
例如
這個Apple Watch版本

00:14:16.423 --> 00:14:17.591 
的照相機APP

00:14:17.991 --> 00:14:21.595 
將AppleWatch變成
iPhone攝像頭的...

00:14:21.929 --> 00:14:22.763 
取景器

00:14:23.163 --> 00:14:25.032 
允許遙控設置你的iPhone

00:14:25.432 --> 00:14:27.601 
以便在一定距離爲你

00:14:27.734 --> 00:14:28.569 
和你的朋友拍照

00:14:28.635 --> 00:14:31.138 
確保所有人都位於鏡頭之中

00:14:31.371 --> 00:14:35.943 
它功能iOS照相機APP的功能

00:14:36.610 --> 00:14:37.911 
現在 我想要你們思考

00:14:37.978 --> 00:14:40.781 
如何使用你的
Apple Watch APP

00:14:41.114 --> 00:14:42.115 
做同樣的事情

00:14:42.182 --> 00:14:44.184 
如何爲你的APP

00:14:44.484 --> 00:14:46.620 
實現以前無法實現的功能

00:14:49.656 --> 00:14:52.693 
第三個常見陷阱
是導航過於煩瑣

00:14:53.360 --> 00:14:56.029 
煩瑣的導航是效率低下

00:14:56.096 --> 00:14:57.965 
的使用流程造成的

00:14:58.532 --> 00:14:59.700 
導致用戶難以

00:14:59.766 --> 00:15:02.035 
找到他們想要找到的東西

00:15:02.936 --> 00:15:05.172 
不正確的APP結構模型

00:15:05.239 --> 00:15:08.342 
通常會導致煩瑣的導航

00:15:09.510 --> 00:15:10.811 
Apple Watch...

00:15:10.878 --> 00:15:12.012 
有兩種...

00:15:12.312 --> 00:15:13.614 
主要...

00:15:14.014 --> 00:15:14.882 
結構模式

00:15:15.148 --> 00:15:17.284 
第一種基於頁面的模式

00:15:17.918 --> 00:15:20.220 
我們看到一系列依次排序的頁面

00:15:20.454 --> 00:15:23.257 
你可以掃動切換不同頁面

00:15:24.458 --> 00:15:26.460 
這是天氣預報APP使用的模式

00:15:26.727 --> 00:15:28.395 
你掃動切換不同的城市

00:15:29.796 --> 00:15:32.566 
另一種結構模式是
層級模式

00:15:33.267 --> 00:15:36.303 
在層級模式中有一系列的

00:15:36.370 --> 00:15:38.572 
高層次類別或內容摘要

00:15:38.906 --> 00:15:40.174 
然後你點擊

00:15:40.240 --> 00:15:42.042 
進入詳情頁面

00:15:42.109 --> 00:15:43.810 
或使用更具體的功能

00:15:44.912 --> 00:15:47.314 
股票APP就是
這種層級APP的例子之一

00:15:47.881 --> 00:15:50.884 
在頂層有一個股票列表

00:15:51.151 --> 00:15:54.321 
如果點擊其中一支股票
就會彈出一個子視圖

00:15:54.588 --> 00:15:57.257 
顯示選定股票的更多具體信息

00:15:58.358 --> 00:16:00.227 
在watchOS中

00:16:00.294 --> 00:16:02.996 
不能混合使用這些模式

00:16:03.997 --> 00:16:06.400 
因此你不能首先
使用頁面模式

00:16:06.466 --> 00:16:10.170 
然後在更低級別
轉換到...層級模式

00:16:10.971 --> 00:16:11.905 
相反地

00:16:11.972 --> 00:16:14.608 
你也不能
首先使用層級模式

00:16:14.675 --> 00:16:16.844 
然後在更低級別
轉換到頁面模式

00:16:17.811 --> 00:16:20.147 
其原因在於屏幕尺寸

00:16:22.049 --> 00:16:23.083 
爲了便於理解

00:16:23.350 --> 00:16:24.284 
讓我們來看

00:16:24.685 --> 00:16:26.286 
層級APP中的
這個子視圖

00:16:26.720 --> 00:16:28.522 
我剛纔高亮顯示左上角的

00:16:28.989 --> 00:16:30.858 
返回箭頭圖標 

00:16:31.391 --> 00:16:34.795 
你點擊這個圖標
將返回上級視圖

00:16:35.462 --> 00:16:37.531 
但是它是一個很小的圖標

00:16:37.598 --> 00:16:39.466 
它的點擊區域

00:16:39.867 --> 00:16:41.401 
並不十分明確

00:16:41.668 --> 00:16:43.136 
它比箭頭肯定要大一些

00:16:43.203 --> 00:16:44.938 
但是也大不了多少

00:16:46.006 --> 00:16:47.574 
爲了更簡單地

00:16:47.641 --> 00:16:48.976 
返回上級視圖

00:16:49.176 --> 00:16:52.212 
可以從屏幕左邊緣掃動

00:16:53.247 --> 00:16:55.015 
這將幫助你返回到上級視圖

00:16:55.082 --> 00:16:56.617 
在這裏很容易看清楚

00:16:57.484 --> 00:16:58.519 
現在的問題是

00:16:58.719 --> 00:17:00.053 
在頁面模式APP中

00:17:00.787 --> 00:17:04.191 
如何使用類似的操作
返回到上一個屏幕

00:17:04.925 --> 00:17:05.959 
因爲Watch

00:17:06.126 --> 00:17:07.928 
顯示屏尺寸很小

00:17:08.228 --> 00:17:10.597 
因此很難同時支持

00:17:10.664 --> 00:17:12.432 
這些操作手勢

00:17:13.599 --> 00:17:16.737 
你必須決定哪些模式
最適合你的APP

00:17:17.570 --> 00:17:20.473 
你選擇的結構模式應該

00:17:20.641 --> 00:17:22.910 
便於用戶找到他們想找的東西

00:17:23.242 --> 00:17:25.846 
而且只需要最少的掃動和點擊

00:17:26.713 --> 00:17:28.882 
一般來說 選擇層級還是

00:17:28.949 --> 00:17:30.817 
頁面結構主要取決於

00:17:30.884 --> 00:17:32.653 
APP顯示屏幕數量

00:17:33.220 --> 00:17:34.488 
想要顯示的

00:17:34.555 --> 00:17:35.389 
信息類型

00:17:36.356 --> 00:17:38.192 
對於扁平結構的信息

00:17:38.258 --> 00:17:40.727 
即所有信息部分都是同級別的

00:17:41.228 --> 00:17:43.397 
這時適合使用頁面模式

00:17:43.997 --> 00:17:46.633 
頁面模式不應該
有過多的分頁屏幕

00:17:46.700 --> 00:17:49.069 
因爲掃動切換屏幕是

00:17:49.136 --> 00:17:51.471 
是一個相對較慢的內容瀏覽方法

00:17:52.372 --> 00:17:54.274 
天氣預報APP符合這些條件

00:17:54.875 --> 00:17:57.845 
大多數人只想看
少數幾個城市的天氣

00:17:57.911 --> 00:17:59.413 
因此不應該含有大量的項目

00:17:59.813 --> 00:18:01.081 
這些掃動切換

00:18:01.148 --> 00:18:02.416 
不會變得過於煩瑣

00:18:03.717 --> 00:18:05.619 
在天氣信息的含義方面

00:18:05.686 --> 00:18:07.354 
所有城市基本是相同的

00:18:07.421 --> 00:18:09.122 
因此不需要進行

00:18:09.189 --> 00:18:11.258 
層級化信息組織和分類

00:18:12.426 --> 00:18:15.729 
另一方面
層級化APP

00:18:15.796 --> 00:18:18.031 
更適合大型或複雜的數據結構

00:18:18.832 --> 00:18:21.869 
許多人使用股票APP
同時查看多支股票

00:18:21.935 --> 00:18:23.670 
和市場行情

00:18:24.404 --> 00:18:25.906 
使用概覽列表

00:18:25.973 --> 00:18:28.942 
然後導航到單支股票或市場行情

00:18:29.009 --> 00:18:30.811 
是很容易完成的操作

00:18:31.211 --> 00:18:32.446 
只需要滾動屏幕

00:18:32.846 --> 00:18:34.815 
找到你想要的股票
然後選擇它

00:18:37.284 --> 00:18:38.919 
在這個層級

00:18:38.986 --> 00:18:41.455 
有大量的信息可供用戶查看

00:18:41.922 --> 00:18:44.458 
用戶可以輕鬆找到
他們所需要的信息

00:18:44.525 --> 00:18:46.860 
甚至根本不需要導航

00:18:47.528 --> 00:18:48.795 
這就提高了效率

00:18:52.466 --> 00:18:55.202 
假設我們將這個APP

00:18:55.269 --> 00:18:57.571 
設計成爲分頁APP

00:18:58.138 --> 00:19:01.175 
用戶將需要花費大量的時間

00:19:01.241 --> 00:19:03.410 
才能找到...他們想要的信息

00:19:03.477 --> 00:19:05.078 
因爲這裏會有數不清的分頁內容

00:19:05.779 --> 00:19:08.182 
如果他們按正確的方向掃動查找
情況會好一點

00:19:08.248 --> 00:19:10.417 
如果方向出錯
他們必須反過來...

00:19:11.051 --> 00:19:12.419 
重新開始

00:19:13.420 --> 00:19:15.289 
選擇合適的模式非常重要

00:19:16.657 --> 00:19:18.759 
過度使用模式表單

00:19:18.825 --> 00:19:20.527 
也會造成煩瑣的導航

00:19:22.196 --> 00:19:23.864 
現在模式表單支持

00:19:24.164 --> 00:19:25.332 
多視圖分頁

00:19:26.300 --> 00:19:29.203 
我看到開發人員
通過使用模式表單

00:19:29.269 --> 00:19:31.572 
來繞過無法從層級結構

00:19:32.039 --> 00:19:33.907 
轉到分頁結構的限制

00:19:34.775 --> 00:19:37.311 
我強烈反對這種做法

00:19:38.145 --> 00:19:40.347 
首先 模式表單不顯示時間

00:19:40.414 --> 00:19:41.982 
我認爲 大多數時候

00:19:42.049 --> 00:19:42.916 
用戶想...

00:19:43.317 --> 00:19:45.619 
要在他們的
Apple Watch上看到時間

00:19:46.820 --> 00:19:49.389 
模式表單的動畫

00:19:49.456 --> 00:19:51.091 
是非連慣性的

00:19:51.592 --> 00:19:54.461 
它看起來就像是這個
單獨的信息窗格

00:19:54.528 --> 00:19:56.163 
在主界面上滑動

00:19:56.230 --> 00:19:58.198 
讓用戶感覺得好像
失去對主APP的控制

00:19:58.732 --> 00:20:00.534 
它發現一種分離信號

00:20:01.301 --> 00:20:02.736 
感覺好象操作發生中斷

00:20:03.303 --> 00:20:06.406 
如果用戶的APP導航操作

00:20:06.473 --> 00:20:09.376 
頻繁地觸發這些表單模式動畫

00:20:09.743 --> 00:20:12.179 
用戶體驗將會變得不流暢

00:20:12.246 --> 00:20:15.115 
讓人感覺突兀...和不連貫

00:20:16.583 --> 00:20:18.485 
爲了避免過多使用模式表單

00:20:18.552 --> 00:20:20.487 
和過於煩瑣的導航

00:20:20.554 --> 00:20:23.090 
不應該設置過多的模式表單

00:20:23.156 --> 00:20:24.191 
互相滑動切換和

00:20:24.491 --> 00:20:25.626 
來回跳轉

00:20:26.159 --> 00:20:27.895 
在iOS也同樣如此

00:20:28.262 --> 00:20:30.397 
因爲這樣會讓用戶覺得

00:20:30.697 --> 00:20:33.233 
他們始終處於這種操作模式中
永遠都不會結束

00:20:33.734 --> 00:20:36.103 
他們會很困難或
感覺難以

00:20:36.170 --> 00:20:38.405 
回到正常的APP操作模式

00:20:39.907 --> 00:20:41.909 
無論你選擇什麼結構類型

00:20:41.975 --> 00:20:42.976 
都應該使用

00:20:43.043 --> 00:20:44.077 
簡單的結構

00:20:44.711 --> 00:20:47.314 
在層級APP中
不應該設置兩個以上的層級

00:20:47.381 --> 00:20:49.249 
最多不應該有超過兩個

00:20:49.650 --> 00:20:51.018 
最多三個層級

00:20:51.552 --> 00:20:52.719 
如果超過這個限值

00:20:52.786 --> 00:20:54.221 
需要將會需要花費更多的時間

00:20:54.288 --> 00:20:55.756 
來查找他們想要的內容

00:20:56.323 --> 00:20:58.892 
他們會感覺無法
跳出你的層級結構

00:20:59.760 --> 00:21:02.496 
對於分頁APP
如我前面所說的那樣

00:21:02.763 --> 00:21:04.531 
應該避免過多的頁面

00:21:04.932 --> 00:21:07.034 
掃動切換所有這些頁面

00:21:07.100 --> 00:21:09.403 
將需要大量的時間
讓人感覺非常煩瑣

00:21:10.838 --> 00:21:14.074 
煩瑣的導航會嚴重降低效率

00:21:14.908 --> 00:21:17.411 
前面我還講到一個設計原則

00:21:17.477 --> 00:21:18.712 
即輕量級交互

00:21:19.079 --> 00:21:22.049 
輕量級交互的是爲了
實現高效率的導航

00:21:22.549 --> 00:21:24.985 
或者說它的主要目的
是提高效率

00:21:27.888 --> 00:21:28.722 
我們繼續

00:21:29.089 --> 00:21:31.992 
第四個常見陷阱是標籤混亂

00:21:32.860 --> 00:21:37.231 
這裏我指的主要是
頁面標題和

00:21:37.297 --> 00:21:40.300 
模式表單的"Close"按鈕 
和"Dismiss"按鈕

00:21:40.934 --> 00:21:42.269 
我們先來看頁面標題

00:21:43.370 --> 00:21:46.607 
在這方面 一個常見的情況是
在層級結構APP中

00:21:47.374 --> 00:21:50.110 
右上角的標題顯示"Do Not
Disturb"位於右側

00:21:50.577 --> 00:21:53.080 
它實際是一個"返回"按鈕
或"返回"按鈕標籤

00:21:53.146 --> 00:21:54.882 
而不是當前視圖標題

00:21:56.116 --> 00:21:57.384 
但是實際上不是這麼回事

00:21:58.485 --> 00:22:00.454 
如果我們以這種方式使用標題

00:22:00.521 --> 00:22:02.456 
將會有多個屏幕

00:22:02.523 --> 00:22:04.291 
在快速Glance上
使用相同的標題

00:22:04.591 --> 00:22:06.894 
它們將會具有相同的標題

00:22:07.427 --> 00:22:09.162 
因此應該避免這樣做

00:22:09.930 --> 00:22:10.764 
現在

00:22:10.998 --> 00:22:12.399 
我理解...

00:22:12.466 --> 00:22:13.534 
開發者爲什麼這樣做

00:22:13.967 --> 00:22:15.102 
錯誤原因...

00:22:15.435 --> 00:22:16.470 
是一樣的

00:22:16.537 --> 00:22:17.638 
它不是"Back"按鈕

00:22:17.704 --> 00:22:18.539 
因此在這裏

00:22:18.839 --> 00:22:20.507 
不應該使用"Back"

00:22:23.877 --> 00:22:24.978 
前面我說過

00:22:25.045 --> 00:22:27.447 
我理解爲什麼人們將它
視爲"Back"按鈕

00:22:27.514 --> 00:22:29.816 
因爲它看上去
如同iPhone或iPad

00:22:30.250 --> 00:22:31.885 
上的"Back"按鈕

00:22:32.986 --> 00:22:34.621 
但是在iPhone或iPad上

00:22:34.688 --> 00:22:38.725 
有足夠的空間同時顯示
"Back"按鈕和標題

00:22:39.760 --> 00:22:42.062 
在Apple Watch上
顯示屏更小

00:22:42.629 --> 00:22:44.231 
不能同時顯示二者

00:22:44.431 --> 00:22:46.066 
因爲那樣將會不美觀

00:22:46.934 --> 00:22:48.936 
因此你必須選擇顯示其中之一

00:22:49.002 --> 00:22:50.771 
相比之下 顯示標題

00:22:51.104 --> 00:22:53.173 
比顯示“Back”按鈕更重要

00:22:53.540 --> 00:22:54.641 
更重要的是用戶應該知道

00:22:54.708 --> 00:22:56.176 
當前所看的內容是什麼

00:22:56.376 --> 00:22:59.313 
而不是瞭解上一屏幕
或父級屏幕的內容

00:23:00.948 --> 00:23:03.150 
在標籤方面
另一個...

00:23:03.483 --> 00:23:04.718 
常見的誤區是

00:23:05.319 --> 00:23:07.321 
模式表單"Close"按鈕

00:23:07.855 --> 00:23:09.156 
或"Dismiss"按鈕

00:23:09.723 --> 00:23:11.291 
這些按鈕可以重命名

00:23:11.425 --> 00:23:13.360 
因爲相比於顯示"Dismiss"

00:23:13.427 --> 00:23:14.661 
顯示

00:23:15.062 --> 00:23:18.065 
"Close"或"Done"
或"Cancel"更容易讓人接受

00:23:19.633 --> 00:23:22.436 
但是 無論怎麼重命名 
都必須明確地讓用戶知道

00:23:22.503 --> 00:23:23.637 
這些標籤是可操作的

00:23:23.737 --> 00:23:25.339 
用戶需要知道
他們可以

00:23:25.606 --> 00:23:26.640 
點擊這個標籤

00:23:26.707 --> 00:23:27.841 
從而會觸發特定的操作

00:23:28.509 --> 00:23:30.110 
實際上不僅僅是觸發操作

00:23:30.177 --> 00:23:31.845 
這將會關閉模式表單

00:23:31.912 --> 00:23:33.280 
並返回前一屏幕

00:23:34.615 --> 00:23:36.450 
這顯然不是你想要的

00:23:36.750 --> 00:23:38.252 
因爲你將它用作標題

00:23:38.585 --> 00:23:41.221 
用戶並不知道它們是可操作的

00:23:41.688 --> 00:23:42.823 
用戶將會想辦法

00:23:42.890 --> 00:23:44.224 
關閉這個模式表單

00:23:44.291 --> 00:23:45.459 
但是會長時間停留

00:23:45.526 --> 00:23:47.494 
在此...屏幕之中

00:23:48.996 --> 00:23:50.764 
從很多方面來看

00:23:51.164 --> 00:23:53.267 
不應該這樣做

00:23:53.901 --> 00:23:56.570 
前面我說過
即將在層級結構APP中

00:23:56.803 --> 00:23:59.540 
也不應該將標題視爲
"Back"按鈕

00:24:00.140 --> 00:24:01.675 
在這裏使用左尖括號

00:24:01.742 --> 00:24:03.010 
並加上Back字樣

00:24:03.343 --> 00:24:05.112 
會讓用戶感到困惑

00:24:05.179 --> 00:24:07.781 
首先 模式表單
屏幕底部向上滑動

00:24:07.848 --> 00:24:09.216 
而不是從右向左滑動

00:24:09.683 --> 00:24:12.653 
你不能使用左邊緣掃動
退出當前屏幕

00:24:12.920 --> 00:24:15.455 
當用戶看到這種情況
他們會看到十分困惑

00:24:18.325 --> 00:24:20.527 
第五個常見的陷阱是

00:24:21.195 --> 00:24:23.130 
在Apple Watch上

00:24:23.530 --> 00:24:24.865 
使用菜單控件

00:24:24.932 --> 00:24:26.867 
作爲主要的APP導航方式

00:24:28.035 --> 00:24:32.506 
菜單很適合環境相關操作

00:24:32.840 --> 00:24:34.508 
例如使用
編輯一條新消息的菜單

00:24:35.242 --> 00:24:37.978 
對於視圖模式首選項
例如日曆表APP

00:24:38.045 --> 00:24:40.581 
可以使用菜單切換
日程表顯示外觀

00:24:42.316 --> 00:24:43.617 
但是當你使用菜單

00:24:44.117 --> 00:24:45.052 
進行導航時

00:24:45.118 --> 00:24:47.287 
將會造成可用性問題

00:24:48.589 --> 00:24:51.291 
主要問題是
即使用戶可以導航

00:24:51.358 --> 00:24:54.127 
他們也不知道其在
APP結構中所處的位置

00:24:55.162 --> 00:24:57.130 
例如 在一個層級結構APP中

00:24:57.598 --> 00:25:00.133 
這個箭頭具有很重要的作用

00:25:00.968 --> 00:25:02.436 
這讓用戶知道

00:25:02.503 --> 00:25:04.705 
APP的結構是什麼樣的

00:25:05.005 --> 00:25:07.074 
它讓用戶知道
這是一個層級結構APP

00:25:07.741 --> 00:25:09.676 
更重要的是 它讓用戶知道

00:25:09.743 --> 00:25:11.144 
當前位置是一個子視圖

00:25:11.378 --> 00:25:12.980 
因此他們可以返回

00:25:13.046 --> 00:25:15.115 
以進行APP導航

00:25:15.849 --> 00:25:17.084 
這一點很重要

00:25:17.551 --> 00:25:19.520 
用戶必須知道這個基本信息

00:25:20.654 --> 00:25:22.856 
同樣地 在頁面模式APP中

00:25:23.056 --> 00:25:24.825 
屏幕底部的這些圓點

00:25:25.259 --> 00:25:26.093 
告訴用戶

00:25:26.326 --> 00:25:28.195 
這是一種頁面模式結構

00:25:28.862 --> 00:25:31.431 
並告訴他們有多少個頁面

00:25:31.498 --> 00:25:33.734 
以及他們所處的相對頁面位置

00:25:34.067 --> 00:25:36.270 
並且提醒用戶
他們可以通過側向掃動

00:25:36.336 --> 00:25:37.738 
在這些頁面之間導航

00:25:38.338 --> 00:25:39.173 
信息很豐富 

00:25:39.339 --> 00:25:40.440 
而且操作也很多

00:25:40.507 --> 00:25:43.076 
它告訴用戶如何與APP
進行交互

00:25:44.378 --> 00:25:46.313 
如果使用菜單作爲導航方法

00:25:46.380 --> 00:25:48.916 
將不會屏幕圖標

00:25:49.183 --> 00:25:50.551 
來提示如何導航

00:25:51.285 --> 00:25:53.287 
正如前面我說的
你無法看到關於

00:25:53.353 --> 00:25:54.855 
是否可以導航的提示

00:25:55.189 --> 00:25:57.991 
這樣 你會覺得
你正在查看的屏幕是

00:25:58.058 --> 00:25:59.626 
唯一的APP屏幕

00:26:01.828 --> 00:26:03.096 
因此 最好的方法是

00:26:03.764 --> 00:26:06.900 
在你的APP中始終使用
直觀的層級結構或頁面結構

00:26:07.434 --> 00:26:09.403 
而不要嘗試使用菜單導航

00:26:10.737 --> 00:26:12.406 
下面的內容可能有點偏題

00:26:12.706 --> 00:26:14.141 
但是它與菜單有關

00:26:14.208 --> 00:26:15.843 
因此我覺得有必要有說一下

00:26:16.376 --> 00:26:17.978 
這是我額外給你們
講解的一種陷阱

00:26:18.078 --> 00:26:20.380 
你們不需要另外付學費給我

00:26:20.981 --> 00:26:22.015 
但是我不介意收點小費

00:26:24.318 --> 00:26:26.620 
如前所述 在菜單中

00:26:27.054 --> 00:26:31.191 
菜單具有非常明顯的外觀樣式

00:26:32.159 --> 00:26:35.696 
這裏可以看到 按鈕有
深色的線性圖標

00:26:36.129 --> 00:26:40.367 
它們位於這些淺灰色圓圈上

00:26:40.667 --> 00:26:41.869 
它們有淺色的標籤

00:26:42.236 --> 00:26:44.037 
其外觀特徵是十分明顯的

00:26:45.005 --> 00:26:48.308 
如果你將APP UI
設計成這個樣子

00:26:48.675 --> 00:26:50.544 
可能會讓用戶感到困惑

00:26:51.411 --> 00:26:53.680 
他們可能會認爲
按顯示屏時太用力了

00:26:53.747 --> 00:26:56.116 
因此纔會進入這個屏幕
他們想要查找APP菜單

00:26:56.884 --> 00:26:59.386 
然後他們意識到
他們並不想導航到任何位置

00:26:59.453 --> 00:27:00.988 
或在這裏進行任何操作

00:27:01.054 --> 00:27:02.856 
因此他們嘗試點擊空白位置
關閉當前屏幕

00:27:03.090 --> 00:27:04.658 
但是很顯然
這不會有任何反應

00:27:04.725 --> 00:27:05.893 
因爲這並不是在菜單之中

00:27:06.159 --> 00:27:08.428 
這樣 用戶感覺你的APP卡住了

00:27:09.096 --> 00:27:11.198 
這對用戶來說
不是良好的使用體驗

00:27:11.965 --> 00:27:14.034 
原則上來說
在你的APP中

00:27:14.368 --> 00:27:15.435 
使用這樣的...

00:27:16.370 --> 00:27:18.472 
大圖標作爲導航方式

00:27:18.539 --> 00:27:20.541 
本身並沒有錯

00:27:21.041 --> 00:27:23.410 
但是應該將這些圖標

00:27:23.544 --> 00:27:26.146 
與菜單控件區分開來

00:27:26.747 --> 00:27:29.550 
不應該使用這些深色圖標
和淺灰色背景

00:27:29.616 --> 00:27:30.617 
而應該嘗試加入

00:27:30.884 --> 00:27:32.152 
你的全局彩色顏色

00:27:32.653 --> 00:27:35.956 
在這裏不應該使用深色圖標

00:27:36.023 --> 00:27:39.092 
而應該使用白色
並且爲按鈕添加邊框

00:27:39.526 --> 00:27:41.762 
或者進行其他一些區分

00:27:42.229 --> 00:27:44.831 
應儘量將它們與菜單控件的外觀

00:27:45.098 --> 00:27:46.433 
區分開來

00:27:49.970 --> 00:27:52.506 
關於菜單就講到這裏
我的講座部分也到此爲止

00:27:52.806 --> 00:27:54.808 
現在我想邀請我的同事

00:27:54.875 --> 00:27:57.177 
雷切爾·羅斯上臺

00:27:57.644 --> 00:27:58.512 
有請雷切爾

00:28:00.647 --> 00:28:01.481 
謝謝米克

00:28:02.516 --> 00:28:03.350 
大家好

00:28:04.017 --> 00:28:07.154 
我是雷切爾·羅斯
我也是APPLE的

00:28:07.221 --> 00:28:08.789 
用戶體驗主講師

00:28:09.690 --> 00:28:11.725 
接下來我會討論
這個清單上的其它項目

00:28:12.593 --> 00:28:15.195 
在Apple Watch上
很重要的一點是

00:28:15.262 --> 00:28:17.831 
讓用戶能夠快速確定
哪些是可點擊的

00:28:18.365 --> 00:28:19.833 
哪些是不可點擊的

00:28:20.267 --> 00:28:22.736 
在這個方面
一個常見的問題是

00:28:22.803 --> 00:28:24.738 
按鈕看起來並不像是按鈕

00:28:25.672 --> 00:28:28.141 
Watch具有自己的設計語言

00:28:28.208 --> 00:28:30.644 
它並不等同於iOS

00:28:32.079 --> 00:28:35.849 
在iOS上 我們主要通過
屏幕上的顏色或位置

00:28:35.916 --> 00:28:38.652 
來告訴我們
某個項目是否可以點擊

00:28:39.953 --> 00:28:44.424 
如果控件位於工具欄或導航欄中

00:28:44.725 --> 00:28:46.760 
並且具有不同的顏色
用戶可以知道

00:28:46.827 --> 00:28:49.129 
它是可操作項目

00:28:49.663 --> 00:28:50.631 
比如在這裏的地圖上

00:28:51.098 --> 00:28:52.332 
我們知道 角落上的

00:28:52.399 --> 00:28:53.400 
每個項目都是可點擊的

00:28:53.467 --> 00:28:56.270 
因爲它們的位置和顏色
告訴我們這一點

00:28:58.205 --> 00:29:01.175 
現在 在Apple Watch上
 大多數控件

00:29:01.241 --> 00:29:04.178 
都位於這些圓角矩形
或圈圈之內

00:29:04.745 --> 00:29:06.346 
這是因爲顯示屏

00:29:06.413 --> 00:29:07.481 
空間非常有限 

00:29:08.081 --> 00:29:10.851 
沒有專門的區域

00:29:11.151 --> 00:29:14.121 
來放置導航欄或工具欄

00:29:15.522 --> 00:29:19.193 
狀態欄之外的任何內容
都位於視圖之中

00:29:19.426 --> 00:29:22.129 
因此沒有專門的位置來放置控件

00:29:23.597 --> 00:29:27.134 
通過顏色來指示可操作項目

00:29:27.201 --> 00:29:28.902 
也有一點困難

00:29:29.102 --> 00:29:30.504 
因爲在
Apple Watch上

00:29:30.571 --> 00:29:31.872 
頁面標題是彩色的

00:29:32.339 --> 00:29:34.241 
我們使用這種方法來強調

00:29:34.308 --> 00:29:36.143 
上下文相關性和品牌信息

00:29:37.010 --> 00:29:39.880 
這也有助於增強可用性 
因爲標題顏色

00:29:40.280 --> 00:29:42.482 
讓你更容易知道你在哪個APP之中
尤其是當你遠距離查看時

00:29:42.549 --> 00:29:44.751 
你可能在等待公汽
需要轉移視線看車來了沒有

00:29:44.818 --> 00:29:47.020 
這種顏色標識有助於你
快速識別內容

00:29:48.055 --> 00:29:50.791 
這裏有兩個APP
具有非常相似的內容

00:29:50.924 --> 00:29:53.026 
左邊是Yelp APP

00:29:53.460 --> 00:29:55.896 
右邊是Foursquare APP

00:29:56.830 --> 00:29:58.799 
它們具有相似的內容

00:29:58.999 --> 00:30:01.435 
但是Yelp使用紅色
作爲品牌專用顏色

00:30:01.502 --> 00:30:03.136 
Foursquare使用粉色

00:30:03.604 --> 00:30:07.574 
頁面標題顏色讓你知道
處在哪個APP之中

00:30:09.543 --> 00:30:10.377 
同樣地

00:30:10.444 --> 00:30:11.845 
屏幕左側是Timer

00:30:12.779 --> 00:30:15.582 
右側是Runtastic
Six Pack

00:30:16.049 --> 00:30:19.720 
顏色幫助強化這些APP的身份

00:30:21.221 --> 00:30:22.789 
許多人說
他們不知道

00:30:22.856 --> 00:30:24.258 
如何設置顏色

00:30:24.658 --> 00:30:26.760 
那我們可以
使用Global Tint顏色

00:30:29.296 --> 00:30:31.532 
在iOS 另一個約定成俗的做法是

00:30:31.598 --> 00:30:34.201 
爲可點擊項目添加V形符號

00:30:34.635 --> 00:30:36.870 
例如 我們在設置行文字標籤旁邊

00:30:37.771 --> 00:30:42.042 
和App Store中的開發者
姓名旁邊添加這樣的符號

00:30:44.745 --> 00:30:48.048 
但是我們在Apple Watch
中使用這些V形符號

00:30:48.682 --> 00:30:50.250 
將會佔用太多的空間

00:30:51.285 --> 00:30:54.054 
如果語音留言標籤再長一些

00:30:54.121 --> 00:30:56.456 
或者字體再大一些

00:30:56.823 --> 00:30:59.126 
將會導致文字纏在一起
或者被截斷

00:31:00.594 --> 00:31:02.429 
而且會看上去雜亂不堪

00:31:02.496 --> 00:31:04.665 
Apple Watch的屏幕

00:31:05.098 --> 00:31:06.466 
是非常有限

00:31:06.533 --> 00:31:08.602 
增加V形符號會影響

00:31:08.669 --> 00:31:10.137 
圖標和文字受到的關注度

00:31:10.437 --> 00:31:12.406 
而圖標和文字所傳達的
信息是十分重要的

00:31:13.240 --> 00:31:15.409 
如果使用圓角矩形

00:31:15.709 --> 00:31:18.946 
不需要添加V形符號
來表示可交互性

00:31:19.379 --> 00:31:21.148 
它們明顯看上去就是可點擊的

00:31:22.850 --> 00:31:25.352 
在Apple Watch 我們的
另一個慣常做法是

00:31:25.419 --> 00:31:26.987 
將按鈕放入圓圈

00:31:27.588 --> 00:31:28.989 
如果沒有圓圈

00:31:30.123 --> 00:31:32.693 
這些電話圖標看上去
將會比較滑稽

00:31:33.026 --> 00:31:36.597 
它們看上去更像是狀態指示符

00:31:36.663 --> 00:31:38.465 
或裝飾性符號

00:31:39.499 --> 00:31:42.503 
但是增加圓圈之後 就可以
準確無誤地表明它們是按鈕

00:31:43.070 --> 00:31:45.239 
由於交互時間很短

00:31:45.305 --> 00:31:46.640 
而且需要快速做出決定

00:31:46.707 --> 00:31:50.611 
我們應該能夠讓用戶
快速進行操作

00:31:50.677 --> 00:31:51.845 
我看到一個電話

00:31:51.912 --> 00:31:53.180 
是否接聽
還是應該掛掉？

00:31:53.680 --> 00:31:55.916 
這些圓圈能夠明顯
指示這兩種操作選項

00:31:58.218 --> 00:32:00.120 
但是它與圓角矩形不一樣

00:32:00.187 --> 00:32:03.190 
圓形是一種革命性的新概念

00:32:03.257 --> 00:32:05.592 
這一點與iOS相似

00:32:06.760 --> 00:32:08.896 
在iPhone上
當按鈕看上去不是很明確時

00:32:08.962 --> 00:32:10.764 
我們使用圓圈

00:32:12.232 --> 00:32:14.034 
圓角矩形同樣如此

00:32:14.101 --> 00:32:16.503 
你經常會看到
App Store中的分段控件

00:32:17.271 --> 00:32:19.106 
和"Buy"按鈕使用圓角矩形

00:32:19.907 --> 00:32:22.543 
如果我們不使用圓角矩形

00:32:22.809 --> 00:32:24.745 
"Buy"按鈕可能看上去並不明顯

00:32:24.878 --> 00:32:27.080 
我們一致認爲 

00:32:27.381 --> 00:32:28.882 
應該明確地告訴用戶

00:32:28.949 --> 00:32:30.684 
如何在App Store中
購買APP

00:32:33.220 --> 00:32:35.589 
因此在Apple Watch上
圓角矩形和圓圈

00:32:35.656 --> 00:32:39.293 
幫助用戶明確理解
哪些項目是可以操作的

00:32:39.826 --> 00:32:42.896 
而且由於這些交互操作非常簡短

00:32:42.963 --> 00:32:45.933 
如米克所說的那樣
你只有幾秒鐘的時間

00:32:45.999 --> 00:32:48.268 
比如說一個人舉起他的手臂
不一會他感覺有點累了

00:32:48.969 --> 00:32:51.138 
每一秒都很重要

00:32:52.339 --> 00:32:54.908 
因此 應該將任何
可點擊的項目

00:32:55.242 --> 00:32:57.711 
放入圓角矩形或圓形

00:32:58.478 --> 00:33:00.047 
同樣重要的是

00:33:00.113 --> 00:33:02.850 
不要將這些形狀
用於不可點擊項目

00:33:03.517 --> 00:33:05.185 
如果這樣做 它們看上去可點擊

00:33:05.252 --> 00:33:06.753 
如果不能 將會讓用戶感到困惑

00:33:08.322 --> 00:33:11.892 
在iOS中 有時候 
我們使用這些着色背景

00:33:11.992 --> 00:33:13.827 
來分組具有相似性的項目

00:33:14.995 --> 00:33:18.532 
因此開發人員可能也想在
Apple Watch上這樣做

00:33:18.599 --> 00:33:19.833 
但是如果你這樣做

00:33:20.100 --> 00:33:22.035 
所有這些項目看起來
都是可點擊的

00:33:22.836 --> 00:33:25.873 
如果用戶使用你的APP
並認爲這些項目是可點擊的

00:33:26.273 --> 00:33:28.208 
他們嘗試點擊
而沒有任何反應 

00:33:28.775 --> 00:33:30.978 
他們會認爲APP存在問題

00:33:31.812 --> 00:33:33.447 
如果你遇到這樣的情況

00:33:33.514 --> 00:33:36.683 
你最好使用分隔線進行分組

00:33:36.750 --> 00:33:38.785 
如同我們
在股票APP中所做的那樣

00:33:39.887 --> 00:33:41.655 
這些線條表明
哪些項目是相關的

00:33:41.722 --> 00:33:43.156 
還可以幫助你

00:33:43.223 --> 00:33:44.925 
查找不同的水平列表

00:33:46.927 --> 00:33:49.062 
因此 應該確保
按鈕看上去像是按鈕

00:33:49.596 --> 00:33:52.933 
確保不可交互內容
看上去就是不可操作的

00:33:55.369 --> 00:33:57.037 
這樣我們就進入下一個主題

00:33:57.104 --> 00:33:58.972 
即點擊區域不足

00:33:59.540 --> 00:34:02.509 
發現可交互項目僅是一個開始

00:34:02.576 --> 00:34:04.912 
但是如果用戶不能
輕鬆地點它們

00:34:05.078 --> 00:34:07.214 
仍然會存在可用性問題

00:34:08.081 --> 00:34:09.315 
增強觸感設計

00:34:09.382 --> 00:34:11.685 
是Apple Watch的
一個非常重要的內容

00:34:11.952 --> 00:34:14.121 
當用戶在運動過程中
使用你的APP時

00:34:14.188 --> 00:34:15.589 
尤其需要注意這一點

00:34:17.123 --> 00:34:19.326 
在Photoshop
或Sketch中

00:34:19.393 --> 00:34:22.161 
這些項目看起來很容易使用

00:34:22.462 --> 00:34:25.498 
你坐在舒適安穩的辦公室椅子上

00:34:25.565 --> 00:34:27.601 
桌上有大屏幕顯示器

00:34:29.469 --> 00:34:30.603 
即使你使用鼠標

00:34:30.670 --> 00:34:32.072 
在模擬器中操作

00:34:33.106 --> 00:34:34.474 
也非常容易

00:34:34.708 --> 00:34:36.342 
但是在Watch上

00:34:37.010 --> 00:34:39.379 
如果這些項目的尺寸不夠大

00:34:39.446 --> 00:34:41.114 
將很難以進行點擊

00:34:43.116 --> 00:34:44.685 
在Watch上
滾動操作很簡單

00:34:44.751 --> 00:34:46.186 
你可以使用數字表冠

00:34:46.253 --> 00:34:47.920 
手指掃動操作也很簡單

00:34:48.088 --> 00:34:50.757 
因此不要害怕內容
移出當前視圖

00:34:51.658 --> 00:34:54.228 
尤其是當你可以避免裁剪

00:34:54.527 --> 00:34:56.530 
和更便於點擊按鈕

00:34:58.398 --> 00:34:59.666 
在Apple Watch上

00:34:59.733 --> 00:35:03.937 
對於42mm規格
圓形控件尺寸

00:35:04.705 --> 00:35:06.240 
應不低於80xy 80像素

00:35:06.440 --> 00:35:09.543 
對於38mm規格
應不低於75x75像素

00:35:10.310 --> 00:35:12.379 
但是更大的尺寸不會帶來問題

00:35:13.213 --> 00:35:14.848 
我們來看
Chipotle的設計

00:35:15.315 --> 00:35:16.950 
主要操作

00:35:17.217 --> 00:35:19.353 
也就是設計者想要
用戶在Watch app上

00:35:19.419 --> 00:35:21.188 
執行的操作
是訂購玉米煎餅

00:35:21.688 --> 00:35:25.325 
他們這個漂亮而巨大的
按鈕來執行此操作

00:35:25.592 --> 00:35:27.094 
你將可以毫不費力地

00:35:27.160 --> 00:35:28.495 
點擊這個按鈕

00:35:30.931 --> 00:35:33.033 
現在 對於矩形按鈕

00:35:33.734 --> 00:35:38.071 
在42mm Watch上
其高度絕對不應該小於53像素

00:35:38.405 --> 00:35:42.342 
在38mm Watch上
不應該小於50像素

00:35:42.709 --> 00:35:43.710 
但是我們看到

00:35:43.777 --> 00:35:45.412 
幾乎所有系統按鈕
都大於這個尺寸

00:35:45.612 --> 00:35:47.581 
高度通常爲80像素
或更大

00:35:48.248 --> 00:35:49.683 
同樣是越大越好

00:35:52.219 --> 00:35:56.190 
應該始終確保
將按鈕擴展到畫布的完整寬度

00:35:56.456 --> 00:35:58.125 
即使標籤比較簡短

00:35:58.358 --> 00:36:01.528 
因爲這個按鈕不如
這個按鈕容易點擊

00:36:02.062 --> 00:36:04.831 
特別是當你想要出門散步時

00:36:07.301 --> 00:36:10.637 
在某些情況下
需要並排使用兩個按鈕

00:36:10.938 --> 00:36:12.539 
也可以這樣做

00:36:13.841 --> 00:36:16.810 
但是必須使用
非常簡短的文本標籤

00:36:18.512 --> 00:36:22.482 
並排設置三個帶有文字標籤
的按鈕是不適當的做法

00:36:23.016 --> 00:36:24.518 
即使文字極其簡短

00:36:25.586 --> 00:36:30.390 
如果你有單獨數字
多個字符或圖標

00:36:30.691 --> 00:36:33.560 
雖然可以並排設置三個

00:36:34.161 --> 00:36:37.064 
但是這樣看上去會很擁擠

00:36:37.464 --> 00:36:39.800 
尤其是在更小尺寸的Watch上

00:36:39.867 --> 00:36:42.736 
會讓用戶無法準確地點擊

00:36:44.304 --> 00:36:46.039 
請絕對不要並排超過三個

00:36:46.106 --> 00:36:47.474 
並排設置三個以上的按鈕

00:36:47.674 --> 00:36:50.377 
可能導致無法使用

00:36:50.611 --> 00:36:52.045 
會讓用戶感到十分不便

00:36:54.014 --> 00:36:56.283 
因此應該設置較大的點擊區域

00:36:56.550 --> 00:36:58.552 
因爲你需要讓用戶

00:36:58.619 --> 00:37:00.487 
能夠輕鬆地點擊按鈕

00:37:02.055 --> 00:37:04.057 
現在星期五下午
我們將會有一些娛樂活動

00:37:05.792 --> 00:37:08.562 
接下來
我想討論易讀性

00:37:08.929 --> 00:37:11.498 
如果不容易閱讀顯示的內容

00:37:11.565 --> 00:37:13.700 
將很難使用APP

00:37:14.868 --> 00:37:17.437 
當你查看Photoshop
或Sketch

00:37:17.504 --> 00:37:20.407 
甚至模擬器中的字體時
可能會錯誤地認爲

00:37:20.741 --> 00:37:22.442 
字體很容易識讀

00:37:23.177 --> 00:37:24.745 
你坐在桌子前

00:37:24.811 --> 00:37:27.147 
面前是大屏幕顯示器

00:37:27.281 --> 00:37:30.050 
而且辦公室燈光明亮

00:37:30.984 --> 00:37:32.819 
在這種環境 顯示很正常

00:37:33.353 --> 00:37:34.755 
但是在Watch

00:37:34.888 --> 00:37:36.290 
顯示效果可能是...

00:37:36.690 --> 00:37:37.524 
這樣的

00:37:38.492 --> 00:37:39.526 
很難看清楚

00:37:40.127 --> 00:37:42.262 
當你準備上火車時

00:37:42.329 --> 00:37:44.598 
擡起手腕
不容易立刻看清

00:37:46.767 --> 00:37:49.269 
更大的字體更容易識訊

00:37:49.837 --> 00:37:51.805 
你不會只想在Photoshop

00:37:51.872 --> 00:37:53.507 
或Sketch或模擬器上查看它們

00:37:53.574 --> 00:37:58.011 
你需要在手腕上查看
這些APP內容

00:37:59.646 --> 00:38:02.916 
對於最重要的內容
當用戶需要這些內容時

00:38:03.417 --> 00:38:05.118 
必須清晰可見

00:38:05.552 --> 00:38:07.421 
當你出門辦事

00:38:07.487 --> 00:38:09.456 
或者去趕公交車時

00:38:10.390 --> 00:38:12.492 
或者當你做仰臥起坐時

00:38:14.661 --> 00:38:17.698 
或者在晴朗天氣跑步鍛鍊時
 能否輕鬆地識讀這些信息？

00:38:18.532 --> 00:38:20.067 
人們希望能夠

00:38:20.133 --> 00:38:22.169 
迅速看到想要的信息

00:38:23.971 --> 00:38:26.807 
爲了提高易讀性
我強烈建議

00:38:26.874 --> 00:38:28.809 
使用SF Compact字體

00:38:28.876 --> 00:38:30.777 
這是Apple Watch
系統字體

00:38:31.378 --> 00:38:33.547 
當然也可以使用自定義字體

00:38:33.614 --> 00:38:37.017 
但是即使大小合適較細字體

00:38:37.084 --> 00:38:39.987 
也不如San Francisco
字體容易識讀

00:38:41.421 --> 00:38:43.957 
San Francisco
是專門爲了

00:38:44.024 --> 00:38:45.559 
在現有數字顯示屏上

00:38:45.626 --> 00:38:47.294 
實現最高易讀性而設計的

00:38:48.061 --> 00:38:51.265 
我可以介紹很多

00:38:51.331 --> 00:38:53.834 
關於此字體設計的背後故事 

00:38:53.901 --> 00:38:56.436 
但是你最好還是自己

00:38:56.803 --> 00:38:58.172 
去聽字體設計團隊的講述 

00:38:58.238 --> 00:39:00.107 
如果你沒有參加
之前在這裏舉行的講座 

00:39:00.174 --> 00:39:02.609 
我強烈建議你觀看在線視頻 

00:39:02.676 --> 00:39:05.345 
這個講座詳細介紹了

00:39:05.412 --> 00:39:07.247 
此字體開發過程中
一些非常有趣的事情 

00:39:08.382 --> 00:39:11.151 
使用系統字體的最好方法

00:39:11.218 --> 00:39:13.020 
是使用系統字體樣式 

00:39:13.220 --> 00:39:15.489 
這樣你可以利用
Dynamic Type的好處 

00:39:17.291 --> 00:39:19.660 
當用戶調整他們
喜歡的字體大小時 

00:39:19.726 --> 00:39:21.528 
Dynamic Type
可以比例縮放 

00:39:24.598 --> 00:39:27.167 
如果用戶更改他們
喜歡的字體大小

00:39:27.234 --> 00:39:29.870 
而你的APP不能調節
以符合他們的設置 

00:39:30.470 --> 00:39:32.840 
他們將會感到失望 
更糟糕的是

00:39:33.207 --> 00:39:35.309 
他們可能會根本
無法使用你的APP 

00:39:36.443 --> 00:39:38.812 
實施Dynamic Type很簡單

00:39:39.213 --> 00:39:40.614 
你只需要使用這裏的

00:39:40.681 --> 00:39:42.382 
五個文本樣式中的
其中一個樣式 

00:39:44.751 --> 00:39:47.888 
然後 對於用戶指定的
每個文字設置 

00:39:48.322 --> 00:39:50.624 
系統將會調整多個屬性 

00:39:50.691 --> 00:39:54.294 
確保最優的易讀性
和版式完整性 

00:39:56.263 --> 00:39:57.497 
我們調整大小 

00:40:01.034 --> 00:40:02.836 
我們還調整前導格式 

00:40:03.670 --> 00:40:06.139 
這是文字行之間的垂直間隙 

00:40:08.408 --> 00:40:09.710 
我們調整跟蹤 

00:40:10.110 --> 00:40:11.678 
即字符之間的間隔 

00:40:15.816 --> 00:40:17.584 
如果你使用自定義字體 

00:40:17.651 --> 00:40:20.420 
將必須手動進行
所有這些大小調整 

00:40:23.290 --> 00:40:25.993 
如前所術這 我們有五種樣式

00:40:26.059 --> 00:40:27.828 
<br/>
即Headline、 Body、

00:40:27.895 --> 00:40:30.364 
Caption1、 Caption2
和 Footnote 

00:40:31.164 --> 00:40:33.867 
這稱爲Footnote是有原因的 

00:40:34.401 --> 00:40:37.037 
不要因爲它看上去較小 

00:40:37.104 --> 00:40:39.373 
而將它用於你的有文字內容 

00:40:42.109 --> 00:40:44.678 
對於任何Watch內容和項目 
都是越大越好 

00:40:44.745 --> 00:40:46.413 
尤其是字體 

00:40:48.916 --> 00:40:51.952 
前面邁克講過 我們儘量

00:40:52.052 --> 00:40:54.488 
模糊硬件和軟件之間的界線 

00:40:54.555 --> 00:40:55.989 
在Apple Watch上 

00:40:56.323 --> 00:40:58.892 
明亮的背景顏色

00:40:58.959 --> 00:41:01.128 
和
不必要的襯邊

00:41:01.195 --> 00:41:03.297 
更容易突顯出這種界線 

00:41:04.998 --> 00:41:07.267 
這讓人突然屏幕很小 

00:41:07.334 --> 00:41:09.303 
而且所有內容都堆積在中間  

00:41:10.437 --> 00:41:12.606 
Apple Watch
的屏幕尺寸很小 

00:41:12.673 --> 00:41:16.009 
你需要爲你的內容精打細算 
充分利用每個像素 

00:41:16.677 --> 00:41:18.212 
不要將空間浪費給襯邊 

00:41:19.479 --> 00:41:21.882 
亮色的背景不可取 

00:41:21.949 --> 00:41:24.284 
因爲大多數平臺區域是黑色

00:41:24.351 --> 00:41:26.053 
<br/>
亮色背景給人以衝擊感 

00:41:26.687 --> 00:41:29.656 
而且 狀態欄的顏色是無法更改的 

00:41:29.723 --> 00:41:32.359 
因此它始終顯示爲黑色 

00:41:32.726 --> 00:41:34.561 
這樣 內容顯示區域

00:41:34.628 --> 00:41:36.029 
就會變得更小 

00:41:37.698 --> 00:41:40.367 
我看到很多人將圖片

00:41:40.434 --> 00:41:43.036 
放在背景之中 
讓他們的APP變得更加有趣 

00:41:43.971 --> 00:41:47.841 
有時候可以這樣做 
但更多時候不應該這樣做 

00:41:48.141 --> 00:41:50.110 
這會讓用戶忽略內容 

00:41:51.178 --> 00:41:53.714 
這會增加文件大小 
因爲你需要更多的圖片 

00:41:53.780 --> 00:41:57.417 
從而延長啓動時間 
就如邁克剛纔所說的那樣 

00:41:58.185 --> 00:42:00.387 
而且讓文字更不容易識讀 

00:42:01.154 --> 00:42:02.122 
另外 交互操作時間

00:42:02.189 --> 00:42:04.825 
是非常短的 

00:42:05.259 --> 00:42:06.927 
你必須儘量消除

00:42:06.994 --> 00:42:08.462 
防礙交互操作的事情 

00:42:09.229 --> 00:42:11.698 
在Watch上 幾秒鐘的時間

00:42:11.765 --> 00:42:13.200 
都是非常寶貴的 

00:42:15.035 --> 00:42:18.405 
雖然在Photosh中 
缺少襯邊看上去

00:42:18.472 --> 00:42:21.041 
會非常不舒服 

00:42:21.909 --> 00:42:24.478 
但是在Watch上卻很好 

00:42:24.545 --> 00:42:26.046 
這是因爲錶盤的緣故 

00:42:26.613 --> 00:42:28.615 
錶盤就像是襯邊 

00:42:29.383 --> 00:42:31.385 
我的意思是 
你並不需要加入襯邊 

00:42:31.585 --> 00:42:34.821 
你可以將這個屏幕資產

00:42:34.888 --> 00:42:37.858 
用於內容和控件
從而減少裁剪

00:42:37.925 --> 00:42:39.226 
和文字重疊 

00:42:40.794 --> 00:42:42.329 
幾分鐘前我說過 

00:42:42.396 --> 00:42:45.299 
側對側按鈕更容易點擊 

00:42:46.867 --> 00:42:48.502 
如果你的APP使用黑色背景 

00:42:48.569 --> 00:42:50.771 
將會與錶盤無縫融爲一體 

00:42:51.104 --> 00:42:52.606 
感覺是硬件的組成部分 

00:42:54.041 --> 00:42:55.242 
用戶更容易

00:42:55.309 --> 00:42:57.945 
將注意力放到你的APP上 

00:42:59.079 --> 00:43:01.949 
但是 這並不意味
你的APP變得單調 

00:43:02.683 --> 00:43:04.751 
有很多種方法來傳達
品牌宣傳信息

00:43:04.818 --> 00:43:06.687 
和添加個性化項目

00:43:06.753 --> 00:43:08.722 
而不必依賴於彩色背景 

00:43:10.290 --> 00:43:11.859 
讓我們來看一些很不錯的例子 

00:43:11.925 --> 00:43:15.462 
Hailo是英國流行的
的士打車APP 

00:43:15.963 --> 00:43:18.732 
在這個APP中 全程可以看到

00:43:18.966 --> 00:43:22.135 
明亮的黃色和可愛的汽車圖標 

00:43:24.471 --> 00:43:28.342 
Citymapper APP
使用黃色來作爲品牌顏色 

00:43:28.809 --> 00:43:31.445 
他們使用Citymapper
圖標集作爲載入圖片 

00:43:31.512 --> 00:43:34.081 
但是最重要的是 

00:43:34.348 --> 00:43:36.416 
這些圖標傳達出

00:43:36.483 --> 00:43:37.518 
他們爲人所知的幽默感 

00:43:38.151 --> 00:43:40.754 
在有些地方 
需要爲用戶提供指示 

00:43:40.821 --> 00:43:43.590 
這裏的機場選項
在這方面做得很好 

00:43:46.059 --> 00:43:48.095 
Rules！ 是一個
非常有趣的記憶遊戲 

00:43:48.161 --> 00:43:50.631 
他們使用iPhone APP中

00:43:50.697 --> 00:43:53.734 
貫穿始終的背景材質 
並將它轉化成爲

00:43:53.800 --> 00:43:56.570 
Apple Watch
上的按鈕材質 

00:43:57.171 --> 00:44:00.374 
另外 還使用這些可愛的人物

00:44:00.440 --> 00:44:02.242 
生動有趣的動畫 

00:44:02.309 --> 00:44:04.645 
這樣的APP絕對不會感到無聊 

00:44:04.711 --> 00:44:06.413 
也不會與其他APP混淆 

00:44:11.285 --> 00:44:14.688 
當然 你也可以使用

00:44:15.789 --> 00:44:18.592 
其他可用的方法
讓你的APP變得生動有趣 

00:44:20.093 --> 00:44:22.429 
因此 應避免使用
明亮背景作爲裝飾 

00:44:22.930 --> 00:44:24.331 
而且不應該
將它們嵌入你的內容 

00:44:24.498 --> 00:44:26.900 
應該讓錶盤來做這些事情 

00:44:31.205 --> 00:44:34.474 
但是 歸根結底 
如果用戶不能立即

00:44:34.541 --> 00:44:37.477 
找到你的APP 
所有這一切都將失去意義 

00:44:39.713 --> 00:44:43.350 
與iOS不同 Apple
Watch圖標沒有標籤 

00:44:43.684 --> 00:44:45.452 
因此十分重要的一點是 

00:44:45.519 --> 00:44:48.088 
用戶應該能夠
通過圖標找到你的APP 

00:44:48.956 --> 00:44:51.024 
毫無疑問 你會注意到 

00:44:51.258 --> 00:44:55.128 
Watch App圖標是圓形 
而且明顯更小 

00:44:55.863 --> 00:44:58.532 
這會帶來設計上的挑戰 

00:45:00.667 --> 00:45:04.972 
這裏的大多數Watch 
App圖標你應該不會感到陌生 

00:45:05.038 --> 00:45:07.374 
因爲你的iPhone上也有
這些APP圖標 

00:45:09.109 --> 00:45:12.079 
將你的Apple Watch圖標

00:45:12.312 --> 00:45:14.414 
與iOS圖標完全保持一致 

00:45:14.481 --> 00:45:16.517 
可以讓用戶更快地
在Watch上找到APP 

00:45:19.520 --> 00:45:22.589 
Citymapper
Nike+ Running

00:45:22.689 --> 00:45:26.326 
和Procreate都是直接將
他們的App圖標

00:45:26.393 --> 00:45:28.161 
直接轉換爲Apple
 Watch圖標 

00:45:28.228 --> 00:45:30.397 
因爲這些圖標的形狀非常簡單 

00:45:30.464 --> 00:45:32.432 
在圓形格式下也很容易識別 

00:45:33.534 --> 00:45:35.702 
但是有時候
進行這種轉換存在困難 

00:45:36.303 --> 00:45:38.172 
爲此 我向你們介紹一些技術 

00:45:38.238 --> 00:45:42.543 
幫助你修改App圖標 

00:45:42.776 --> 00:45:45.179 
在小圓圈中也容易識別 

00:45:46.847 --> 00:45:48.148 
首先要做的事情是

00:45:48.215 --> 00:45:50.851 
儘可能簡單化 

00:45:51.185 --> 00:45:53.887 
可以移除哪些內容

00:45:53.954 --> 00:45:55.556 
而不影響APP中的品牌識別？

00:45:57.524 --> 00:45:58.659 
首先從文字開始 

00:45:58.725 --> 00:46:02.462 
小字號的文字更難以識讀 

00:46:02.896 --> 00:46:04.798 
是否可以消除全部文字？

00:46:05.966 --> 00:46:07.067 
Yelp正是這樣做的 

00:46:07.901 --> 00:46:10.938 
他們的醒目圖標和標誌性紅色

00:46:11.004 --> 00:46:12.506 
足以讓APP容易識別   

00:46:14.808 --> 00:46:18.812 
然後 我們開始消除文字 
如果不能消除文字 

00:46:19.012 --> 00:46:20.013 
可以考慮使用縮寫 

00:46:22.316 --> 00:46:24.484 
如果你的圖標含有豐富信息 

00:46:24.551 --> 00:46:28.589 
可以考慮進行簡化 
因爲這會讓小尺寸的圖標

00:46:28.655 --> 00:46:30.190 
更容易識讀  

00:46:31.825 --> 00:46:35.395 
以憤怒的小鳥爲例 
我們很多人都認識它 

00:46:36.330 --> 00:46:39.533 
把它按比例縮小
並放入圓圈的做法

00:46:39.600 --> 00:46:41.535 
在Apple Watch
上並不太合適 .

00:46:41.902 --> 00:46:45.606 
這些白色的空白區域
看上去很彆扭 

00:46:45.672 --> 00:46:47.274 
不應該這樣顯示 

00:46:48.542 --> 00:46:51.645 
因此 Iconfactory團隊
重新繪製這個小鳥圖標  

00:46:51.712 --> 00:46:53.380 
以更好地在小圓圈中顯示 

00:46:53.981 --> 00:46:55.916 
現在 你看到它正在瞪着你 

00:46:56.617 --> 00:46:59.386 
很多特徵已經被減化
或者被移除 

00:47:00.354 --> 00:47:02.956 
鳥嘴上的鼻孔不見了 

00:47:03.023 --> 00:47:06.393 
羽毛和眉毛也變得更簡單 

00:47:08.629 --> 00:47:11.231 
在小尺寸下 含有大量細節的

00:47:11.298 --> 00:47:15.035 
複雜形狀更難以看清 
應該儘可能進行簡化  

00:47:17.271 --> 00:47:20.174 
另外 除非有令人信服務的理由

00:47:20.240 --> 00:47:22.476 
需要放棄當前的色彩模式 

00:47:22.843 --> 00:47:24.745 
否則應該保留當前的色彩方案 

00:47:24.811 --> 00:47:26.380 
和整體視覺樣式 

00:47:27.281 --> 00:47:29.783 
顏色是一個非常重要的
品牌元素 

00:47:29.850 --> 00:47:31.952 
能夠非常有效地

00:47:32.019 --> 00:47:34.021 
幫助用戶找到
你的App圖標 

00:47:36.156 --> 00:47:39.326 
如果消息突然用紅色顯示 
將會怎麼樣？

00:47:40.894 --> 00:47:43.730 
你可能會認爲
這是一個不同的APP 

00:47:44.231 --> 00:47:46.433 
或者是beta版本或試用版本 

00:47:48.035 --> 00:47:51.305 
我們來看Fanatee
如何簡化他們的

00:47:51.371 --> 00:47:53.340 
遊戲Letter Zap
的APP圖標 

00:47:54.708 --> 00:47:56.176 
他們移除了文字 

00:47:56.243 --> 00:47:59.246 
因爲小字體文字
在Watch上不易識讀 

00:47:59.713 --> 00:48:03.050 
而且他們放大了閃電圖標 
但是 更重要的是 

00:48:03.116 --> 00:48:05.185 
他們保留了綠色和金色
色彩設計 

00:48:05.252 --> 00:48:07.387 
從而讓APP非常容易識別 

00:48:09.323 --> 00:48:13.660 
即便如此 還是會有人認爲 
放棄使用很久的文字

00:48:13.727 --> 00:48:16.129 
或更改使用很久的圖標 
是一件冒險的事情 

00:48:16.463 --> 00:48:19.600 
但是 只要保留APP圖標的
整體顏色和視覺樣式 

00:48:19.666 --> 00:48:23.170 
APP還是容易識別的 

00:48:25.172 --> 00:48:28.475 
正如邁克前面所說的那樣 
你的目標不是在Watch上

00:48:28.542 --> 00:48:31.745 
提供iPhone APP
的全部功能 

00:48:31.812 --> 00:48:35.949 
因此 有時候使用
完全相同的App圖標

00:48:36.016 --> 00:48:37.551 
可能並不合適 

00:48:38.619 --> 00:48:40.087 
WatchAPP應該

00:48:40.621 --> 00:48:45.692 
爲iPhone提供補充功能 
因此 補充性Watch App

00:48:45.759 --> 00:48:47.361 
圖標思想可能更爲合適 

00:48:49.463 --> 00:48:52.466 
前面我們講到過 
iPhone照相機APP

00:48:52.533 --> 00:48:55.102 
提供不計其數的功能 

00:48:55.169 --> 00:48:57.404 
你可以拍攝照片 
編輯和分享照片 

00:48:58.038 --> 00:49:00.073 
但是在Watch 
APP僅用作一個

00:49:00.140 --> 00:49:01.675 
快門按鈕遙控器 

00:49:03.177 --> 00:49:06.013 
因此 雖然我們可以直接使用
這個App圖標 將它放入圓圈 

00:49:06.079 --> 00:49:08.682 
就此了事 但是
這給人的感覺並不太好 

00:49:10.217 --> 00:49:12.986 
相反 我們應該運用
補充功能思維 

00:49:13.954 --> 00:49:17.958 
這仍然是一個容易識別的相機圖標 
但是一些材質細節更簡單 

00:49:18.025 --> 00:49:20.861 
保留了原有的色彩方案 

00:49:21.195 --> 00:49:23.263 
並且着重強調快門按鈕 

00:49:23.330 --> 00:49:25.199 
因爲這是APP的功能 

00:49:25.599 --> 00:49:27.000 
即按下快門按鈕 

00:49:29.369 --> 00:49:31.905 
另一個典型的例子
是Sky Guide 

00:49:33.173 --> 00:49:35.209 
將圖標遮罩放入圓圈

00:49:35.275 --> 00:49:37.444 
並不是合適的做法  
讓識別變更困難 

00:49:37.511 --> 00:49:40.647 
這種做法不合適的原因

00:49:40.714 --> 00:49:43.784 
在於APP的功能 

00:49:44.785 --> 00:49:46.887 
在iPhone上
 Sky Guide

00:49:46.954 --> 00:49:49.256 
告訴你想要觀察的一切內容 

00:49:49.389 --> 00:49:51.458 
在星空中 我現在能看到什麼？

00:49:52.359 --> 00:49:54.895 
但是在Watch上 
它的功能是提醒你 

00:49:54.962 --> 00:49:57.030 
你所在區域有哪些天文現象 

00:49:57.497 --> 00:49:59.466 
比如國際空間站將會

00:49:59.533 --> 00:50:01.235 
飛掠你所在的空域 

00:50:02.836 --> 00:50:05.105 
因此他們運用前面所說的
補充性App圖標概念 

00:50:05.172 --> 00:50:08.876 
這樣的圖標在圓圈中
看起來很不錯 

00:50:08.942 --> 00:50:11.111 
而且暗示天文事件 

00:50:12.713 --> 00:50:15.382 
而且 他們使用相似的色彩設計

00:50:15.449 --> 00:50:18.285 
和視覺樣式 
因此相互關係十分清楚 

00:50:20.587 --> 00:50:22.656 
如果你在想方設法
修改你的iOS圖標

00:50:22.723 --> 00:50:25.325 
以運用於Apple Watch 
你可以嘗試使用這些方法 

00:50:26.426 --> 00:50:28.729 
這些Apple Watch圖標

00:50:28.795 --> 00:50:30.631 
與對應的iOS並不一樣

00:50:30.697 --> 00:50:33.967 
但是相似度是十分明顯的 

00:50:34.034 --> 00:50:36.670 
因此 APP很容易找到 

00:50:37.671 --> 00:50:42.509 
前面我多次講到 Watch圖標

00:50:42.576 --> 00:50:45.846 
和iOS圖標不必完全相同 

00:50:45.913 --> 00:50:48.048 
但是需要具有相似性 

00:50:50.450 --> 00:50:52.853 
這樣 今天的內容全部講完了 

00:50:53.954 --> 00:50:56.123 
在你們設計Watch時

00:50:56.190 --> 00:50:58.592 
我希望
這些技術成爲你們的有用工具 

00:50:58.659 --> 00:51:01.962 
從而能夠避免一些
常見的可用性陷阱 

00:51:02.729 --> 00:51:04.565 
我們已經看到

00:51:04.665 --> 00:51:07.901 
一些非常不錯的Watch APP 

00:51:07.968 --> 00:51:10.470 
我期望你們能夠

00:51:10.537 --> 00:51:12.272 
爲watchOS 2
開發優秀的APP 

00:51:13.540 --> 00:51:16.143 
本週我們舉行了很多場次的講座 

00:51:16.210 --> 00:51:18.712 
今天上舉行的
“WatchKit技巧與陷阱講座”

00:51:18.779 --> 00:51:20.914 
非常有價值 

00:51:21.548 --> 00:51:23.951 
網上有大量的資料 

00:51:24.084 --> 00:51:26.220 
尤其是關於
“設計優質APP頁面” 

00:51:26.987 --> 00:51:29.790 
本週真是成果豐富 

00:51:29.857 --> 00:51:32.926 
我希望你們有所收穫 

00:51:33.360 --> 00:51:35.295 
後面還有多場講座 

00:51:35.362 --> 00:51:37.431 
希望你們能夠參加 

00:51:37.531 --> 00:51:40.534 
我們明年將會再見 
謝謝 