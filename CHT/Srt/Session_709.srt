00:00:20.554 --> 00:00:21.855 
定製

00:00:26.593 --> 00:00:30.163 
大家好
歡迎參加709會議

00:00:30.931 --> 00:00:32.665 
我是維普爾·普拉卡什

00:00:32.866 --> 00:00:36.270 
還有我的同事戴夫·薩利姆
和詹森·道格拉斯

00:00:36.770 --> 00:00:41.842 
我們將和大家一起深入
看看iOS 9的新搜索API

00:00:42.409 --> 00:00:43.944 
正如你在Keynote中所見

00:00:44.745 --> 00:00:46.747 
應用的內容中的深鏈接 

00:00:47.047 --> 00:00:50.751 
現在可以整合到
Spotlight 搜索結果之中

00:00:51.318 --> 00:00:52.753 
這着實讓人興奮

00:00:53.720 --> 00:00:56.390 
因爲iOS用戶
大多數時間都在app內 

00:00:56.523 --> 00:00:58.091 
這裏也是內容的展示場所 

00:00:58.425 --> 00:01:01.361 
而且也是人們現在數字生活的居住地

00:01:01.828 --> 00:01:06.433 
我們非常想通過搜索將
所有這些內容整合到一起

00:01:07.067 --> 00:01:13.073 
在你的app內創建廣告式尺寸統一的
索引頁面

00:01:13.340 --> 00:01:17.144 
從而在Spotlight顯示出來
這不是我們要的做的事

00:01:17.644 --> 00:01:22.382 
這種指向網絡的索引方法行得通 
因爲尺寸統一

00:01:22.583 --> 00:01:25.552 
但是對於app搜索而言 
這種方法卻不對

00:01:26.587 --> 00:01:33.093 
我們要做的是提供一種體驗 
開發者可以精確選擇搜索的內容 

00:01:33.560 --> 00:01:39.099 
結果呈現方式以及
用戶點擊結果後會跳轉的位置

00:01:39.933 --> 00:01:42.569 
我認爲通過搜索API已經做到這點了

00:01:42.769 --> 00:01:44.905 
方法簡單且輕便

00:01:46.440 --> 00:01:49.309 
搜索API的目標是

00:01:49.510 --> 00:01:55.916 
讓你的app內的內容
在搜索時候更爲深入人心

00:01:56.750 --> 00:02:02.155 
而且搜索結果會同時出現在
Spotlight和Safari中

00:02:04.157 --> 00:02:08.428 
在iOS8系統上
我們也通過類似的方法

00:02:08.495 --> 00:02:10.597 
提供Spotlight搜索建議

00:02:11.465 --> 00:02:14.601 
當用戶在Safari地址欄
輸入一條請求後 

00:02:14.668 --> 00:02:15.736 
你會從網絡上看到結果

00:02:15.802 --> 00:02:18.705 
比如Maps Wikipedia
和App Store

00:02:19.039 --> 00:02:23.377 
用戶可以點擊搜索結果 
然後直接跳轉到搜索內容

00:02:23.944 --> 00:02:29.449 
在iOS 9中
用戶可以直接跳轉到你的app內容

00:02:31.885 --> 00:02:38.158 
這也是我們提供的提高曝光率
和分銷的另一種方法

00:02:38.792 --> 00:02:42.863 
App內部的公共深鏈接
現在可以在搜索結果中顯示 

00:02:43.096 --> 00:02:46.200 
這樣用戶就沒有必要安裝你的應用了

00:02:47.901 --> 00:02:49.102 
這真是超級棒啊

00:02:51.438 --> 00:02:55.809 
這樣你的app就能
通過一種全新的曝光方式

00:02:56.176 --> 00:02:59.580 
讓潛在的數百萬iOS用戶看到

00:03:06.854 --> 00:03:09.756 
讓我們看看這是如何工作的
請看一下例子

00:03:11.325 --> 00:03:15.662 
我們邀請了
Airbnb人員看這些API 

00:03:15.729 --> 00:03:18.599 
而且他們能夠在幾個小時內進行整合

00:03:19.199 --> 00:03:22.903 
他們所做的是
他們找到用戶的保留信息

00:03:23.270 --> 00:03:25.806 
以及在平臺產生的通訊

00:03:26.039 --> 00:03:28.041 
然後在搜索API之中加以索引

00:03:28.842 --> 00:03:32.880 
現在當我在Napa查找
我的保留信息的時候 

00:03:32.946 --> 00:03:37.417 
我在Spotlight上輸入 
然後保留信息就是第一個搜索結果

00:03:38.252 --> 00:03:39.353 
這裏還有日期

00:03:40.721 --> 00:03:41.588 
非常酷

00:03:43.290 --> 00:03:47.427 
這裏有日期 客人數量 描述
而且當我點擊後

00:03:48.161 --> 00:03:51.532 
我可以跳轉到app內容
進行更豐富的體驗

00:03:52.766 --> 00:03:56.270 
在這裏你可以看到
另一個結果是第二條結果 

00:03:56.336 --> 00:04:01.041 
這是保留信息是伺服器發出的信息

00:04:01.375 --> 00:04:06.747 
如你所見
我可以閱讀這條信息 這非常有用 

00:04:06.947 --> 00:04:09.016 
而且右邊還有一個調用字符 

00:04:09.850 --> 00:04:11.785 
當他們索引的時候

00:04:12.019 --> 00:04:16.990 
數據會被編入到伺服器電話號碼 

00:04:17.457 --> 00:04:21.428 
然後Spotlight會檢索到 
進行調用

00:04:21.962 --> 00:04:23.130 
正如預期的一樣

00:04:24.731 --> 00:04:25.599 
它會進行調用

00:04:27.201 --> 00:04:33.273 
這樣通過完美功能整合 
從而實現搜索API

00:04:33.340 --> 00:04:34.608 
讓我看看另一個例子

00:04:36.176 --> 00:04:38.645 
這裏是LinkedIn
一款專業的社交App

00:04:39.112 --> 00:04:41.248 
在這個例子中 

00:04:41.648 --> 00:04:42.983 
我的第一級網絡 

00:04:43.250 --> 00:04:47.554 
我在LinkedIn上的所有通訊
都被添加到搜索索引中

00:04:47.888 --> 00:04:54.061 
同樣的可按照內嵌式聯繫方式
和內嵌式信息獲取到這些信息 

00:04:58.265 --> 00:05:00.901 
現在搜索API
不僅僅侷限於內容搜索了

00:05:01.468 --> 00:05:03.170 
一種非常有用的情況是

00:05:03.704 --> 00:05:08.842 
在App內容的搜索位置
設置導航點和導航功能

00:05:10.944 --> 00:05:13.514 
看一個例子
看看Health是如何做到的

00:05:14.281 --> 00:05:17.751 
它對所有的對話中的深鏈接進行索引

00:05:18.118 --> 00:05:20.320 
如果我想要看看我已經走了幾步

00:05:20.387 --> 00:05:22.222 
我在Spotlight中輸入步數

00:05:22.689 --> 00:05:25.692 
獲得深鏈接 點擊 
然後直接跳轉到步數畫面

00:05:31.798 --> 00:05:32.733 
我認爲這很酷

00:05:32.799 --> 00:05:39.006 
用戶最常使用Spotlight的是
進行app查找和安裝

00:05:39.439 --> 00:05:41.575 
在iOS 9系統中
我們相信在app內部

00:05:42.409 --> 00:05:47.848 
進行直接的深導航以後 
將會非常受歡迎

00:05:49.950 --> 00:05:55.789 
在所有的情況下
直接從你的設備索引中搜索結果

00:05:55.856 --> 00:06:00.627 
這些深鏈接會放在設備索引中
而且不會跨設備索引

00:06:01.161 --> 00:06:03.864 
那麼如果用戶
還沒安裝你的app呢？ 

00:06:05.966 --> 00:06:10.804 
我們在Apple雲服務器上
保留了大量的深鏈接索引

00:06:11.471 --> 00:06:16.510 
我們可以從這些索引之中進行無縫查找

00:06:19.046 --> 00:06:22.282 
我們想出了一個
共享這些索引的絕佳方法

00:06:23.650 --> 00:06:28.989 
開發者可以標註公共內容爲公共 

00:06:29.523 --> 00:06:31.325 
而且一旦有足夠的用戶檢索到 

00:06:31.792 --> 00:06:34.394 
那麼深鏈接會提交到雲索引

00:06:35.028 --> 00:06:37.831 
這樣你的app所有用戶都可以檢索到

00:06:38.332 --> 00:06:43.804 
而且如果深鏈接有相關的網頁鏈接
那麼iOS所有用戶都可以訪問

00:06:46.640 --> 00:06:47.474 
現在

00:06:48.809 --> 00:06:51.345 
對app進行檢索和爬取

00:06:52.546 --> 00:06:56.016 
在某種意義上已經毫無意義
但是對網頁而言則不是

00:06:56.083 --> 00:07:00.053 
如果你的應用將內容複製到網站上 

00:07:00.821 --> 00:07:07.027 
我們可以打開網絡
對網站進行索引 找到深鏈接

00:07:07.394 --> 00:07:11.465 
然後放到雲索引中 
這樣就能無縫進行搜索

00:07:14.034 --> 00:07:19.373 
無縫設備搜索和雲搜索的邏輯

00:07:19.439 --> 00:07:21.909 
對於app搜索而言非常重要

00:07:22.509 --> 00:07:25.245 
在app中有很多內容是私密的 

00:07:25.913 --> 00:07:29.249 
而且有些是公共的內容
內容只能之二者中的一者

00:07:29.716 --> 00:07:34.655 
使用這種方法是創建一個無縫搜索接口

00:07:34.988 --> 00:07:38.792 
這樣用戶可以知道搜索結果是
來自設備索引還是雲索引

00:07:39.259 --> 00:07:40.627 
請看看這個例子

00:07:42.596 --> 00:07:46.600 
我搜索一個音樂節
“northern lights”

00:07:46.667 --> 00:07:49.169 
我從EventBrite應用
雲索引中找到一個結果 

00:07:50.170 --> 00:07:53.006 
我沒有必要安裝該app
因爲這個結果有一個網頁鏈接

00:07:53.340 --> 00:07:54.274 
我點擊鏈接

00:07:56.476 --> 00:07:59.780 
這樣我可以在Safari中打開鏈接

00:07:59.880 --> 00:08:03.450 
你注意到了
作爲EventBride用戶 

00:08:04.251 --> 00:08:06.887 
這個巧妙的app標語
會鼓勵我下載app 

00:08:07.321 --> 00:08:09.857 
然後進行更豐富地內容體驗 

00:08:10.524 --> 00:08:11.658 
這正是我現在做的

00:08:12.626 --> 00:08:14.428 
想象一下
如果這是你的app 

00:08:15.028 --> 00:08:21.301 
以這種交際性的方式
將你的內容呈現給iOS用戶

00:08:21.368 --> 00:08:26.073 
而用戶找的正是你的應用提供的內容
那不是很棒嗎？ 

00:08:28.842 --> 00:08:31.478 
這裏我有一個例子
我搜索裸關節扭傷

00:08:31.979 --> 00:08:35.249 
我不想要在我的設備上
安裝醫療類的app

00:08:36.250 --> 00:08:40.254 
我通過app搜索
找到多個基於app的結果 

00:08:40.787 --> 00:08:46.994 
而且是用戶之前
已經查找過的感興趣的

00:08:47.861 --> 00:08:48.829 
我可以點擊

00:08:50.497 --> 00:08:51.365 
安裝app

00:08:51.732 --> 00:08:54.935 
然後再app內繼續查找

00:08:57.504 --> 00:08:59.740 
那麼工作原理是什麼呢？ 

00:09:01.175 --> 00:09:03.343 
App搜索有三個API

00:09:04.978 --> 00:09:06.446 
各自獨立卻又相關

00:09:06.847 --> 00:09:11.718 
這些API可適用於不同用戶情況下的
進行App搜索

00:09:13.053 --> 00:09:14.755 
首先是
NSUserActivity

00:09:14.821 --> 00:09:19.126 
這是發佈到iOS 8系統上
Handoff APi的擴展

00:09:20.327 --> 00:09:23.530 
當我們查看信息存取模式 

00:09:23.864 --> 00:09:30.070 
然後搜索時
呈現給用戶的是之前他們看到的

00:09:30.904 --> 00:09:32.206 
而且現在需要的
NSUserActivity

00:09:32.539 --> 00:09:36.310 
讓搜索這種信息和檢索更爲簡單

00:09:36.577 --> 00:09:41.782 
這相當於是瀏覽器
保留了你的瀏覽記錄 

00:09:42.149 --> 00:09:46.253 
然後用戶活動保留了app歷史格式 
從而使之變爲可被檢索到

00:09:48.555 --> 00:09:50.791 
第二個API是
CoreSpotlight

00:09:50.858 --> 00:09:53.961 
這是一款非常好用的工具

00:09:54.761 --> 00:09:58.031 
用於對app的內容進行綜合檢索

00:09:58.765 --> 00:10:02.836 
所有iOS 9的內置式app
包括Mail Notes Calendar 

00:10:03.136 --> 00:10:05.739 
都是使用CoreSpotlight

00:10:07.274 --> 00:10:11.979 
這讓你可以對設備索引進行底層訪問 

00:10:12.379 --> 00:10:16.450 
相當於一款數據庫API
你可以添加和移除項目

00:10:17.417 --> 00:10:20.153 
而且這也是用戶在你的APP內部

00:10:20.387 --> 00:10:24.658 
進行私密內容檢索的最好方法

00:10:25.759 --> 00:10:28.962 
第三個API是web markup

00:10:29.963 --> 00:10:33.133 
這指的是APP複製內容到一個網站上

00:10:33.800 --> 00:10:37.738 
你可以使用深鏈接註釋信息
標記網站內容

00:10:37.804 --> 00:10:40.541 
我們會到網頁上抓取內容 

00:10:41.041 --> 00:10:42.142 
然後放到雲索引

00:10:42.509 --> 00:10:47.181 
這樣就能夠通過
iOS 9搜索無縫呈現給用戶

00:10:50.617 --> 00:10:53.020 
這裏是大會剩下的安排表

00:10:54.054 --> 00:10:56.790 
我們會深入看看每一個API

00:10:57.925 --> 00:10:58.792 
說明其工作原理

00:10:59.693 --> 00:11:04.431 
然後我們會看看在App內採用
這些API的最好的方法

00:11:07.701 --> 00:11:10.437 
我們接下來會談談
NSUserActivity和CoreSpotlight 

00:11:10.504 --> 00:11:11.605 
我想邀請戴夫·薩利姆

00:11:21.682 --> 00:11:22.950 
大家好
我是戴夫·薩利姆

00:11:23.517 --> 00:11:25.352 
是App搜索的一名開發者

00:11:26.687 --> 00:11:29.122 
我們剛纔瞭解了一些

00:11:29.690 --> 00:11:33.260 
關於如何讓你的app變得可被搜索
和曝光的新特性

00:11:34.194 --> 00:11:38.131 
現在我們會談談這些API 
以及如何善用這些功能

00:11:40.834 --> 00:11:43.570 
首先我們先看看
NSUserActivity

00:11:45.105 --> 00:11:45.939 
先來點背景資料

00:11:46.139 --> 00:11:50.677 
在iOS 8系統引入NSUserActivity 
是爲了支持Handoff功能 

00:11:51.612 --> 00:11:53.213 
Handoff功能是非常棒的功能

00:11:53.313 --> 00:11:57.951 
可以讓你遠程啓動
以及查看另一臺設備上的應用

00:11:59.253 --> 00:12:01.722 
NSUserActivity
使用輕量化設計

00:12:01.788 --> 00:12:04.591 
用於捕捉之後可以被恢復的應用狀態

00:12:06.760 --> 00:12:08.428 
現在在iOS 9中

00:12:09.263 --> 00:12:12.699 
我們添加了
NSUserActivity新功能 

00:12:12.999 --> 00:12:16.336 
這樣能夠從iOS搜索
和Safari中進行索引和搜索

00:12:18.038 --> 00:12:21.008 
你需要具備關聯元數據
和活動的能力

00:12:21.542 --> 00:12:22.976 
這樣才能描述活動

00:12:23.477 --> 00:12:27.681 
而且這些信息可以用於檢索
和提供豐富的搜索結果

00:12:28.815 --> 00:12:30.617 
當用戶查看你的搜索結果的時候 

00:12:31.118 --> 00:12:34.388 
你的app會啓動
然後將搜索結果傳遞給活動

00:12:35.322 --> 00:12:39.259 
你可以繼續恢復app狀態 
讓用戶回到內容頁面

00:12:40.661 --> 00:12:42.563 
讓我們看看一個例子 

00:12:42.829 --> 00:12:45.532 
看看NSUserActivity
是如何被添加到索引中的

00:12:47.000 --> 00:12:51.438 
這裏我們有一個食譜app
當用戶在app內瀏覽食譜的時候

00:12:51.672 --> 00:12:53.240 
我們創建一個
NSUserActivity

00:12:53.307 --> 00:12:54.308 
用於捕捉器狀態

00:12:54.842 --> 00:12:57.778 
和提供所需的信息 
然後返回到食譜中

00:12:59.313 --> 00:13:02.449 
然後我們使用來自食譜的資料 

00:13:02.850 --> 00:13:05.552 
比如標題 描述
甚至是縮略圖描述該活動

00:13:07.054 --> 00:13:11.191 
然後我們通知系統
該活動表示的是用戶的當前狀態 

00:13:11.859 --> 00:13:14.061 
然後該活動會被添加到設備內置索引中

00:13:16.029 --> 00:13:17.531 
這樣當一名用戶使用app的時候

00:13:18.098 --> 00:13:22.069 
我們使用相同的方式
創建活動 描述活動 

00:13:22.169 --> 00:13:25.606 
然後通知系統
這些活動表示用戶當前狀態 

00:13:26.039 --> 00:13:28.442 
這些活動會被添加到設備內置索引

00:13:31.678 --> 00:13:37.384 
讓我們看看用於支持App搜索的
NSUserActivity的新舊屬性

00:13:38.852 --> 00:13:43.056 
首先現在我們有使用
指派活動權限的屬性

00:13:43.857 --> 00:13:47.160 
其中之一是關於Handoff的屬性
默認情況下Handoff是激活的 

00:13:47.427 --> 00:13:51.131 
如果你選擇不啓動Handoff 
你可以在這裏設置爲False

00:13:51.932 --> 00:13:56.069 
還有一個用於搜索的屬性 
可以允許活動進行設備內置索引

00:13:57.171 --> 00:14:00.140 
還有一個用於公共索引屬性 
稍後我們會談談

00:14:02.242 --> 00:14:04.144 
接下來要如何描述你的活動呢？ 

00:14:04.578 --> 00:14:06.547 
首先是要給活動設定一個標題

00:14:07.447 --> 00:14:11.151 
這個標題可用於索引和顯示搜索結果

00:14:12.219 --> 00:14:15.889 
你還可以提供活動描述關鍵字 
這些關鍵字也可以被索引

00:14:16.523 --> 00:14:18.192 
爲了更全面地描述你的活動

00:14:18.559 --> 00:14:21.228 
你可以使用在
CoreSpotlight中引入的新類別

00:14:21.595 --> 00:14:23.564 
稱之爲
CSSearchableItem.attributeSet  

00:14:23.630 --> 00:14:26.533 
使用這個類別可以讓你使用設置屬性
快速進行活動描述

00:14:26.900 --> 00:14:30.437 
你可以在NSUserActivity中的
contentAttributes屬性中進行設置

00:14:31.538 --> 00:14:35.509 
如果你想要設置
在特定日期之前不顯示你的活動

00:14:35.943 --> 00:14:37.945 
你可以設置一個到期日

00:14:40.414 --> 00:14:47.054 
另外如果你的活動內容可以保存到網上
或者你支持Safari的通用鏈接 

00:14:47.621 --> 00:14:49.189 
設置網頁URL屬性 

00:14:49.556 --> 00:14:53.660 
然後系統會在Safari
或者app內啓動你的活動

00:14:57.464 --> 00:14:59.499 
現在讓我看看如何創建活動

00:15:02.202 --> 00:15:05.072 
這裏我們可以舉一個關於
NSUserActivity的例子 

00:15:05.739 --> 00:15:07.441 
而且我們在這裏會設置一個活動類型

00:15:08.342 --> 00:15:12.412 
這是你設置的唯一字符串 
同樣也是你告訴系統的字符串 

00:15:12.779 --> 00:15:15.749 
讓系統明白你的app可以處理什麼活動

00:15:17.050 --> 00:15:19.086 
我們推薦你對這些字符串類型

00:15:19.386 --> 00:15:21.188 
設置反向DNS類註釋
這樣確保其唯一性

00:15:23.056 --> 00:15:24.758 
接下來我們的活動需要一個標題

00:15:25.359 --> 00:15:29.763 
再一次標題可用於索引 
而且可作爲搜索結果的顯示標題

00:15:31.431 --> 00:15:35.402 
接下來我們要在useriInfo
屬性上設置一個詞典

00:15:35.469 --> 00:15:38.338 
其中應包括重新創建狀態所需的信息

00:15:41.875 --> 00:15:44.711 
接下來我們要設置
eligibleForSearch爲True 

00:15:44.778 --> 00:15:46.713 
啓動活動設備內置索引 

00:15:49.016 --> 00:15:51.985 
該活動代表用戶的當前狀態 

00:15:52.319 --> 00:15:55.122 
然後我們通過活動
becomeCurrent屬性通知系統 

00:15:55.455 --> 00:15:57.724 
然後該活動會被添加到設備內置索引中

00:15:59.426 --> 00:16:01.228 
在用戶看來
這過程看起來是怎麼樣的呢？ 

00:16:01.461 --> 00:16:05.933 
現在用戶可以返回到
你的app索引得到的搜索結果

00:16:08.502 --> 00:16:12.306 
在這裏我們可以明白標題屬性
是如何映射到搜索結果的標題的

00:16:15.042 --> 00:16:18.345 
而且如果你使用contentAttributes
輸入更多的信息

00:16:18.612 --> 00:16:20.180 
我們就可以得到更豐富的結果

00:16:22.482 --> 00:16:24.918 
所以當用戶點擊其中一個搜索結果時
會發生什麼呢？ 

00:16:26.520 --> 00:16:29.122 
會調用應用內的
一個UI應用指派方法 

00:16:29.690 --> 00:16:31.191 
和Handoff調用的是同一個

00:16:31.592 --> 00:16:35.062 
這裏我們看到的是
continueUserActivity restorationHandler

00:16:35.128 --> 00:16:37.464 
然後我們傳遞搜索結果活動 

00:16:40.100 --> 00:16:46.206 
我們可以查看其活動類型
然後可以使用用戶信息繼續恢復狀態

00:16:48.675 --> 00:16:52.112 
所以現在用戶可以點擊活動的結果 

00:16:53.313 --> 00:16:56.817 
然後你可以將結果恢復到適當的狀態

00:16:59.853 --> 00:17:01.955 
App搜索內的
NSUserActivity

00:17:02.623 --> 00:17:06.960 
是讓用戶返回到
之前瀏覽內容的好工具 

00:17:08.295 --> 00:17:09.695 
我們想要更進一步

00:17:10.631 --> 00:17:12.199 
所以在我們設計這項功能的時候

00:17:12.598 --> 00:17:14.734 
我們查看了App Store內
很多app

00:17:15.469 --> 00:17:20.773 
我們注意到很多app內容
其他用戶也會看到

00:17:22.442 --> 00:17:23.310 
所以我們在想

00:17:24.178 --> 00:17:29.116 
如果我們可以讓活動代表公共內容

00:17:29.850 --> 00:17:31.818 
然後讓這些內容可讓所有用戶搜索到 

00:17:32.186 --> 00:17:34.788 
而不僅僅是那些之前瀏覽過的用戶
這樣的話不是更棒嗎？ 

00:17:37.457 --> 00:17:40.561 
這正是我們通過
NSUserActivity和公共索引做到的

00:17:42.229 --> 00:17:43.330 
那麼工作原理是什麼呢？ 

00:17:43.730 --> 00:17:46.834 
當用戶在你的app內導航
到公共內容的時候

00:17:47.668 --> 00:17:50.470 
你會創建NSUserActivities
用於捕捉狀態

00:17:51.805 --> 00:17:53.473 
然後你可以指派內容爲公共內容

00:17:55.709 --> 00:17:59.112 
當用戶查看這些活動的搜索結果的時候

00:18:00.948 --> 00:18:02.616 
該活動會和我們的雲索引進行共享

00:18:03.750 --> 00:18:05.886 
然後讓app的所有用戶
都可以進行搜索

00:18:06.220 --> 00:18:08.288 
而不僅僅是那些之前
瀏覽過的用戶才能搜索

00:18:09.489 --> 00:18:11.859 
如果你的活動保存到網站上 

00:18:12.159 --> 00:18:14.061 
那麼你可以設置
webpageURL屬性

00:18:14.761 --> 00:18:19.132 
這樣可以極大增加被
iOS的Safari搜索到的機會

00:18:21.401 --> 00:18:25.072 
所以讓我們看看
要如何指派一項活動爲公共活動

00:18:25.939 --> 00:18:28.375 
我們可以啓動之前看到的那個活動 

00:18:29.776 --> 00:18:31.378 
然後我們可以額外設置一項屬性

00:18:32.079 --> 00:18:35.549 
這裏我們設置
eligibleForPublicIndexing爲True

00:18:35.616 --> 00:18:38.352 
然後我們指派該活動爲公共

00:18:40.187 --> 00:18:42.656 
雖然我們已經設置該屬性爲True 

00:18:43.824 --> 00:18:48.495 
但這不是說該活動的內容
會被立即分享到我們的雲索索引中

00:18:51.565 --> 00:18:53.433 
對於被共享的一項活動

00:18:53.967 --> 00:18:58.705 
首先需要在搜索結果中
出現而且要和用戶產生互動

00:19:02.009 --> 00:19:06.013 
我們可以使用零知識
證明方法跟蹤這些互動 

00:19:06.313 --> 00:19:08.649 
這個方法可以確保活動內容的私密性 

00:19:09.249 --> 00:19:10.817 
直到滿足互動閥值

00:19:13.320 --> 00:19:14.354 
所以更詳細地說

00:19:15.155 --> 00:19:18.759 
當用戶和被指派爲公共的活動
搜索結果進行互動的時候

00:19:19.660 --> 00:19:23.463 
會發送活動的一個單項Hash
到我們的雲索引中

00:19:25.666 --> 00:19:30.771 
當雲索引多次調用同一hash之後

00:19:31.271 --> 00:19:34.308 
活動的內容纔會
和我們的雲索引進行共享

00:19:36.844 --> 00:19:39.246 
我們在設計該方式的時候
還考慮到其他的方面

00:19:39.613 --> 00:19:42.583 
首先是用戶隱私 

00:19:43.150 --> 00:19:48.322 
第二是防止其他用戶的數據意外
和雲索引產生共享

00:19:50.991 --> 00:19:55.896 
另外對於這裏的大部分人而言
NSUserActivity eligibleForSearch

00:19:55.996 --> 00:19:59.833 
和eligibleForPublicIndexing
屬性是默認爲false的 

00:20:00.067 --> 00:20:00.968 
對這裏每個人來說

00:20:01.635 --> 00:20:04.471 
只有對活動中代表內容 
和特性的屬性指派爲公共後

00:20:05.105 --> 00:20:08.876 
才能讓app的其他用戶看到

00:20:13.947 --> 00:20:17.851 
現在讓我們來看看採用
NSUserActivity獲得的額外好處

00:20:18.652 --> 00:20:20.020 
首先是Handoff功能

00:20:20.854 --> 00:20:23.457 
採用API你可以
爲Handoff添加支持

00:20:23.524 --> 00:20:28.762 
如果你選擇 你可以允許
用戶在一臺設備上開啓一項活動

00:20:28.829 --> 00:20:30.364 
而在另外一臺設備裏繼續活動

00:20:34.401 --> 00:20:37.070 
另外兩點是關於Siri的新特性

00:20:39.540 --> 00:20:44.578 
正如主題中展示的向左滑主頁
代表用戶的Siri建議

00:20:45.812 --> 00:20:49.683 
除了建議聯繫人和建議應用
以及和附近地點

00:20:50.450 --> 00:20:52.853 
應用中的活動也可以被建議

00:20:53.554 --> 00:20:56.690 
這裏我們看到一條
對即將到來的日曆事件的建議

00:20:57.391 --> 00:21:00.127 
和一條對恢復播客的建議

00:21:02.663 --> 00:21:05.098 
下一個是Siri智能提醒

00:21:05.999 --> 00:21:10.737 
現在用戶可以讓Siri
提醒他們應用裏的具體內容

00:21:11.905 --> 00:21:15.676 
以及記錄在提醒事項裏各種活動的時間

00:21:16.443 --> 00:21:19.980 
這是一種很容易讓用戶回到
他們想要被提醒的內容的方式

00:21:21.748 --> 00:21:23.750 
應用搜索的內
NSUserActivity

00:21:25.219 --> 00:21:28.622 
讓用戶可以更加容易地返回到
他們之前所訪問的內容

00:21:30.023 --> 00:21:33.160 
並且讓應用裏的公共內容更容易被找到

00:21:37.931 --> 00:21:41.969 
接下來讓我們談談
下一個可搜索應用內容的API

00:21:42.436 --> 00:21:44.204 
那就是CoreSpotlight

00:21:47.608 --> 00:21:50.344 
CoreSpotlight
是iOS 9裏的一個全新框架

00:21:52.012 --> 00:21:54.448 
它提供一個數據庫式的API

00:21:54.748 --> 00:21:57.150 
你可以添加 更新 刪除項目

00:21:58.519 --> 00:22:02.689 
你使用CoreSpotlight
在iOS中進行索引的項目

00:22:03.790 --> 00:22:07.594 
而且可用於內置應用
包括Messages Mail Calendar Notes

00:22:08.161 --> 00:22:11.932 
你明白用CoreSpotlight
可以索引的內容

00:22:14.668 --> 00:22:15.769 
讓我們來看看這個API

00:22:17.871 --> 00:22:20.174 
首先我們從
CSSearchableItem開始

00:22:21.041 --> 00:22:23.810 
這表示的是我們想要索引的個別項目

00:22:25.846 --> 00:22:29.616 
接下來我們關聯一個
CSSearchableItemAttributeSet

00:22:30.184 --> 00:22:33.086 
這是一種通過設置屬性
描述項目的簡單方法

00:22:35.956 --> 00:22:39.660 
然後我們將CSSearchItem
傳遞給CSSearchableIndex

00:22:39.927 --> 00:22:42.462 
這樣項目就被添加到設備內置的索引上

00:22:47.935 --> 00:22:49.469 
我們來看看如何創建一個項目

00:22:52.339 --> 00:22:56.043 
首先我們從創建
CSSearchableItemAttributeSet開始

00:22:56.810 --> 00:22:58.679 
這裏我們有一個關於圖像的

00:23:03.016 --> 00:23:06.220 
接下來我們在屬性設置裏設置一些屬性

00:23:06.820 --> 00:23:07.821 
用於我們要索引的項目

00:23:08.021 --> 00:23:10.591 
這裏我們設置一個標題和一個描述

00:23:11.959 --> 00:23:15.762 
這裏我們將看到標題和描述是如何
映射到搜索結果的

00:23:19.566 --> 00:23:21.869 
接下來我們創建
CSSearchableItem

00:23:22.903 --> 00:23:24.605 
並且我們提供一個獨唯一的標識符

00:23:24.771 --> 00:23:29.843 
應用可以將該標識符用於
參考我們想要索引的實際數據

00:23:31.712 --> 00:23:33.413 
我們可以提供一個域標識符

00:23:33.580 --> 00:23:36.216 
這是一種將項目分組到一起的方法

00:23:36.383 --> 00:23:38.652 
在這個例子中
我們要爲索引一張照片

00:23:38.785 --> 00:23:44.124 
我們想要將相同標識符的所有照片
分到一起並用一個相冊表示

00:23:45.292 --> 00:23:48.996 
並且我們提供一個屬性設置
用於描述剛剛創建的項目

00:23:52.633 --> 00:23:55.202 
接下來我們在
CSSearchableIndex進行項目索引

00:23:55.269 --> 00:23:57.571 
稱爲indexSearchableItems

00:23:57.638 --> 00:24:00.207 
傳遞給索引的項目

00:24:03.043 --> 00:24:04.444 
這對用戶來說看起來像什麼呢？

00:24:05.112 --> 00:24:07.181 
用戶們現在進入iOS搜索

00:24:07.614 --> 00:24:09.850 
然後在應用裏返回搜索結果

00:24:10.484 --> 00:24:12.886 
這些搜索結果已使用
CoreSpotlight索引

00:24:17.157 --> 00:24:22.596 
這就是屬性設置上的屬性
映射到搜索結果的方式

00:24:25.432 --> 00:24:28.936 
當用戶點擊搜索結果的時候
將發生什麼呢

00:24:31.705 --> 00:24:34.241 
應用裏的一個UI應用
指派方法將被調用

00:24:34.942 --> 00:24:36.510 
與Handoff調用的方法一致

00:24:40.113 --> 00:24:43.617 
這裏我們再次看到
ContinuousUserActivity RestorationHandler

00:24:43.684 --> 00:24:47.454 
這次你知道CoreSpotlight項目
啓動了你的應用

00:24:48.555 --> 00:24:51.959 
因爲活動類型被設置爲
CSSearchableItemAction

00:24:53.227 --> 00:24:57.698 
並且當我們初始化可搜索項目時

00:24:58.265 --> 00:25:00.968 
所用的唯一標識符在用戶信息裏的

00:25:01.101 --> 00:25:04.905 
CSSearchableItem
ActivityIdentifier可以使用

00:25:07.474 --> 00:25:09.409 
因此用戶可以點擊搜索結果

00:25:10.344 --> 00:25:13.213 
你可以將正確的上下文返回給用戶

00:25:17.150 --> 00:25:19.186 
現在我們來談談索引維護

00:25:20.254 --> 00:25:22.689 
索引支持更新項目

00:25:23.790 --> 00:25:24.625 
隨着時間的推移

00:25:25.425 --> 00:25:32.266 
項目標題 描述可能改變
用戶可能更新代表項目的某些領域

00:25:32.599 --> 00:25:37.137 
你可以通過調用
用於索引項目的方法進行更新

00:25:37.604 --> 00:25:40.274 
使用唯一的標識符創建一個

00:25:40.774 --> 00:25:44.411 
你想要更新的CSSearchableItem
關聯到一個更新的

00:25:44.478 --> 00:25:46.980 
CSSearchableItemAttributeSet

00:25:47.047 --> 00:25:49.683 
並且爲項目索引
調用CSSearchableItems

00:25:52.419 --> 00:25:55.155 
另外一種常用的維護例行程序
是刪除項目

00:25:55.956 --> 00:26:00.127 
刪除任何不再與上下文相關的項目
是一個好做法

00:26:00.627 --> 00:26:02.896 
我們支持多種刪除項目的方式

00:26:03.730 --> 00:26:05.365 
首先你可以通過標識符來刪除

00:26:06.300 --> 00:26:08.502 
你可以傳遞標識符數列

00:26:09.236 --> 00:26:11.205 
從而刪除帶有標識符的可搜索項目

00:26:12.773 --> 00:26:14.341 
這些項目將從你的上下文中被刪除

00:26:16.543 --> 00:26:18.412 
你可以通過域標識符來刪除

00:26:18.712 --> 00:26:21.148 
你可以看見早前我們創建項目的時候

00:26:21.982 --> 00:26:24.985 
可以用域標識符將項目分組到一起

00:26:26.720 --> 00:26:29.022 
當調用
deleteSearchableItems的時候

00:26:29.122 --> 00:26:33.227 
你可以傳遞標識符將分組的項目刪除

00:26:35.195 --> 00:26:36.029 
最後

00:26:36.096 --> 00:26:37.798 
你可以通過調用

00:26:38.532 --> 00:26:43.937 
deleteAllSearchableItems WithCompletion
處理器將所有的項目從上下文中刪除

00:26:46.940 --> 00:26:51.845 
現在我們來看一個演示如何輕鬆地
將CoreSpotlight添加到應用

00:26:52.946 --> 00:26:55.983 
我們的演示應用是一個圖片
查看器

00:26:56.383 --> 00:26:59.486 
我將向你們展示如何輕鬆地
通過標題索引項目

00:27:00.621 --> 00:27:04.057 
並且我們將看看
搜索和修復的用戶體驗

00:27:12.866 --> 00:27:16.336 
這裏我們有Xcode
和IPhone模擬器

00:27:17.137 --> 00:27:18.472 
首先我們啓動應用

00:27:19.773 --> 00:27:21.208 
以便對它是什麼樣子有一個概念

00:27:22.309 --> 00:27:24.444 
這裏我們有一些照片

00:27:25.512 --> 00:27:27.147 
每張照片下方都有一個標題

00:27:28.282 --> 00:27:29.583 
這裏有一些漂亮的日落

00:27:30.951 --> 00:27:32.619 
好的 讓我們看看如何輕鬆地

00:27:33.053 --> 00:27:35.656 
用照片的標題爲這些照片編索引

00:27:37.024 --> 00:27:38.192 
進入Spotlight

00:27:38.992 --> 00:27:40.794 
我們有一個方法爲項目編索引

00:27:41.595 --> 00:27:44.932 
並且當數據模型初始化的時候

00:27:46.934 --> 00:27:50.771 
我們將在數據存儲中列舉所有的照片

00:27:51.238 --> 00:27:54.041 
並且使用CoreSpotlight
添加每張照片

00:27:55.475 --> 00:27:59.012 
我們將創建屬性設置

00:28:00.113 --> 00:28:03.650 
然後開始描述照片

00:28:03.884 --> 00:28:09.389 
這裏我們爲照片創建一個
CSSearchableItemAttributeSet

00:28:10.390 --> 00:28:15.863 
然後我們把數據模型裏的標題
設置到屬性設置裏的標題屬性

00:28:18.131 --> 00:28:20.400 
同樣也包括基於標題的描述

00:28:26.006 --> 00:28:27.875 
下一步我們將創建項目本身

00:28:28.675 --> 00:28:30.644 
這裏我們傳遞一個唯一的標識符

00:28:31.345 --> 00:28:35.883 
它代表我們可以用於
參考數據存儲中的圖片

00:28:41.054 --> 00:28:45.526 
然後我們調用
indexSearchableItems

00:28:46.026 --> 00:28:49.162 
將項目傳遞到
CSSearchableIndex

00:28:50.731 --> 00:28:52.165 
現在讓我們建立
並運行這個應用

00:28:53.066 --> 00:28:54.401 
現在我們回到應用

00:28:55.202 --> 00:28:59.473 
當我們初始化應用的時候
它調用索引項目

00:28:59.840 --> 00:29:05.913 
並且列舉照片集裏所有照片
並將每張照片添加到設備內置索引

00:29:07.814 --> 00:29:10.350 
現在我們可以進入到iOS搜索

00:29:11.151 --> 00:29:14.154 
並且我記得我在那裏看到
一些漂亮的日落

00:29:14.221 --> 00:29:18.992 
我們可以從應用的結果裏

00:29:19.293 --> 00:29:21.995 
看到這些以日落爲標題的日落照片

00:29:23.597 --> 00:29:24.865 
點擊其中的一個結果

00:29:25.732 --> 00:29:29.503 
它允許我們將應用存儲到
適合該項目的上下文中

00:29:37.778 --> 00:29:41.982 
這就是如何輕鬆地使用
CoreSpotlight來爲項目編索引

00:29:42.950 --> 00:29:47.154 
CoreSpotlight裏的
一些額外功能支持批處理

00:29:47.921 --> 00:29:51.124 
你可以選擇爲大量的項目編索引

00:29:51.458 --> 00:29:52.860 
並且在批處理中分別索引

00:29:53.360 --> 00:29:58.298 
索引支持保存批處理進程狀態
並進行檢索

00:29:58.365 --> 00:30:00.400 
這樣你就可以繼續上次的操作

00:30:01.568 --> 00:30:04.004 
它同樣支持指派和拓展

00:30:04.371 --> 00:30:09.209 
這樣索引就可以與前景 背景通訊
或者在尚未運行的狀態下進行通訊

00:30:10.310 --> 00:30:12.246 
它支持數據保護類

00:30:12.646 --> 00:30:16.550 
這樣你就可以爲你的索引信息
選擇合適的安全策略

00:30:17.851 --> 00:30:21.688 
CoreSpotlight可以
很輕鬆地採用數據庫式的API

00:30:22.322 --> 00:30:26.527 
這樣你可以用於從你的應用中
索引任何功能或上下文

00:30:28.829 --> 00:30:30.497 
現在我將現場交給詹森·道格拉斯

00:30:30.564 --> 00:30:32.599 
讓他來談談第三種API
web markup

00:30:43.944 --> 00:30:44.778 
大家好

00:30:45.212 --> 00:30:46.380 
我叫詹森·道格拉斯

00:30:46.446 --> 00:30:47.614 
我來自Siri團隊

00:30:47.848 --> 00:30:49.383 
我們將談談web markup

00:30:51.118 --> 00:30:55.455 
已經有兩種不可思議超棒的的方法
使你的應用內容

00:30:55.522 --> 00:30:59.560 
在NSUserActivity和
CoreSpotlight可搜索到

00:30:59.626 --> 00:31:02.229 
而第三套APIs
就是web markup

00:31:02.596 --> 00:31:06.733 
用於應用內容的檢索
對於網站而言同樣適用

00:31:09.469 --> 00:31:12.439 
標記這種聯繫的關鍵在於
移動深鏈接

00:31:12.739 --> 00:31:15.843 
一個深鏈接像是一個URL
而不是一個關聯內容的網頁

00:31:16.176 --> 00:31:20.581 
即關聯到應用內部的具體內容

00:31:24.184 --> 00:31:25.652 
早前你看過這個示意圖

00:31:26.019 --> 00:31:32.526 
當時我們爲從設備中獲取的公共項目
設置設備內置索引和雲索引

00:31:33.994 --> 00:31:35.896 
爲了抓取網站內容

00:31:35.963 --> 00:31:38.465 
現在Apple有一個網頁抓取器
叫做AppleBot

00:31:38.832 --> 00:31:42.336 
AppleBot會查找網頁
然後多次抓取應用網頁

00:31:43.103 --> 00:31:45.572 
對於許多這樣的內容
你無需做什麼

00:31:45.672 --> 00:31:48.075 
如果你的網站支持移動深鏈接

00:31:48.642 --> 00:31:51.845 
那麼我們可以繼續找到這些內容

00:31:51.979 --> 00:31:54.915 
並讓它們可被iOS搜索
和Safari上搜索到

00:31:56.950 --> 00:31:59.453 
當這些內容從網站上撤出

00:31:59.686 --> 00:32:04.391 
就像你看到的 我們將直接在
搜索和Safari上顯露出來

00:32:05.893 --> 00:32:11.331 
當用戶點擊其中一個結果
它們直接深鏈接到你的應用中的內容

00:32:11.398 --> 00:32:13.066 
用戶就可以看到
來自搜索結果的內容

00:32:15.135 --> 00:32:18.071 
你可以發現有一個連接到你應用的鏈接

00:32:18.405 --> 00:32:19.406 
這是免費的

00:32:19.673 --> 00:32:22.509 
你不用在應用內
特別做什麼才能使用到這鏈接

00:32:23.477 --> 00:32:27.781 
用戶只需點擊左上角的鏈接
他們就會被帶回到搜索

00:32:27.848 --> 00:32:29.950 
這使得它無縫往返

00:32:33.220 --> 00:32:38.392 
使用web markup只需四個
簡單步驟就可讓你的應用內容被搜索到

00:32:39.560 --> 00:32:40.394 
第一步

00:32:41.028 --> 00:32:45.232 
確保Apple可以發現你的網站
並索引你的網站

00:32:46.667 --> 00:32:51.271 
第二步
確保你的網站包含移動深鏈接標記

00:32:53.207 --> 00:32:56.944 
下一步
確保你的應用可以處理打開這些深鏈接

00:32:58.879 --> 00:33:01.515 
最後
雖是可選項目但我們強烈推薦

00:33:01.748 --> 00:33:03.750 
就是爲結構數據添加標記

00:33:03.884 --> 00:33:06.053 
我們等下會談談這是什麼

00:33:06.119 --> 00:33:09.556 
這樣可以讓你的搜索結果
看起來豐富從而吸引用戶

00:33:11.859 --> 00:33:14.895 
因此第一步
讓你的網站容易被Apple發現

00:33:15.529 --> 00:33:19.499 
我們將抓取網頁同時找尋網站有深鏈接
確保我們可以找到應用網站

00:33:19.566 --> 00:33:25.472 
最簡單的方法是當你提交網站
給iTunes Connect時

00:33:25.739 --> 00:33:27.708 
用它作爲你的支持或營銷URL

00:33:30.143 --> 00:33:33.080 
當你提交應用的時候
會有兩個文本框

00:33:33.380 --> 00:33:34.214 
這很容易

00:33:34.414 --> 00:33:38.986 
我們使用它作爲找尋
移動深鏈接的開始點

00:33:42.189 --> 00:33:46.693 
下一件事情就是確保
你的網站已經有深鏈接標記

00:33:47.494 --> 00:33:50.063 
最普遍的做法你之前可能已經看過

00:33:50.497 --> 00:33:52.232 
某種被叫做
Smart App Banners的東西

00:33:52.299 --> 00:33:53.867 
它們已經存在一段時間

00:33:53.934 --> 00:33:57.404 
這是一個簡單的&lt;meta&gt;標籤
用於指定應用

00:33:57.471 --> 00:34:00.007 
並且說明深鏈接URL是什麼樣

00:34:01.008 --> 00:34:04.311 
當用戶訪問Safari應用網站時
他們會看到一個橫幅廣告

00:34:04.711 --> 00:34:06.113 
如果用戶還沒有安裝該應用

00:34:06.180 --> 00:34:08.581 
廣告允許用戶直接
進入應用商店進行安裝

00:34:08.849 --> 00:34:12.252 
如果已經安裝
你可以直接點擊視圖按鈕

00:34:12.518 --> 00:34:14.955 
直接在你的應用裏查看內容

00:34:15.822 --> 00:34:17.757 
如果你想了解更多關於
Smart App Banners

00:34:17.824 --> 00:34:21.862 
請查看Safari網站內容指南
裏面有更多信息

00:34:24.764 --> 00:34:29.101 
在iOS 9裏有一個新特性
叫做Universal Links

00:34:29.436 --> 00:34:31.938 
它是一種比Smart App Banners
更好的方法

00:34:33.139 --> 00:34:39.545 
自定義URL方案有一些優勢
之前你可能已經用於深連接了

00:34:40.781 --> 00:34:42.416 
第一個優勢是唯一性

00:34:43.050 --> 00:34:46.920 
許多應用支持自定義

00:34:46.987 --> 00:34:49.022 
他們可能對相同
自定義URL方案產生衝突

00:34:49.089 --> 00:34:51.425 
但使用通用鏈接的話就不會有衝突

00:34:51.692 --> 00:34:55.495 
因爲我們使用應用網站
作爲唯一的識別方法

00:34:56.563 --> 00:34:57.564 
這也很安全

00:34:58.298 --> 00:35:03.036 
因爲可以說一個應用屬於某個特定網站
而這是我們設置好的

00:35:03.670 --> 00:35:06.940 
將簽字證書上載到網站

00:35:07.140 --> 00:35:08.775 
然後當用戶安裝應用時

00:35:09.142 --> 00:35:13.714 
我們可以檢查證書
並確保這二者是關聯在一起的

00:35:15.816 --> 00:35:16.817 
這樣做也非常靈活

00:35:17.217 --> 00:35:22.523 
因此不論是在網站內還是
通過應用進行控制 用戶可以控制行爲

00:35:22.589 --> 00:35:26.527 
從而用戶可以額輕而易舉地
切換行爲並選擇他們最想要的默認值

00:35:27.060 --> 00:35:32.866 
這意味着可以在不使用JavaScript
的情況下詢問用戶要什麼

00:35:33.166 --> 00:35:35.402 
另一個不使用
Javascript的優勢是

00:35:35.469 --> 00:35:39.239 
這是深連接的一種比較複雜的類型
我們要花很多時間來理解

00:35:39.306 --> 00:35:44.311 
使用通用鏈接可以確保
我們能正確地解析深連接

00:35:45.445 --> 00:35:47.581 
最後一個優勢是普遍性

00:35:48.282 --> 00:35:54.488 
一個通用鏈接是一個單獨的URL
可用於網站內容以及應用內容

00:35:54.755 --> 00:35:59.426 
你不需要有兩個不同的URL
一個用於網站 另一個用於深鏈接內容

00:36:03.530 --> 00:36:04.965 
如果使用通用鏈接

00:36:05.299 --> 00:36:08.969 
我們仍需通過web markup
來瞭解深鏈接

00:36:09.036 --> 00:36:11.405 
所以你想要使用
Smart App Banners

00:36:11.738 --> 00:36:13.707 
或者其他支持方案

00:36:14.007 --> 00:36:20.480 
這同樣確保瞭如果用戶沒有安裝應用
他們仍可以發現應用並安裝

00:36:20.747 --> 00:36:24.651 
因爲通用鏈接的一個特點
是一旦你安裝應用通用鏈接就會被啓用

00:36:25.552 --> 00:36:30.958 
想要了解更多的話
我強烈建議你查看無縫連接到你的應用

00:36:31.191 --> 00:36:32.059 
明天會開始的部分

00:36:35.963 --> 00:36:40.767 
下一步是說我們支持深鏈接

00:36:41.134 --> 00:36:42.870 
它的替代方案之一是Twitter卡

00:36:43.604 --> 00:36:48.242 
Twitter卡也使用meta標籤
和Facebook應用鏈接

00:36:48.742 --> 00:36:51.144 
除了支持智能應用橫幅外

00:36:51.545 --> 00:36:53.280 
我們同樣支持這些

00:36:53.347 --> 00:36:57.918 
並且我們將添加到
其它以後可能出現的流行標準

00:37:02.155 --> 00:37:04.892 
最後確保你的應用可以打開深連接

00:37:06.260 --> 00:37:09.897 
過去你可能對此很熟悉
你可能已經在你的應用裏這麼做了

00:37:10.130 --> 00:37:12.399 
你已經確保實現了openURL

00:37:13.534 --> 00:37:16.069 
這裏有一個簡單的
使用openURL的例子

00:37:16.803 --> 00:37:17.638 
在我們的例子中

00:37:17.738 --> 00:37:19.473 
我們有一個URL

00:37:19.540 --> 00:37:22.676 
它可以查看配置文件 
而且有一個配置文件ID

00:37:23.477 --> 00:37:26.880 
我們用NSURL組件進行URL解析

00:37:28.015 --> 00:37:32.653 
然後將配置文件ID
從查詢參數傳到視圖控制器

00:37:33.053 --> 00:37:37.391 
這是一個例子說明
如何簡單在你的應用指中支持深鏈接

00:37:41.495 --> 00:37:44.731 
現在我想談談之前我提及的
結構化數據

00:37:45.799 --> 00:37:49.369 
結構化數據是
基於移動深鏈接之外的一些東西

00:37:49.736 --> 00:37:53.340 
它讓我們理解並解析搜索結果信息

00:37:53.941 --> 00:37:57.711 
解析自由格式的網頁文本
是一件困難的任務

00:37:57.778 --> 00:37:59.580 
結構化數據能提供極大幫助

00:38:00.380 --> 00:38:03.951 
而且還可以確保搜索結果更爲顯眼

00:38:04.218 --> 00:38:10.891 
而不僅僅在結果中出現
圖片 評級和其它關鍵事項的文本

00:38:11.291 --> 00:38:12.960 
這同樣還可以幫助你提高排名

00:38:13.360 --> 00:38:16.263 
因爲我們知道結果豐富可以吸引用戶

00:38:16.563 --> 00:38:18.932 
比起其它結果
我們更能凸顯該結果

00:38:21.602 --> 00:38:25.272 
所以添加這種結構化數據類型
標準之一是開放式圖表

00:38:25.973 --> 00:38:31.011 
使用開放式圖表可以從結果中指定
一張圖片 一段音頻甚至一段影像文件

00:38:31.311 --> 00:38:33.547 
你只需簡單地將標記放置於網頁之中

00:38:33.614 --> 00:38:37.184 
然後我們將把它
與在同個頁面的深鏈接關聯

00:38:40.988 --> 00:38:45.058 
另一種很普遍的結構化數據形式
是schema.org

00:38:45.826 --> 00:38:50.030 
我們會馬上添加支持

00:38:50.831 --> 00:38:53.600 
一個普通的schema.org
是AggregateRatings

00:38:53.667 --> 00:38:55.569 
主要用於排名和評論

00:38:56.336 --> 00:38:57.771 
這個例子中我們會展示

00:38:58.005 --> 00:39:01.708 
使用schema.org微數據
添加AggregateRanging標記

00:39:02.242 --> 00:39:03.911 
而且我們還支持RDFA

00:39:05.112 --> 00:39:10.918 
因爲JSON-LD基於網站的執行方式

00:39:11.385 --> 00:39:14.621 
我們在以後會提供支持
並進行解析和設置兼容

00:39:17.891 --> 00:39:20.761 
現在讓我們來詳細分析一個例子
看看實際上是如何運行的

00:39:21.094 --> 00:39:22.596 
這裏有一個airbnb結果

00:39:23.130 --> 00:39:25.032 
第一件事也是最明顯的事

00:39:25.299 --> 00:39:28.235 
我們使用標準HTML&lt;標題&gt;
標籤進行解析

00:39:29.002 --> 00:39:30.270 
然後我們進一步來解析標題

00:39:31.171 --> 00:39:33.073 
這裏顯示的每晚價格

00:39:33.440 --> 00:39:34.942 
我們可以做到這一點

00:39:35.275 --> 00:39:41.748 
是因爲我們已經把報價模式添加到網頁
並且把它關聯到酒店

00:39:42.850 --> 00:39:46.820 
我們可以解析價格以及計價貨幣
並直接顯示在結果中

00:39:49.156 --> 00:39:53.994 
我們也可以通過schema.org的
AggregateRanging展示評論數量

00:39:54.795 --> 00:39:57.431 
並且用星進行排名

00:39:59.933 --> 00:40:04.071 
最後使用開放式圖表的圖像標籤
展示圖片

00:40:08.008 --> 00:40:11.612 
現在談談我們在schema.org
上支持的一些模式

00:40:12.412 --> 00:40:14.681 
第一個是AggregateRatings

00:40:15.816 --> 00:40:18.051 
另外是報價價格

00:40:18.585 --> 00:40:22.856 
或者如果你有一個用戶消費型網站
你提供銷售的商品

00:40:23.490 --> 00:40:26.693 
正如我們看到的酒店預定

00:40:28.028 --> 00:40:32.699 
價格範圍 如果沒有固定價格的話
還有許多與價格相關的因素

00:40:33.834 --> 00:40:38.572 
比如喜好 風景 評論等

00:40:40.073 --> 00:40:46.713 
同樣interactionCount將會被
schema.org裏的新模式取代

00:40:46.780 --> 00:40:49.183 
這個我們也同樣支持

00:40:49.349 --> 00:40:52.853 
如果你正考慮從interactionCount
轉移到Actions

00:40:54.421 --> 00:40:56.723 
對於像公司等這樣的商業組織

00:40:57.291 --> 00:41:03.597 
你可以將地址與電話號碼等
聯繫信息關聯起來

00:41:03.664 --> 00:41:06.900 
稍後我們將看看這樣做如何
使你的搜索結果更加豐富

00:41:08.602 --> 00:41:11.338 
Recipes
這是一目瞭然的SearchActions

00:41:13.040 --> 00:41:17.344 
如果你的網站有一個搜索登錄頁面

00:41:18.178 --> 00:41:19.980 
使用特別方式進行標記

00:41:20.047 --> 00:41:23.450 
這樣我們也能處理搜索結果
只是方式稍微不同而已

00:41:23.517 --> 00:41:25.719 
我們知道
這是一個搜索登陸頁面

00:41:27.321 --> 00:41:28.856 
最後是ImageObjects

00:41:28.922 --> 00:41:31.124 
這僅僅是針對圖像的

00:41:34.228 --> 00:41:36.063 
現在我想談談Actions

00:41:36.730 --> 00:41:41.401 
Actions是一種運用結構化數據
使得你的結果可執行的方法

00:41:42.970 --> 00:41:46.340 
在支持啓動的時候有一系列的操作

00:41:46.507 --> 00:41:51.311 
第一步是撥打電話號碼獲取地址

00:41:52.212 --> 00:41:54.014 
並播放音頻或視頻文件

00:41:58.519 --> 00:42:00.787 
這些例子的第一步是撥打電話號碼

00:42:01.321 --> 00:42:07.060 
正如我們之前在組織模式裏看到的
你可以添加電話作爲一項屬性

00:42:07.661 --> 00:42:13.100 
當我們看到這個電話號碼後可以解析它
並直接在結果中放置一個撥號按鈕

00:42:13.500 --> 00:42:15.736 
現在你的結果已經可以執行撥號了

00:42:17.771 --> 00:42:20.607 
另一種是
使用AudioObject模式

00:42:21.475 --> 00:42:25.179 
使用AudioObject
你可以指定一個URL到音頻文件

00:42:25.445 --> 00:42:31.585 
且用戶可以在結果中播放文件
無須深鏈接到應用中再從裏面進行播放

00:42:34.254 --> 00:42:35.889 
最後獲取方向

00:42:36.590 --> 00:42:41.061 
提供一個郵政地址
使我們可以允許用戶直接導航

00:42:41.295 --> 00:42:43.263 
而不需要深鏈接到應用

00:42:43.630 --> 00:42:48.635 
這樣做的好處是使得結果
更有可能與用戶互動

00:42:49.369 --> 00:42:54.107 
如果一個用戶看到結果清單
並且可以直接執行想要的操作

00:42:54.308 --> 00:42:56.510 
他們更有可能會點擊你的結果

00:43:01.215 --> 00:43:04.117 
所以我們在這裏展示了
許多不同的模式 標記

00:43:04.551 --> 00:43:09.857 
我們將在今年晚些時候添加測試工具
用於測試網站上的標記

00:43:10.791 --> 00:43:13.627 
這些將在今年晚些時候
出現在開發者網站上

00:43:13.961 --> 00:43:19.166 
我們將有對深鏈接標記和
搜索結構化數據標記的測試工具

00:43:21.101 --> 00:43:23.704 
最後當你添加移動深鏈接

00:43:24.004 --> 00:43:29.309 
或結構化數據到網站

00:43:29.776 --> 00:43:34.448 
我只想要鼓勵大家多用一些資源
進行資源檢查這些資源提供許多信息

00:43:34.781 --> 00:43:37.718 
並且我們希望能夠助你一臂之力

00:43:38.619 --> 00:43:39.453 
謝謝

00:43:47.594 --> 00:43:48.929 
現在我將把這裏交還給維普爾

00:43:56.069 --> 00:44:02.709 
這是三個簡單 強大 靈活的方式
讓iOS 9裏的應用可被搜索到

00:44:05.279 --> 00:44:06.246 
你應該使用哪一個

00:44:06.513 --> 00:44:12.986 
這取決於你想要創建的內容性質的功能
以及想要的搜索體驗類型

00:44:13.687 --> 00:44:18.458 
CoreSpotlight
用於設備上的私人數據索引

00:44:19.259 --> 00:44:23.597 
你可以使用CoreSpotlight
來徹底索引應用裏的數據

00:44:24.598 --> 00:44:28.202 
如果你正建立或者
說你有一個社交網絡應用

00:44:28.268 --> 00:44:32.840 
你想要索引所有用戶發出和接收的信息

00:44:33.207 --> 00:44:35.209 
CoreSpotlight
是最適合的工具

00:44:36.043 --> 00:44:39.346 
web markup適用於
映射應用內容到網頁上的情況

00:44:39.746 --> 00:44:42.783 
如果你這麼做了
你當然要使用這個標記

00:44:42.850 --> 00:44:49.056 
因爲它爲你的應用和內容
提供更多被用戶發現的機會

00:44:49.223 --> 00:44:50.624 
而這些用戶還沒有安裝你的應用

00:44:51.859 --> 00:44:55.429 
NSUserActivity
可用於應用內公共

00:44:55.762 --> 00:44:59.299 
或私人內容以及索引導航點

00:45:00.300 --> 00:45:03.303 
現在有另一種風格的
NSUserActivity

00:45:03.370 --> 00:45:04.771 
那就是戴夫談及到的公共索引

00:45:05.439 --> 00:45:06.573 
這玩意兒真的非常強大

00:45:06.807 --> 00:45:11.278 
如果你的應用有百萬甚至是上億項目

00:45:11.979 --> 00:45:15.082 
你可以使用公共索引
從根本上移動這些項目

00:45:15.282 --> 00:45:17.184 
並在蘋果雲索引裏索引

00:45:20.621 --> 00:45:22.956 
這些API各自千秋

00:45:24.324 --> 00:45:26.159 
但是又能配合使用

00:45:28.195 --> 00:45:32.499 
在相同的應用 相同的內容裏
你可以採用多個API

00:45:33.867 --> 00:45:35.035 
唯一要記住的事情是

00:45:36.436 --> 00:45:42.776 
在多個地方被索引的項目
你需要賦予其相同的ID

00:45:43.410 --> 00:45:44.811 
從而關聯這些項目

00:45:45.312 --> 00:45:47.181 
如果你使用所有這三個API

00:45:49.483 --> 00:45:51.418 
最常用的ID是URL 

00:45:52.953 --> 00:45:56.823 
你可以設置CSSearchableItems
UniqueIdentifier到URL

00:45:56.890 --> 00:45:59.359 
然後NSUserActivity
關聯到該唯一標識符

00:45:59.426 --> 00:46:01.228 
然後網頁URL關聯到URL

00:46:01.962 --> 00:46:05.465 
如果你同時使用
NSUserActivity和CoreSpotlight

00:46:05.532 --> 00:46:09.670 
這是一種很普遍的組合模式
你只是需要確保它們有相同的ID

00:46:11.438 --> 00:46:16.577 
這有助於搜尋複製結果
也有助於項目排名

00:46:18.212 --> 00:46:19.513 
讓我們來談談排名

00:46:22.182 --> 00:46:25.886 
搜索的真正魅力在於
基於用戶輸入的一些信息

00:46:26.520 --> 00:46:29.189 
提供最相關的結果

00:46:29.623 --> 00:46:31.825 
到這裏我們已經做了許多

00:46:32.993 --> 00:46:38.232 
相關性和排名是一種複雜的功能
指的是配對查詢和項目

00:46:38.532 --> 00:46:43.136 
這裏說的絕大多數
對於開發者和用戶是完全透明的

00:46:45.105 --> 00:46:45.939 
然而

00:46:47.241 --> 00:46:52.880 
這裏的一個重要的排名因素是
與內容和結果的互動

00:46:52.946 --> 00:46:58.485 
你可以做的是幫助確保搜索
抓取所有這些互動

00:47:00.654 --> 00:47:02.155 
我們有三種互動類型

00:47:02.823 --> 00:47:05.425 
一是URL廣泛度

00:47:07.194 --> 00:47:11.131 
這是通過web markup索引
的可應用內容

00:47:12.399 --> 00:47:16.803 
它是基於你添加到模式當中的質量指標

00:47:16.870 --> 00:47:23.410 
比如排名 喜好 評論以及網頁鏈接
圖表中URL的位置

00:47:24.344 --> 00:47:30.250 
URL基於廣泛度提高排名
並且這是自動發生的

00:47:31.952 --> 00:47:33.253 
第二種互動

00:47:34.321 --> 00:47:38.158 
是應用內內容被查看的頻率

00:47:39.693 --> 00:47:43.330 
抓取該頻率的唯一方法
是通過NSUserActivity

00:47:43.397 --> 00:47:46.867 
這就是爲什麼我們一直鼓勵你
採用NSUserActivity

00:47:47.768 --> 00:47:49.970 
第三種也是最重要的

00:47:50.037 --> 00:47:51.772 
互動形式是搜索結果參與度

00:47:52.940 --> 00:47:54.842 
當搜索結果展示給用戶的時候

00:47:55.375 --> 00:47:56.610 
不管他們是否點擊結果

00:47:57.377 --> 00:48:00.647 
或者他們是否對結果中的描述感到滿意

00:48:00.714 --> 00:48:04.484 
我們稱爲無聲參與並通過解析環節抓取

00:48:08.589 --> 00:48:11.258 
從而獲得優化關聯性的快速清單

00:48:11.325 --> 00:48:12.159 
首先

00:48:12.492 --> 00:48:15.395 
繼續你現在在做的事情
開發出優秀的應用和內容

00:48:15.462 --> 00:48:20.434 
搜索系統本來就是設計
用於發現最好內容的

00:48:21.401 --> 00:48:24.171 
你可以幫助我們確保所有的互動

00:48:24.238 --> 00:48:26.507 
都可以通過
NSUserActivity抓取到

00:48:26.940 --> 00:48:29.877 
在可執行的地方使用公共索引
NSUserActivity

00:48:30.477 --> 00:48:35.549 
因爲根據用戶數據
我們現在可以抓取內容的參與度

00:48:36.583 --> 00:48:41.788 
採用模式標記的方法
標記處互動計數和質量指示

00:48:42.222 --> 00:48:45.826 
最後遵守用戶界面指南
我稍後將談到它

00:48:48.962 --> 00:48:55.302 
突顯優秀內容另一方面
是去除不相關的內容

00:48:55.836 --> 00:48:57.538 
我們在這方面也已經做了許多工作

00:49:00.474 --> 00:49:03.644 
如果惡意或不好的應用濫發索引郵件

00:49:04.344 --> 00:49:09.216 
我們將對結果進行降級
或完全壓制這些搜索結果

00:49:09.583 --> 00:49:15.222 
最重要的方法
是參與度顯示比

00:49:15.289 --> 00:49:20.194 
即搜索中展示的結果數量
和參與的次數的比值

00:49:20.761 --> 00:49:22.896 
低參與度將會被壓制

00:49:23.230 --> 00:49:28.068 
而高參與度將有助於
提升結果在搜索中的排名

00:49:30.103 --> 00:49:33.307 
獲取高參與度的最好方式是

00:49:33.941 --> 00:49:36.610 
遵守用戶指南中的一些建議

00:49:38.779 --> 00:49:40.714 
你在iOS 9中
可以注意到的一件事情是

00:49:40.781 --> 00:49:45.786 
即使是來自內置應用的搜索結果
內容也很詳實且豐富

00:49:45.853 --> 00:49:50.257 
這是因爲我們發現更豐富的結果
意味着更高的參與度

00:49:52.092 --> 00:49:55.329 
這裏有幾件事情提供一個縮略圖

00:49:55.462 --> 00:50:00.267 
提供一個精心構建的易被閱讀的描述
以及排名和操作

00:50:01.602 --> 00:50:04.037 
縮略圖裏的圖像效果非常強大

00:50:04.271 --> 00:50:08.175 
當用戶他們點擊結果後
他們會感受到所看到的

00:50:08.509 --> 00:50:10.477 
提供一個好的縮略圖

00:50:11.044 --> 00:50:13.380 
提供用戶找尋的關鍵信息

00:50:14.615 --> 00:50:19.086 
例如如果用戶正找尋一個訂艙號
一個在描述中提及的參考號

00:50:19.319 --> 00:50:22.389 
這樣搜索任務可以在搜索中完成

00:50:25.492 --> 00:50:29.229 
另一個強大的功能是支持關鍵字

00:50:29.730 --> 00:50:32.799 
在所有的API裏
你可以提供一串關鍵字

00:50:33.100 --> 00:50:35.602 
然後進行搜索

00:50:35.836 --> 00:50:39.373 
種類關鍵字是非常非常實用的

00:50:40.574 --> 00:50:42.543 
當用戶找尋一種具體的“票”時

00:50:42.709 --> 00:50:46.280 
它們可能鍵入票的類型
而不是票的名稱

00:50:46.580 --> 00:50:49.383 
當他們找尋蛋白質的時候
他們可能鍵入食譜

00:50:49.583 --> 00:50:54.354 
這讓用戶感受到一個神奇的智能體驗

00:50:55.822 --> 00:51:02.729 
其它實用的關鍵字類型
是同義詞和縮寫詞

00:51:02.796 --> 00:51:05.232 
用戶想關鍵字越少越好

00:51:05.532 --> 00:51:07.467 
所以他們可能輸入sf giants

00:51:07.835 --> 00:51:08.902 
而非
San Francisco Giants

00:51:08.969 --> 00:51:11.705 
你可以通過關鍵字提供相關回調

00:51:16.543 --> 00:51:17.578 
同樣重要的是

00:51:18.512 --> 00:51:23.050 
啓動行爲
這指的是用戶點擊結果所發生的事

00:51:23.350 --> 00:51:25.586 
你想把用戶直接帶到搜索內容裏面

00:51:25.719 --> 00:51:29.723 
而且沒有插入式廣告 沒有彈出廣告

00:51:30.023 --> 00:51:34.194 
沒有屏幕廣告 而且加載頁面很快

00:51:35.095 --> 00:51:41.435 
測量和估計從點擊到內容展示的
時間是很重要的

00:51:41.568 --> 00:51:43.237 
並將該使用作爲排名的一個因素

00:51:45.873 --> 00:51:47.541 
這裏有兩個例子

00:51:47.608 --> 00:51:49.476 
一個是對的
一個是錯的

00:51:50.244 --> 00:51:52.179 
讓我爲你展示如何做

00:52:03.891 --> 00:52:05.459 
我確定沒有人的應用會這麼做

00:52:10.364 --> 00:52:15.502 
用戶會很沮喪
而且你想要找到完全避免的方法

00:52:19.540 --> 00:52:20.974 
我們來談談接下來怎麼做

00:52:22.543 --> 00:52:26.914 
當然了你可以對
你的應用內容進行全面索引

00:52:27.247 --> 00:52:30.918 
這是我們發現的在搜索上下文方面
非常實用的一些事情

00:52:31.084 --> 00:52:35.355 
你可以通過NSUserActivity
抓取任何用戶過去查看的內容

00:52:35.656 --> 00:52:40.561 
或用戶創建的內容 或評級過的內容
或在應用內創建的清單

00:52:41.061 --> 00:52:44.198 
人們想要返回到任何他們過去做的事情

00:52:45.999 --> 00:52:49.436 
導航點和功能是非常非常實用的工具

00:52:51.338 --> 00:52:55.676 
用戶可能想要查找

00:52:55.976 --> 00:52:58.378 
應用裏的新信息 新內容

00:52:58.745 --> 00:53:01.048 
你可能想要在搜索中查找這些

00:53:02.449 --> 00:53:03.450 
你可以進行創新式的

00:53:05.285 --> 00:53:07.054 
或者主動地進行項目索引

00:53:07.321 --> 00:53:09.423 
而這些正是用戶想要查看的

00:53:09.523 --> 00:53:15.462 
假設我買了一張音樂節的票
但我可能對區域內另一場音樂節感興趣

00:53:15.696 --> 00:53:21.435 
你可以使用你的應用解析
得到有趣的內容並將其放入索引

00:53:21.969 --> 00:53:24.605 
API非常靈活

00:53:25.472 --> 00:53:29.409 
而且允許你創建非常新奇的搜索體驗

00:53:29.476 --> 00:53:31.845 
這方面有無窮的可能性

00:53:36.016 --> 00:53:39.853 
總結一下
讓我們看看我們在這個部分談及的內容

00:53:40.254 --> 00:53:43.924 
我們介紹了用於索引深鏈接

00:53:44.157 --> 00:53:48.662 
和應用搜索的快速設備內置和雲架構

00:53:49.162 --> 00:53:54.168 
我們向你展示三個API
以及你可以採用的深鏈接方法

00:53:56.470 --> 00:53:59.540 
我們向你展示了好的內容
豐富的搜索結果

00:53:59.740 --> 00:54:02.142 
以及內容到結果的快速互動方式

00:54:02.809 --> 00:54:04.978 
是如何改善搜索體驗的

00:54:06.446 --> 00:54:11.051 
API可以抓取你的內容

00:54:11.218 --> 00:54:14.621 
並展示給世界各地的iOS用戶

00:54:19.226 --> 00:54:20.594 
我們還有更多的信息

00:54:21.395 --> 00:54:26.233 
如果你想要了解詳細信息
你可以前往搜索文檔首頁

00:54:26.500 --> 00:54:29.303 
我們的論壇上有更多關於互動的內容

00:54:32.272 --> 00:54:37.711 
我建議你前往詹森介紹的
無縫連接環節

00:54:43.951 --> 00:54:46.019 
我們有兩個實驗

00:54:46.186 --> 00:54:51.491 
一個將在我完成講說的時候馬上開始
大家可以加入我們

00:54:51.758 --> 00:54:53.560 
另一個是在星期五舉行

00:54:54.795 --> 00:54:58.532 
我們希望在星期五的時候看到

00:54:58.799 --> 00:55:02.536 
大家在WWCD整合搜索API的成果

00:55:04.071 --> 00:55:05.906 
這就是應用搜索的全部內容