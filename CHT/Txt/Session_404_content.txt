Xcode的app切割
早上好 我是安德斯
歡迎你們來參加404會議Xcode的app切割
APP切割在這個舞臺上已經多次提及
但從你們昨天提出的問題和問題數量看來
很多人深感興趣並且仍有疑問
所以在這個會議上我們會講的更詳細些
尤其是關於
當今APP切割如何影響APP傳播途徑
我們會看看其工作原理以及改善
我們會討論
如何進行高效的APP切割
減少內存佔用率
然後我們要討論
這對你工作流程的意義
當你在開發和測試應用以及提交到App Store等過程中
現在我們快速瀏覽一下
當前的APP是如何傳播的
你會使用Xcode開發iOS系統app
然後測試並提交應用商店
當你提交時 
App會被標記上開發者證書
在經過檢驗後App Store會重新證書標記
然後上架以供下載
然後有一臺設備下載了你的App
這樣設備就獲得了你上傳的的App
現在我們來看看裏面的內容
首先 這是你的執行代碼
這裏有很多資源幾乎所有的東西都羅列在內
有些App代碼很繁重 很多
資源也比較少
有些則正好相反 媒體文件較多
大部分是資源
我們舉一個例子看一看
現在代碼基本上有兩種版本64位或32位
實際上 還可能是RMV7
也包括NRV64切片
爲了在Apple硬件上運作良好RMV7
當然 資源中如果有圖像的話
你會使用1X 2X 3X或Retina
以使圖像在各類設備上運行良好
你也許會想對圖像進行一部分區分
分爲適用iPhone的 
和適用iPad的
如果是遊戲app或者是3D圖像型APP 
那麼1X和2X在處理文本壓縮和
文字模塊方面並無太大意義
事實上 如果想利用OpenGL AS和Metal語言
那麼可能需要不同類型的資源紋理
而且還進行進一步的區分
優質和劣質文件
這樣都能讓設備在不同內存大小上良好地運行
在任何設備上運行取決於內存大小的圖像清晰度
可能你還有聲頻資料
所以你還可能需要根據比特率進行區分
當然還有其他數據 像是遊戲等級
又或者你的app需要認證文件
可能有些模板及其他一些信息
無法讓設備進行區分所有設備上都可能發生這種事
實際上現在很多App都有所有類型的數據
所以你可能要費力進行歸類
做好備註
這樣相應資料才能安裝在相應的設備上
這再好不過這實際上就是APP切割的優勢所在
如果你有一個iPad Mini
當它運行的時候 會運行RMV7切割
iPad等設備也是如此
另外APP切割所做的就是
在運行時決定加載資料
放到Store的資料
設備上的內容就是保存到設備上
始終保存在設備上雖然不會在iPad1上下載
所以RM 64切割無法在ipad Mini上使用
那麼 爲什麼要全部上傳到Store中呢？
在App Store上
我們將爲ipadMini預構建一個定製版本 
iPhone 6+也是如此
這時候 我們使用3X artwork RM 64等
此類的工具
值得注意的是
你仍會上傳包括各種原圖變體
和其他資源的通用APP  
於是在App Store裏
切割就會發生
實際上 App Store的作用是
查看你的App能夠支持的不同設備即使不同設備特性
然後再查看App中的實際內容
以及你如何使用1X 2X等工具進行標註
然後Store會預製並分離被下載的IPA
我們來看一個已經看過的例子
這是個演示箱 曾在美國展示過
在這個例子中 我們有一個App
74兆字節的通用APP
適用於所有架構和設備
通過切割 我們得到16至29兆字節
平均在22兆字節的文件
我們在這款App上運行切割
實際上 其中產生了19種變量
包括不同的特性組合
這一些都在後臺自動進行
而你只需對app內容進行標註即可
這是第一級保存 實在酷
但是 有改善的空間嗎？
當然了 有
設備上有些資料是我們一直使用到的
首先 代碼
那裏可能會有一些原圖比如故事板當你啓動你的應用程序
或者將原圖添加到主菜單
讓我們假設你需要不斷使用這些原圖
然後還有其它這些東西  
這個應用程序之後會需要用到但現在不需要用到
你之前聽過的一個典型例子比如遊戲的第19級
正在玩遊戲第一級的用戶還不需要19級的資料
同樣地 還有其它例子
如果App是文件類應用
那麼媒體模板就會比較豐富
你可能會想把這些推向市場
爲了提供豐富的體驗你可能要有很多的模板
但是它們可能會佔用很多空間你可能會根據需要進行下載
對於音頻工具也是這樣的或者此類的
很好的示範例子是
許多用戶看過一次就不再想讓文件
佔用設備的空間
如果我們看看我們以前討論過的
應用切割其實應用已經進行簡化了
因而只剩下一個結構
以及一種資源類型的質量變體
下一等級劃分 我們可以做的只有
在瞭解應用程序的特定區域後才能執行
就是基於給定的時間所需要的資料
因爲這些是基於你的代碼邏輯
因此在這個例子中我們有圖像
Metal着色器諸如此類的
我們可以把這些分爲共享的
以及歸入到應用程序本身時刻所必須的一類
我們可以按需選擇
通過劃分
實際上你就可以減小
應用程序佔用的基礎空間這樣就可以保存更多文件
在這種特定的情況下使用Xcode建立的
標記資源包就會被清除
保存到App Store中的IPA
你可以根據需要進行下載
你可以指定其中的一部分
作爲初始下載 當用戶下載展示的
應用程序並在進度條達到百分之百之後
應用程序就準備就緒了
App已經有了一些初始內容
你可以根據需要下載更多的內容
這已經不是存儲在設備上應用程序包裏
也不會備份到iCloud存儲空間裏
而是存儲在系統內存中
系統可以進行高速緩存資源
並按需加載資源
因此在這種情況下
假如你在這個場景中實際上我們會有更多的空間
而不僅只有三個等級的空間
我們可以有更多的等級空間
假如你不使用按需加載資源的話
當我們來到第四級系統會自動清理
最近使用過的資源包包括你的第一級資源
對於第五級同樣如此
如果用戶有段時間沒使用你的應用程序
以及其它需要下載需加載資源的App
則可進行空間回收
當應用程序再次被使用時
則再次自動下載
說說一些關於 按需加載資源的事
你通過在Xcode中標記資源建立資源包
昨天你觀看了一個簡短演示
今天晚一點的時候將會有一整個環節說明按需加載資源
資源包可以包含任何不可執行資源
應用切割在在資源類型下
資源目錄起作用
通過按需加載資源你可以下載任何的鬆散文件並標記它們
它們會成爲資源包一部分然後從App Store中下載
它們存儲在App Store中
你把它們一起提交到App Store
作爲IPA的一部分但是App Store會把它們分開
並單獨存儲
它們會根據代碼在需要時被下載
它們作爲必需品被回收
它們就像其它內容一樣被切割
因此你可以把資源包放在這裏
實際上 如果你在資源包裏標記資源
Xcode會自動爲你建立
在資源目錄裏面
我們來看下儲存大小
對了 今天下午4：30分
在太平洋大廈會有一個會議
讓我們看看 我們得到什麼種類的儲存程序片切割後
我們得到的程序片平均爲22兆字節
在這種情況下 
我們得根據核心app下載5-11兆字節的內容
而資源本身則是11-18兆字節
關鍵是並非所有文件
同時存在在設備中
所以總量大約有8兆字節
這是一個非常精簡的app
但你可以看到它是一個巨大的運用程序尤其是它有大量媒體資源文件
更精簡app的就會很有幫助
更小的APP更好的使用體驗
有些設備有8GB的空間
我們會小心使用這些空間沒必要用的東西不會佔用你的設備容量
通過app簡化設備就可支持更多應用
更棒的是這同時也意味着更短的下載用時 更少的電線傳送
更不容易超過100MB的限制
這使你下載的應用
這意味着你可以使用
更多類型的設備而不受太多限制
如果你一直很想使用那種
不但可以在大功率設備上運行地很好
而且也可以在低能耗設備上使用的Metal 
有更好的用戶體驗 那該怎麼做呢 
下面這個能使你克服其中一些限制
你可以現在就提交 
提交到Store和用戶下載的體積都變小
這意味着你確實
可以長期利用回收的空間
處理之前因爲容量問題
而不能安裝的應用
這不是說你又得佔據大量的容量 
相反的 這意味着當你面臨容量不夠
而又想放更多的東西進app時可以更自由
現在 我想請我的同事帕特里克·海寧
來告訴你們具體如何做到這一點
謝謝你 安德斯
我是帕特里克·海寧
我想談論一些關於資源切割的更多一些細節
它的工作原理是什麼呢
好吧 非常高興告訴大家
資源切割和App簡化已經無縫
整合到Xcode的開發 輸出和工作流之中了
也許你們已經很熟悉
如何開發應用
這一切的改善
可以讓你真正實現資源切割和App簡化的關鍵在於
我們爲產品開發和資源目錄設立工作流 
並同時考慮了各種不同設備和變量從而方便開發應用
那麼你需要做的是什麼呢
如果你已經習慣使用iOS的app 亦或者
習慣開發iOS應用
那麼你們會使用1X 2X 3X原圖 
適應各類尺寸的屏幕 
甚至可能早就在使用
iOS 7的資源目錄了
這一些確實也是你必須要有的
什麼是資源目錄 它們有什麼作用呢
資源目錄就是根據
資源的相關設備特徵
進行資源組織的功能
因此非常重要且具有針對性
這裏需要重點強調一下
爲了能利用應用簡化功能
你的資源必須處於資源目錄內才行
我們無法處理鬆散資源
這不能限制這項強大功能
以後我們會進行改善
需要重點說明
所以我剛剛提到了設備特徵
因爲在資源目錄內
資源可以用設備關鍵組特徵進行優化
這包括你很熟悉的
屏幕分辨率 2X 3X和其他系列設備
不管它是ipad還是 iPhone
更新Xcode 7的iOS 9系統後 
我們在設備硬件特徵的基礎上
開發了一組設備特性
尤其是圖片處理能力和內存級別
這確實引起了兩個需求
第一 我們可使用的一系列設備
性能特點更多強大
從最低終端到最高終端設備各有不同
單一的資源並不適用於
所有類別的設備
對於最終的使用體驗會是怎樣真的很難達成一致
這對高端和低端的內存級別都是一樣的
新的設備特性使你能給不同的功能制定相應的資源
資源目錄裏又有哪些內容呢 
好吧 目前爲止 
在我們所推出的資源目錄中 最熱門的是image
這主要是你應用裏的原圖資源
特別是位圖資源和載體類型
你的圖片可以是png jpg或者pdf的格式
這些會先壓縮以節省空間
編譯成最佳的傳送格式
然後通過UI工具包的API傳送到你應用 
iOS 9和Xcode7更新後有了
新的的數據類別
至少一個新的數據類別
那就是Name數據
這是用來做什麼的呢
Name數據讓你可以隨心所欲的儲存文件內容
現在 可能你們會擔心的事情是 
我們只是根據內容
對資源目錄進行簡化 
你們會問如果我嘗試簡化非Image類的資源
這正是Name數據的作用所在
Name數據讓你可以在資源目錄中隨意放入文件
並根據硬件水平進行分類
正如我之前提到的
然後 在運行時 可以使用OS X系統UI工具包
新的NSDataAsset類別在app內進行內容檢索
側邊欄在這裏
資源目錄的特徵 
正如我描述的Name數據和其他特點
在OS X系統中也有
我們不會在OS X系統中
進行應用簡化但是在目錄裏儲存資源製品格式可以
用於從所有目標上獲取資源 
包括OS X系統和Watch
所有這些功能都能起作用
API在所有平臺均可使用
簡化只適用於iOS系統
側邊欄結束
在Xcode 7 和iSO 9系統我們引入了另一種新的數據類型 
就是Sprite地圖集
這意味資源目錄和SpriteKit已經實現整合
讓你們可以使用一般的方式可以讓你分組圖像資源
以一種普通的方式在資源目錄內組織 
並重命名爲Sprite地圖集 
另外可以在創建時候
自動創建紋理地圖集
從而在圖像資源裏檢索SK紋理地圖集類型
一項關鍵功能是 
如果你已經在iPhoneiPad上完成常規組織 
那麼它將自動創建
編譯好的紋理地圖集的簡化版本 
然後作爲簡化資源 
與AppStore上和我稍後會談到的其他工作流簡化的版本一致
那麼我們如何從資源目錄中進行app簡化呢 
好的 這實在很簡單也許大家已經猜到了 
每個資源目錄中的資源都有標記 
用於描述資源相關特徵以及有用的特徵
在創建之時當我們建立流程後
這些特徵會在資源
和相關簡化app變體之間建立路徑
就是這麼簡單我想要在這裏重點說明一下
資源目錄已經存在好一會兒了
它們可以讓你能夠在運行的時候
選擇適合請求該資源的
設備的正確資源
在簡化app變體路徑方面
也是基於同樣的算法和一樣的選擇標準
如果你的app今天在不同設備上工作正常 
那麼app簡化也同樣工作正常 
因爲它們使用同一個原理
好了我之前提到單詞組織 
我想要再強調一下
有效對資源目錄進行歸類絕對是關鍵所在
爲什麼呢？ 
因爲對資源進行
大規模標註意味着程序片變體中的冗餘數據就越少
你不會獲取app變體產生的額外數據 
而這些數據在目標設備上運行時
是不會使用到的
例如 即使應用之前可以正常工作 
但是如果只是在一臺設備上使用那麼就沒有必要保留通用資源了 
考慮一下比如你的iPad上的應用有自己的UI彈出按鈕
是在iPhone上的應用
卻不會在你的iphone上顯示出來
通用資源的話可以使用可以顯示正常
但是現在我們可以重新訪問並進行歸類 
這樣就無需傳送到iPhone版本的應用上 
因爲在那裏沒法顯示好的
以上是基礎的知識
關於該系統工作的原理
我們來舉個例子 說說具體的工作流程
以及如何產生影響的
首先說說創建
你是如何創建資源目錄的
創建資源目錄內容的首要方法是
通過Xcode上的資源目錄編輯器
在IDE上使用用戶界面很簡單
或許你對此很熟悉了
創建一個新資源
只需增加一個新項目
你可以看到這裏有個值域
這裏 你可以看到數據集 圖像集 Sprite地圖集
以及其他平臺的其他數據類型
當你將這增加到項目中時
你可以看到在左邊有一個組織數組和範圍
顯示的是設備特徵你可根據這些特徵進行分類
並顯示你想要的資料豐富性
將資源放到合適的源中
然後離開 前往種類完成了
好極了 用起來很簡單
倘若你的團隊無法在資源產品裏使用Xcode將會怎麼樣
倘若這是個遊戲工作室
在現有資源工具鏈和管道上投資巨大
但對於創造出合適原圖的
內容工程師或設計者來說現有的資源工具鏈和管道
並不適合使用Xcode這將會怎樣
很高興的告訴你們我們考慮到這種情況
我們仔細地設計了資源目錄特徵
與簡化相配使之適用於這些情況
我們特別地將它設計成
很容易從現有資源管道
導出圖像集和數據集
如何做到這點呢
我們將通過XC資源來源工件格式進行講解
我很高興的告訴大家我們將進行文件編制和發行
使得外部工具鏈
可以很容易的執行這個格式
這算不上什麼格式
因爲它只是JSON標記上一個簡單的文件夾結構而且很容易配合使用
我想要強調的是
這並不是下面提到的這種格式先創建 然後導入Xcode中
然後就變成了一個項目工件
這是源工件格式
在創建時 
Xcode創建系統就開始用來
處理和產生最後執行成品
我們來看看它的細節信息
來看看先前說過的例子AirPlay圖像原圖
在磁盤中看起來是這樣的
事實上 這就是格式
非常簡單
它所包含的是一個文件夾命名約定
包含資源的名字
這是使用UI圖像名稱在代碼中
重新得到的名字
隨後文件夾裏包含了單獨原圖源
我想指出的是儘管在這個特別例子中
用了一個衆所周知半標準文件命名約定
來顯示比例係數和設備習語
但它並不需要
任何特別的文件命名約定
你可以使用任何工作流程
或工具鏈或任何你所喜歡的方法
爲什麼可以做到這樣
因爲在這個設計中
有重要的第三元素即contents.JSON文件
contents.JSON文件
包含所有資源標記信息
並將信息連接在一起
並告訴系統
與特別資源有關的特性
來看看
先前在Xcode編輯器上顯示的AirPlay圖標
現在看起來是這樣子的
你可以看到 它非常的簡單明瞭
這只是單獨圖像中的一個數組你可以看到單獨文件名稱
然後是設備習語和比例係數標記信息
這些屬性你看到的這些關鍵數值組
就是將被記錄在
SES源工件格式中的東西
舉個高一級的例子 名字數據
我們叫它數據集不出所料 看起來很相似
再一次 裏面有單獨源的文件名
然後是通用型標識符
和存儲器的屬性
或顯卡未來集類
你可看到 它真的很好配合使用
你可以看到它是如何操作的
如何命名文件名和屬性
這也是爲什麼不管你在
數據集和圖像集加入什麼名字沒有關係
重要的是contents.JSON是正確的
你可以用它來做什麼呢
這是用來做什麼的呢
我來舉個例子
假設有用Xcode創建的圖像集
我將展示的這個假設工作流程
是在PhotoShop中使用PhotoShop CC生成器
假設你的設計者創建了漂亮的原圖
他們決定今天iPad是藍色的
iPhone是紅色的
這只是我們工作的方法
設計者有時會這麼做
他們有漂亮的主文件
並在這裏陳列所有這些變體
事實上 
他們用生成器工作流程創建了主文件
打開圖像資源生成
由合適的命名約定
構造他們的層級清單
默認層級直接導出到一個圖像集
有一個生成器的特別版本
他們小心地進行擴展
這是產生contents.JSON假想事例
這就是將從PhotoShop工作流程中輸出的
對於以前使用過生成器的人來說
他們很熟悉照片佈局了
這是資源文件夾
裏面有生成的圖像集 
所有不同的原圖實體和contents.JSON
我們要做的僅是拖出圖像集
並將圖像集放到XE資源文件夾下的文件夾中
之後就可以進入競態
就這樣簡單說來就是帶Xcode項目的動態集成
唯一的要求是
從一個Xcode項目文件水平來說你的項目必須有XE資源文件夾
這是唯一的要求
裏面的所有內容
都必須有一個任意層級 任意結構
它必須符合圖像集和數據集
你可以按照任意深度進行嵌套
你可以使用受它支配的自己的文件系統組織
假設你正確授權圖像集和數據集
在創建時Xcode將遞歸地下降層級
發現所有圖像集 數據集和傳播地圖集並自動進行創建 
現在你知道怎麼創建資源目錄了
現在進入下一步 創建
或許最普通最重要的創建工作流程是
坐在座位上在Tether設備的app上作
或者你在模擬器上操作
此種情況下如何簡化應用呢
很高興的告訴你
創建和運行工作流程
可自動地爲現有有效運作目標簡化資源
在Xcode中
意思是說 每次進行創建
事實上它僅會對
你正在使用的目標設備分析
產生並自動創建適當的執行資源目錄
所有的模擬器和設備均支持這功能
這是利用應用簡化
絕佳的範例
這個功能是
由已經在目標編輯器資源目錄顯示的
新創建設置激發或控制的
僅在有效資源下啓用創建
這很方便
倘若 你試着解決
一個由應用簡化引起的問題將會怎麼樣
倘若簡化全面影響了特定的目標設備情況會怎麼樣
爲此 你可以不斷撥動開關
此創建工作流程的其他優勢是
極大的加快重複編譯
或增量編譯
在應用內容繁多的時候尤其適用
它只處理並只與當下適合目標的源進行匹配
當它創建一個應用的普通版本時
並不需要像以前一樣每一個都需做完
另一個重要優勢是
對於一個特別設備或一組設備
可以很容易測試
若你想要理解
目錄變動對簡化輸出的影響
整體創建應用的大小或用戶體驗的其他方面的影響
你可以迅速變動這些目錄創建並運行 
隨後通過在其他設備和Xcode中運行目標間進行轉化
來檢查其他設備可以極其快速簡單地測試這些變動
創建就講到這裏 接下來是什麼呢
傳播
這是簡化應用的基本步驟
現在 有很多方法
可用來傳播你的iOS應用
使你能夠傳播你的iOS應用
最大且最有效的一個 
當然是你的終端用戶 顧客
通過AppStore購買正在使用的用戶這是最核心的 
安德斯提到這是你提供普通IPA的地方
商店做了這個工作
處理了所有簡化變體
當用戶購買app時
它將從商店裏自動選擇適合設備的變體
下載並進行安裝完成了 完全自動的
不需要操心什麼
在發佈應用前
你或許也想爲beta C測試者創造完全相同的體驗
也可通過TestFlight支持測試傳播我們將通過簡化傳播
然後 當然有ad hoc和企業傳播
這是個常用方法可用來在你的組織中傳播應用
或在你的組中進行QA測試其他事情
這是傳播極其重要的一種方法
我們也在其中創建了簡化支持
最後 還有已經更新的Xcode服務
和Ecos服務器
用來支持傳播簡化應用
隨後 我會講到更多細節
上述方法的自動化程度非常高
你無需做太多事情
等下要我要講的是
Ad hoc企業解決方案
這裏 你需要自己託管傳播流程
你可能需要理解他們是如何放到一起如何運作的
我們現在就來說這個它們是如何運作的
Xcode中已增加的一個功能是
現在 對於特別設備
你可以從組織器中導出
若你將測試一個創建或要將創建切換到
制定設備 非常管用
你可立即創建一個IPA
用於直接指向到特定設備和爲特定設備提供的組織器
未來 我們將爲你提供一種方法
可在所有的兼容設備上
導出所有簡化變體
爲應用的所有可能支持設備提供完整的傳播單元
這很重要
你或許不知道或能夠爲
所有的設備生成所有的簡化變體
你想要獲得全組信息
事實上 它將做的是
處理你所有的普通app創建存檔
生成適合所有不同兼容設備的
所有簡化變體並將它們放入一組產品中
現在 你有很多應用
你或許會問自己 何才能爲設備
獲取一個正確的應用 是個大問題
將app發送到企業和adhoc設備
最常用的方法是
空中安裝
隨後我會講到這個化配合使用並會講到如何與簡
第一步保存爲ad hoc或企業傳播
這很重要 包了傳播顯示選項
左下角的複選框
這是用來做什麼
它的作用是
當Xcode在生成IPA的導出集時
它將爲它所生成的每個app變體
生成一個含有URL的顯示清單
它將通過app變體的支持產品類型
更重要的是 將編插入索引由不同產品門類區分支持
取決於那app的門類
影響在於
當設備試圖安裝app時
使用空中顯示PO清單
它將會過一遍清單爲設備 
產品類型找到合適的URL
並對其進行安裝 
這就是它的運作方式
概念上與簡化應用商店實際所發生的相類似
但所有的這些移動塊
都是由你通過Xcode進行生成並在Web服務器上進行託管
倘若更進一步將會怎麼樣
這就是Xcode服務器持續集成服務所做的
Xcode服務器所做的是
爲創建代管和傳播簡化app
包括代管按需資源包
將我剛描述的原理
變成完整解決方案
非常簡單
Xcode服務器你在Xcode中創建集成盒
與Xcode服務器展開配合使用
項目自動創建應用
生成變體生成顯示P清單
甚至在你在Xcode服務網站上
選定設備和選擇特別創建的地方
覆蓋web服務你所需做的
只是點擊安裝按鈕
以及我先前所描述的對顯示P清單進行定位
牽引合適變量的所有原理
它是自動進行的
將設備指向Web服務並運行很簡單
我鼓勵你來看一看這個 尤其是
感受一下所有的一切是如何運作的
我鼓勵你看看
這個模式和你在進行託管可能用來創建你自己的企業傳播工作流程
或ad hoc傳播工作流程的模式是相同的
所有的這些你都可以自己創建
整合各功能的Xcode服務
是使用空中顯示的簡化app變體的
一種流線型的安裝方法
漂亮簡單的解決方案  一站式
好了 我們剛講的是
如何創建資源目錄從而進行app劃分
我們講了
它如何與你的創建工作流程相結合
我們也講了傳播的不同方法
app簡化如何與它們相互作用
現場交給安德斯
請安德斯爲我們做總結
謝謝你  帕特里克
好了 在這部分 我們看了 
app傳播工作流程是如何運作的
以及如何改進app簡化
你可以幫助它變得更加有效的方法
當你恰地標記資源和傳播特徵
對於你的工作流程來說在測試及提交到App Store
這意味着什麼在這裏需要進行一些操作
你所應做的是
不斷開發資源的定製版本
太好了 爲你想開發出最好的app
並在所有的設備上運作良好
使用app簡化
現在稍微放寬了上傳大小限制
每個用戶將只獲得他們所需的
不斷開發資源的定製版本
使用資源目錄使你的資源系統化
正如帕特里克提到的 你可以在其中放置數據和Sprite地圖集
且這些可根據設備進行改變
同樣地使用Xcode測試你簡化app變體
這個現在變得很重要
因爲我們是
根據每個設備所需進行資源傳播的
正如帕特里克所提到的你可通過使用Xcode目標做到這個
使用Xcode服務器創建多樣的簡化變體
並在真實的設備上進行測試
充分利用按需資源 資源進行標記
使它們成爲按需加載
資源包的一部分
我將檢索數個地方以獲取更多信息
一是app簡化指南
app傳播指南中的章節
可在Apple的開發者網站上找到
另一個是資源目錄格式文件
這個將會放到Apple的開發者網站上
我們有相關聯的會議
第一部分已經有了
你可以通過錄像進行了解
另一點是SpriteKit有什麼新特性
這個在20分鐘後
會詳細討論
它側重於按需資源部分今天4:30在太平洋大廈進行
我鼓勵你們參加這會議
明天1:30在Mission會議上
將詳細討論DemoBots
我們有許多實驗室
歡迎來我們的實驗室學習更多信息
繼續觀看WWDC的其他部分