高级 NSOperations开发WWDC app
早上好我叫菲利普·豪斯勒
我在框架组从事Foundation相关工作
今天我们要讲的是NSOperation
和NSOperation队列
这是两种极其强大的类
可将你的应用
从直线性运行任务
转变成为以目标为导向
和功能异步概念的混合模式
现在 我很肯定大家都已经看过这个应用
WWDC应用广泛使用
NSOperation和NSOperation队列
使我们能够
一直通过从互联网下载内容与数据库甚至是
出现提醒或展示视频的概念同步
来完成各种不同的任务
大卫·德龙将带我们深入了解
NSOperation和NSOperation队列
以及如何使用它们执行实现WWDC应用
大卫
菲利普
我叫大卫·德龙我是Apple的框架专员
同时我也是WWDC应用的首席工程师
大家对WWDC应用应该都很了解了吧
今天 我们会讲到WWDC应用
和NSOperation
三个主要方面
首先 我们回顾一下NSOperation的主要概念
如何理解它的API
以及充分利用它的强大的状态机的优势
然后 我们将看看除了基础知识外
WWDC应用还面临的挑战
以及我们如何解决这些挑战
最后 我们会讲讲
部分已经提供给你们的样品代码
首先 我们来看看一些核心概念
不管任何时候一旦你用了NSOperation
你也总是会用到NSOperation队列
关于NSOperation队列
可以说其实就是一个高级调度队列
相信通过使用多线程优化技术
你们对调度队列都很熟悉了
现在 我们还提供基于NSOperation队列的包装器
然我们可以获得一些功能
比如说
NSOperation队列可以很容易取消
还未执行的操作
虽然你可以通过调度块来取消
这是很机智的做法
但是NSOperation队列可以让操作更简单
另一个
你可从NSOperation队列获得的是
一个属性 叫做最大并行操作计数
为更好的理解它
我们先来看一个小动画
若将NSOperation队列的
最大并行操作计数设为1
基本上
就可以将NSOperation队列
做成一个串行操作队列
在队列中加载多个操作
最大并行操作计数为1时
队列将一个一个完成操作
并按照顺序执行
在前一个操作未完成前
下个操作是无法开始的
这是一个串行队列
可是 通过默认
这个属性的数值是默认数值
意思是说和系统允许的一样多
也就是说操作队列可以同时执行多重操作
正如系统资源所允许的那样
在这个案例中
操作队列可能一次执行两个操作
可以改变像这个操作队列的行为的能力
可以说是非常强大的
在操作队列创建时
我们并不需要做决定
这就是NSOperation队列
现在来看NSOperation
既然队列是调度队列之外的高级包装器
我们也可以将NSOperation
理解成是调度块之外的高级包装器
现在 一般来说
NSOperation运行时间
比块的运行时间稍微多了些
块的执行通常只需几纳秒
甚至是毫秒
换句话说NSOperation花费更长的时间
从数毫秒甚至到数分钟
随后我们会讲到这点
NSOperation另一个很棒的地方是
因为它是一个类可以被划分成子类
你也可以自定义它的执行逻辑
为将NSOperation划分为子类
我们来看下它的生命周期
当你创建NSOperation时
它总是从一个被称为
待定状态的状态中开始
所以 当它被初始化
并被放到操作队列时这就是操作
现在 在某一时刻
操作已准备好可以开始执行
它进入就绪状态
准备就绪后
操作队列将完成队列排列
并开始执行
正如我所说的这执行可能用掉数毫秒
或数分钟 甚至更长时间
执行结束后
操作进入完成状态它的完成状态
非常的简单
操作可以做的另一件事是
可以在任何时候
进入取消状态
我们来看看取消
NSOperation中的取消被定义为
一种简单的布尔属性被取消
理解这个属性的关键点是
它只改变
属性的状态
当你取消操作时所出现的只是
布尔数值快速翻动
当你在划分NSOperation子类时
取消NSOperation意味着什么
取决于你的意图是什么
比如说
你的操作正在执行网络任务
取消操作意味着
取消网络通信
又或许
你的操作在执行一些数据处理
取消操作
可能就是放弃处理
所以当你划分NSOperation子类时
务必观察数值变化
并在需要作出反应时做出正确的反应
关于取消 你还需要知道
它对竞态条件很敏感
这是什么意思呢
试想一下有个在后台执行的操作
或许在你的UI中
有个取消按钮
可以取消这个操作
若用户轻敲取消按钮
它需要一点时间
将取消信息从主队列
传递到后台的操作中
若在那段传递时间里
你的操作完成执行
那么你的操作将无法被取消
因为一个操作
无法从完成状态回到取消状态
所以知道这点很重要
你试图取消操作
但事实上 有些情况无法取消
然而 如果你不需要取消操作
那就很简单了
你所需做的 只是调用取消方法
这就是取消
现在来看看另一个有趣的状态
叫做就绪
NSOperation的准备就绪就像取消一样
被定义成一种简单的布尔属性即准备就绪
这个属性的意思是
操作已准备好可以执行了
我们来看看
它如何与操作队列中的操作相互作用
再一次我们有了串行操作队列
载入多个操作
所有操作都处在最初的蓝色待定状态
尽管 比如 在这个案例中
第四个操作也在队列里
但是进入就绪状态的第一个操作
才是即将被执行的第一个操作
所以一旦操作准备就绪它就开始执行
随后 当其他操作准备就绪
它们将推进队列 并被执行
在这个案例中因为这是一个串行队列
一次只能执行一个
若两个操作同时准备就绪
拥有较高优先权的操作获得较早执行顺序
随后才是优先权较低的那个
当其他操作也准备就绪了
它们也将赢得队列并被执行
以上简要介绍了准备就绪
那我们可以用它来做什么呢
我们可以用它来创建相关性
相关性是用来表达
操作的严格排序的一种方法
我们要先执行这个然后执行那个
相关性灵活的地方在于
它提供了
准备就绪操作的基础定义
通过默认设置
当操作的相关性完成执行时
操作也准备就绪
该行为是自动的
相关性另一个灵活的地方在于
它们不受操作队列的限制
这是什么意思呢
若你的应用中有两个操作队列
第一个队列中的操作
可以取决于第二个队列中的操作
随后我们会说说
它如何让一些真正强大的模态成为可能
现在 在你的操作中创建相关性
很简单
我所需做的是使用增加相关性方法
在这个案例中
操作B将取决于操作A的成功执行
操作B将等到操作A执行完毕后才开始执行
这是确定的
关于相关性 我们会碰到一些问题
比如操作停顿
如果我们有操作A
和取决于操作A执行的操作B
这没有问题
然而 要是我无意中让A也取决于B
那么这两个操作将无法执行
因为它们彼此都在等待对方完成
既然都在等 那也就是没有开始了
所以 当你在你的应用中
创建相关性时 不要这么做
现在WWDC应用到处都在用相关性
一个很简单的例子当你在你的app上
点击增加到收藏夹按钮时会发生什么
这个很可能你们都做过
当你点击按钮
我们先首先创建一个操作
叫做登录操作
这个操作可确保你
使用开发者的名字和密码登录到app上
接下来我们将创建另一个操作
叫做用户信息操作
这个操作确保你的用户名和密码
比如说 就是开发者的用户名和密码
而不是iTunes用户名和密码
这样你的Apple ID就是开发者AppleID了
现在 WWDC应用的收藏夹
保存在CloudKit中
我就需要另一个操作
确保我们可以获得你的iCloud账号
这是后台进行的
因为我并未请求允许
查看你在app上的第一个和最后一个名字
我们需要确保你有一个iCloud账号
最后
我们创建保存收藏夹操作
这取决于
成功完成关于你是一名开发者的验证
和成功完成
你拥有iCloud账号的验证
这只是一个简单的例子
我们来看看复杂点的事例
当WWDC应用启动
我们需要一堆的设置
首先我们需要下载一个小的配置文件
这个文件将提供一些信息
比如
应用的最新支持版本是什么
有什么特性 等等
所以 文件下载后
我们需要检查版本
确保所运行的版本就是WWDC应用最新版本
app版本检查完毕后
就可以开始下载一些有用的信息
比如新闻标签里的新闻
发布会时间表
时间表下载后
就可以开始导入存放在iCloud中的收藏夹了
以及导入提交的反馈信息
在App中可以看到 另外
我们还可以下载视频文件
所有这些均需要时间表事先准备就绪
最后
我们可以保存NSManaged对象环境
在这里 我们保存了所有的信息
我们来看看
相关性和操作生命周期
如何影响这些操作的执行
我们要将它们
全部移到设定为待定操作状态
现在
下载app设置的第一个操作没有相关性
因此它立刻准备就绪 可以执行
我们的操作队列即将完成
开始执行 随后它将完成执行
现在 当它完成时
版本检查操作
也立马准备就绪
推进队列 然后开始执行
当它完成时
第三个操作也同时准备就绪可以开始执行
它们即将开始执行
当他们完成执行时
越来越多的操作也准备好可以执行了
它们将推进队列 并开始执行
需要明白和注意的一件重要事情是
在所有其他操作全部执行完毕之前
保存环境的操作是
没办法准备就绪 等待执行的
通过使用相关性可以确保
操作按照正确的顺序进行不会出现失控的情况
所以现在 这个准备就绪
可以执行 完成了
这样App的启动就可以持续进行
以上就是关于相关性的内容
总的来说NSOperation是一种极好的方法
可以用来提取代码中的逻辑
通过在操作中放入逻辑
简化逻辑变化
因为我们处理的是单独的工作
很多就像我们处理块一样
作为例子
今年的WWDC应用中
收藏夹和反馈的保存位置
从后端移到CloudKit
此刻 请大家想想
将你的应用从自定义从你正在使用的任何服务上
转移到CloudKit上需要做些什么
获得网络通信的代码的所有地方
服务器供应商复杂事情的所有相关性
如果你突然对这些变得很恐慌
这就是应该使用操作了
在WWDC应用中
我们所有的网络通信都在操作之后进行
这意味着后台将从
使用自定义服务变为使用CloudKit
我们要做的就是重新编写这四个小的类别
这只需要花费我们不到一天的时间
然后还需要另外几天来测试我们的改动
这个过程简单但是琐碎
现在 这所有的一切 也许会令你疑惑
那多线程优化技术呢
多线程优化技术绝对会占有一席之地
事实上当你下载一组示例代码做准备时
仔细查看 你会发现
我们在示例代码中使用了多线程优化技术
当无法完全使用NSOperation时
比如 任何时候 当你需要
从一个队列到另一个队列调用一个方法
你都不需要将其打包进一个操作中去
你需要更快更简便的方法
如果你使用信号量
或调度组来做实现
这些都很适合使用多线程优化技术
所以 那些就是基础技术
现在看看更高级的技术
现在 我们意识到其中一件事在WWDC应用中
我们实现了UI交互
但仍需其参与在操作链中
比如 身份验证
我们之前谈论了保存收藏夹
我们需要确保你已经登录了
但如果你没有呢
那么我们意识到我们可以设置UI元素
UI功能存在于我们的操作之中
比如 在WWDC应用中
向上滑动的身份验证对话框
其实是NSOperation
无论何时 当你通过WWDC观看视频
我们都将其压缩为“观看视频”操作
所以 我们所要做的就是
用适宜的视频资源创立一个操作
并将其放置在我们的操作队列之中
而后一切就都将井然有序了
更甚者当你看见WWDC应用的报警
这也我们将UI放置到
NSOperation内部的一个良好应用
当我们处理不同模态UI时
我们发现了潜在原则
所以 当一个UI逐步接管了整个应用的资源
这时候可以进行打包
一起打包进NSOperation之中
重申一下
当你第一次使用WWDC应用时
你会看见一个对话框
询问我们是否能够收集一些
你使用应用时的简单数据
对话框出现时
这个UI警报管理者
事实上开始在NSOperation内部运行
或者是登陆页面
如果你尝试添加一些东西到收藏夹
或对某个板块留言反馈
这都是NSOperation
接下来我们会遇见的是
有时我们想执行简单的区块逻辑操作
但我们还想参与
内部的机械操作
所以我们转向区块操作
NS区块操作
以及我们创建的其他自定义操作
这就是一个NSOperation在执行区块
也许你会问
那么 如果NSOperation是区块的一个抽象概念
为什么我又会回过头来
在NSOperation内部使用区块呢
那是因为通过
在NSOperation内部设置区块
你可以获得
许多NSOperation的好功能
比如相关性
让我们看看我们能用它来做些什么
看看在WWDC应用中当你点击反馈按钮时会发生什么
好的 离开反馈按钮
想执行一个segue
想呈现一个视图管理器
好让你给出五颗星表示非常满意四颗星表示满意
我们会执行这个segue
所以我们将这个segue设置在区块里面
然后将这个区块
放置进区块操作
现在我们允许你离开反馈如果你已经注册完这个应用
所以我们需要验证用你的开发者账号已经登录
就像我们添加收藏夹时做的那样
为了验证你拥有一个开发者账号
我们需要确定你已经成功登录
所以通过执行区块操作内部的segue
我们能保证
在你登录之后
不会再呈现登录页面
这是非常强大的功能
我们在描述一个非常复杂的行为
一系列的事情
都是依靠使用操作和相关性
在我们编写WWDC应用过程中
我们注意到在某些情况
我们在重复大量的同样操作
比如 我们已经看到
注册和用户信息操作过几次了
那么我们就想如果能
创造一种自动操作方法
不是很好吗
所以我们提出一种方法
形成其相关的操作
换言之 我们想表达
就是我们不想执行那些总是
需要执行的事
所以 让我们在此看看
收藏夹和Cloudkit
或下载一个通行证
亦或看看
WWDC应用中需要登录的情况
所以 当你点击“添加收藏夹”按钮时
我们做的就是常见一个单一操作
来添加收藏夹
这将打包某些信息
如这个会议的标志
以及你是否想添加到收藏夹或进行移除
一个布尔标识符
现在 这个“收藏”操作
需要获得允许才能执行
所以它自动的形成了两个相关性
一个用来确认你是开发者
另一个保证我们获得iCloud账号
现在 这个操作保证了
你作为开发者能确保登录账号
所以形成了相关性
从而确保你登录成功
这样我们能够
简单保存应用密码
我们只需要创立一个单一操作
然后它会自动形成相关性
可能稍后 如果我们想要移除代码
那么需要登录才能添加收藏夹
我们只需移除一小段
执行收藏操作的代码
那么该相关性就被移除了
这样就移除了整个应用中的相关性
我们并不需要检查
每一个“添加收藏”位置
并改写它们的代码
现在 我们还想要确认
其他条件也得到满足
我们需要能够将准备状态进行扩展
在允许执行操作的情况下
进行扩展
我们可以举出一些示例
比如我们只想在确实连接到网络的情况下才执行操作
比如 如果你尝试
在手机处于飞行模式的情况下添加收藏夹
当然 我们不会使用执行CloudKit操作
我们还想要确保
在抵达某个位置后执行一个操作
那么 我们需要有能够表达该意图的方式
又或者 我们只想在实际登录到app后
才执行特定的操作
因此 通过扩展这个概念
让操作已经准备就绪
我们可以更有效地执行操作
因此希望大家不会遇到这样的错误
如果遇到了 说明操作出错了
因为操作还未准备就绪执行
这种情况下
由于无法连接到网络
因此 扩展该准备状态
非常有用
另外 我们还有一些操作
我们可以同时执行
因此 我们想如果需要不断
创建相同的操作序列的话那就很麻烦了
是否可以开发一个操作
然后在其之下
创建相同的操作序列？
一个普通例子是
下载文件然后
另存到本地空间
我知道大家
对这个非常熟悉了
那么 让我们看看我们可以如何合并操作
从而简化流程
假设我们有一个一般类的数据操作
然后它和其他东西
互相关联
现在我们想植入一个想法
好的 我们想要它做两件事
首先要包括另一个NSOperation
然后这个操作要执行下载任务
这是个简单独立的工作
然后它会创建第二个操作
用于下载另存
然后和下载操作相互关联
这样另存操作总会在下载之后执行
现在 通过将这两个操作打包
成一个更大的操作
我们可以轻松修改
我们数据的来源
数据的格式
甚至是处理错误的方式
而我们只需在一个地方
修改即可
在输入操作中修改因为这里是app唯一可识别的位置
现在 你没有一定要提前清楚
你需要执行的操作是什么
在WWDC应用中
在编译时间 我们无法知道
保存到CloudKit上的收藏夹有多少内容
这样我们需要一种方式
让我们可以进行动态操作编辑
因此 我们开发了封装器称之为抓取收藏夹操作
而且由于我们正在包装器下使用CloudKit
我们需要执行CK请求操作
因为CloudKit是基于NSOperation开发的
这样 我们先要执行第一个请求操作
也许WWDC上有你收藏的一个会议
因此该操作会指向那里
并获取更多的收藏内容
因此 我们现在要继续执行请求操作
直到我们接收到反馈
说明我们已经全部获得了
因此 通过使用组合模式
我们仍可以通过一个“抓取收藏夹”
操作来表达我们的操作链
但是在其之下
实际上是按次序执行多个操作
现在 在代码中的情况看起来是这样的
我们的操作有一种执行方法
而且这是所有操作的起点
因此第一次
抓取收藏夹操作开始执行后
这里会进行初始请求
我们要为你查找收藏的会议记录
这样我们会发出请求操作
然后提交给这个方法称之为执行请求操作
这是执行请求操作
请求操作完成后
我们需要先检查
看看是否有错误
如果有 我们要中止流程先处理错误
如果没有错误 但是存在指针
这是CloudKit通过指针告诉我们
还有其他有待抓取
那么 我们要使用该指针在序列后
创建下一个CK请求操作
然后进行半递归式调用执行请求操作
这是我们执行多个请求操作的方法
另外 如果没有指针或者错误出现
那么是CloudKit指示我们已经抓取完毕
这样我们可以开始导入
已经下载好的记录了
在开发过程中
有几次我们遇到视图故障
我们认为是视图故障
现在 也许大家都有在使用app过程中
警告跳出的经历
在你准备点击关闭的时候
另一个警告又跳出来
这时你想 哦 好吧这是发生了什么呢？
也许又在你要点击关闭的时候
又有一个跳出来
因此画面总是反反复复
你甚至不确定现在看到的是第一个警告
还是第几个警告
我们是如此想要避免这种令人厌烦的情况
另一个我们想要的是
我们想要确保
你只会一次观看一个视频
这个问题WWDC应用现在还无法明白
如何正确处理
因此我们想要确保无论你做什么
我们都不会允许你这么做
另一个我们想确认的是
我们不会一次试图
加载多个基本数据库
因此 我们想出一个方法用于描述互斥性
这种方法是在一个时候只执行一种特定的操作
现在 也许你在想 哇这个想法真复杂
具体我们如何办到呢
实际上很简单
现在我们回到那个警告的例子
假设我们创建一个操作用于显示警告
并警告用户
然后我们将其放到操作序列中
也许需要等待一下让其他操作先完成
也许操作已经完成了一半我们不确定
但之后发生了些事
而且我们决定再创建另一个警告操作
好的 我们要做的就是
让第二个警告操作
与第一个相关联
这正是跨队列相关性强大之所在
因为不论警告操作
在哪个队列中执行
只要第二个操作与第一个相关
那么第二个操作只有在第一个操作结束后才可以执行
而且 由于某些奇怪原因
我们决定创建更多的警告操作
更多的警告操作 只要我们设定
下个操作与之前的相关即可
就像一张时间关联表一样
我们可以确保操作
将彼此产生互斥性
真是功能强大啊
通过使用相关性
我们可以确保应用的行为正确
我们可以确保用户
不会同时收到多个警告
我们可以确保用户
不会一次试图观看多个视频
我们可以确保用户
不会同时加载两份数据
因此 以上是我们遇到的一些挑战
并尝试在编写WWDC用的时候解决
还有更多
但我们认为这些真的很酷
而且我们会想到更为简单的方法
去解决我们遇到的问题
那么 我们现在谈谈样本代码
在WWDC网站上的样本代码部分
你可以找到一段样本代码
叫做高级 NSOperations
这是一个简单的app
用于显示最近的地震
但是这个app是
完全基于NSOperations的
而且该app的操作
是我们之前
从WWDC的app中提取出来
然后放进去的
这个app中的这些代码
实际上已经有好几年的历史了
非常稳定
现在 初级类别就是样本代码
这是NSOperations的基础子类别
在样本代码中
我们在才操作中加入了两个关键特性
首先
是条件
之后我们会谈谈这点
第二个概念我们称之为“观测器”
现在在样本代码中
我们已经有许多不同种类的操作代码
我们有群操作
方便进行更多的内部操作
另外 在样本代码中我们还有操作子类别
允许你获取NSURLSession任务
并在NSOperation中进行处理
这样你可以让不同任务之间进行关联
或者进行条件设定 或者设置观测器
这里有一个示范操作用于请求你当前的位置
有时候这非常有用
我们要做的就是稍微等待一下
这里甚至还有一种操作
可以向用户显示
带按钮和块处理程序的警告
因此 NSOperation的样本代码中
有非常多的子类
现在 操作有了条件的概念
一个条件指的是一个协议
我们定义的协议
这样 对于操作而言
可以表示它是如何生成相关性的
如何定义互斥性以及如何扩展预备状态概念
这样 我们在样本代码中
提供了一些条件
其中之一是互斥性通用条件
这种条件表示一个操作
与相同类属的其他操作
是互相排斥的
这里我们还有可达性条件
这样通过一行代码
你可以方便地通过操作表达
只有在网速很好的情况下才执行
另外 我们还有非常多的许可类条件
比如
只有在使用特定的Cloudkitcontainer的情况下
才执行操作
或者当我们使用日历
或者使用照片库或者使用通讯录
或者其他你设定条件的情况下才执行操作
这就是条件操作
最后是操作观测器
操作观测器也是一种协议
通过这种方法
在操作过程中
操作会注意重要事件的值
比如开始执行 终止执行
以及如果该操作决定
生成稍后被执行的另一个操作
从而生成一个警告操作
另外我们有许多观测器示例
比如超时
通过在操作中简单加入超时观测器
这样观测器会进行观测确保
操作在你设定的时间范围内
执行完毕
并且 如果超时
那么观测器将自动取消操作
我认为一项利器的是背景观测器
当你将背景观测器设定到一个操作中后
观测器会观测UI应用的状态
如果应用进入背景
那么观测器将
自动启动背景任务
然后在操作完成后
自动终止任务
这样 如果你正处理某些重要操作
比如也许你正上传数据到服务器
而你不想被终端或者暂停
一个方法是你可以
添加背景观测器到操作中
这样可以确保你在背景有足够多的时间
这样你可以完成该上传操作
另一种方法很酷
是网络活动指示器观测器
你可以将这个观测器添加到操作中
当其启动后
观测器将在状态栏中
对互动指示器进行数值递增操作
然后当操作停止后
进行数值递减操作
这样你可以同时进行多个网络操作
并且添加其中一个网络指示器
或者观测器后
观测器会自动
显示和隐藏网络活动指示器
从此 管理这种复杂的事情
都可以完全交给操作了
而所有这一切都可以自动进行实在是酷
另外在样本代码中
我们还提供了其他的观测器
比如能够添加任意代码块到这三个事件中
然后让其自动重新执行
以上就是样本代码的情况
乍看之下 代码很像一个简单的应用
但是仔细一看 里面很精妙
我真的推荐大家下载看看
那么 总之
使用操作可以对应用进行逻辑抽象处理
通过在操作中加入你的逻辑而且之后很容易进行修改
比如我们如何将WWDC应用跳转到使用CloudKit
这只是一个简单的改变
使用相关性可以表达应用之间的关系
这样可以很容易确保特定行为之间的关系
比如A行为之后必须是B行为
另外
操作让你可以描述复杂的行为
比如互斥性或者整合
这对于操作来说很简单
而且NSOperation能够允许你花费非常少的心思
就能执行非常强大的功能
因此 我们未大家提供了相关的会议
接下来的会议是
“建立响应以及GCD的高效应用”
我们期待大家也参与GCD
这是一项非常好的实用技术
因此 我鼓励大家出席会议或者观看视频
看看如何在你的应用中使用GCD
另外 如果你想要了解更多
关于我们的框架是如何使用NSOperation的
你可以查看今年的CloudKit提示和技巧大会
或者去年的“高级CloudKit”大会
另外 我们在WWDC网站上提供了样本代码供大家使用
建议大家去看看
我还想鼓励大家阅读开发者库中的“线程编辑指导”部分
这里有很多有用的信息
方便大家使用NSOperation
如果你需要任何技术支持
我们建议大家可以在开发者论坛上发帖
请教或者联系开发者技术支持部
非常谢谢希望大家继续享受接下来的部分