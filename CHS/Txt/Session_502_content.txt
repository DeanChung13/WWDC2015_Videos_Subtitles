HTTP实时流媒体播放的扩展
大家早上好！
欢迎参加今年的全球开发者大会
这是您参加的第一个真正的讲座环节
因此欢迎您！
今天...谢谢你
今天我们将讨论HTTP实时流媒体播放的
一个非常激动人心的扩展
你知道我们一直在关注究竟是什么阻止了你们
以自己喜欢的方式使用HLS来部署内容
而内容保护
是指让您的用户观看或收听您的内容
却不授权使用它
一直是一个真正有难度的问题你们中的很多人曾经不得不设法应对
而且随着比特率的升高以及分辨率的上升
那些需求将只会增大
那也是我为何终于能够高兴地宣布
FairPlay流媒体的诞生
那么它是什么？
首先它是我们最出色的内容保护技术
它的封装方式允许您将其用于保护您的HLS内容
现在 它已不是新事物了
我们在过去三年一直在
与一些主要内容合作伙伴进行合作
帮助它们在app或Apple TV上部署FPS
现在它已被用来保护大量的内容
包括一些世界上最热门的电影和电视节目
现在您可以将它用于iOS及Apple TV和OS X上
当然在我们的移动设备上 电池寿命是王道
所以当我们设计FairPlay流媒体的时候
我们所做的每个决定都是建立在为您实现良好的电池寿命的基础上的
我们选择的编解码器我们选择的加密技术
我们的实施方式甚至我们利用的硬件
所以您会有极大的安全性也会有很好的电池寿命
而且它也与AirPlay无缝集成因此它会伴随全面的保护
不过您可能会说：“好吧 那听上去很不错
但是我有很多内容
我的意思是Apple将如何让我为这个FPS付费？
它将是按照影片收费？按每次播放还是统一价格？”
我们反复尝试最后我们确定采用统一价格
零
如果大家每年向我们支付99美元的开发者费用
您将不必再向苹果公司支付一分钱就能尽情使用FPS
那么现在 观众中间任何从事市场营销的朋友可能会说这样的话：
“哦 那听上去棒极了！”
而坐你旁边的工程师可能会说：“不 不 真的吗？ 它是什么？”
好了 那么
它实际上是非常简单的
我们所做的就是着手解决了DRM系统
最重要的组成部分 即密钥保护
那么FPS在本质上及实际上是一个安全的密钥传送系统
它是一种将密钥从您在互联网上的服务器
转移到设备上的方式
让您在该设备上使用密钥同时不让攻击者获取它并解密您的内容
在设计方面 我们让它容易使用和采用
我们认识到你们中的很多人
尤其是当您以流媒体提供高级内容或订阅内容时
您已经在与某种安全后端对话了
因此我们设计了FPS
让传送这部分工作成为不可知让您使用的协议成为隐蔽
如果您拥有安全连接您可以极其容易地采用FPS
如果没有 你也可以使用HTTPS它是一个很不错的选择
最后 过去很多朋友问我关于HDCP方面的事情
FPS就是这个问题的答案
如果您的设备连接了电视或其他外部输入
它一定是HDMI
而HDCP一定是活跃的
否则任何FPS内容播放都会失败
没有例外
当我们设计它的时候
我们知道有很多商业规则或逻辑的区别而每个人都有自己的口味
而我们不希望建立一个庞大而复杂的东西
并迫使你们进入我们的盒子
所以我们建立了这个密钥传送机制
我们并不是创建了一种权利表达语言评估工具
或者是一长串您需要遵守的策略
而那意味着如果您的商业逻辑要求那些东西
您是可以掌控的您依然是守门员
因此 一旦您为媒体堆栈赋予了一个FPS密钥
毫无问题我们将播放它
我们将保护密钥我们将去播放它
如果您需要实施某种策略实施
或进行用户认证或对每个设备插槽进行管理
那么您就可以在FPS上那么做
而且它将是非常容易整合的
那么现在让我们讨论一些具体步骤
那就是FPS为您提供的基本功能
让我们讨论一下您采用它需要采取的步骤
主要有三步
第一步也极可能是最重要的一步是
由于FPS是一个在线密钥传送协议
您必须在线获取您的密钥而一旦播放停止密钥即消失
您需要把我们所谓的“密钥安全模块”集成到您的密钥服务器中
因此那是最重大的一步稍后我们将详细讨论那个话题
但是第二件事情是您需向您的应用添加一些代码
称为AV Asset Resource Loader Delegate
那段代码负责将来自AV Foundation的密钥请求传送到后端
然后将您后端发出的响应并返回给AV Foundation
最后您需要做的是准备您的内容
而那意味着您需要使用AES示例加密法将其加密
巧的是 这是我们三年前引入的
因此与最初HLS使用的传统整段代码加密不同的是
这种加密法仅加密每段示例代码中小的片段
这确保了我们能够在系统基本水平上进行解密工作
因此您需要选择一个内容密钥
将其存放在您的后端数据库内
对您的内容进行加密
然后将对那个密钥的引用加入播放列表
以便当您的那小段代码接到对密钥的请求时
能够知道向后端请求哪个密钥
那么我接下来将要做的是进一步详述这三个步骤
在那之前 我想介绍我的一位同事
他是FairPlay团队成员之一
詹保罗 法索里
欢迎！
谢谢你 罗哲斯！
大家早上好！我叫詹保罗 法索里
是Apple的FPS工程师
继罗哲斯所做的概述我想跟大家谈一下
设计一个FPS系统需要些什么
我想讲的第一件事
是我们所谓的FairPlay流媒体证书的目的和重要性
接下来我将识别系统和数据流中的活动要素
然后我将讨论苹果公司将在您构建的东西中会提供哪些东西
而在您将构建的东西中我们将先从服务器端讲起
以及如何将Roger刚才所讲的密钥安全模块集成到您的密钥服务器中
我们将讨论如何测试集成
接下来我们将讨论客户端以及如何将FPS集成到您的应用中
然后我们将讨论您将对内容制作工作流的更新
以便将内容加密 并确认您将对工作流的更改
那么当我们讨论FPS证书的时候
我们有那些证书是为了
能够将您的FPS部署和那里已经存在的部署区分开来
之所以需要它们是因为有了它们
您的客户才可以在他们的设备上实际播放他们的内容
出于这些原因保护FPS证书资产资源就十分重要了
不管是当它们被部署在服务器上
还是在您的服务器上被使用
要确保它们得到保护
那么现在继续往下看图表左边我们已经有了服务器组件
也就是您的密钥服务器
它内部已经集成了FPS密钥安全模块
密钥数据库里面含有用来为您的流媒体加密内容密钥值
而在右边我们有客户端活动要素即是您的应用
罗哲斯刚才讲的AVFoundation Delegate和AVFoundation
已经为我们提供了部分操作系统即我们的iOS或Mac OS X
那么让我们讨论一下 当用户在您的应用中点击播放的时候会发生什么
第一件会发生的事情是
您的应用将调用AVFoundation
并为其提供即将赋予加密内容的m3u8 URL
AVFoundation将从互联网抽取那个播放列表并对其进行解析
当它注意到内容被加密的时候
它将回调您的Delegate告诉它需要一个密钥以便播放内容
Delegate将进行处理它将调入AVFoundation
并请求后者创建所谓的服务器上下文播放
在FPS术语中我们将其简称为SPC
而那是什么？
它是一个Delegate的密钥请求它将用post方法提交给密钥服务器
以便完成其工作并传递内容密钥
这里需要注意的重要一点是
SPC是在客户端上的FPS传递上下文中创建的
而那是一个特定会话上下文
只有那台设备能够创建它
也只有那台设备能够为其处理来自于服务器的响应
它是和设备以及会话绑定的
因此当您的服务器准备利用KSM
来破解SPC队列请求对其格式和加密方法进行验证
并在密钥服务器数据库中查找对应的内容密钥时
它将把那个内容密钥值打包为我们所称的内容密钥上下文
或简称为CKC
而您的app delegate将要执行的最后一步是
将那个CKC返回给AVFoundation
那么此刻设备已经有了它对内容的解密和播放所需要的一切
那么现在我们已经谈及了FP系统中的活动要素和数据流
让我们谈一下Apple将供哪些东西
当然我们提供AVFoundation
在iOS和Mac OS中AVFoundation的一部分是
您将用于执行delegate的API
我们提供的另一个工具是developer.apple.com上的
FairPlay Streaming SDK
那个SDK包含一些特定的内容
首先它包含一个协议规范
里面有关于SPC和CKC消息编写格式的全部详细信息
和您将使用哪些加密原函数来处理密钥请求 及生成密钥响应
它包含一个在网络控制中心的对密钥安全模块服务器的引用实施
它包含一整套能够用于服务器部署的服务器测试矢量和验证工具
它包含一些客户端示例内容
而它包含的最后一点内容是一套客户端示例代码
因此如罗哲斯指出的密钥服务器的首要职责是加密
以及对SPC密钥请求的验证
然后它将根据资源识别符查找客户希望播放的内容
然后它将生成CKC响应
它是您的密钥安全模块中
将发生的第一个和第三个操作
您有两种执行该操作的方式
您可以使用FPS SDK中提供的协议规范
从零开始执行这个逻辑系统
或者您也可以直接采用C参考实施
并通过您自己选择的语言
或直接将其集成到现有密钥服务器中而对其进行定制化处理
那么在执行完集成之后让我们谈一谈您将如何测试KSM
我们建议您做的第一件事当然是
使用我们提供作为SDK一部分的测试矢量
来验证KSM将生成的响应的正确性
而您执行此步骤的方式是使用我们提供的SPC测试矢量
将它们提供给KSM执行
然后运行由KSM通过验证工具产生并输出的CKC
以确保它们不管从加密的角度或格式的角度都是正确的
需要注意的是
我们在SDK中提供的测试矢量是基于开发专用凭证的
它们是专为您的开发工作而存在的
它们不可被用于向活跃的客户设备部署解决方案
为了向活跃的客户设备部署解决方案您将需要专用于生产目的的FPS凭证
那么既然我们已经谈了服务器端让我们谈谈客户端
将FPS集成到您的应用中需要些什么呢？
您应做的第一件事是
用AVAsset注册一个AVasset Resource Loader delegate
而那个delegate的职责有三个方面
首先它要做的是生成SPC
这需要通过以下两步完成
首先您将为密钥请求处理
“should Wait ForLoading
Of RequestedResource”命令
然后您将做的第二步是调用
“VAsset ResourceLoading Request
Streaming ContentKey Request Data
For App”
以便生成SPC
一旦您获得了那个 SPC您将把它传送给您的密钥服务器
而当您的密钥服务器做出响应时
您将把CKC响应提供给
“AVAsset ResourceLoading Request”
那么我们就完成了服务器端的执行也完成了客户端的执行
让我们谈一谈工作流更新中内容制作
为了将内容解密您将必须做些什么？
您应做的第一件事是
去从developer.apple.com获取HLS加密规范 
不管比特流是音频还是视频
它将为您提供您需要了解的对比特流本身加密的所有细节
一旦您对比特流加密后您将必须更新m3u8播放列表
首先您采用的是何种加密方式
这是通过将m3u8列表中的Method标签
设为Sample-AES而实现的
您应向客户端发送的另一个信号是
您希望用FPS来传递密钥的事实
实现的方式则是对m3u8播放列表中的另一个标签即密钥格式标签进行更新
应把它设为com.apple.streamingkeydelivery
事实上我们三年多前就开始部署了
这意味着目前在解码器方面有相当多的第三方支持
您可以选择搭配其中之一作为替代而不是您亲自更新工作流
一旦您更新了您的工作流
这里是您如何检查加密工作流的正确性的方法
您大体上可以做两个比较
但它们都是以同样的方式开始的
开始时先从示例SDK选取一段明文内容
并使其运行通过您的新工作流
然后将其与SDK中相同加密资源对比
也可将其与在HLS媒体文件切割工具上通过的该资源加密版本进行比较
之所以第二点比较有意思有吸引力是因为您也可以使用自己的内容
而不是示例内容完成检查工作
那么现在我们已经讨论了
客户端开发和服务器端开发所需的工作以及对您的工作流的更新
接下来我们讨论功能性本地回放
现在我想很大家谈谈AirPlay中对FPS的支持
我们对FPS和AirPlay的支持是通过AirPlay视频路径实现的
就是说当您从应用中的本地回放过渡到Apple TV时
实际上是Apple TV从互联网上读取内容 是吗？
它不再是发送方的设备了
这里的好消息是
在您的应用中或服务器端都不需要写任何额外代码了
KSM支持来自于Apple TV
或来自于iOS设备传入的密钥请求
需要明确的是 SPC仍是Apple TV上生成的
而您的密钥服务器上生成的CKC响应也将在AppleTV上进行处理
然而app仍然负责Apple TV和密钥服务器之间的消息
因此必须有发送设备的参与
这给了我们与本地回放同水平的安全性
因为SPC和CKC消息都来自于并终止于
实际播放内容的那个设备
在这种情况下是Apple TV也即AirPlay
需要注意的一点是
实际上FPS内容将不会以AirPlay镜像模式执行
那也适用于在您的本地设备上
播放的FPS内容所做的屏幕截图和音视频录制
在我们谈了关于如何在您的app上或AirPlay上
在本地消费内容之后
我骄傲地宣布：
今年我们将增加对El Capitan的FPS支持
这种大家支持且集成到网站的方式
是通过加密的媒体扩展
它们是HTML5的一部分是一个W3C规范
您可以从它们的网站下载它
您与EME集成的方式是
将您的JavaScript格式密钥传递代码写到您的网站上
我们在SDK中提供了一个这种实施的例子
它更多地是一个小片段
这里的好消息是不管是在KSM端或AirPlay端
都不需要任何新的代码
它是开箱即用型的
且写好了JavaScript代码后它将对一切都是完全支持的
现在让我们谈一下
您为了在网页上支持FPS而将要写的JavaScript代码
您要做的第一件事是将m3u8 URL设为
HTML5视频标签的来源属性
正像您为一个非加密内容所做的那样
然后为WebKitNeedKey调用添加视频元素Event Listener
当被触发的时候
那个Event Listener将把EME内容加密模块设置到FPS
它还将在video/MP4上创建一个keySession
以便在密钥系统和您的密钥服务器之间传递消息
您将web kit key message
向那个keySession添加Event Handler
那个Event Handler负责把SPC密钥请求传送到您的服务器上
然后通过更新密钥会话处理CKC响应
在数据流方面我们在左侧有非常类似的活动要素
我们在右侧有同样的活动要素
我们现在有Apple提供的Safari以及EME堆栈
在Safari内我们有您的网站
及您将在网站上支持FPS内容播放和新写的JavaScript代码片段
让我们讨论下当用户在Safari中点击Play会发生什么
那么当用户点击play时将要发生的第一件事是
m3u8将在操作系统中点击EME和AVFoundation
而EME将会注意到内容已被加密
这将使它触发Web kit need key message
您的事件监听器将收到这条消息
然后您的事件监听器将创建密钥会话
并将等待Web kit key message
后者又将触发Event Handler
而Event Handler将接收到SPC
并将其传给您的密钥服务器密钥服务器将对其照常处理
包括提取内容密钥和创建内容密钥响应
然后将那个CKC传回给JavaScript代码
后者再将CKC向下传递返回给EME层以便播放
正如罗哲斯刚才所说
我们从最初部署该解决方案到现在已超过三年
这几年间我们学会了一些如何解决FPS集成问题的秘诀和窍门
而您可能面对的典型问题
如果您的集成工作不幸出错的话是内容不播放
那么您要怎样对那种情况进行调试呢？
我们建议您做的一件事是...
而且这仅限于调试目的我们不建议您在生产环境中这么做 
那就是将您在m3u8播放列表中的密钥格式设为identity
而不是com.apple.streamingkeydelivery
这有什么作用呢？
它将同样的内容传送到客户端
但并不是用FPS将内容解密而是用明文AES密钥解密
而我们最终会是两种情况之一
第一种是您的内容仍不播放
这种情况下很有可能是内容制作问题
而那些问题通常分为四类
或者是您的加密样本存在问题 
如果是那种情况 我建议您参考HLS示例加密规范
它可能是PAT/PMT音频设置问题
那些是您需要对采用FPS编码和加密的音频流采取的步骤
需要对一些元数据进行更新
可能是这样的情况您使用的编解码器不被支持
而且如罗哲斯稍早提到的
目前我们在FPS中支持的是H.264 AAC 以及加密的AC3
最后 有可能您将在非HLS片段上重置您的内容密钥
那么我们建议您将密钥在最细粒度的HLS片段上重置
或者您也可以转换比特率时更改内容密钥值
如果在您将密钥格式标签更新为identity之后
您的内容已经可以播放但可能面临密钥传递问题
如果那样的话您要做的就是跟踪我们刚才所考查的
图表中的数据流并确保SPC由客户端正确生成
它被传送到服务器您的服务器能正确无误处理该密钥请求
您的服务器在数据库中查找正确的密钥
而且服务器能够将内容密钥封装为内容密钥响应
而且客户端能够正确无误地处理那一响应
既然我们已经考查了在Apple生态系统内
消费FPS内容的各种方式
我想把舞台还给罗哲斯让他为这节讲座做一个总结
非常感谢大家为此付出的时间
非常感谢谢詹保罗 法索里
那么让我们在这里快速地总结一下
面向HLS的FPS
为您提供业内颇具优势的HLS内容保护工具
您在iOS上 Apple TV上以及在OS X上都能使用它
自从iOS 6就开始提供了因此已有相当程度的兼容性
在Apple TV上也是如此
OS X仍较新
您可以在之后的实验室活动中跟我们聊聊
我们将向您和盘托出您可以把它用在什么地方
它已被深度集成到OS内部
意味着它能够向下兼容到极低的版本
而且我们也尽可能确保其安全性
它的电源效率也达到了我们能够达到的极致
而且它有极佳的电池寿命以及高度的安全性
而且它支持我们所有生态系统特性
比如AirPlayHDCP HTML5
而且随着不断推出新特性我们将持续改进它
那么下一步是什么呢？
第一站是在
developer.apple.com上最新的FPS门户
它现在就在运转中所以您可以去那里看看
而且您还可以从门户下载SDK您可以查看概述文件
它会让您对FPS的细节有一点更深入的见解
而且通过那个站点您也可以申请生产目的的开发者证书
它们对实现iOS设备或Safari
上的来回播放是必要的
我应该提到的下一件事情在那个站点 在登录页上
你们中间的某些人可能并没有一个现成的后端
或者一想到将FPS集成到后端就被这个想法吓到了
那么在那个登录页面上我们有一个小小的清单
列出了我们的集成合作伙伴像Irdeto 像Adobe
它们已经为希望使用FPS
保护HLS内容的朋友建立了一些支持
我建议您也查看一下那些合作伙伴
如果您觉得在FPS设置及如何使其为您工作方面
一点帮助的话
我觉得这是很容易做的
但并不是每个人都是业内人士
因此如果您需要的话我们会为您提供帮助
此外如果您想让HLS和FPS开始工作
但是感觉仍然存在问题或者您已经尝试过且遇到了一些问题
如果您不是在WWDC上
那么对您来说最佳的第一站就是我们的开发者论坛
而且我们实际上已经建立了目前处于测试阶段
但是我们已建立了一个新的论坛它是专门面向FPS的
因此请查看一下这个论坛
如果您遇到了困难或者是有什么问题
很可能其他人也有同样的问题 同样的困难
而你可能通过查看论坛就能找到答案
如果那样做失败的话
还有您的非常友好的社区以及开发者技术支持代表
将乐于为您提供帮助且收费低廉
我想就是这样了
再次感谢您的光临！
希望您在大会期间开心！