应用内苹果支付
大家好
欢迎来到WWDC欢迎来学习应用内苹果支付
我叫尼克我是iOS应用和框架团队的软件工程师
我将邀请理查我们将一起谈谈苹果支付
现在 希望你们已经非常熟悉苹果支付了
或许你已经使用过或许你已经使用苹果支付到商店进行购物了
但你同样可以在你的应用内使用苹果支付
这就是我们将在今天的环节里讨论的内容
这是一个会超过一个小时的环节
请把你的手表设置为静音
你不必站起来
我们今天将说及四个主要的部分
因此我们首先要谈的是苹果支付到底是什么
我们将谈谈你如何在你的应用中使用苹果支付
还有更重要的是为什么要在你的应用中使用
然后我们将说说结构
技术的角度而言苹果支付是如何完成支付的在那里发生了什么接下来呢
紧接着我的同事理查将出来与大家谈谈关于设计问题
如何让你的应用为苹果支付做好准备
以及如何让应用在视觉和感觉上给人带来好的体验
在那之后我想我们将深究一下Xcode
然后我们将看看我们如何在简短的几行代码中迅速
且轻松地在我们的应用中设置好苹果支付
我想会很有趣
现在让我们开始吧
什么是苹果支付呢
如何在你的应用中使用呢
苹果支付是一种在应用内运行的
具有隐私性和安全性非接触式的支付方式
它允许触摸付款你可以用来购买实体商品和服务
这是一个来自Groupon的例子
苹果支付有许多好处无论是对开发者还是用户
对于用户来说苹果支付是容易使用
你不需要重新输入任何付款或联系信息
你不需要记住几个月前在网站上创建的密码
它们已经在那里准备就绪了
而且很安全
我使用Touch ID支付
这真的很好用而且最重要的是很私密
卡号不会告知商家
相反 你发送一个带有验证码的设备号
它只对当次购买有效
因此它是绝对安全绝对私密的
所有这些综合在一起不仅让你受益也让开发者受益
因为由于你没有获取真正的卡号
你也无需处理它们
如果你以前从事过电子商务我确定你知道
所有你要处理的问题例如实卡信息
因为苹果支付是如此易于使用
你将会看到更高的转换率和更快结账速度
它是如此容易你甚至不需要用户注册
他们仅需打开应用就可以立即开始购买
而不需要一个现有账号 
而且最重要的是用户非常喜欢苹果支付 
它们也喜欢应用使用苹果支付 
他们会充分利用苹果支付
你真的不需要我来打包票
我们继续说说成百上千中应用里的仅有几种 
已经在商店内使用苹果支付
并且它们已经取得了一些惊人的成功
首先 我想要说说StubHub
它是一个很棒的苹果应用
你可以在手机上直接购买入场券
它们与苹果支付相结合并且它们发现 
使用苹果支付用户交易比普通客户
交易频率高出20%
这是一个很棒的结果
另一个很棒的苹果支付应用是OpenTable
这周你就应该使用这个应用
你不仅可以预约也可以到饭店
在餐桌上用手机直接支付你的餐费
当他们把产品与苹果支付相结合
他们会看到交易量增涨了50%
还有更好的 
我们说说Staples
他们有一个非常棒的应用 
你可以通过手机直接购买所有你需要的办公专业用品 
他们会看到总体转化率增涨 
那就是109%的用户使用苹果支付 
并成功支付
这是一个令人惊讶的数字
应用开发者都非常喜欢苹果支付
我们说说Fancy的CEO乔伊·爱因霍恩
他说苹果支付不仅促成了更多的交易
而且激活了我们最大的消费群
我还可以告诉你Fancy的iOS用户
在所有移动平台的消费将两个因素合并为一
这些客户非常喜欢用苹果支付
来买东西 而且他们想买许多东西
这对你的应用来说是非常好的事情
现在 你们当中一些人可能会想 嗯 
苹果公司已经有一种允许应用在应用内
购买东西的机制它就是程序内购买
关于程序内购买 苹果支付的位置何在
它们有一些不同之处 现在我想让你弄清楚它们 
一个最主要的不同是
它们实际上位于SDK
苹果支付存在于PassKit框架
而程序内购买存在于StoreKit
它们有不同的代码基 
你可以用它们来处理不同的东西
对于苹果支付你将它用于实体商品和服务
我的意思是诸如健身馆会员 
合乘 杂货派送以及在实体店购买东西
包括实体物品
程序内购买适用于程序内的内容
和功能性 程序内货币服务 数码订阅
另一个很大的不同是谁负责处理付款
当你用苹果支付你将通过
你自己的支付平台来处理付款
而当你使用程序内支付的时候 
苹果公司代替你处理付款
并按月将你的余额
和剩余应用交易发送给你
因此这里有一点点不同之处
它们在应用商店指南中也有略微不同
如果你对此感兴趣第29节是关于苹果支付
第11节是关于程序内购买
获取这些指南 看看什么你可以做 什么你不可以做
现在我们所有有安全元件芯片的设备
都可以使用苹果支付
因此安全元件是用来安全储存
你的卡片信息的硬件芯片
这在iPhone 6iPhone 6 Plus
iPad Air 2 和 iPad mini 3上已经实现
所有这些设备都支持苹果支付
直到最近苹果支付在美国可用了
我们昨天宣布它也即将在英国可用
对于苹果支付我们还有长期目标
因此如果你是一个开发者但不是来自
其中任何一个国家 那么仍然值得好好想想
在将来如何将苹果支付
整合到你的应用中
这就是一个关于苹果支付的大体情况
希望我已经成功地说服你 
苹果支付是非常值得你在应用中使用的
现在我想回答一些关于
苹果支付的结构问题 从技术的角度上讲 
支付是如何实现的
关于苹果支付你要做的第一件事情是创建一个商家识别符
我们需要这个 它是唯一能识别你商家身份的东西
现在 你可以在开发者网站
或者通过Xcode属性窗口
设置商家识别符
而且识别符由私人秘钥证书保护
这类似于其他在iOS上的识别符
诸如推送令牌识别符 
或者Wallet AppPass识别符
现在我们运用此证书
对生成的支付信息进行安全加密 
作为商家来说这是唯一的
没有人可以破解支付信息 
这是苹果支付的另一个很棒的安全优势
我们推荐你把它设计成
标准反向域名解析格式
就像其它 许多识别符一样
从商家开始
这是一个我们稍后在样板应用中将用到的例子
这是你使用苹果支付要做的第一件事
一旦我们有了一个商家识别符 我们就准备就绪
可以在应用内启动苹果支付了
你要做的第一件事是调用支付表 
它由我们提供 
它总结了你的应用需要支付的所有费用
然后用户使用Touch ID授权
并且你的应用将收到一条支付口令
支付口令包含所有你需要支付费用的信息
它将被加密通过使用你的商家ID证书
那是独一无二的 只有作为开发者的你可以解密它
然后你可以验证生效并启动处理程序
在你的应用里显示一份成功支付情况清单
那里有许多信息让我们来详细了解
流程很少
我将系统分解为两个部分
iOS和安全元件
记住安全元件是唯一
安全储存你卡片信息的硬件芯片
第一你的应用将会展示你的日程验证流 
你将询问iOS用户是否有任何可用的苹果支付卡片
因为如果用户没有任何可用的苹果支付卡片
或者设备不支持你需要使用传统的验证流
现在假设它们可以然后你将展示苹果支付表
然后你或者iOS将会验证Touch ID是否有效
现在假设是有效的
你将传输一些信息到 
专用安全原件它将安全打包 
所有支付信息
这包括密码文件即付款需要的加密数据
然后会将它们发送至服务器
现在服务器将使用商家识别符
进行重新打包这就是我们所做的全部事情
这是因为我们不想
在应用里推送你的证书
因此我们的服务器按新的路线发送支付
对它进行独一无二的加密 然后返回到系统 
从而你可以将它发送以便处理
现在假设处理成功 
你可以删除支付表
并回到自己的确认屏
我想你们当中的许多人会有疑问  
所有这些都很好尼克 
但是我如何处理支付 
那是如何运行的 
让我们来谈谈你如何获取你的钱
这可能是一个你内心更关心的话题
这里有两个方法处理苹果支付
第一个这个是我们最想向你推荐的 
就是使用一个支付平台
支付平台可以处理
解密并代替你理解密码文件
当你签名后你提供商家ID和证书到平台
平台将为你解密你只需发送一个支付令牌给平台
一些支付平台实际上
在Swift或者C语言上提供一些本地iOS发展配套原件
因此你可以很容易地启动并运行
由于这原因我们认为支付平台对于
大多数开发者来说是首选
许多许多的支付平台已经支持苹果支付
这只是其中的一小部分还有许多其它的我们把她们列成了
清单放在了我们的网站上
这些是在美国的
很有可能你已经使用了这些当中的其中一个
许多英国支付程序已经
可以支持苹果支付
如果你在英国你现在就可以回公司
商量如何使用支付程序
现在 正如我说的还有其它一种方法 
那就是你自行处理支付
现在我们推荐这种方法给你
如果你很擅长处理支付问题并且你有一些现有支付基础构架 
如果你需要这样做 
你可以在自己的服务器上解密支付令牌 
然后发送底层密码文件 
那就是为商家收单者
即收单银行生成的安全原件
如果你觉得不合理再次说明
我们只在你有现有支付基础构架的前提下
向你推荐这种方法 
今天我们不会涉及到解密令牌
但是如果你想了解更多
关于该部分的内容我们已经将一些文档放在网站上 
你可以在网站上查找支付令牌相关文件 
同样今天和明天我们将有工作人员在实验室里 
他们可以回答你们关于自行处理支付的问题
好的 这是对如何使用苹果支付 
它如何完成付款的一点简单介绍
我想我们现在可以看看iOS这边了 
第一步就是要查看设计 
非常重要的是当你使用苹果支付的时候 
要确保你的应用充分利用了我们提供的功能
以及我们提供的设计
关于这方面更多的东西我将请理查
来为你讲讲如何获得苹果支付的最佳用户体验
理查
大家好 我是理查·劳斯我是苹果公司的
一个用户体验专员今天我在这里讲讲
如何在你的应用里使用苹果支付
得到最佳的体验
嗯 正如尼克说的用户喜欢苹果支付 
因为它使购物变的容易
作为一个商家这对你来说是非常好的 
因为购物越容易
交易就越容易达成
现在人们的购买欲可以是很短暂的
因此任何影响交易流的障碍都可能使交易终止
好消息是苹果支付会提供所有
你完成交易所需要的东西 因此你可以消除
现如今阻碍交易达成的许多障碍
没有必要让人们在
购物之前注册一个账号
我想不会有人喜欢繁琐的形式填写表格
你不必担心过时的账单
配送信息干扰或者了解谁购买了什么东西
最近我提出任何时候我要购物
如果应用不使用苹果支付
我就必须经历更新账单及麻烦的配送信息
如果我时间紧迫或者没有心情
填一堆表格我会选择
走开而不是把表格填好
让我给你举一个例子
关于如果没有苹果支付情况会是什么样子的
假设我的狗需要一个新的项圈
我的朋友告诉我这家店
生产很棒的宠物物品
我会下载他们的应用开始找商品
哦 我要做的第一件事竟然是注册
嗯 我的朋友告诉我这边的宠物物品很棒
这对我的狗来说是一件很棒的事
因此我继续并注册
即使是我很有可能收到一些我现在不想要的邮件简讯
啊 下一步竟然是创建一个账号
我还没买任何东西我也不确定是否会买东西
正常情况下到这个点我就会彻底关闭这个应用 
但是因为你们大家都在这里我将继续
我将完成这些
最后 我找到了狗项圈这太好了
我的狗戴上它一定很棒
我开始交易过程
好的 首先是账单信息
有许多类型需要区分我住在公寓里 
所以我要从键盘上输入对应我公寓号的号码
我想要它运输到我上班的地方而不是家里 
所以我也要输入这些信息
好的 配送选项
好的 好的 我将选择其中之一
最后 这里就是我将从我的口袋里
拿出信用卡并输入所有信息的地方
需要六次输入以及一大堆的打字
让我分心的时间太多了
容易被打断 感到沮丧 甚至离开
如果我在我的上下班路上
搜寻这个狗项圈 嗯 当我站在
拥挤的月台上让我掏出我的信用卡
我真的高兴不起来
真的不想这样的情况
苹果支付可以更加快速地完成这些
启动应用
找到一个产品 无需注册账号
点击苹果支付按钮
把我的大拇指放到Touch ID 完成 
两次点击 不需要任何打字
这快多了
因为苹果支付你省去了一大堆麻烦
更少次数的点击意味着更多的销售
接下来 让我们讨论如何使苹果支付整合到你的交易流
第一件要考虑的事是让人们可以快捷地购买物品
你不需要为了开始交易过程
而把所有东西都放入购物车
这是Chairish 我正找寻一些适合我家里的
有趣的东西这些玻璃看起来很有趣
苹果支付按钮就在这里
我不需要把它们放入购物车
然后点击购物车 然后说我准备好要结账了
这种方法减少了完成交易
需要敲击的次数
Groupon采取了一种非常类似的方法
我即将在芝加哥度过几个星期
我正找寻一些有趣的事来做
这看起来很有趣
因此当我点击更多的信息
苹果支付按钮就在旁边
这让我很容易就可以快速购买
因此考虑一下添加苹果支付按钮放在产品详情旁边
让人们可以快捷地开始交易
嗯 如尼克说的用户们喜欢苹果支付
因此如果安装到一台支持的设备上
并别激活一张你接受的银行卡 
很有可能他们将使用苹果支付因此你应当将苹果支付设为默认设置
现在尼克将向你展示
如何在几分钟内进行设置
如果他们没有支持的设备
并且他们没有激活的卡你也不接受 
那就没有必要展示苹果支付按钮或者信息 
仅需像今天那样完成交易即可
但如果他们有 默认苹果支付为支付方式 
然后突出展示这些按钮
现在iOS 8.3苹果支付按钮可以通过API使用
所以你无需担心要调整图形的大小
以及如何嵌入到你的应用
这是非常容易的
当你正考虑你要你要将它们放置在哪里 
他们应该至少与
其他付款方式按钮一样大
更大一点当然更好
这就是Fancy的做法
他们将苹果支付按钮放于添加
到购物车按钮旁边 Shoptiques将它并排着放置
这些都是很好的实现方法
现在一旦你的用户轻敲苹果支付按钮
下一个他们将看到的是付款单 
因此他们可以快速地放下他们的大拇指并完成交易
你不会因为被询问其他任何信息而打断这个过程
只有当你将要销售
即将达成的时候它才会被打断
苹果支付将提供给你
所有完成交易需要的核心信息
有一件你可能需要提前做的是促销代码
或者其他打折代码
在你的应用里找到一个位置
像在家里的地方在那里当某人点击
苹果支付按钮之后它不会打断出现的付款单
好的 我们说了很多关于付款单 
让我给你一些提示 
关于自定义你所需要的东西
当然 你需要付款方式
但你还需要账单 配送
和联系信息如果你使用苹果支付 
正如尼克说的苹果支付是相当安全的
我们希望你不需要
只是验证而收到账单信息
如果系统如果请求的用户仍然可以获得账单
如果你销售实体产品你需要
将它发送给某人你需要一个配送地址
在付款单里更改这些对于用户来说
是很容易的
他们只需轻敲它付款单里就会展示
最近用过的地址列表
并且可以快速添加一个新地址
你之前可能收集了
用户已有的配送信息 
但正如我之前说的 很有可能苹果支付信息
是当前最新的因此我们推荐 ̨你相信它
你可以要求一封联系邮件和电话号码
因此如果你想要通过确认邮件
跟踪交易或者防止任何配送问题 你可能需要一个电话号码 
这些都是可以获取的
在iOS 9你同样可以要求一个联系人名字
让我们假设某人要订一些食物
然后到餐厅里选择
你可能需要一个联系人名字 
当他们到达柜台的时候 你可以告诉职员订单是给哪个人的
现在 如果你不需要
所有这些信息不要提出请求
尊重你客户的隐私只问他们需要什么
Uber只要求邮件和电话号码
他们不要求填配送地址
因为他们不需要它
现在你可以具体说明配送方法
或在付款单中挑选出正确的方法
苹果商店中提供多种多样的配送选择
因此客户可以点击选择
然后可以看见其它可行的选择
那里还有交付预测的位置 
因此你可以帮助你的客户选择合适他们的选项
同样还可以列出配送花费 税收
甚至是负价值物品
如小计后的折扣
现在 这不是一行一行的
某人购买的所有产品清单 
而是加入小计的商品清单
因此在这里你可以看到Keep 是如何列出配送清单
税收和商品小计处理
现在 如果你没有任何这些产品 
你甚至不需要列出小计 你可以只列出总计
这使得付款单简洁 
这样客户就不用花太多时间在审核上 这就意味着更快速的交易时间
如果你增加产品你可以列出它们 
如果你没有只需展示总数
可能会出现一些总数
不清楚的例子
在这些情况下很重要的是
你要有一个清洗的预估
Uber在Bay地区是一款非常流行的汽车服务应付
而且总价直到乘行结束才会被结算
现在 它们处理付款单语言
非常清晰易懂
我发现总价总是在统计时间和距离后可以计算得到
因此如果你正处理订阅
反复出现你预估的付款或情形 
确保你在付款单中使用的语言是清晰易懂的 
因为没有人喜欢后来的惊喜收费
最后 确保你的地址你的公司名
显示在付款单下方的总额旁边
这就是客户希望在
银行费用上看见的名字和总额
因此在这里
我清楚地看到Fancy有一个299美元的费用
再次重复 没人喜欢在他们的银行对账单看到充满疑问的费用
以及让人惊讶的数量
因此现在你应该非常清楚了
这就是自定义付款单
另外一件你唯一要做的事情
是确认交易正如你今天已经做的那样
一旦有客户用Touch ID付款 
拇指打印按钮将会变为已完成状态 
付款单将被确认用户将返回到应用
<br/> 因此你可以让他们安心
告诉他们订单已经在处理 
而且他们会在邮件中收到更多信息
当你正考虑如何使苹果支付
整合到你的应用之中 
尝试将所有的障碍移开进行一次购买
不需要让人们在购买东西前注册一个账号
明显地展示苹果支付按钮
如果他们的设备支持苹果支付而且有你接受的已激活的银行卡
你只要确保你定制的付款单
是合适的即可
别忘记把你的公司名放在
底部的总额旁边然后确认交易就像你今天做的那样
我希望这些会让你在应用里设置苹果支付的时候
有一个好的体验
我今天下午将在苹果支付实验室 
如果你还有任何关于苹果支付的UI问题 
或者你想要更多关于
如何在你的应用里处理支付的建议 我将很乐意为你们解决 
但是现在我将把舞台交回给尼克 
他将向你们展示如何将所有这些放进代码里 谢谢
谢谢 理查
好的 我想我们已经做好了准备看看总体情况了
我想我们已经准备好要谈谈一些代码
这是非常令人激动的
现在我们将建立一个样板应用
它将基于理查向你们展示的应用 
但我将把UI简化很多
因为我们只想专注于代码
它将要求一项付款
它将展示付款单然后处理授权
在我们深究Xcode之前让我们来看看
组成苹果支付的类
我要讨论的第一类
是PKPaymentSummaryItem
再次说明苹果支付存在于Passkit 
因此我们可以在那里找到它
PKPaymentSummaryItem描述你将在付款单上
索价的个别项目例如税收 
配送 或总额
然后你把所有项目综合起来放入PKPaymentSummaryItem
现在PKPaymentRequest是一个对象
它描述你要索价的项目
以及你想如何支付的信息 
还有诸如你想要支持的卡网
你要求什么样的配送信息
如此这类的事
你作出询问并将它发送
到PKPaymentAuthorization ViewController 
这是付款单类
就像其它所有视图控制器
你运用presentViewController进行展示
然后当这些都做完了你将接收到一个PKPayment对象
一个PKPayment对象包含你需要处理
付款的信息
以及展示确认单
或设备回执
可能需要的信息
因此第一件我们要做的事情是
检查设备是否支持苹果支付
我们要看看它们是否有
我们可接受的付款卡
首先 我创建一个paymentNetworks数组
它包含字符串常量你可以
将它用于苹果支付支持的网络
我在这里检查用户是否有任何MasterCard或Visa卡
然后你将这个数组
传输到一个类PKPaymentAuthorization
ViewController
它称为canMakePaymentsUsingNetworks
现在 如果这返回为真你将知道用户
创建了苹果支付
并且他们有与你要求相匹配的卡他们可以付款
如果返回为假你可以把用户
带到传统支付流
现在你同样可以用其它一些方法
我们有一个方法可以测试硬件是否支持苹果
因此你不必做任何复杂的设备检查
你只需要调用canMakePayments 
然后它将回馈给你为真
如果设备有支持苹果支付的硬件
在iOS9中 有一点新的你同样可以检查
银行卡的容量容量主要指的是信用额度
我想这在英国和欧洲是非常实用的
在那里你可能只想对借记卡进行检查或收费
假设用户有一张卡可以用于付款
让我们创建一个PK付款请求
让我们将让付款生效
因此我们想要做的第一件事
是传输我们的商家识别符以便我们知道
如何正确地加密付款
现在你可能已经在开发者门户网站
或者在Xcode属性窗口设置了
如果你使用Xcode你也获得权限
因为所有这些API都授权了
然后你输入一个国家代码
这是一个标准的ISO国家代码它是你的
付款处理器你将进行
收费的所在国家的代码
不是用户或者
货币所在的国家因为有货币代码
用来表示货币在ISO标准代码中同样如此
你可以在苹果支付中收取任何你想要的货币
这里我仅用USD但如果你想变为英镑
或欧元这是很容易做到的
下一步你将提供一些supportedNetworks
supportedNetworks再次说明
它是一个类似canMakePayments的数组
检查你接受的supportedNetworks
在这里我作出一点点变化
我说我可以支持American Express和Visa卡
这里还有另外一个
在PaymentRequest上需要的特性
它起初看起来有点神秘
那就是merchantCapabilities
结果是我们有两种方法生成付款数据
其中一种叫3DS另一种叫EMV
你不需要知道他们是如何运行的
你们中大多数人都会使用3DS 
你应该检查你的付款处理器或者咨询银行
让它们为你进行正确的设置
再次说明你们中的大多数都会用3DS 
但是付款平台或者处理器会给你你需要的精确的建议
3DS标准就点到为止
最后PaymentRequest最后一个也可能是最重要的属性
那就是我们实际要收费的东西
现在在我们讨论它之前我们先看看
一些iOS 9里的新东西
你可以使用merchantCapabilities属性
来允许某些类型的卡可用于付款
这有一些掩码如果你想把卡限制为借记卡
相比于在美国这方案在欧洲更普遍
你可以很容易地做到
因此一个PKPaymentSummaryItem 
描述一些你想要收费的信息
它有一个数量和一个标签
标签是一个字符串
数量是一个类称为NSDecimalNumber
它是一个Cocoa类之前你可能已经发现NSDecimalNumber 
它精确地表示基数10的浮动点数
当你处理财务和货币工作时
浮动点数非常重要
因此这避免了任何基础2的浮点错误
这里有一些很方便的初始化器
它有一些字符串初始化器
它同样有一对初始化器
你可以从另外一个NSDecimalNumber
进行初始化 我将使用字符串
我在这里创建一个总结项目
因为正如理查说的我如果只有一件东西想要收费
我应该只有一个单独的总额
标签是Apple Inc 因为那是将在账单上显示的物品
我从字符串中创建一个数额$349.99
在我的数组中只有一个单独的项目
我将它传到我的SummaryItems
强调说明一下总结项目数组
最后一个项目是你想要收费的总数
这是我们将授权并发送给你的
付款请求很完美
我们为把请求发送到
请求付款授权的视图控制器
这里显示了付款信息 
在应用上是这样显示模块
在iPad上 则是一种形式单是多任务形式单
它将覆盖整个屏幕
如果你有两个并排应用
它们不会同时对两件东西收费
它完全是模块显示的
它的初始化很简单
仅需通过paymentRequest
它同样有个指派我们等会会说到
你展示它就像其它任何控制器
你很有可能想要通过动画进行展示
而且你可能想要使用苹果支付按钮进行展示
现在 从iOS8.3开始我们有这个很棒的类PKPaymentButton
它有各种颜色的预定款式
而且很重要的是它已经完全本地化
因此我们真的推荐你使用
它就像一个UI按钮它是一个UIButton子类
如果你需要8.3版本以下的
在我们的开发者网站
有一些可用的图片你可以使用
在环节的末尾会有一个链接
关键时刻到了让我们看看演示是否能够成功
我们将转换到演示机器
漂亮
好的 在这里我创建了一些很简单的应用 
所有这些样板代码也将在
开发者网站上可以下载
让我们看看它现在是什么样子的
我还没有在苹果支付里执行任何东西
让我么把模拟器弄小一点
一个小的购物应用
你可以看见我获得一些价格和通过苹果支付按钮购买的描述
好的 什么事也没发生
让我们把代码放进去
让我们谈谈到目前为止我获得了什么
在这里你可以看见我有一个canMakePaymentsUsingNetworks
我还有这个supportedNetworks属性
因此我进一步地明确这些
让我们看看那些
这里
你可以看到我支持所有四种银行卡American Express卡
Discover卡 MasterCard卡和Visa卡
如果支持可用我会添加一个按钮
我有这种applePayButtonPressed方法
因此我将添加内容到那里
让我们设置我们的paymentRequest
好的 在我们开始设置
在设置paymentRequest之前我们要再三检查
我们的权限已经设置好
所以它们全都列举在权限里
你可以看见我的有点红
但不用担心
稍后你将看见这是为什么
好的 让我们返回到我们的代码
让我们设置它创建我们的paymentRequest
我们一行一行地看发生了什么
把滚动条向上滚动一点
好的 首先我们创建paymentRequest 
然后我们传输商家识别符
为了方便起见 我将它界定为结构类属
然后我传输必要属性countryCode
和currencyCode 现在在这个情况下我的应用只以USD收费
我同样将它传输到supportedNetworks
现在 我和我的付款处理器对话
它们告诉我应该使用3DS作为我的属性
我已经按如此做了
我也想创建我的SummaryItems
我这里有一个很方便的方法 将它隐藏起来了
但它将创建一个产品
在这个应用里所有的产品都来自appealists
这是一个人为的例子
它将为我生成一个总结版本
我们将更加仔细地看看
好的 现在我已经准备就绪了展示视图控制器
再次说明它被PaymentRequest初始化
并获得一个授权
我的授权方法在这里
我们将再次查看
我只能展示它
让我们运行它
我刚想到某些东西我不知道
你们当中是否有人尝试在iOS8中使用苹果支付
而实际上无法在模拟器上运行
因此我可能会有许多问题
让我们看看
哦 好的 我猜苹果支付现在再模拟器上运行了
iOS 9支持苹果支付
我们将售卖你需要的
各种制式模拟卡
它们隐藏在这里
让我们通过密码付款而无需Touch ID
哦 好的 我猜我又有一个难题
这就是这些麻烦的指派方法
让我们谈谈这里我们还需做些什么
让我们谈谈一旦情况发生我们如何处理指派
因此一旦用户Touch ID 
我们将在PaymentAuthorization
ViewControllerDelegate收到一些反馈
我们将使用这些指派
来确认我们是否收到
付款以及是否可以处理它们
现在 有两种指派方法
第一种方法是paymentAuthorization
ViewControllerdidAuthorizationPayment
你将取回一个PKPayment对象
你返回一个完成处理器一个带有状态的数据块
这个状态会告诉我们你是否可以
在自己的服务器上处理付款
这个情况下我们将在表单上显示一个核对符
或者如果有什么错误我们将告诉用户发生了什么
然后你需要释放付款视图控制器
这会发生在另外一个指派方法
因此你不能在didAuthorizationPayment中
释放视图控制器
你想要指派它
paymentAuthorizationViewControllerDidFinish
现在PKPayment对象
它将取回其它包含PKPayment令牌的对象
在成功授权之后
它将返回这就是你要
发送到付款处理器或你自己的服务器上的
它将获得加密的付款数据
和任何其它你可能需要的元数据
所以 关于配送地址
好的让我们把这些添加进去
我们把它放入到应用中
好的让我们首先做didAuthorizationPayment
现在 我将整合今天的付款处理器
所以 你只需要想象这些完成
这就是我将发布到服务器的东西
我们继续
现在我获得一个应用联线
用于发送确认表
已经定义好了 我必须找到它
找到了 我有一个简单的联线在paymentToken上属性
我们称之为交易识别符
PKPayment令牌如我所说
它包含你需要的付款信息
它也获取一些有用的你可能想要显示在收据中的元数据
比如银行卡名称的净化版本
这个东西称为交易识别符
这保证是唯一的
如果你喜欢你可以使用它你可以在收据中使用它
它对每个苹果支付购买都是唯一的
最后但不是最重要的我可能想要
释放我的视图控制器
我们继续
现在 我发送成功了
但我们有一些其它状态如果你想你可以发送
成功与失败在你尝试授权它的时候
可能某些东西产生了错误
正如我们后来看到的我们有其它的状态
如无效支付地址以及无效邮寄地址
或者没有提供足够的联系信息
好的 让我们运行它
因为我觉得因此我想找铝颜色
这次在WWDC我们没有足够的铝
好的 用密码支付
好的 很好
你看交易识别器这里显示
模拟识别器
这是因为我在模拟器上它返回给我虚拟信息
如果这是一个真的设备
我将有一个真实的交易识别符
我也将它发送到我自己的服务器进行处理
我有一个应用可以接受苹果支付和付款
这看起来我不需要太多代码 对吗
我想十几行就可以了
我的应用里有一个小问题
我购买狗项圈但我不知道要把它们运到哪里
所以我们必须把这安排好
我们必须看看我们如何获得联系信息
你可以在付款请求上
使用一些掩码来请求用户的联系信息
这叫做requiredShippingAddressFields
我们有邮寄地址 邮件和电话 然后在iOS8.3 
我们引入了名字它仅仅是名字
因此如果你是一个共享类应用
你不想收集用户的邮寄姓名
但你想要他们的名字让司机知道如何
称呼他们 你可以使用那个名字
另外你还可以请求账单 账单地址
这是另外一些带有需要的账单地址区域的掩码
对于所有这些联系信息我们建议你
不要请求它除非你绝对需要它
这很重要 用户喜欢苹果支付是因为它快速且易于使用
因此你不要反其道而行
尤其是账单地址
处理苹果支付并不需要该地址
付款过程也不需要用到
出于这个原因我们建议你不要请求它
但是我们明白你们中的一部分人可能会有平台
欺诈系统 现有结构
因此这样的情况下你需要请求
但是请想一想避免的方法
因此联系人信息
与配送成本联系在一起
因为用户可以在苹果支付单里
更新配送信息或许你想要
更新收费的价格
所以你将通过选择性指派方法接收到一个回调函数
paymentAuthorizationViewController
didSelectShippingContact
它返还给你一个联系方式并且它有完成处理器
现在完成处理器有一个状态
所以你可以有成功或无效信息
它将分为两个数组
最后一个数组是PaymentSummaryItems数组
看起来很敏感你可以更新你要收费的总项目
但还有一个数组叫做ShippingMethods
所以苹果支付单也可以展示配送方法及成本
这是一个独立的数组
PKShippingMethod是PKPaymentSummaryItem
的一个子类就像SummaryItem 它有一个标签和一个数量
但它有另外一个字符串属性称为详情
你可以用它告诉用户
送货需要多少时间
这里我创建一个单独的配送方法
把它分配到我的付款请求这样它就会在表单中显示
联系信息
出于对于用户的隐私在这个指派回调函数
你将不会得到完整的未编辑的联系信息
因为用户还没有使用Touch ID
我们把用户使用Touch ID视为
同意信息传输到应用
因此你将接收到城市 州以及邮编代码或者英国邮政编码
或者净化版本的英国邮政编码我该这样说
我们认为这对于估算配送成本已经足够了
例如 在州际或国际上方面
但在最终付款一旦你取得授权
你就可以获得完整的联系方式
现在 这些API 对你来说可能比较不熟悉
这是因为它们在iOS 9 
使用新的Contacts框架
所以此版本中通讯簿已被取消
是的 不用为我鼓掌为Contacts团队鼓掌
我知道我做到了
那些已经远离我们了
我们也在苹果支付中找到代替方案
现在 我们将在接下来的版本中
对API作一点点改变
它们不会一模一样
如果你在线观看影像
查看最新信息的开发者文档
但这里有一个非常简单的例子
说明提取名字和邮箱地址的例子
让我们结束我们的应用
让我们把所有的信息化为代码
我想做的第一件事是请求配送信息
我想要邮政地址
这是我的请求
然后我们需要放入指派方法
让我们找到正确的那个
didSelectShippingContact让我们将代码放入
在应用里我将做什么
我这里可以人为做示例
我将一行一行地带你浏览
我将索要手续费
如果用户选择了一个不在美国的配送地址
那么就产生一个国际手续费
现在这个paymentAuthorization ViewController  
didSelectShippingContact 方法总是被调用
如果用户在表单内有地址
所以如果用户有一个默认地址
或许来自名片因此当表单被展示的时候
你将得到一个回调
我设定了一个配送方法
我将有一个标准配送
然后我将检查地址
现在这里我将用新的联系API来获得地址
关于联系API 我们将有另一场说明
因此不用太担心这个
稍后有机会详细了解
然后我检查在这个例子中地址是否在美国
我说这是人为的原因是因为在iOS上
地址信息可以有许多不同的来源
它可以来自用户在Contaact应用输入
也可能来自Facebook的同步信息
或者其他与iOS系统上的社交网络
所以很重要的是你要确认地址的正确性
不能假设它们永远是一样的信息
所以 为了展示之方便
我要把事情简化一些
之前 我看到我有称作makeSummaryItems的
帮助功能
所以这实际上的功能是如果是国际费用
你可以检查样板代码
并在我的付款项目中添加了手续费
这也是为什么这里可以看到
称为requiresInternationalSurcharge的布尔属性
然后我将返回我的完成处理器成功完成的
这里获得了一个配送方法数组只有一个
以及我的总结项目数组
再次说明你可以在这里返回一个失败状态
或许用户输入了一个你不能配送到达的城市
州或国家这样你可以返回
一个无效的邮寄地址状态
好的 让我们试一下
我已经在我的苹果支付表中获取了一些地址
我获得了一个加拿大地址
它不是在加拿大
我把它放在一起
你可以看到这里有国际处理
但如果我把它变为一个美国地址
你可以发现这里有个副标题
国际处理不见了这是一个单独的标题
在苹果支付单上更新你所有的
配送成本是很容易的它们被列在单独的屏幕上
这里我随便获取一个这里只有一个可供选择
直接从你的表单里获取配送信息
和另一个购买流的步骤这是一个很好的方法
所有的样板代码都在开发者网站上
现在已经可以下载使用
这里还有一些其它东西我想谈谈
在iOS9里我们有一些新的API
其中有一个被称为PKPaymentMethod
它让你可用找到更多的付款工具
我说的工具指的是用户选择的卡
它让你可用做这些事情
比如 申请借记或信用手续费或折扣
再次说明在美国不是很普遍
但适用世界的其它地方
当用户改变他们的支付方法
你将会收到一个指派回调函数
因此我在这里
可以通过确认屏提升检查是不是使用借记卡付款
你可以使用这个API它真的很棒它对你来说可能非常实用
这里有一个警告大多数添加
到苹果支付的旧卡我们不知道它们的类型
因此你将会接收到PKPaymentMethodTypeUnknown
现在由于这款API的主要目标在欧洲
我们下个月将启动英国
这不会是一个问题但如果你是在美国
并且你想要使用这款API 那就请牢记这一点
你需要在这编写代码
我们在PKPaymentSummaryItem上也有了一个新属性
用户或者开发者需要的某些东西
以及能够改变总结项目的功能
我们有两种类型一种叫做最终自解释另一种叫做待定
你可以用它来表示你的收费不是最终的如果你是一个共享类应用
而你不知道用户将花费多少
你可以选择待定类型
现在这个类型的相关文件
将在未来版本中发布我们会再次做出许多改变
在此 如果你是在线观看
请查看开发者文档获取最新消息
我已经讨论过模拟器支持
很重要的是虽然我们已经
为模拟器添加了支持但你仍需把应用放在真实硬件上
如果你有开发者在另一个国家
我想这是一个很棒的特点如果你现在在英国
那么可以马上进行安排和运行了
很重要的是在你来到商店之前
你要在真实硬件上对你的应用进行测试
确保支付可以成功处理
我也想谈谈Apple Watch
当我向你展示硬件幻灯片
你可能在想Apple Watch 有一个安全元件
Apple Watch在WatchKit应用里
不支持苹果支付
然而它可能会使用Handoff 
在Apple Watch上直接触发付款
一旦用户从锁屏上启动应用
你可以直接切换到
你手机上的应用并展示苹果支付单
在应用里我只展示一些样本代码说明一下
我有一个WatchKit拓展
WatchKit在手机上触发付款
如果你感兴趣的话请看一下
实际上 我们也为手表 
打开了PassKit API
如果你想知道更多信息
请观看刚刚进行的关于Wallet 苹果支付的主页的部分
你可以在线观看
总结一下 苹果支付使用非常方便
它具有隐私性和安全性
我强烈建议你使用它
去商店下载应用
我们在商店里有一个很棒的精选部分可以下载
很多很棒的使用苹果支付的应用今晚就试试吧想想它如何和你的应用
融合在一起不仅想想如何提高用户体验
也想想如何改善苹果支付的成果
让你的用户感到满意
我知道他们会很喜欢苹果支付的
我们为你准备了更多的信息
我们有一些文档我们为开发者微型网站创建了一个苹果支付
如果你对安全元件和硬件有兴趣
你可以在iOS安全白皮书上
找到更多信息
它深究了许多我们如何生成这些付款的细节
以及在设备上获取卡的过程
阅读起来非常有趣你可能会想查看
我们还有技术支持
以及开发者论坛如果你有任何问题
你可以跟我们的专员保罗或理查讨论
之前你在台上见过他们
我们的用户体验专员会为你解答任何关于苹果支付的设计问题
另外还有相关的部分
包括我已经提到过Wallet部分你可以在线观看视频
如果你对新的Contacts框架感兴趣
我强烈建议你敢看该部分
时间是在周四3:30
了解我们已经所做的如何让Contacts更方便的工作
最后一点我们有实验
今天和明天下午
有关于苹果支付的实验请来参加
我们将邀请来自服务器团队的人员
回答关于加密系统的问题
我们还会邀请来自iOS方面的人员
我们还邀请一些商业团队如果你有任何
关于如何接受苹果支付以及支付手续的问题
理查今天将在实验室
到时候可以进行设计反馈
非常值得大家过来参加我们将非常高兴看到你们
这是我和理查今天的全部内容
十份感谢
希望你喜欢余下的部分
午餐愉快 再见