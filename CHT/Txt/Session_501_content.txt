大家好 歡迎來到
瞭解網頁開發中WebKit和Safari的新特性
我是布倫特·福安下面將由我帶領大家
一起了解今年我們所取得的新進展
對於我們來說這是尤爲激動人心的一年
因爲這麼多年以來我們只收到你們...
的錯誤報告以及別人告訴我們的一些事情
但是今年 我們有了自己實驗室
讓我們可以對完成的所有內容做測試
試着讓你們用起來更加方便
無論你的主要目標是將Safari作爲網頁開發工具
還是一個更大應用程序中的嵌入式web視圖
我相信你很快就會在演講中
找到對你有用的內容
首先 我會簡短的介紹WebKit
以及它是怎樣應用在Apple的軟件設計中
然後 介紹今年我們在safari中增加的一些新功能
你將會用到這些新功能
最後 我想介紹一下
關於爲iOS和Mac平臺創造的新奇體驗
所提到新特性在這些平臺都是可用的
如果你利用這些優點會令你的網站更加吸引人
有利於瀏覽者瀏覽
現在我們開始討論WebKit
WebKit是我們瀏覽器的引擎
它是一個開源的項目任何人都可以加入
你可能知道WebKit
是Safari的引擎但是你也許沒意識到它
也被應用在其他的Apple應用程序裏通過我們
所做的一系列事情已經得到實現
WebKit也是iOS和 OS X的引擎
它們之間只有很細微的差別
因此在接下來的演講裏
除非我明確的提出新特性
僅在某一平臺可用
你可以認爲它們
可以用在所有的平臺
這裏有一個重點如果你是一個Safari web
開發者或者iOS web瀏覽器的開發者
你可以用我今天要講的全部內容
如果你是一個嵌入式網頁視圖的app開發人員
你會用到我正在講的所有特性
如果你只是從事JavaScriptCore
框架或者OS X自動化工具開發
你可以利用所有的JavaScript特性
這一部分中我們將會講到
這就是我們對WebKit的介紹接下來
將會介紹我們今年開發的新特性
因此我將暫停這一部分的介紹說一下新的佈局
結構和渲染特性
我們更新了一些JavaScript特性
我們讓它支持新的JavaScript標準和CSS特性
這會讓你的樣式表
維護更加容易 可讀性更強
讓我們講一點Safari中
佈局和渲染等特性的改進
更準確的說 我想說的是關於是背景效果的一些改進
在iOS 7的設計中
用戶界面的設計做了一些改變
加入了背景模糊效應
舉個例子 這裏你可以看到主界面圖標
像透過毛玻璃一樣
這樣的疊加增加了一些深度
給你一種感覺這層後面好像發生了什麼
卻並沒有擋住內容 當我們嘗試
通過用戶界面去看的時候
後來在OS X Yosemite中
我們提供了相似的背景效應
我們在搜素側邊欄也做了一點的模糊處理
讓文檔看起來也像透過毛玻璃一樣
這些效果很重要 看起來像是原生系統的一部分
它們就是你想用的一些特性
在你的最終版本的個人網頁 當人們通過Mac 
或者iOS設備瀏覽網頁時
但更加重要的是當你想讓一個嵌入式的網頁視圖
成爲系統的一部分 或者看起來像是原生用戶界面
你怎麼做到的呢？
假如我有一個展示照片的應用程序
顯然沒有很好的方法生成背景效應
像我們之前看到的那樣
我們可以嘗試用半透明的覆蓋層
但是你看到內容與上上面的文字有些衝突
你知道後面的東西會讓閱讀變得更加困難
但是現在我們有了CSS濾鏡包含了模糊效果
我們可以試一下嗎？
當然那是一個不錯的效果
但是它並不是我們真正想要的
它唯一的作用就是清除圖片的背景
除了這點還有很多其他效果
我們通過觀察
發現像你一樣開發者仍在繼續努力實現這個效果
他們會這樣做 有一個這樣的背景圖片
先生成一個完全模糊的圖片
然後被剪裁和移動覆蓋
到想要模糊的元素
這樣做很糟糕我的意思是說我們很吃驚對我們來說
並不是一個好消息讓你那樣做
這就說明還有其他問題我們不能讓這些背景更加靈活
改變模糊效果一件很困難的事
一旦我們這樣做就要重新渲染所有的事情
因此 我們需要一個更好的方法使用背景濾鏡
背景濾鏡允許我們在CSS中指定背景效果
它也被提出作爲W3C標準之一
現在正在審覈中
讓我們看一下它們如何搭配
假如我們想給元素提供濾鏡效果
WebKit將會獲取它的範圍在一個關閉背景
中重新渲染
這樣很有效率但是渲染過程很消耗資源
所以我們要確保不會過度使用
一旦我們有了背景環境
然後將濾鏡應用在上面就會產生模糊效果
我們把前端的內容放在上面
然後我們可以重新合成完整的場景
你就可以得到想要的模糊效果
一旦我們讓模糊效果出現了
就意味着我們就可以靈活的運用
所有的CSS濾鏡
我們做到了 我們可以使用
其他的CSS濾鏡在這個效果上面
我們可以改變顏色
可以將多個濾鏡組合在一起
我們可以同時獲得模糊和灰度效果就像這樣
最令人激動的是我們可以把這些
效果放在在動態頁面上
因此一行CSS代碼可以讓背景模糊濾鏡
用在視頻上面 多麼不可思議
當實現這個功能的時候我很激動 
迫不及待的想看到這些效果出現在你的個人網站
讓我們稍微休息一下
另外我們看到的一些問題是佈局和滾動效果的渲染
你已經看到頂端的iTunes橫幅
如果你試着玩過的話就會注意到當你滾動它時
它會以整個步長爲單位移動在你每動一步的時候
你將得到一個完整的電影標題或者電影截圖
我們在IOS端的圖片app也能做到類似的效果
每次當我們看着一張圖片想滑到另一張的時候都能直接滑過一整幅圖片
而不會出現前一張的一部分和後一張的一部分同時顯示的情況
這種交互對於圖片庫或者其他類似的平鋪內容來說是意義重大的
之前人們都是通過編寫複雜的JavaScript語句
來實現這種滾動操作
開發者們大刀闊斧得拋棄了之前瀏覽器內置的平滑滾動結構
通過人工加入JavaScript語句將其替換成這種逐幀變化的模式
我們知道它的性能代償也是不容忽視的
我們發現這樣一個問題
你不可能每一幀都通過運行復雜的JavaScript語句
來獲得平滑滾動的效果
所以我們需要另一種方式來實現它
那就是滾動界線點
滾動界線點是一種在CSS裏聲明的方法
通過滾動曲線的動畫化來呈現滾動區域
它也是一種CSS標準
可以想象一下我們有某種樣式的一個觀察孔
有一個盒子可以在裏面看到一系列的相冊封面
所以在這張圖片裏面還有許多被相冊封面遮住
看不清的其他沒有顯示在屏幕上的圖片
但是我想循環播放它們一次播放一張
我知道他們尺寸很厚比如說他們都有300個像素
每次我掃過這些內容時
我希望可以滾動播放直到看完一整本相冊
這一行爲可以通過
聲明滾動界限點中的x值來實現
我們會告訴它我們想讓它以300個像素爲間隔行進
並且用設成300的像素參數重複這一過程
這個動畫就是它所呈現出來的效果
我動手指來掃這些圖片
我所滑過的圖片數目
取決於我手指動的力度
但是當手指的動作一點點減慢直到我們停下來時
界面將會停在一個邊界完整的圖片那兒
在源程序中實現這一效果需要兩行代碼
我們可以通過把滾動停止類型設置爲強制來打開這個功能
再聲明一個300像素的重複間隔
現在我操作一個網站給你們演示一下
你們看當我這樣滑的時候 它動了起來
當我輕輕得拉回來並且撒手系統畫面會停留在最近的那個滑動界限點上
所以它們就像是被橡膠綁着彈回這個位置
你可能已經從它的名字裏懂了這些
但是滑動界限點可以作用於兩個維度x軸和y軸
所以到目前爲止我給你們展示的是一個非常簡潔的功能
但它不能很好得處理滾動容器中的內容的大小不一致的情況
所以在我圖片元素的大小不一致時
我有一張大小爲300像素的方形圖片
同時也有一張矩形圖片
這個矩形圖片或者說它的內容
並不匹配300像素的邊界
所以如果我嘗試着滾動它顯示出來的效果就不太正常了
而滾動界限機制可以應對這種情況
如果我們把滾動容器視作我身後的白盒子
這個就是滾動停止終點
我們在滾動圖片時會在這一點對齊
它一般默認位於左上角
但我們可以通過標準的CSS定位語法給它設定位置
與滾動停止終點相伴隨的是滾動停止座標
這些是滾動容器中每個元素的位置座標
它們也都默認位於左上角
所以我們可以這樣說...
在WebKit中我們能使用這個語法
讓滾動停止座標落在每個元素的中心位置
我們可以說我們希望滾動容器的中心能作爲我們的目標點我們的終點
你把它們聯繫到一起的時候
當你用手指來滾動圖片
最終它們能整齊得停在箱子的中心點
實現這一操作的代碼並不比簡單的像素循環要複雜
我們強制把這個功能集成在滾動容器裏
我們把停止點定位在滾動容器的中心位置
然後給每一個元素都賦予了位置座標
在這裏我創建了一個類叫做“photograph”
你知道你可以用它來做你想做的任何事把它定位在中心位置
這就是產生網頁中實際效果的過程
所以對於一系列圖片當我滾動經過它們的時候
我們經常會停在中間位置
接下來有請克里斯上臺
用一個神奇的例子
來給大傢俱體展示一下
感謝布倫特 我叫克里斯·楊是蘋果互動團隊的一名開發人員
蘋果的互動團隊在公司做了許多工作
其中之一就是我們負責你們在Apple.com上看到的許多網頁的內容
所以今天我非常興奮能出現在這裏
因爲我感覺剛剛布倫特展示的許多功能
對於網頁開發者來說是非常激動人心的我也非常激動得希望自己能夠用到它們
來 讓我們開始這裏放了一個小的web app
用來展示一些WebKit的新功能
這裏有一個圖片庫 我們可以上下滾動
你可以看到這裏有許多照片的尺寸和其他的不同
我們將鼠標停在這裏 點擊打開它
它將會在overlay view中打開
使我們能在這些照片中左右滾動
甚至我們可以通過點擊這裏在右上角選擇我們“喜歡的”圖片
這是非常酷的但我想我們可以通過使用Webkit中的一些新功能
讓它變得更好 首先 我想談一下背景濾波器
大家關注一下在app上方的這個位置我們把導航元素固定在這裏
現在它是實心黑色的被固定在最上面
在我們上下滾動時內容就被覆蓋在它的底下
然後點擊進入Safari工具條它就變得模糊
這真的很酷
但實際上我們可以通過給這個元素加一個背景過濾器
讓它看起來更像是UI的一部分接下來我會告訴你怎樣實現它
你們知道我喜歡在編程的時候加很多空格
我將會跳過這裏的UI和代碼向前再向後一點點
酷 現在我打開了Xcode以及我的一個CSS文件
我們將要把一些新的代碼加進這個CSS文件中我要開始了
我要在這裏粘貼一個新建的導航聲明
來指向那個實心黑色的導航條
我們要把背景顏色設置成透明度爲50%的實心黑色
然後我們要加一個背景濾波器來進行10個像素的模糊
如果我們再返回 將會看到
我們新加的這行代碼將會神奇得呈現出來
當你滾動的時候底下的內容會變模糊
而文本依舊很清晰Safari工具條的一切也都不會被影響
我認爲這是非常了不起的
這是WebKit團隊做出的一項令人驚歎的成果
非常厲害接下來我想給你們展示的是滾動停止點
我認爲覆疊圖庫是一個使用滾動停止點的好例子
記住 當我們這樣左右滾動的時候
我們會到達所見內容的左邊
而不是精確得對準我們看着的地方
這並沒有太大影響但我們能夠改善這一點
通過使用滾動界限點來對準它
我們總是能夠看到想要看的圖片
所以我會給你們演示如何實現它讓我們回到之前的CSS界面
我將要在覆疊圖庫裏新建一個聲明
來強制設定滾動停止類型
以及設置滾動停止點x座標讓它重複100個像素的視口寬度
所有的照片容器都是這個尺寸
所以我們再次返回看的時候所有元素都能很好得貼合
如果刷新一下 現在就能非常流暢得
瀏覽這些圖片了WebKit控制的滾動效果已經生效
你們看 我碰到了邊緣它們會彈回到正確的位置
這樣真的非常棒正如你們所知 如果沒有這個功能
就只能用很長的JavaScript代碼來實現它
我迫不及待得想看到你們能用它來做點什麼這真的是太棒了
你們知道 還有一個東西也很流行
就是你們經常會使用JavaScript爲元素添加樣式
那也將是一個關於覆疊的非常有趣的例子...
用masonry圖像庫
當我們上下滾動的時候
我們實際上在JavaScript裏生成了網格
所以能以此改變x軸和y軸的座標個數
我們並不能提前知道每個元素會有多高
但我們可以通過用JavaScript
在滾動界限點設置重複值來實現它
所以在我們垂直滾動的時候
導航欄將會很好得停在這些元素中間
所以你可以總是專注於應該去做的事情
爲了實現它 我們將要跳回JavaScript 在這裏
這是一個新的JavaScript文件
我們將要把masonry圖庫的構造函數
擴展到停止點masonry圖庫
我們將要做以及正在做的主要就是添加進一種新方法叫做設置停止點樣式
通過它我們把滾動停止模式設置爲強制
它將會在y軸設置停止點
並循環y軸上和停止點在同一高度的所有座標點
這是一種我們實例化運行時
在構造函數內部設置的變量
我們要做的最後一件事就是
告訴我們的JS文件去使用它因爲我們已經完成了對它的擴展
只需要把它放在這裏用這個來代替masonry圖片庫
現在當我們更新的時候 你會注意到導航欄非常合理得置於這些元素中
我們可以拋出它它也總會停在一個能適應內容的合適的地方
我認爲這一點非常棒
現在我想重新請出布倫特上臺演講
他將會談一些佈局和渲染的問題謝謝
感謝大家 真是太奇妙了
我想回顧一下我們剛剛講過的一些功能
背景濾波器是非常有效的它們經過了硬件加速
但是又因渲染過程變得難以觸發
所以我們應該認真衡量一下
看看它在你們自己的網站上的運行情況
對於頁面內容和tile內容來說滾動界限是一個福音
但當你想做任何程序相關的滑動時都需要小心
因爲在操作滾動過程時這兩個功能會互相干擾
所以要記住這一點
同時這些會話被封裝進了佈局和渲染功能中
現在我的話題將要轉到
我們今年在做的一些對JavaScript的更新
JavaScript ES6標準非常得奇妙
它通過一些新的方式推進了JavaScript 的發展
克里斯在他的演示中提到了一些
我想講一下 我們今年集成的幾個激動人心的新功能
去年在我們的會議中我們談論過一些添加的新功能
在那之後我們並非原地不動
而是做了驚人的對ES 6的擴展支持
使用了許多東西對象符號和弱集
接下來我要介紹的幾樣都是我認爲非常非常有用的
首先從我最愛的
模板文本開始
你們是否會經常遇到這樣的問題呢
比如當你嘗試着構建日誌字符串
或者給用戶生成什麼東西時
你有一羣字符串塊或者別的東西
想把它們組合在一起
最終你會遇到這樣的舊語法樣例
我曾經苦於太多的時間耗費
用來尋找丟失的連接運算符
或者尋找我忘記加的右引號
所以在ES6引入這一新的模板文本語法之後 我內心的喜悅是無以言表的
我們可以用它建立字符串一些特定的字符串
可以用反引號字符來取代常規的引用字符串
當我們那樣做的時候
那些容易遺落的美元符號 花括號等
就能自動生成了
你甚至可以在語法內部操作
就像在這裏我對兩個數字求
和它們會得到相同的輸出
但我發現第二種更容易閱讀
我已經完全被它征服了
現在我寫的東西全部都會用這種語法
我愛它
今年引入的另一種能讓寫代碼變得更容易的方法
是和對象文字創建有關的
你經常會面對這樣的情況
我們有一些發生器函數
包含了我們想用的變量名
實際上這些變量名是我們想賦予給新建對象文字的名字
所以你會傻傻得重複發送名字 引號 名字
以及類別 引號 類別
人們已經習以爲常了
但當ES6的設計者引進了一種簡寫法
在這裏你可以用變量名創建對象文字
你不需要提供屬性名
它將會使用你所提供的值的名字
在web檢查器模式下
我們可以用它來避免上百次重複
你會發現那真是太有用了
我確定 如果你看一下自己寫的代碼
你會發現許多可以適用的場景
如今JavaScript擁有強大的面向對象的軟件設計功能
但它基於原型的語法
對於那些從Swift或者C++或者其他類似的語言
轉到JavaScript的人來說
似乎有些難以理解
這裏我舉一個用標準的原型語法寫出的多邊形類的簡單例子
在ES6中 引入了一種新的語法
一種基於對象和類的語法
看起來和C++或者Swift很像
允許我們把所有東西封裝在一起
它變得更加好讀也更容易看出事物之間的關聯
這種類語法使用一個特殊的函數以及一個構造器
爲我們進行對象初始化
我們可以把類中的方法定義成對象的一部分
同時它支持繼承我們可以通過擴展關鍵字從已有的對象中繼承
在繼承的時候我們想確保使用超算符對母類進行初始化
我們可以像在其他面向對象的語言中那樣對方法重載
現在它甚至可以支持靜態方法
所以你可以把方法定義在
你不需要使用特定實例對象的類中
最後 這種新的類語法
是和已有的基於原型的語法完全兼容的
你可以直接使用這種新語法對基於原型的代碼進行擴展
不用重新寫任何東西
我認爲這是一種巨大的優勢它是一種你可以立即採用的東西
以上就是我對JavaScript更新功能的簡短介紹
我們今年做了許多關於JavaScript的成果
所以我誠摯地建議你們下載 ElCapitan開發軟件試着用一下
我們已經做了許多年的CSS
從許多造成臃腫式規則的模式中一路走來
今年 我們實施了一些新的CSS標準旨在與此抗爭
使得它的風格更加簡單易實現
這是此類演講中經常會有的一個主題
但我並沒有時間講完我們今年做的所有成果
anylink、解釋佔位符、語言都僅僅是其中的一部分
但我希望你們可以拿到我們的開發器種子 自己嘗試一下
所以我想先講一下
關於最近的一些無前綴的屬性和值的問題
我們對今年這些標準的適用性
以及對一些功能的穩定性都非常滿意
所以我們實現了它們的無前綴化現在你可以在本機格式使用了
同時我們也將繼續支持它們在WebKit裏的有前綴格式
所以你現有的網站也能繼續使用
我們建議你們切換成新的WebKit版本
或者切換成能減少你的新代碼中字符串數目的WebKit版本
我知道把這一令人振奮的無前綴滑動做到頂端是很難的
但是我要嘗試一下
這是一種很常見的需求
來識別出你的網址是否正在被
一個支持特定功能的瀏覽器使用
你是不是會選擇使用特定的功能
這取決於瀏覽器可以做些什麼
讓我們舉個例子
我想對一個網頁使用首字下沉的樣式爲了實現這樣的效果
我想用一個和那個"C"不同的字體
我想在它周圍加間距和額外的填充
我希望它有不同的字號
讓它看起來非常有特色
我可以通過WebKit的首字處理來實現
這是今年WebKit推出的另一個新功能
但是如果瀏覽我網頁的瀏覽器並不支持它
那是非常可怕的...我的意思是說那是一大損失
如果我知道它的最終顯示效果是這樣
我將永遠不會使用那種字體我也不會在它旁邊留間隔
如果我知道它並不能呈現我想要的樣子的話
我根本什麼都不會去做
所以在以前 我們會用一些這樣的代碼
來測試瀏覽器 問它
欸 你能支持首字放大的格式嗎？
如果你能支持我可以做一些額外的工作
遍歷DOM 找到一些我想添加樣式的元素
然後應用這些東西
好 那將需要運行大量的JavaScript語句
或者導入大量的庫來實現它
現在我們根本不需要那樣做
今年WebKit支持@supports功能
它允許我們建立一個條件語句
只有當滿足條件的時候
纔會執行括號內的所有內容
所以在這個我想讓WebKit首字下沉的例子中
我可以把所有特殊樣式存進支持它的語句中
所以當我用一個並不支持WebKit首字放大的瀏覽器
點進一個網址的時候
我得到一個比較清淡的效果 
但看起來很好它非常得易讀並且看起來不錯
如果有人用Safari進入這個網址
他們會看到首字下沉
多麼奇妙！
我想講一些關於減少代碼重複的內容
這是一些web檢查器實際中的代碼
好 我爲幻燈片清理它一下
我們有許多像這樣的例子
默認值和一系列的類都是...
同一羣組的一部分
我們想給它們應用一些樣式
但我們在一遍遍得重複默認值
又在其他類中把上述過程重複了幾十次
在其他樣式中重複了幾百次
它最終變得超出負荷
所以CSS4的開發者們約定
和創造了匹配僞類
它所做的是允許我們編程定義出
默認值所有可能的排列
比如像一個類和一系列選擇符的排列情況
這就取代了那些無謂的重複
而是用一行程序來替換它們
和寫代碼相比我唯一更喜歡做的事情就是刪除代碼
這真是太奇妙了！
因爲我們可以避免大量的重複代碼
我們實現這些改變做到避免重複的那一天
是web檢查器史上值得紀唸的日子
這些是今年CSS的一些新功能
我們也已經完成了關於Safari的提高方面的討論
所以我現在想切換一下話題
再談論一點如何在OS X和IOS上創造出奇特的體驗
在座的各位中有多少
擁有僅面向桌面的網站？
或者你們專門爲桌面做過什麼東西麼？
一兩個
其他人更多得可能是做面向移動端的東西
也就是IOS和Safari
所以我的演講的最大目的就是希望你們可以使用
本次提到過的這些新開發出來的web標準功能
我希望能使你們接受這些
特別爲Mac和IOS端設計的東西
通過這些技術的支持你會讓用戶驚喜
在我們的整個生態系統中和用戶建立更緊密的聯繫
AirPlay是從IOS 4中開始在IOS中上線的
IOS 4之後我們在Safari中對它提供支持
但是今年 我們開放AirPlay的平臺中包括Safari
和OS X 它允許用戶
直接在手機中使用Apple TV
它的API和在IOS中引入的相同
所以如果你從2013年就開始使用這一支持
你就已經完成了這個工作
或者如果你使用我們的媒體控制插件
你現在就已經得到了相關支持
但如果你不是的話
我建議你看看我們2013的WWDC在那裏我們提到了許多細節
關於如何支持AirPlay協議
多重任務處理
昨天我們在iPad上看到多重任務處理的時候不是覺得很酷嗎？
在昨天之前你有一個好主意
當你在iPad上瀏覽內容的時候你想到了那個好主意
你們曾經都可以佔用整個屏幕
但是現在分配給你們來演示內容的屏幕只有三分之二
或者一半 或者三分之一
這種設計已經變得非常重要
讓用戶來控制視圖的尺寸
iPad現在看起來更像是桌面了
這是一種非常重要 非常有價值的設計
我們明天會用整個演講來介紹它 在同一時間同一地點
既然你們今天都能來到這裏我知道你們一定能做到早起
我建議你們明天來聽一下這個講座
“使用Safari對響應式web設計進行傳輸與調試”
它將會介紹Safari在web檢查器中新加的一些工具和功能
當你嘗試使用這些風格的時候
它可以帶來許多便利
這裏也將會有一個關於多重任務處理的講座
針對一些在iPad和IOS 9中的基於媒體的app也非常有趣
我們昨天講了picture-in-picture
iPad是一個瀏覽內容的好工具
在昨天之前你們有一個好主意
就是你們的內容可以通過這種全屏模式來瀏覽
但現在我們有一個新的方式也就是我們的picture-in-picture模式
讓你可以把孩子們的照片壓縮進一個小箱子
放在你日曆中巨大的空角落裏
這是一個很強大的功能
我們擁有--我們把它定義爲呈現模式下的WebKit
我們支持你們所熟悉的全屏
內聯了你們那些可以在頁面本身
以及在picture-in-picture也就是我們的新模式中展出的內容
所以這裏有一系列你們可能要擔心的問題
WebKit缺省WebKit媒體控制會支持箱子外面的picture-in-picture模式
但如果你想寫自己的媒體控制
你需要使用呈現模式下的API來控制它們
在我們的開發者文件中介紹了
怎樣把它們用於你自己的網頁中
這裏有一些你需要考慮的問題
當一個查看器開始觀察
你在全屏視頻模式的內容時
頁面可能會跳出由播放窗口完全遮蓋的模式
因爲查看器能夠退出全屏模式
並在你不知情的情況下變成picture-in-picture模式
所以如果你有機會關掉特定的功能
或者在視頻播放的時候把網頁內容隱藏起來
當它們變成picture-in-picture模式時可能看起來就不太對了
由於媒體可以在非常小的窗口下播放
我們強烈建議你們用HTTP實時流媒體技術
或者用HLS傳輸媒體流
HLS允許我們的媒體引擎選擇位編碼
可以根據播放窗口的大小來自動匹配編碼率
它也考慮進設備中的網絡情況和電量情況
通過使用它你將能保證
最好的用戶體驗
因爲它照顧到了許多細節
在星期三我們可以看到令人驚歎的關於在iPad上的IOS 9系統
基於媒體的app中進行多任務處理的內容
如果你今年並沒有聽過我太多講座
你可以看看我和Jer去年講高級web媒體的視頻
我們提到了許多HLS的細節
最後 我想談論一些令我非常讚歎的東西
我們的Force Touch觸控板
在三月的時候我們興奮得展示了
使用了這一新硬件的新產品
它讓我們可以識別出第二級的點擊
我們叫做Force Click我們真的爲此感到興奮
在添加新的用戶交互功能的過程中我們獲得了許多樂趣
像這種字典模式向上看它向我們介紹了“氟橡膠”是什麼
我們添加了一個看鏈接後面的內容的新方式不需要離開網頁
我知道你們都能想到更好的方法
來把這個硬件應用在網頁內容中
所以我們想要給你們最大化的對這個硬件的接觸機會
讓它出現在你們自己的網頁中爲你們提供服務
讓我來簡單介紹一下它的具體功能
對於一個普通的觸控板
當用戶用一定的力下壓的時候
我們可以視作鼠標鍵下沉
當用戶保持下壓 然後彈起來
我們也從那個壓力中釋放出來
這視作鼠標鍵復原而那個過程可以視作一次單擊
我們擴展了這個模型用它來支撐Force Click的操作
通過用WebKit給所有的鼠標行爲都加入一個力度屬性
它能告訴你在觸控板上使用了多大的力度
同時我們也能添加一系列
你可以註冊的新事件 來處理它
讓我們返回到最後一張幻燈片
在這個我們曾經擡起 放下鼠標的地方
我們觸發了一個鼠標的力這可以啓動事件
這是調用阻止默認行爲到事件本身的一次好機會
它會防止我們調用字典或者通過鏈接預覽
來查詢邏輯如果你想自己做的話
在放下鼠標之後
如果用戶繼續按力度達到了第二個等級
我們把它視作一次force click
我們啓動了這一鼠標向下按的事件
當用戶用力來讓鼠標復原時
我們收到鼠標上移的力
所以 這一機制和鼠標上下點擊是一樣的
我們也有鼠標按下 鼠標擡起的過程
在這整個過程中
在鼠標上升下按時我們發出力來改變狀態
我們這樣做是爲了用戶不用通過移動手指
就能改變壓力
改變他們用力的量
所以這裏並沒有設置可以記錄鼠標移動的力的事件
注意我們也定義了兩個圖層和兩個常量
來把力的等級定義爲
常規點擊和用力點擊
我們強烈建議你們可以使用這些常量來代替捕捉數值
因爲當規範成熟時這些可能會發生變化
所以 在你們自己的網站中展示一下怎樣利用它們吧
我將愉快得再次邀請克里斯上臺
給我們做另一個演示
好 感謝布倫特
像剛剛布倫特介紹的Force Touch那樣
這裏有許多很酷的東西供你嘗試它們可以切實提升你的網站質量
如果你們記得 我們之前看過的那個演示我們點進這個覆疊圖層
可以選擇自己“最喜歡”的圖片
那是非常容易的但也是一項進步
我認爲如果我們真的可以通過
Force Touch觸控板提升用戶體驗
我們就能給他們創造更多的交互體驗
所以當我在臺下的時候
我改動了幾處代碼我所做的是擴展了界限點masonry圖片庫
來創建一個使用力度提升的圖片庫
我們將要用它來添加一些和力度有關的事件
再做一些關於力度變化的動畫
有幾點需要指出
其中最重要的一條是我們可以在鼠標的事件數據中
得到最小力和最大力的數值
而鼠標事件數據就是我們在用力讓鼠標上移下移時記錄的力
正如布倫特剛剛說過的那樣
我要講的另一點就是我們將要綁定一些事件偵聽器
來偵聽我們所綁定和更新的力度事件
我剛剛跳出了所要進行的事件
所以它現在什麼也沒做我們要一步一步得開始
酷 首先 我想開始給鼠標一個下按的力
在這個事件中我們要做的是運行一下我寫的這個程序
它可以在力值範圍爲真時被調用
這段程序所做的是在頁面中添加進CSS屬性
來保證我們的CSS轉場效果不會被
我們自己用JavaScript寫的動畫所幹擾
由於我們可以從改變觸控力度的事件中得到許多力度數據
我們不想它們互相干擾所以最基本要確定的是轉場中設置了很多東西
我們要做的下一件事就是看看kit鼠標下壓發生了什麼變化
我們這裏做了很少的事
事實上我們從WebKit裏的這些事件的力屬度性值中獲得力度數據
我們將要創建一個進程要看看最小力和最大力的值之間的差距有多少
我們實際上將要用動畫演示在最大最小值之間的一些東西
所以你將看到我們將會回來做一些有趣的事
我們在這個過程中做的最基礎的事情
可以說是我們選出了“最喜歡”的圖片可以說是我們做完了動畫
當我們返回並且更新
如果你看着這張照片你會看到當我現在上下按壓觸摸板
我們實際上在根據我給觸控板的壓力縮放這張照片
這真的很酷 非常具有交互性
它添加了一個新的圖層
在我這樣下壓的時候
你會看到這裏出現了一個心形意味着我對這張照片選擇了“喜歡”
但事實上我的手指還沒有落下
當我上拉的時候你會看到我們進入了覆疊視圖
那可能不是我們想要的效果
而這一點擊事件依舊在執行
那是因爲我們並沒有阻止任何瀏覽器中的默認行爲
爲了那樣做 我們事實上剛剛返回添加了一行快速代碼
即將實現鼠標點擊行爲
我們基本上只是希望能默認阻止調用
一定要明白OS交互系統並不會和開發者們進行交互
你能得到全部的控制權
所以如果我們返回 可以再試一遍
在我們的力度達到這個等級之後什麼都不會發生
我們必須再重新設置一遍
在此之前 我們必須移除
用JavaScript設置好的全部樣式確認一切都能真的順暢運行
所以我們可以只填充進鼠標單擊的那部分
我們這樣做的目的是爲了移除許多之前設置的樣式
要保證所有加進去的CSS屬性都已經被刪除
恢復成了默認模式就像我們從來沒有碰過它一樣
好 用這個新的交互界面
我們可以在照片上徘徊打開動畫 就像這樣
我們得到了添加“喜歡”的照片的功能
我們依然可以通過一次普通的鼠標點擊來進入圖片庫
我認爲這真的很酷我也很興奮能看到
你們用這個新技術來做些什麼
現在 我將重新有請布倫特上臺謝謝大家
感謝克里斯
我覺得你們也會贊同這個硬件的使用會成爲一個非常偉大的方式
我想要介紹幾個使用ForceTouch觸控板的絕佳實例
希望你們能經常使用鼠標力常量
和並不難編碼的數字值
因爲我們希望它們可以在導航的過程中直接改變
使這個功能更加完整
請記住 遺憾的是並不是所有的用戶 都有Force Touch硬件
所以我們可以把它視作一個捷徑
或者是給擁有這個軟件的用戶的額外福利
用它來驅動動畫或者給內容提供一些
你也可以通過其他方式來實現的更簡便的方式
這將在Mac和IOS中帶來令人驚喜的體驗
這也是今天演講中的主體
我想做幾點總結
我們談論了背景過濾器
這是一個很神奇的硬件方式能加速你網站上的背景過濾效果
滾動停止點使你
用幾行CSS就實現平鋪滾動
我們也探討了JavaScript裏令人驚喜的的新的類語法
CSS中的@supports 函數可以用來封裝樣式
並且擁有一些僅當特定功能可用時才被執行的樣式
我們談論了一點關於從Safari變到OS X裏的AirPlay
以及picture-in-picture還有IOS多重任務處理
以及介紹了一些你可以去參加的演講還有這個新的Force Touch APU
想了解更多信息可以下載相關文檔
我們歡迎大家
進入www.WebKit.org網站關注WebKit項目
加入我們吧看看我們在做些什麼
突破黑暗看看明年
會出現一些什麼新的功能先睹爲快吧
對於一般的詢問我建議你們
瞭解一下我們的WebKit宣傳者
當你們有問題想要了解
或者你想傳達給我們什麼信息的時候
可以在WebKit團隊中找他
謝謝你們今天早上來聽我的演講
希望你們能在這周的WWDC中度過美好的時光
謝謝