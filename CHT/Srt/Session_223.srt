00:00:33.033 --> 00:00:34.535 
下午好！

00:00:34.835 --> 00:00:37.337 
我叫布魯斯·斯塔德尼克 
來自iOS聯絡小組 

00:00:37.404 --> 00:00:41.074 
能向你們介紹新“聯繫人框架” 
我十分激動 

00:00:46.313 --> 00:00:48.916 
<br/> 
如果你是第一次用Apple平臺 

00:00:48.982 --> 00:00:52.252 
你就會知道在你的app
中使用聯繫人是如何簡單 

00:00:52.886 --> 00:00:55.422 
而如果你是Address Book
方面的資深開發者

00:00:55.489 --> 00:00:57.024 
你就會愛上這個
新框架 

00:01:00.294 --> 00:01:02.729 
那麼 
這個“聯繫人框架”是什麼？

00:01:03.764 --> 00:01:06.633 
我們傾聽到了你們對
Address Book的反饋 

00:01:07.034 --> 00:01:09.536 
今天我們就來解決提出最多的
請求 

00:01:11.238 --> 00:01:13.340 
Address Book
Framework

00:01:13.407 --> 00:01:15.142 
提供了
一個訪問聯繫人的

00:01:16.910 --> 00:01:20.147 
Objective-CAPI這個A
PI在設計上也能兼容Swift

00:01:23.417 --> 00:01:25.986 
對此我們和你們一樣都激動萬分 

00:01:27.754 --> 00:01:30.591 
這個新Contacts Framework
有多個設計目標

00:01:30.791 --> 00:01:33.660 
現在我來看看其中的
幾個關鍵目標 

00:01:35.362 --> 00:01:38.332 
首先 滿足大多數
一般僅需要獲取聯繫人、

00:01:38.732 --> 00:01:42.703 
而不會修改聯繫人的
app的需求 

00:01:43.504 --> 00:01:46.940 
我們爲線程安全只讀用途
設計了這個API 

00:01:48.642 --> 00:01:51.745 
總體上 這是通過
常量值對象實現的 

00:01:51.912 --> 00:01:53.480 
這些對象不會引用
數據存儲 

00:01:55.482 --> 00:01:59.319 
這樣你就可以在你的app的
隊列之間非常容易地

00:01:59.386 --> 00:02:02.923 
傳遞聯繫人 而不會出現
意外的輸入/輸出 

00:02:05.259 --> 00:02:07.895 
此外 
OS X、iOS和watchOS

00:02:07.961 --> 00:02:11.632 
也上架了同樣的聯繫人API

00:02:15.536 --> 00:02:17.738 
<br/> 
你學會了這個API以後

00:02:17.804 --> 00:02:21.175 
就可以在多個Apple平臺上訪問
聯繫人 

00:02:23.343 --> 00:02:26.380 
如果你還用
Address Book的話 

00:02:26.847 --> 00:02:27.981 
那麼它就要被棄用了 

00:02:36.490 --> 00:02:39.793 
我們一直沒有意
識到我們對我們的設備上的

00:02:39.860 --> 00:02:41.528 
聯繫人是多麼的
自傲 

00:02:42.296 --> 00:02:44.698 
比如說 
當我們接到一通電話時 

00:02:45.032 --> 00:02:48.335 
我們只能看到一個電話號碼 
我們就會想了：打電話的是誰？

00:02:49.403 --> 00:02:51.004 
是家人嗎？

00:02:51.772 --> 00:02:52.873 
是朋友嗎？

00:02:53.340 --> 00:02:54.441 
還是又一個電話推銷員？

00:02:56.143 --> 00:02:58.946 
如果能把聯繫人顯示出來 
那就更好了 

00:02:59.847 --> 00:03:02.382 
哦 是約翰·阿普爾西德 
我的一個最好的朋友 

00:03:05.652 --> 00:03:07.821 
每個人在自己的設備上
都有聯繫人 

00:03:08.622 --> 00:03:11.225 
它們可以幫助我們知道
正在和我們進行溝通的

00:03:11.825 --> 00:03:14.828 
是誰 幫助我們
打電話、發電子郵件 

00:03:15.128 --> 00:03:17.030 
進行其它
交流 

00:03:18.165 --> 00:03:22.536 
比如說我可以對我的設備說：你好
Siri

00:03:22.603 --> 00:03:23.937 
打電話給約翰·阿普爾西德 

00:03:24.705 --> 00:03:26.139 
沒問題 搞定了 

00:03:26.206 --> 00:03:29.443 
正在呼叫約翰·阿普爾西德
iPhone的揚聲器已經開啓 

00:03:29.510 --> 00:03:32.145 
布魯斯·斯塔德尼克：聯繫人就是
在我們的設備上的

00:03:32.212 --> 00:03:33.981 
用戶體驗的
中心

00:03:37.718 --> 00:03:40.487 
那麼“聯繫人框架”
是如何處理這一

00:03:40.554 --> 00:03:41.555 
聯繫信息呢？

00:03:42.556 --> 00:03:44.892 
我們再用約翰·阿普爾西德
當一回例子 

00:03:46.193 --> 00:03:49.496 
對於你們中那些熟悉Address
Book的人來說這就是個快速回顧

00:03:51.498 --> 00:03:55.002 
這是約翰的頭像照片 
他的名 

00:03:56.136 --> 00:03:57.171 
他的姓

00:04:01.408 --> 00:04:03.243 
他的私人電子郵箱

00:04:04.278 --> 00:04:05.279 
他的工作電子郵箱 

00:04:06.280 --> 00:04:07.781 
他的iPhone的
電話號碼 

00:04:11.985 --> 00:04:14.521 
這些聯繫屬性
代表了

00:04:14.588 --> 00:04:15.522 
這個聯繫信息 

00:04:16.990 --> 00:04:19.426 
這個頭像圖片
用圖像數據表示 

00:04:21.094 --> 00:04:22.963 
名字分成了幾個
元件 

00:04:23.530 --> 00:04:25.566 
名字表示
名 

00:04:26.133 --> 00:04:27.901 
姓氏則表示
姓 

00:04:29.837 --> 00:04:32.706 
私人電子郵箱和工作電子郵箱
都由

00:04:32.773 --> 00:04:33.740 
電子郵件地址表示 

00:04:36.543 --> 00:04:38.879 
電話號碼
由電話號碼錶示 

00:04:41.081 --> 00:04:42.850 
有多個
聯繫屬性 

00:04:43.183 --> 00:04:45.752 
你可以參考聯繫人資料 
瞭解更多細節 

00:04:48.755 --> 00:04:50.557 
現在 
我們來談談這個對象 

00:04:53.293 --> 00:04:55.062 
這是CNContact對象 

00:04:57.130 --> 00:05:00.901 
這是聯繫屬性的
常量值對象 

00:05:02.135 --> 00:05:04.204 
它是仿照NSDictionary設
計的 

00:05:05.172 --> 00:05:08.742 
有一個可變子類 
CNMuteableContact

00:05:09.243 --> 00:05:11.178 
你可以用它來修改
聯繫屬性 

00:05:12.613 --> 00:05:14.915 
“聯繫人框架”使用的
都是模型 

00:05:18.785 --> 00:05:21.522 
對於有多個值 
像電子郵件地址、

00:05:21.889 --> 00:05:23.857 
電話號碼 
的聯繫屬性來說 

00:05:24.591 --> 00:05:27.461 
就該輪到一個
CNLabeled Value陣列出馬了

00:05:29.296 --> 00:05:33.967 
CNLabeledValue是標籤
和值的一個常量元組 

00:05:35.269 --> 00:05:38.272 
標籤在其中是一個字符串 
而值則是一個對象 

00:05:38.739 --> 00:05:40.407 
比如 
一個電子郵件地址的字符串 

00:05:42.910 --> 00:05:45.913 
值可以有標籤 
以便和一個屬性的多個

00:05:46.113 --> 00:05:47.814 
值
進行區分 

00:05:48.916 --> 00:05:52.119 
比如到底是一個私人電子郵箱
還是一個工作電子郵箱 

00:05:54.821 --> 00:05:57.257 
對於你們中那些熟悉
Address Book的人來說 

00:05:58.025 --> 00:06:02.496 
AB多值被這個CNLabeled
Value陣列取代了 

00:06:03.530 --> 00:06:06.300 
是的 你聽到的沒錯 
沒有AB多值了 

00:06:11.905 --> 00:06:13.974 
現在我想再拿
約翰·阿普爾西德舉個例子 

00:06:14.041 --> 00:06:15.642 
創建一個
新的聯繫人 

00:06:16.610 --> 00:06:18.145 
我們首先導入聯繫人 

00:06:19.847 --> 00:06:21.515 
然後創建一個
可變聯繫人 

00:06:21.582 --> 00:06:22.983 
正如我們將要增加的
聯繫人一樣 

00:06:25.385 --> 00:06:30.023 
然後我們把約翰的頭像設爲
NSData到imageData 

00:06:32.492 --> 00:06:35.395 
然後把他的名字設爲given
Name到familyName 

00:06:39.066 --> 00:06:41.101 
那麼對於約翰的
兩個電子郵件地址 

00:06:41.268 --> 00:06:45.806 
我們創建兩個CNLabeled值 
其中一個是CNLabelHome 

00:06:46.340 --> 00:06:48.075 
另一個是CNLabelWork 

00:06:48.809 --> 00:06:50.544 
“聯繫人框架”上
有一些

00:06:50.611 --> 00:06:51.778 
預定義標籤 

00:06:53.347 --> 00:06:55.516 
這些預定義標籤
有本地字符串 

00:06:55.582 --> 00:06:57.584 
你可以在你的app UI
用這些標籤 

00:06:58.619 --> 00:07:00.521 
你還可以創建自己的
定製標籤 

00:07:02.489 --> 00:07:05.759 
我們拿出這兩個標籤值 
私人電子郵件和工作

00:07:06.226 --> 00:07:09.162 
電子郵件 放到一個陣列 
在電子郵件地址上設置好 

00:07:09.763 --> 00:07:10.864 
就這麼簡單 

00:07:13.166 --> 00:07:15.502 
我們也可以同樣處理
約翰的電話號碼 

00:07:16.069 --> 00:07:17.938 
同樣 
我們創建一個CNLabeled值 

00:07:18.505 --> 00:07:23.510 
使用iPhone預定義標籤 
當成一個值、創建一個

00:07:23.677 --> 00:07:27.381 
CNPhoneNumber對象 
把標籤值放到陣列 

00:07:27.648 --> 00:07:29.183 
然後設爲電話號碼 

00:07:32.886 --> 00:07:35.455 
我還知道約翰的家庭住址 
我也可以添加家庭住址 

00:07:36.957 --> 00:07:39.860 
我先創建一個CNMuteable
PostalAddress 

00:07:40.894 --> 00:07:42.296 
設好信息 

00:07:43.497 --> 00:07:46.066 
然後再用LabelHome創建
一個標籤值 

00:07:46.733 --> 00:07:49.369 
放到陣列中 
然後設爲通訊地址 

00:07:53.574 --> 00:07:55.342 
最後 
我還知道他的生日 

00:07:55.409 --> 00:07:58.645 
我就可以創建一個
NSDateComponent 

00:07:58.712 --> 00:07:59.813 
設置好年、月、日元件 

00:08:00.447 --> 00:08:01.882 
然後把它設爲
生日屬性 

00:08:03.150 --> 00:08:05.986 
要注意 
“聯繫人框架”中的所有

00:08:06.086 --> 00:08:09.389 
日期相關的屬性都是
NSDate元件 

00:08:10.424 --> 00:08:14.294 
這樣就可以靈活設置
日期 

00:08:14.361 --> 00:08:15.596 
比如不足一年的生日 

00:08:15.896 --> 00:08:17.364 
這樣你就可以忽略
年份元件 

00:08:22.369 --> 00:08:25.405 
“聯繫人框架”也可以對
這些聯繫對象進行

00:08:25.472 --> 00:08:26.840 
運算 

00:08:27.808 --> 00:08:30.110 
這裏 你可能對
格式化聯繫數據感興趣 

00:08:32.880 --> 00:08:34.681 
CNContact
Formatter

00:08:34.748 --> 00:08:36.082 
將會格式化一個聯繫人的名字 

00:08:37.083 --> 00:08:38.919 
在這個例子中 
我們格式化了全名 然後

00:08:38.986 --> 00:08:40.287 
又得到了約翰·阿普爾西德 

00:08:42.054 --> 00:08:43.890 
CNContact
Formatter

00:08:43.957 --> 00:08:45.492 
還可以正確格式化國際名字 

00:08:48.395 --> 00:08:49.696 
我們還有一個格式化程序

00:08:49.763 --> 00:08:52.165 
CNPostalAddress
Formatter 

00:08:52.232 --> 00:08:54.501 
可以格式化通訊地址的
郵件標籤 

00:08:55.802 --> 00:08:57.738 
然後就會返回這個 

00:08:58.972 --> 00:09:02.910 
CNPostalAddress
Formatter可以正確格式化

00:09:03.277 --> 00:09:04.178 
國際化通訊地址 

00:09:05.179 --> 00:09:08.348 
我們建議你儘量在你的
app中使用這些格式化程序 

00:09:11.685 --> 00:09:13.954 
現在 
我想請戴夫上臺 

00:09:14.021 --> 00:09:16.223 
請他給你們演示下
如何在你的app中使用聯繫人 

00:09:23.197 --> 00:09:24.064 
謝謝 
布魯斯 

00:09:24.131 --> 00:09:27.367 
我叫戴夫·蒂賓根 
是OS X聯繫人團隊的一員 

00:09:29.703 --> 00:09:30.537 
不好意思

00:09:31.738 --> 00:09:33.640 
剛纔布魯斯已經
向你們演示瞭如何在代碼中

00:09:33.707 --> 00:09:35.976 
創建、編輯
CNContact 

00:09:36.910 --> 00:09:39.279 
但是在OSX、iOS
和watch OS的

00:09:39.346 --> 00:09:42.883 
聯繫人app上
已經有了很多聯繫人 

00:09:44.084 --> 00:09:46.386 
布魯斯已經演示了
系統app可以怎樣

00:09:46.453 --> 00:09:49.623 
和這些聯繫人整合起來 
提供更加豐富的用戶體驗 

00:09:50.357 --> 00:09:53.060 
比如說 
電話app可以爲來電

00:09:53.126 --> 00:09:54.628 
顯示一個人的名字和照片 
而不是

00:09:55.329 --> 00:09:57.397 
僅僅顯示一個電話號碼 

00:09:58.198 --> 00:10:00.133 
“聯繫人框架”讓你可以
爲你的app提供

00:10:00.200 --> 00:10:01.969 
豐富的
用戶體驗 

00:10:05.138 --> 00:10:06.573 
你要用來訪問用戶的
聯繫人的類 

00:10:06.640 --> 00:10:09.042 
叫做
CNContactStore 

00:10:09.710 --> 00:10:11.044 
我們來講講
怎樣

00:10:11.111 --> 00:10:12.613 
獲取、保存用戶的聯繫人 

00:10:13.480 --> 00:10:14.414 
讓我們從獲取開始 

00:10:16.350 --> 00:10:17.784 
你要使用的主要方法

00:10:18.018 --> 00:10:19.286 
叫做統一
Contacts

00:10:19.353 --> 00:10:22.155 
MatchingPredicate
keysToFetch 

00:10:22.556 --> 00:10:25.392 
這會返回一個
CNContact對象陣列 

00:10:27.227 --> 00:10:29.563 
Keys to
Fetch中的謂詞的目的 

00:10:29.630 --> 00:10:32.132 
是爲了幫助你的app
儘可能高效地獲取聯繫人 

00:10:33.433 --> 00:10:34.535 
我們先從
聲明開始 

00:10:36.069 --> 00:10:38.639 
用戶可能有數以百計 
甚至數以千計的聯繫人 

00:10:38.705 --> 00:10:41.475 
你可能只對這些聯繫人的
一個小子集感興趣 

00:10:42.576 --> 00:10:44.611 
謂詞可以讓你...

00:10:44.678 --> 00:10:46.680 
可以幫助你限制
返回的結果數量 

00:10:48.081 --> 00:10:49.283 
如果你們中有人還不知道 

00:10:49.349 --> 00:10:51.818 
NSPredicate是一個標準的
基礎級別對象 

00:10:52.319 --> 00:10:54.488 
可以顯示搜索時 
某個對象

00:10:54.555 --> 00:10:55.956 
匹配的
標準 

00:10:59.826 --> 00:11:02.863 
“聯繫人框架”爲你提供了
使用

00:11:02.930 --> 00:11:03.931 
聯繫人存儲器的謂詞 

00:11:04.464 --> 00:11:06.200 
聯繫人存儲器將會評估
這些信息、

00:11:06.266 --> 00:11:08.168 
這些
信息 

00:11:08.902 --> 00:11:10.237 
這裏的例子中

00:11:10.304 --> 00:11:12.906 
是謂詞ForContacts
MatchingName 

00:11:13.106 --> 00:11:15.909 
它會匹配每個聯繫
和指定的

00:11:15.976 --> 00:11:18.145 
名字 在這裏例子中 
就是阿普爾西德 

00:11:19.012 --> 00:11:20.113 
我們再來快速看個例子 

00:11:23.217 --> 00:11:25.018 
比方說用戶有下面三個
聯繫人 

00:11:25.185 --> 00:11:28.222 
約翰·阿普爾西德、簡·阿普
爾西德、克雷格·布羅姆利 

00:11:29.556 --> 00:11:32.059 
聯繫人存儲器會高效評估聯繫人
約翰·阿普爾西德

00:11:33.093 --> 00:11:34.728 
和簡·阿普爾西德
克雷格·布羅姆利

00:11:34.928 --> 00:11:36.330 
然後僅僅返回匹配的聯繫人 

00:11:36.563 --> 00:11:37.965 
在這裏返回的就是
約翰和簡 

00:11:38.031 --> 00:11:39.600 
而不是克雷格 

00:11:43.270 --> 00:11:45.339 
這樣謂詞讓你可以限制
返回的聯繫人的數量 

00:11:45.472 --> 00:11:47.341 
但是 
一個聯繫人的

00:11:47.407 --> 00:11:49.176 
聯繫信息
仍然很多 

00:11:49.243 --> 00:11:51.512 
而你可能僅僅對它的
一個小子集感興趣 

00:11:52.446 --> 00:11:54.515 
那麼就該
keysToFetch大顯身手了 

00:11:57.584 --> 00:12:00.254 
KeysToFetch是一個
字符串陣列 

00:12:00.621 --> 00:12:03.690 
這些是鍵的字符串 
屬於鍵-值編碼 

00:12:04.224 --> 00:12:06.460 
如果你只對教名
和姓感興趣 

00:12:06.627 --> 00:12:08.929 
你就可以把你的
keysToFetch設置成這樣 

00:12:09.263 --> 00:12:11.665 
當然了 逐字使用字符串
容易出現錯誤 

00:12:12.266 --> 00:12:13.700 
爲此我們也提供了常數 

00:12:16.336 --> 00:12:18.138 
因此 
“聯繫人存儲器”將會

00:12:18.205 --> 00:12:20.541 
僅僅獲取
你指明的屬性 

00:12:21.642 --> 00:12:23.644 
在這裏例子中 
就是名字和姓 

00:12:24.778 --> 00:12:27.314 
你就可以親眼看到
keysToFetch的謂詞是怎樣

00:12:27.381 --> 00:12:28.582 
允許你縮小返回的
信息的

00:12:28.649 --> 00:12:30.184 
數量 
這樣你的app就可以

00:12:30.250 --> 00:12:31.485 
儘可能的高效 

00:12:32.519 --> 00:12:33.720 
讓我們來看一個完整的例子 

00:12:35.656 --> 00:12:37.791 
就像之前一樣 
我們要從一個謂詞

00:12:37.858 --> 00:12:39.593 
和keysToFetch開始 
但是 

00:12:40.861 --> 00:12:42.930 
現在你需要把它們用在
一個聯繫人存儲器上 

00:12:42.996 --> 00:12:44.531 
這很容易 
你可以用默認初始化程序

00:12:44.631 --> 00:12:45.832 
創建一個 

00:12:47.134 --> 00:12:48.535 
然後調用統一
Contacts

00:12:48.602 --> 00:12:50.370 
Matching Predicate 

00:12:50.470 --> 00:12:52.773 
帶有這些值的keysToFetch
 假設一切正常 

00:12:53.207 --> 00:12:55.008 
你就會得到一個
聯繫人陣列 

00:12:56.143 --> 00:12:57.544 
然後你就可以按照你的
想法去用 

00:12:57.678 --> 00:12:59.880 
在這裏我們是要打印出
姓名和姓氏 

00:13:01.281 --> 00:13:02.516 
關於獲取 
我還想說幾件

00:13:02.583 --> 00:13:03.417 
重要的事情 

00:13:04.051 --> 00:13:06.920 
第一點 
不受CNContact信息的生命期

00:13:06.987 --> 00:13:08.622 
約束的

00:13:08.689 --> 00:13:10.524 
CNContact的
生命期 

00:13:11.225 --> 00:13:13.227 
獲取結束後 
並不需要同存貯器

00:13:13.293 --> 00:13:15.262 
保持一個
強引用 

00:13:16.063 --> 00:13:19.032 
這就意味着CNContact
上面的數據是有效的 

00:13:19.099 --> 00:13:22.102 
自從取出後就是有效的 
基本上就是一個從取出那時

00:13:22.169 --> 00:13:23.904 
的快照 
在那個CNContact的

00:13:23.971 --> 00:13:26.139 
生命期內
都是有效的 

00:13:27.407 --> 00:13:28.442 
第二個重要的事情是 

00:13:28.509 --> 00:13:30.010 
這是一個
同步方法 

00:13:30.544 --> 00:13:32.913 
相比較而言 
取出聯繫人是一個慢操作 

00:13:34.314 --> 00:13:37.818 
因此 你必須通過一個
後臺進程來讀取這些聯繫人 

00:13:38.986 --> 00:13:40.654 
讓你的用戶界面
保持響應 

00:13:41.889 --> 00:13:42.990 
就像布魯斯之前提到的 

00:13:43.056 --> 00:13:46.727 
CNContacts是完整的線程安
全 通過後臺進程來讀取這些

00:13:46.793 --> 00:13:49.196 
聯繫人是安全的 
然後把它們移到主線程 

00:13:49.730 --> 00:13:51.098 
更新你的用戶界面 

00:13:53.667 --> 00:13:56.003 
通過後臺進程來讀取聯繫人
還有一個原因 

00:13:56.069 --> 00:13:57.538 
那就是
數據隱私 

00:14:03.143 --> 00:14:07.147 
用戶對待他們的聯繫人
這一隱私非常嚴肅 

00:14:08.081 --> 00:14:10.817 
因此 
我們需要在你的app和用戶

00:14:10.884 --> 00:14:12.019 
聯繫人之間設立一道勢壘 

00:14:13.487 --> 00:14:17.124 
當你的app第一次通過API
訪問聯繫人時 

00:14:17.191 --> 00:14:20.160 
OS會彈出一個對話框
或者警報 

00:14:20.227 --> 00:14:22.763 
讓用戶選擇允許
或者拒絕訪問 

00:14:22.829 --> 00:14:23.997 
你之前可能
已經看過了 

00:14:25.365 --> 00:14:27.601 
這就意味着當你第一次
調用聯繫人存儲器上的

00:14:27.668 --> 00:14:30.070 
方法時 
它並不能提供結果 

00:14:30.437 --> 00:14:33.073 
必須等待用戶做出響應 
這可能需要很長時間 

00:14:35.008 --> 00:14:37.945 
當你通過GCD或者NS操作 
把你的聯繫人儲存器訪問

00:14:38.011 --> 00:14:41.081 
移到一個後臺
線程中時 我們在這裏

00:14:41.515 --> 00:14:42.783 
提供了一項助手方法 

00:14:42.850 --> 00:14:45.085 
一個叫做請求訪問實體類型
完成處理程序的

00:14:45.152 --> 00:14:46.220 
異步
方法 

00:14:48.622 --> 00:14:50.924 
用戶可能會拒絕訪問 
這樣你的app就可以

00:14:50.991 --> 00:14:51.925 
得體地處理它 

00:14:53.093 --> 00:14:54.528 
如果用戶允許訪問 

00:14:54.695 --> 00:14:56.763 
那麼請務必
謹慎處理聯繫人數據 

00:14:57.631 --> 00:14:59.299 
更多信息請查看
你的app會話中的

00:14:59.366 --> 00:15:00.534 
“隱私”部分 

00:15:02.503 --> 00:15:05.105 
我想再講講keysToFetch 
講講它們是如何

00:15:05.172 --> 00:15:06.940 
返回
部分聯繫人的 

00:15:09.209 --> 00:15:11.812 
就像我之前演示的那樣 
keysToFetch允許你僅僅

00:15:11.912 --> 00:15:14.181 
讀取你感興趣的
屬性 

00:15:15.916 --> 00:15:17.518 
在這個例子中 
就是姓名和姓 

00:15:17.684 --> 00:15:19.920 
如果你試着訪問一個你並未
請求的屬性 比如說 

00:15:20.020 --> 00:15:21.355 
一個手機號碼 會發生什麼？

00:15:24.558 --> 00:15:26.093 
那就會
拋出一個異常 

00:15:26.159 --> 00:15:27.694 
因爲數據不在那裏 

00:15:27.761 --> 00:15:30.264 
我們調用這些部分聯繫人 
是因爲只有部分屬性

00:15:30.330 --> 00:15:31.632 
可用 

00:15:33.433 --> 00:15:35.035 
一般來說 
如果你把你的

00:15:35.102 --> 00:15:37.538 
鍵設成我們之前的例子中的
那樣 這就不是一個問題 

00:15:39.373 --> 00:15:41.175 
但是有時候你獲取
一個聯繫人時 你不確定

00:15:41.241 --> 00:15:42.075 
獲取時使用的是

00:15:42.142 --> 00:15:44.845 
哪個
keysToFetch 

00:15:45.512 --> 00:15:47.281 
在這些例子中 
在訪問屬性之前 

00:15:47.347 --> 00:15:49.917 
你可能想要校驗下 
看看鍵是否可用 

00:15:50.517 --> 00:15:52.419 
就像你在索引之前 
校驗陣列的

00:15:52.486 --> 00:15:54.087 
長度那樣 
這樣來避免異常 

00:15:55.189 --> 00:15:57.925 
這裏有一個例子是通過
isKeyAvailable方法 

00:15:57.991 --> 00:16:00.427 
看看訪問電話號碼屬性時 
PhoneNumbers鍵

00:16:00.494 --> 00:16:01.495 
是否
可用 

00:16:02.963 --> 00:16:04.031 
你可能會想 
“那好吧 

00:16:04.097 --> 00:16:06.066 
但是我真的想訪問那些
電話號碼 ”

00:16:06.834 --> 00:16:07.968 
在那種情況下

00:16:08.035 --> 00:16:10.804 
你可以使用附加的keysTo
Fetch來重新讀取聯繫人 

00:16:10.871 --> 00:16:11.972 
我們來看看它的工作原理 

00:16:13.874 --> 00:16:15.876 
我們在這裏設置了keysTo
Fetch 

00:16:15.943 --> 00:16:17.444 
但是這次我們使用的是電話號碼鍵 

00:16:17.911 --> 00:16:18.946 
並且使用了一種叫做

00:16:19.012 --> 00:16:22.216 
unifiedContactWit
hIdentifier的方法 

00:16:22.316 --> 00:16:24.718 
現在每個聯繫人都有一個
對它進行唯一標識的標識符

00:16:24.785 --> 00:16:26.353 
<br/>
你可以稍後使用它

00:16:26.420 --> 00:16:27.421 
重新進行讀取 

00:16:29.122 --> 00:16:31.024 
當你重新讀取後 

00:16:31.291 --> 00:16:32.893 
你就可以在這個重新讀取的
聯繫人上 

00:16:32.960 --> 00:16:33.927 
安全訪問電話號碼了 

00:16:35.896 --> 00:16:38.065 
對於部分聯繫人來說 
重要的是理解它們

00:16:38.131 --> 00:16:39.733 
和其餘的框架是怎樣
一起工作的 

00:16:43.036 --> 00:16:45.405 
這裏展示的上個例子中 
我們看到了如何讀取姓名

00:16:45.472 --> 00:16:46.840 
和姓氏 
然後把它們打印出來 

00:16:47.241 --> 00:16:49.343 
打印出全名 
但是這還不夠理想 

00:16:49.409 --> 00:16:51.612 
我們最好使用其中一種
格式化程序 不好意思 

00:16:51.778 --> 00:16:54.515 
布魯斯之前向我們展示過的
CNContact格式化程序 

00:16:55.382 --> 00:16:58.051 
這個格式化程序可能會訪問
其它你還沒有讀取的屬性 

00:16:58.118 --> 00:16:59.486 
比如說 
名字、前綴或者後綴 

00:16:59.920 --> 00:17:01.755 
如果它們不在那裏 
那麼就會拋出一個異常 

00:17:04.090 --> 00:17:06.627 
我們可以提供所有你使用這個
格式化程序需要用到的

00:17:06.693 --> 00:17:08.561 
鍵 但是這會非常乏味 
而且容易出錯 

00:17:09.363 --> 00:17:11.298 
因此我們提出了
鍵描述符的概念 

00:17:12.566 --> 00:17:18.137 
鍵描述符代表了某個
特定操作的一組鍵 

00:17:18.638 --> 00:17:20.674 
在這個例子中 
格式化程序知道它需要哪個鍵

00:17:20.741 --> 00:17:23.210 
才能完成工作 
因此它通過描述符

00:17:23.544 --> 00:17:25.846 
ForRequiredKeys
ForStyle

00:17:25.913 --> 00:17:26.813 
方法提供了鍵描述符 

00:17:26.880 --> 00:17:28.782 
你就可以把它直接包含在你的
鍵中進行讀取 

00:17:29.349 --> 00:17:32.653 
這樣就可以告訴聯繫人存儲器
所有格式化程序

00:17:32.719 --> 00:17:34.154 
進行讀取需要的
屬性 

00:17:35.055 --> 00:17:36.156 
我們來看一個例子 

00:17:38.192 --> 00:17:40.594 
在這個例子中 
我們想要讀取所有叫

00:17:40.661 --> 00:17:41.628 
阿普爾西德的聯繫人 

00:17:41.795 --> 00:17:44.298 
我們想打印他們的
全名和電子郵件地址 

00:17:45.599 --> 00:17:47.334 
我們要想之前一樣 
設置謂詞 

00:17:47.401 --> 00:17:49.503 
並且把keysToFetch設置的
略有不同 

00:17:51.004 --> 00:17:55.075 
我們先看看樣式
要求鍵的描述符

00:17:55.142 --> 00:17:58.045 
這樣就可以允許我們稍後使用
“聯繫人格式化程序”

00:17:58.111 --> 00:18:00.214 
來
獲得全名 

00:18:01.215 --> 00:18:04.751 
你也可以直接包括
CNContact電子郵件地址鍵 

00:18:04.818 --> 00:18:06.353 
因爲我們想打印這個
電子郵件地址 

00:18:06.820 --> 00:18:09.122 
你可以把鍵描述符

00:18:09.389 --> 00:18:11.792 
和CNContact鍵混合到
同一陣列 

00:18:14.361 --> 00:18:16.964 
有了這個設置 你就可以
像我們之前那樣進行讀取 

00:18:17.030 --> 00:18:18.465 
調用統一聯繫人匹配
謂詞 

00:18:19.466 --> 00:18:21.835 
有了結果後 
你就可以通過格式化程序

00:18:21.902 --> 00:18:23.904 
獲得全名
和電子郵件地址 

00:18:26.807 --> 00:18:27.941 
關於讀取 

00:18:28.075 --> 00:18:30.210 
另一個重點是
統一聯繫人 

00:18:31.478 --> 00:18:33.614 
你可能在多個賬戶裏
有相同的聯繫人 

00:18:33.680 --> 00:18:36.016 
比如說你在iCloud賬戶上有
約翰·阿普爾西德

00:18:36.083 --> 00:18:38.252 
還有他的工作電子郵件地址、
電話號碼

00:18:38.585 --> 00:18:40.787 
但是你可能在Facebook上
還和約翰是好友 

00:18:40.888 --> 00:18:42.523 
這就可以構成一個
形象 

00:18:42.956 --> 00:18:44.992 
私人電子郵件地址、
生日 

00:18:45.592 --> 00:18:48.061 
這樣聯繫人app就不用在那裏
分別顯示兩個聯繫人 

00:18:48.662 --> 00:18:51.198 
聯繫人app將會通過某種
探試程序把這些

00:18:51.265 --> 00:18:54.368 
鏈接起來 
結合信息 

00:18:54.434 --> 00:18:55.636 
顯示一個單一的
聯繫人 

00:18:55.702 --> 00:18:57.371 
我們稱之爲
統一聯繫人 

00:18:58.972 --> 00:19:01.475 
聯繫人app已經在
最近的幾次發版中已經這麼做了 

00:19:02.209 --> 00:19:05.012 
“聯繫人框架”默認
將會返回統一聯繫人 

00:19:05.078 --> 00:19:07.548 
你可能已經從方法名字上面
猜到了這一點 

00:19:08.815 --> 00:19:10.717 
好消息是 
這意味着你可以取到

00:19:10.784 --> 00:19:13.153 
用戶在app中
看到的數據 

00:19:14.288 --> 00:19:15.255 
這裏 最棒的事情是 

00:19:15.322 --> 00:19:17.124 
這些都是普通的
CNContact對象

00:19:17.191 --> 00:19:20.093 
它們和任何其它的CNContact
對象的原理、行爲都很相似 

00:19:20.861 --> 00:19:24.031 
你甚至可以修改、保存它們 
這樣也可以 

00:19:25.465 --> 00:19:27.935 
說到保存 
我們來看幾個代碼實例 

00:19:28.368 --> 00:19:29.670 
看看怎樣保存聯繫人 

00:19:30.804 --> 00:19:33.106 
我要先來添加一個
新的聯繫人 

00:19:35.375 --> 00:19:36.944 
比如說 
你有一個C不可變聯繫人 

00:19:37.010 --> 00:19:39.279 
你用布魯斯之前向你們展示的
數據把它設置好了 

00:19:39.580 --> 00:19:41.915 
要想把它弄到用戶聯繫人中 
你就要使用一個叫做

00:19:41.982 --> 00:19:43.984 
保存請求的請求 
然後你就可以在聯繫人

00:19:44.051 --> 00:19:46.353 
存儲器上執行那個
保存請求 

00:19:48.288 --> 00:19:51.525 
你要做的第一件事
就是創建一個新的CNSave Request對象

00:19:52.326 --> 00:19:54.094 
然後你就可以通過標識符
向容器調用

00:19:54.161 --> 00:19:55.662 
添加聯繫人 

00:19:56.864 --> 00:19:58.732 
我們現在沒有時間講
容器 

00:19:59.233 --> 00:20:01.702 
不過零容器標識符
指的是默認標識符 

00:20:02.069 --> 00:20:04.338 
更多信息請參見資料 

00:20:05.672 --> 00:20:07.975 
保存請求會給一個聯繫人
標記爲正在添加 

00:20:08.041 --> 00:20:10.110 
但實際上
並不會做出變更 

00:20:10.444 --> 00:20:12.446 
要進行變革 你需要在
聯繫人儲存器上調用執行

00:20:12.513 --> 00:20:13.714 
SaveRequest 

00:20:13.780 --> 00:20:15.282 
如果順利完成的話

00:20:15.749 --> 00:20:17.417 
這就會被添加到
用戶的聯繫人中 

00:20:21.321 --> 00:20:23.624 
更新現有的聯繫人
也很相似 

00:20:23.690 --> 00:20:25.425 
但是你要先從一個
你通過讀取獲得的

00:20:25.492 --> 00:20:27.661 
不可變的聯繫人
開始 

00:20:29.129 --> 00:20:30.697 
你要做的第一件事

00:20:30.764 --> 00:20:32.232 
就是創建一個
可變拷貝 

00:20:32.799 --> 00:20:34.234 
然後完成任何你想要的
變更 

00:20:34.301 --> 00:20:36.770 
比如說 我們在這裏要添加
一個新的電子郵件地址 

00:20:38.005 --> 00:20:39.006 
現在 
重點要注意的是 

00:20:39.072 --> 00:20:41.708 
當你對某個部分聯繫人制作
可變拷貝時 

00:20:42.109 --> 00:20:45.546 
僅僅修改你讀取的
屬性 

00:20:49.082 --> 00:20:51.351 
像之前一樣 
我們需要使用保存請求 

00:20:52.286 --> 00:20:53.687 
創建一個新的保存請求不過這次

00:20:53.754 --> 00:20:55.956 
我們要使用這個
updateContact方法 

00:20:56.623 --> 00:20:58.759 
同樣地 這也僅僅是把
聯繫人標記爲正在更新 

00:20:58.825 --> 00:21:00.260 
但並不會
真正進行變更 

00:21:00.961 --> 00:21:03.263 
直到你調用executeSave
Request 

00:21:05.098 --> 00:21:07.034 
關於保存 
還有一些重要的事情要說 

00:21:07.601 --> 00:21:10.704 
首先是保存請求可以
包含多個變更 

00:21:10.771 --> 00:21:12.606 
當你
執行它時 

00:21:12.673 --> 00:21:14.842 
所有這些變更
都會在

00:21:14.908 --> 00:21:15.843 
執行它們時完成 

00:21:18.011 --> 00:21:19.079 
第二點

00:21:19.446 --> 00:21:22.249 
保存請求要求多個
可變聯繫人

00:21:22.449 --> 00:21:23.483 
你需要小心 

00:21:23.550 --> 00:21:25.953 
當一項保存正在運行時 
不要在同一個線程上訪問這些

00:21:26.053 --> 00:21:26.987 
可變聯繫人 

00:21:29.656 --> 00:21:30.958 
現在你已經知道了如何
讀取、

00:21:31.258 --> 00:21:32.960 
保存一位用戶的聯繫人

00:21:33.026 --> 00:21:34.895 
我要請朱利安上來 

00:21:34.962 --> 00:21:37.464 
給大家講講在用戶界面
如何使用聯繫人 

00:21:43.604 --> 00:21:44.605 
謝謝 戴夫 

00:21:47.674 --> 00:21:48.542 
下午好 

00:21:48.609 --> 00:21:51.678 
我是朱利安 
iOS聯繫人團隊的一名工程師 

00:21:52.679 --> 00:21:54.681 
布魯斯和戴夫

00:21:54.748 --> 00:21:57.217 
已經讓你們
成爲了

00:21:57.284 --> 00:21:58.719 
“聯繫人框架”方面的專家

00:21:58.785 --> 00:22:00.888 
我就來談談用戶界面 

00:22:01.622 --> 00:22:03.590 
向你們演示如何在你的app中

00:22:03.657 --> 00:22:05.759 
拾取、顯示聯繫人 

00:22:07.828 --> 00:22:09.363 
和“聯繫人框架”一起

00:22:09.429 --> 00:22:12.599 
我們還有一個叫做聯繫人UI的
新UI框架 

00:22:13.400 --> 00:22:17.938 
iOS 9和OS X 
El Capitan上都可以用 

00:22:19.006 --> 00:22:21.408 
它會給你提供兩個集羣

00:22:21.875 --> 00:22:23.410 
第一個是選擇器 

00:22:23.644 --> 00:22:27.080 
選擇器會顯示一個全部
用戶聯繫人列表 

00:22:27.147 --> 00:22:30.083 
讓他選擇把聯繫人信息
導入

00:22:30.150 --> 00:22:31.084 
你的app 

00:22:32.653 --> 00:22:35.122 
其次是
聯繫人視圖控制器 

00:22:35.556 --> 00:22:37.191 
控制器可以用來顯示
一位聯繫人 

00:22:38.325 --> 00:22:40.460 
本場演示的剩餘時間裏 
我會講一講類的

00:22:40.527 --> 00:22:42.829 
iOS
版本 

00:22:43.697 --> 00:22:46.633 
不過OS X上的
也很相似 

00:22:48.869 --> 00:22:50.838 
我們首先來講講
拾取聯繫人 

00:22:51.772 --> 00:22:53.307 
爲此你要用的類是

00:22:53.373 --> 00:22:55.175 
CNContact選擇器
視圖控制器 

00:22:56.009 --> 00:22:58.879 
它會直接置換我們之前在
Address Book UI的類

00:22:58.946 --> 00:23:00.314 
即AB

00:23:00.380 --> 00:23:02.015 
People Picker

00:23:02.082 --> 00:23:04.084 
Navigation
Controller 

00:23:04.618 --> 00:23:06.186 
你從名字上就可以猜到

00:23:06.653 --> 00:23:09.356 
它是UA視圖控制器的一個
直接子類

00:23:09.923 --> 00:23:11.558 
但你還是必須顯示它 

00:23:11.658 --> 00:23:13.694 
而不是把它推入一個
導航控制器 

00:23:15.529 --> 00:23:17.731 
它總是處於進程外 

00:23:18.065 --> 00:23:22.169 
它的優點很明顯 
不用要求用戶允許你的

00:23:22.236 --> 00:23:25.138 
app訪問他們的
聯繫人了 

00:23:26.206 --> 00:23:27.508 
這樣 當你顯示一個

00:23:27.808 --> 00:23:29.209 
聯繫人選擇器時 

00:23:29.276 --> 00:23:32.980 
你就不會看到之前戴夫
展示的對話 

00:23:35.649 --> 00:23:36.783 
其中一件重要的事情是 

00:23:36.850 --> 00:23:39.553 
聯繫人選擇器可能會返回
部分聯繫人 

00:23:40.020 --> 00:23:45.526 
比如說 
如果你設置了顯示屬性鍵的有界集

00:23:45.859 --> 00:23:47.494 
那麼你在得到的聯繫人中 

00:23:47.995 --> 00:23:49.530 
就只會得到
那些鍵 

00:23:51.532 --> 00:23:54.568 
選擇器的行爲由兩件事
定義 

00:23:55.169 --> 00:23:58.605 
首先是你實現的委託方法 
其次是 

00:23:58.672 --> 00:24:00.641 
你設置的
謂詞 

00:24:00.941 --> 00:24:03.477 
我們稍後會談談
這些 

00:24:04.378 --> 00:24:06.480 
最後一點 
選擇器必須

00:24:06.547 --> 00:24:07.848 
支持多選 

00:24:13.754 --> 00:24:16.023 
我們首先來談談
委託方法 

00:24:17.324 --> 00:24:20.260 
如果你的app僅對
單個聯繫人感興趣 

00:24:20.994 --> 00:24:23.864 
你想讓它的風格
和選擇器相似 

00:24:24.865 --> 00:24:28.435 
你只需要實現
didSelect Contact委託方法

00:24:28.502 --> 00:24:31.605 
然後你就會得到一個
CNContact 

00:24:32.272 --> 00:24:34.508 
同樣地 
這些聯繫人也可能是部分的 

00:24:36.476 --> 00:24:38.545 
如果你對單個屬性
感興趣 

00:24:39.079 --> 00:24:40.214 
你實現一個確保選擇

00:24:40.280 --> 00:24:42.182 
Contact
Property委託方法 

00:24:42.482 --> 00:24:44.918 
得到一個CNContact
Property對象 

00:24:45.552 --> 00:24:47.955 
這個對象實際上來自
“聯繫人框架” 

00:24:48.021 --> 00:24:50.891 
不過我們之前沒有見過 
所以讓我們來看看 

00:24:52.392 --> 00:24:55.462 
這是一個簡單的包裝類 
包含了選擇的聯繫人 

00:24:55.529 --> 00:24:59.199 
以及用戶
選擇的

00:24:59.266 --> 00:25:00.901 
屬性鍵 

00:25:01.602 --> 00:25:02.669 
它的值

00:25:02.903 --> 00:25:04.705 
以及可能的標識符 

00:25:04.771 --> 00:25:07.174 
就是屬性 
就是標籤值 

00:25:09.710 --> 00:25:11.879 
但是 你可能還對多個

00:25:12.346 --> 00:25:14.515 
聯繫人感興趣 

00:25:14.982 --> 00:25:17.150 
你會得到這個

00:25:17.417 --> 00:25:18.252 
外觀 

00:25:19.353 --> 00:25:20.587 
實現它很簡單 

00:25:20.654 --> 00:25:21.855 
你只需要實現

00:25:21.922 --> 00:25:25.158 
didSelectContact委
託方法即可 

00:25:25.225 --> 00:25:26.693 
然後如你所料 

00:25:26.760 --> 00:25:28.662 
你得到了發送的聯繫人對象的
陣列 

00:25:30.063 --> 00:25:32.633 
這也同樣適用於屬性

00:25:33.100 --> 00:25:33.934 
你可以通過實現

00:25:34.001 --> 00:25:36.603 
didSelect
ContactProperties

00:25:36.670 --> 00:25:37.871 
委託方法
來得到多個屬性 

00:25:38.172 --> 00:25:40.040 
得到一個CNContact

00:25:40.307 --> 00:25:41.642 
屬性
陣列 

00:25:43.177 --> 00:25:44.011 
好了 

00:25:44.778 --> 00:25:46.313 
現在我們再來講講
謂詞 

00:25:46.914 --> 00:25:50.684 
謂詞讓你可以定製
面板的行爲 

00:25:51.552 --> 00:25:52.753 
我們有三個謂詞 

00:25:53.720 --> 00:25:56.356 
第一個是啓動聯繫人
謂詞 

00:25:57.057 --> 00:25:58.592 
你可以用它決定用戶

00:25:58.659 --> 00:26:01.261 
可以用哪個聯繫人、

00:26:01.328 --> 00:26:02.696 
不可以用哪個聯繫人 

00:26:03.430 --> 00:26:05.866 
我拿之前我們看過的例子
來舉例 

00:26:07.000 --> 00:26:09.636 
如果你希望用戶僅僅選擇
帕克家族的

00:26:09.703 --> 00:26:12.172 
成員 
舉例來說 

00:26:12.673 --> 00:26:15.943 
你需要在你想要匹配聯繫人
和帕克家族的姓氏那裏 

00:26:16.009 --> 00:26:17.811 
創建一個謂詞 

00:26:19.513 --> 00:26:20.414 
你把它設置成一個

00:26:20.480 --> 00:26:22.549 
predicate For Enabling Contact 

00:26:22.816 --> 00:26:24.551 
一旦選擇器
表述出來後 

00:26:24.618 --> 00:26:28.255 
你可以看到 
你只能選擇帶有

00:26:28.322 --> 00:26:30.023 
帕克家族的姓氏的人 

00:26:31.959 --> 00:26:36.530 
第二個是謂詞
For Selection Of Contact 

00:26:37.364 --> 00:26:39.466 
當用戶點擊聯繫人時

00:26:39.833 --> 00:26:41.702 
會對這個謂詞進行評估 

00:26:42.302 --> 00:26:43.804 
如果評估爲“真” 

00:26:43.871 --> 00:26:46.173 
那麼聯繫人就會
返回到你的app 

00:26:46.607 --> 00:26:49.209 
如果不是的話 
我們就會顯示聯繫卡 

00:26:50.811 --> 00:26:52.412 
類似地 
對屬性來說我們有謂詞

00:26:52.479 --> 00:26:54.815 
ForSelectionOf
Property 

00:26:55.382 --> 00:26:58.852 
如果評估爲“真” 
用戶點擊的屬性

00:26:58.919 --> 00:27:01.255 
也將會
返回到你的app 

00:27:01.555 --> 00:27:03.657 
否則就會執行
默認動作 

00:27:03.991 --> 00:27:06.827 
比如說打一通電話
或者創建一封新電子郵件 

00:27:08.028 --> 00:27:11.298 
需要注意的是 
最後一個謂詞是在

00:27:11.365 --> 00:27:13.667 
CNContactProperty
對象上評估的 

00:27:13.734 --> 00:27:17.404 
而另外兩個謂詞則是在
CNContact對象上評估的 

00:27:19.840 --> 00:27:22.576 
我想要指出的是 
你需要在你設置的謂詞

00:27:23.010 --> 00:27:24.845 
以及你實現的委託方法之間

00:27:24.912 --> 00:27:26.780 
保持
連貫 

00:27:27.214 --> 00:27:29.716 
比如說你應該僅實現
didSelectContact

00:27:29.783 --> 00:27:33.720 
委託方法 
但要把選擇謂詞設置爲

00:27:33.887 --> 00:27:37.758 
屬性謂詞 
但是不太行得通 

00:27:37.824 --> 00:27:40.394 
你可以看到一項日誌 
你的謂詞將會被忽略 

00:27:43.630 --> 00:27:45.032 
那麼現在

00:27:45.098 --> 00:27:46.900 
你已經知道了
應該如何拾取聯繫人 

00:27:46.967 --> 00:27:49.469 
我們再來談談如何在你的
app中查看它們 

00:27:50.304 --> 00:27:51.805 
現在我們有一個類 

00:27:51.872 --> 00:27:55.309 
取代了我們之前在
Address Book UI上的三個類

00:27:57.010 --> 00:27:59.847 
但是通過適當的創建方法 
你還是可以獲得

00:28:00.447 --> 00:28:02.716 
你想要的
行爲 

00:28:04.351 --> 00:28:05.319 
第一個是

00:28:05.385 --> 00:28:07.821 
viewControllerFor
Contact 

00:28:07.888 --> 00:28:14.061 
它可以給你一個和聯繫人app
和iPhone app一樣的視圖控制器 

00:28:16.096 --> 00:28:18.031 
如果你想要創建一個新
聯繫人 

00:28:18.098 --> 00:28:18.932 
你可以使用

00:28:18.999 --> 00:28:20.968 
viewControllerFor
NewContact 

00:28:21.034 --> 00:28:24.404 
你可以得到這個總是處於
編輯模式的視圖控制器 

00:28:26.573 --> 00:28:28.842 
最後 
如果你有一位來自

00:28:28.909 --> 00:28:32.312 
未知來源的 比如說一個vCard 
舉個例子 的聯繫人 

00:28:32.646 --> 00:28:33.480 
你可以使用

00:28:33.547 --> 00:28:35.148 
viewControllerFor
UnknownContact 

00:28:35.516 --> 00:28:40.053 
我們在iOS 9中添加的一件事是
這個更新聯繫人按鈕 

00:28:40.654 --> 00:28:42.823 
如果用戶聯繫人中已有一位
聯繫人和你顯示的

00:28:43.056 --> 00:28:44.525 
聯繫人的名字相匹配 

00:28:44.591 --> 00:28:46.894 
這個
按鈕

00:28:47.327 --> 00:28:48.662 
就會
自動顯示出來 

00:28:49.296 --> 00:28:51.064 
如果用戶點擊這個按鈕

00:28:51.131 --> 00:28:52.999 
<br/>
它就會顯示UI 

00:28:53.066 --> 00:28:55.269 
使用新信息
更新現有的聯繫人 

00:28:58.272 --> 00:29:01.141 
這個“聯繫人視圖控制器”
現在通常處於進程外 

00:29:01.808 --> 00:29:03.043 
原因在於 

00:29:03.477 --> 00:29:05.812 
我們可能會添加一些
附加信息 

00:29:06.213 --> 00:29:08.949 
比如在郵件中找到的
聯繫人數據 

00:29:11.251 --> 00:29:14.254 
就像戴夫之前指出的那樣 
使用正確的鍵

00:29:14.421 --> 00:29:17.624 
讀取聯繫人
非常重要 

00:29:18.458 --> 00:29:20.928 
如果你想把它顯示在
聯繫人視圖控制器中 

00:29:20.994 --> 00:29:24.498 
那麼這個聯繫人就必須通過
聯繫人視圖控制器的

00:29:24.631 --> 00:29:26.533 
descriptor For Required Keys獲取 

00:29:28.902 --> 00:29:32.005 
我們來快速看一個代碼實例 
看看如何從一個標識符

00:29:32.072 --> 00:29:34.508 
顯示一個
聯繫人 

00:29:35.442 --> 00:29:37.511 
首先 你要使用
聯繫人視圖控制器的

00:29:37.578 --> 00:29:41.181 
descriptorForRequ
iredKeys 讀取聯繫人 

00:29:42.749 --> 00:29:45.018 
然後使用forContact

00:29:45.085 --> 00:29:47.421 
創建
聯繫人視圖控制器 

00:29:47.521 --> 00:29:50.457 
因爲我們想在聯繫人視圖
控制器顯示正視圖 

00:29:51.458 --> 00:29:55.329 
如果你已經有了一個聯繫人
存儲器 你就應該把它設置到

00:29:55.395 --> 00:29:58.732 
聯繫人視圖控制器 
這樣我們就可以重用它 

00:29:59.299 --> 00:30:01.101 
把自身設爲一個委託 

00:30:02.336 --> 00:30:03.804 
推送視圖控制 

00:30:04.304 --> 00:30:07.641 
然後當聯繫人被修改時 
你就會在你的委託方法中

00:30:07.708 --> 00:30:09.142 
被調用到 

00:30:11.278 --> 00:30:13.480 
好了 
看一個代碼示例很好 

00:30:13.547 --> 00:30:17.384 
但是一起構建一個app
會更好 

00:30:18.552 --> 00:30:19.753 
我們來試試吧 

00:30:24.057 --> 00:30:25.626 
我們要構建的app

00:30:26.026 --> 00:30:26.994 
叫做“喵喵叫” 

00:30:27.961 --> 00:30:32.399 
這個app讓你可以通過
給你的朋友發送貓的

00:30:32.566 --> 00:30:35.536 
叫聲 
和你的朋友分享你的情緒 

00:30:37.938 --> 00:30:39.206 
如果我運行它 你在頂部就

00:30:40.607 --> 00:30:43.010 
可以看到一個情緒選擇器 

00:30:44.077 --> 00:30:46.346 
底部是你的朋友列表 
現在還是空的 

00:30:46.713 --> 00:30:49.383 
我們要構建的 
就是這個 

00:30:50.851 --> 00:30:54.388 
這個app是使用一個郵件地址
來發送貓的叫聲的 

00:30:55.556 --> 00:30:59.826 
因此我們只需要一個綽號
和一個電子郵件地址即可 

00:31:02.329 --> 00:31:04.665 
如果我點擊“保存” 
因爲還沒有實現 

00:31:04.731 --> 00:31:06.667 
那麼
什麼也不會發生 

00:31:06.967 --> 00:31:08.268 
我們就要
這樣做 

00:31:10.237 --> 00:31:12.539 
當我點擊“保存”

00:31:12.773 --> 00:31:14.374 
<br/>
這個addBuddy函數會調用到 

00:31:14.441 --> 00:31:16.577 
我們現在來把它實現 

00:31:17.845 --> 00:31:19.746 
首先 
因爲我們要進行修改 

00:31:19.813 --> 00:31:21.582 
我們創建一個
可變聯繫人 

00:31:22.082 --> 00:31:25.118 
然後我們從文本框把綽號
設置成值 

00:31:26.753 --> 00:31:30.724 
emailAddresses屬性
被設置成了一個單一

00:31:31.358 --> 00:31:33.327 
標籤值的陣列 

00:31:33.861 --> 00:31:36.330 
文本框中
也是這個值 

00:31:37.764 --> 00:31:41.301 
最後 我們把這個新聯繫人
添加到我們的聯繫人列表 

00:31:42.336 --> 00:31:44.004 
我們運行下

00:31:44.505 --> 00:31:45.672 
看看它是怎樣運作的 

00:31:48.675 --> 00:31:51.678 
我要使用預先填充的值 
把埃米莉添加爲我的朋友 

00:31:51.745 --> 00:31:52.913 
好了

00:31:53.947 --> 00:31:55.082 
我的家庭 

00:31:55.983 --> 00:31:58.185 
你可以注意到這裏的這個
信息按鈕 

00:31:58.785 --> 00:32:00.654 
當我們點擊這個
信息按鈕時 

00:32:01.021 --> 00:32:02.856 
我們想要展示
聯繫人視圖 

00:32:04.157 --> 00:32:06.460 
我們現在就要實現
這個 

00:32:09.396 --> 00:32:11.532 
當我點擊這個按鈕時

00:32:12.499 --> 00:32:14.401 
<br/>
這個showContact函數被調
用了 

00:32:15.569 --> 00:32:17.004 
讓我們填進去 

00:32:17.838 --> 00:32:21.108 
首先 
我們給我們想要展示的

00:32:21.408 --> 00:32:22.876 
聯繫人創建一個

00:32:23.277 --> 00:32:24.645 
聯繫人視圖控制器 

00:32:25.245 --> 00:32:28.048 
然後我們把聯繫人存儲器設爲
我們已有的存儲器 

00:32:29.316 --> 00:32:30.918 
最後 
我們推送下視圖控制器 

00:32:35.155 --> 00:32:36.790 
讓我們來試試

00:32:36.857 --> 00:32:39.826 
好了 
我們可以看到埃米莉的信息 

00:32:40.594 --> 00:32:44.264 
太好了 但是如果我們想向我們的列表
添加一個聯繫人 

00:32:44.331 --> 00:32:46.633 
而這個聯繫人已經位於用戶的
聯繫人中 該怎麼辦？

00:32:47.434 --> 00:32:49.303 
我們在這裏要做的 
就是這個 

00:32:50.170 --> 00:32:52.506 
爲此我們要使用
這個聯繫人選擇器 

00:32:55.209 --> 00:32:58.846 
當我點擊addFromContac
ts時 這個函數就會調用到 

00:32:59.479 --> 00:33:01.215 
現在我要把它
實現 

00:33:03.016 --> 00:33:07.387 
首先我要創建
聯繫人選擇器控制器 

00:33:08.222 --> 00:33:10.958 
因爲我們只對電子郵件
地址感興趣 

00:33:11.658 --> 00:33:14.628 
我限制了電子郵件地址的
屬性 

00:33:16.597 --> 00:33:23.370 
然後我們想要讓用戶選擇
至少有一個電子郵件地址的

00:33:23.904 --> 00:33:25.772 
聯繫人 

00:33:26.273 --> 00:33:29.042 
我們可以看到 這是
正在實現的謂詞的一部分 

00:33:29.543 --> 00:33:32.412 
還可以看到還不在我們的
朋友列表中的人 

00:33:32.613 --> 00:33:33.981 
因爲我們不想出現
重複 

00:33:36.049 --> 00:33:38.919 
最後 
是已經是聯繫人的用戶 

00:33:39.219 --> 00:33:42.489 
正好有一個電子郵件地址的
用戶 

00:33:42.556 --> 00:33:45.225 
我們不需要推送卡 
我們想讓它直接寫 

00:33:46.026 --> 00:33:48.428 
這個謂詞做的
就是這個 

00:33:49.930 --> 00:33:53.600 
我們把自身設成一個委託 
顯示視圖控制器 

00:33:55.702 --> 00:33:58.205 
我們也需要委託方法

00:33:59.439 --> 00:34:02.342 
<br/>
可以把新聯繫人
添加到我們的聯繫人列表中 

00:34:03.610 --> 00:34:04.978 
現在就非常直接 

00:34:07.481 --> 00:34:09.315 
如果選擇約翰·阿普爾西德

00:34:10.350 --> 00:34:11.685 
我就知道他有兩個電子郵件 

00:34:12.351 --> 00:34:14.388 
所以推送的是正確的卡 

00:34:14.955 --> 00:34:17.558 
我會選擇一個電子郵件 
讓約翰在我們的列表中 

00:34:21.195 --> 00:34:22.396 
如果我添加一個聯繫人

00:34:22.462 --> 00:34:24.598 
首先你可以看到現在
約翰·阿普爾西德是無效的 

00:34:24.665 --> 00:34:26.400 
因爲他已經在我的
朋友列表中了 

00:34:27.301 --> 00:34:28.902 
但是如果我選擇大衛

00:34:28.969 --> 00:34:31.038 
他只有一個電子郵件地址 

00:34:31.103 --> 00:34:32.706 
這個聯繫人就
直接返回了 

00:34:34.975 --> 00:34:38.445 
如果我想展示約翰的卡 
又會發生什麼？

00:34:39.679 --> 00:34:41.047 
我們出現了一個異常 

00:34:41.547 --> 00:34:44.885 
原因是因爲在這裏展示
聯繫人時 

00:34:45.319 --> 00:34:48.822 
我們
不夠小心 

00:34:50.891 --> 00:34:53.393 
因爲聯繫人選擇器返回了
部分聯繫人 

00:34:53.460 --> 00:34:56.063 
聯繫人視圖控制器
缺失了某些鍵 

00:34:58.198 --> 00:35:00.000 
我們來把它修復

00:35:01.101 --> 00:35:04.071 
然後校驗聯繫人是否有了

00:35:04.137 --> 00:35:05.839 
要用在聯繫人視圖控制器的
要求的

00:35:06.306 --> 00:35:07.841 
鍵 

00:35:08.442 --> 00:35:12.513 
如果有 我們只需要使用
我們之前的代碼即可 

00:35:13.313 --> 00:35:14.781 
如果沒有

00:35:14.848 --> 00:35:16.517 
我們首先會向存儲器請求 

00:35:16.583 --> 00:35:18.619 
請求訪問聯繫人 

00:35:19.853 --> 00:35:21.788 
如果用戶允許訪問

00:35:22.956 --> 00:35:26.960 
我們就要通過它的標識符 
重新讀取聯繫人 

00:35:27.828 --> 00:35:30.397 
這次使用keysToFetch

00:35:30.864 --> 00:35:33.166 
CNContactView
Controller

00:35:33.233 --> 00:35:35.536 
記錄鍵的
描述符 

00:35:36.770 --> 00:35:40.240 
然後我們再次調用同樣的
函數 但是這次 

00:35:40.307 --> 00:35:43.243 
完整的聯繫人
已經準備就緒待用了 

00:35:44.578 --> 00:35:45.879 
我們再來試試 

00:35:48.982 --> 00:35:52.152 
如果我查看埃米莉的
聯繫卡 

00:35:52.886 --> 00:35:54.121 
不會顯示任何對話 

00:35:54.188 --> 00:35:58.859 
這是因爲埃米莉
是在代碼中創建的 

00:35:58.926 --> 00:36:00.360 
她有各個讀取鍵 

00:36:00.961 --> 00:36:04.765 
如果我也查看約翰的聯繫卡 
我就必須重新讀取了 

00:36:05.532 --> 00:36:08.202 
此時你的app就會
訪問用戶的聯繫人 

00:36:09.469 --> 00:36:13.340 
搞定了 我們可以看到
約翰的所有聯繫人信息 好了 

00:36:16.009 --> 00:36:19.279 
我們的演示結束了 

00:36:19.546 --> 00:36:20.881 
我有點小傷心 

00:36:21.682 --> 00:36:24.184 
我要和約翰
分享下我的情緒 

00:36:32.459 --> 00:36:33.927 
我要把布魯斯請回來
請他

00:36:34.228 --> 00:36:35.429 
結束這次演講 

00:36:39.800 --> 00:36:41.335 
謝謝 
謝謝戴夫和朱利安向我們展示

00:36:41.401 --> 00:36:43.804 
如何在我們的app中
使用聯繫人 

00:36:45.939 --> 00:36:47.808 
你們現在有一個
Objective-C

00:36:47.875 --> 00:36:49.409 
API來訪問聯繫人 

00:36:49.843 --> 00:36:52.779 
它同樣也兼容Swift 

00:36:54.281 --> 00:36:58.118 
聯繫人API在各個Apple平臺上
都一樣 

00:37:00.320 --> 00:37:01.989 
Address book正在被
棄用 

00:37:02.122 --> 00:37:03.790 
因此換新的API吧 

00:37:07.728 --> 00:37:10.230 
要獲取更多信息 
你可以參考開發者庫上

00:37:10.297 --> 00:37:12.299 
“ContactsUI框架參考”
的

00:37:12.799 --> 00:37:13.901 
聯繫人部分 

00:37:15.903 --> 00:37:18.972 
要獲得技術支持 
你可以到開發者論壇 

00:37:20.040 --> 00:37:22.109 
如果是普通諮詢 
保羅會很樂意看郵件 

00:37:22.176 --> 00:37:25.546 
因此你可以給他發郵件 他是
我們的app框架福音傳道者 

00:37:26.013 --> 00:37:26.847 
謝謝 