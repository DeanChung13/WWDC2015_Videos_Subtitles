00:00:19.686 --> 00:00:25.959 
《社交游戏的最新内容》

00:00:32.165 --> 00:00:32.999 
大家好

00:00:33.200 --> 00:00:35.669 
欢迎 感谢大家
来参加我们的讲座

00:00:35.936 --> 00:00:39.840 
我是梅根·加德纳
是游戏和图像小组的软件工程师

00:00:40.274 --> 00:00:43.043 
稍后会有请我的同事
埃德温·艾斯坎达上台

00:00:43.911 --> 00:00:48.815 
我们会谈谈ReplayKit
和游戏中心的社交功能

00:00:50.117 --> 00:00:51.985 
今天准备要
介绍几项内容

00:00:52.085 --> 00:00:53.754 
首先是
游戏中心的最新内容

00:00:54.121 --> 00:00:55.322 
我们有两项新内容

00:00:55.856 --> 00:00:57.491 
基本上是客玩家

00:00:57.558 --> 00:00:59.893 
和新的统一服务器环境

00:01:00.527 --> 00:01:03.297 
埃德温会来给大家
介绍ReplayKit

00:01:03.730 --> 00:01:07.401 
这可以为游戏
增添新的社交体验

00:01:07.634 --> 00:01:11.605 
用户可以与他人
分享自己的游戏体验

00:01:13.073 --> 00:01:15.008 
游戏中心的最新内容是什么呢？

00:01:15.475 --> 00:01:16.310 
那么...

00:01:16.710 --> 00:01:17.578 
游戏中心是什么？

00:01:18.178 --> 00:01:19.279 
希望大家知道答案

00:01:19.346 --> 00:01:20.581 
特别是你参加本次讲座

00:01:20.647 --> 00:01:22.749 
这不是新内容
不过以防万一 我解释一下

00:01:23.383 --> 00:01:25.953 
游戏中心是我们的API和app

00:01:26.053 --> 00:01:30.123 
可以让你作为开发人员
为游戏添加社交体验

00:01:30.624 --> 00:01:33.160 
这可以让用户彼此成为朋友

00:01:33.527 --> 00:01:36.096 
便于开发人员设置排行榜

00:01:36.196 --> 00:01:38.265 
对于用户而言
可以公开分数

00:01:38.465 --> 00:01:41.101 
这样可以和朋友
以及他人来进行比较

00:01:41.668 --> 00:01:44.872 
对你而言
可以确定用户所取得的成绩

00:01:45.272 --> 00:01:49.009 
我们还支持你编写
实时或回合多人游戏

00:01:49.076 --> 00:01:50.677 
所需的一切内容

00:01:50.978 --> 00:01:52.646 
同时不必设置自己的服务器

00:01:53.380 --> 00:01:56.350 
我们还支持将多人元素加入

00:01:56.583 --> 00:01:57.818 
单人游戏中

00:01:59.186 --> 00:02:00.053 
还有什么新的呢？

00:02:00.821 --> 00:02:03.090 
首先 有客玩家

00:02:03.924 --> 00:02:06.460 
目前 在游戏中心
我们有两个主要位置

00:02:06.527 --> 00:02:07.694 
可以遇到玩家

00:02:08.195 --> 00:02:10.062 
首先是GKLocalPlayer

00:02:10.564 --> 00:02:14.868 
每个设备上只有一个必须是
认证的游戏中心用户便行

00:02:15.769 --> 00:02:19.907 
你还作为GKLocalPlayer
的朋友进入GKPlayer

00:02:20.240 --> 00:02:24.278 
但更常见的情况是
作为任何多人游戏的参与者

00:02:24.344 --> 00:02:27.014 
无论是实时或是基于回合均可

00:02:27.848 --> 00:02:28.749 
不过对于这些玩家

00:02:28.815 --> 00:02:31.151 
每个设备只能有一个玩家

00:02:31.818 --> 00:02:32.686 
现在不再是这样了

00:02:33.387 --> 00:02:34.621 
我们现在还有客玩家功能

00:02:35.355 --> 00:02:36.456 
什么是客玩家？

00:02:36.890 --> 00:02:39.726 
他们实际上是
GKPlayer实例

00:02:39.993 --> 00:02:43.230 
使用方法和
其他GKPlayer一样

00:02:43.764 --> 00:02:45.532 
这些不需要认证

00:02:45.832 --> 00:02:48.602 
他们是由你
提供识别符来生成

00:02:48.669 --> 00:02:50.504 
然后我们会把
GKPlayer给你

00:02:51.538 --> 00:02:54.308 
在任何多人游戏中
他们都是一级参与者

00:02:54.508 --> 00:02:56.677 
因此
你可以通过客玩家填充

00:02:57.010 --> 00:02:58.512 
游戏中的其他插槽

00:02:58.846 --> 00:03:02.850 
你需要至少
一个认证的GKPlayer

00:03:03.150 --> 00:03:05.686 
但是其他的内容
均可是这些客玩家

00:03:06.887 --> 00:03:08.488 
客玩家可以
用来做什么呢？

00:03:09.289 --> 00:03:10.824 
他们在通关和
游戏方面都很棒

00:03:11.191 --> 00:03:13.460 
比如你想有个iPad游戏

00:03:13.627 --> 00:03:15.362 
登录了一个玩家

00:03:15.529 --> 00:03:17.164 
其他所有人都想要玩

00:03:17.464 --> 00:03:19.900 
你可以用客玩家填充
其余插槽

00:03:20.300 --> 00:03:23.170 
并可以在用户准备玩的
iPad上

00:03:23.403 --> 00:03:25.005 
准备完全的本地游戏

00:03:25.372 --> 00:03:28.809 
你可以将回合游戏的
游戏逻辑完全按照

00:03:28.876 --> 00:03:30.210 
其他游戏中那般处理

00:03:30.277 --> 00:03:32.479 
可以传递消息
可以传递回合

00:03:32.746 --> 00:03:34.882 
可以像其他
回合游戏中那样

00:03:34.948 --> 00:03:36.917 
发送交换要求

00:03:37.618 --> 00:03:40.654 
这也是插入AI
玩家的不错的方法

00:03:40.888 --> 00:03:44.625 
可以让你和其他方式
一样 拥有相同的游戏逻辑

00:03:44.892 --> 00:03:48.662 
而且还可以让用户可以在
不同层级的AI上游戏

00:03:48.862 --> 00:03:50.764 
这样就可以让他们
更快地学习游戏

00:03:52.165 --> 00:03:56.737 
我刚说过 有了客玩家
你可以定义标识符

00:03:57.004 --> 00:04:01.141 
这个标识符必须在整个
游戏环节都独一无二

00:04:01.575 --> 00:04:03.377 
无论你最后
用的是什么方法

00:04:03.477 --> 00:04:07.314 
确保都不要与标识符
发生任何冲突

00:04:07.381 --> 00:04:10.384 
如果在一个设备上
有一个客玩家

00:04:10.450 --> 00:04:12.152 
在另一个设备上
有另外的客玩家

00:04:12.419 --> 00:04:14.488 
要确保他们不会冲突

00:04:14.555 --> 00:04:17.291 
否则游戏逻辑
可能就会有问题

00:04:18.392 --> 00:04:22.029 
这些客玩家不会
有积分或成绩

00:04:22.863 --> 00:04:25.499 
这也合情合理
因为在服务器上不会公布这些

00:04:26.066 --> 00:04:27.334 
但是你需要对此了解

00:04:29.570 --> 00:04:35.642 
有客玩家的环节
只有在玩家的环节用的

00:04:35.976 --> 00:04:39.279 
也是iOS 9时才会兼容

00:04:39.746 --> 00:04:43.717 
这并不是将你的游戏
限制在iOS 9

00:04:44.051 --> 00:04:48.422 
这只会限制有着
客玩家的单独环节

00:04:48.722 --> 00:04:52.125 
和其他使用iOS 9的
用户相匹配

00:04:52.593 --> 00:04:54.628 
我们想让它变得更容易些

00:04:54.862 --> 00:04:58.465 
我们不会在那些无法参加游戏的
任何人之间进行自动匹 配 

00:04:58.765 --> 00:05:03.237 
如果你的一个用户向无法
参与的某人

00:05:03.804 --> 00:05:05.539 
发送多人游戏的邀请

00:05:05.606 --> 00:05:08.475 
我们会在服务器端
代替他们自动拒绝

00:05:08.842 --> 00:05:10.344 
这样你就不会遇到任何问题

00:05:10.544 --> 00:05:12.179 
不过
你需要明白这一点

00:05:12.679 --> 00:05:14.715 
同样地
这不会锁定你的游戏

00:05:15.082 --> 00:05:17.885 
在兼容性矩阵中规定的
每项内容还依然奏效

00:05:18.285 --> 00:05:21.054 
使用iOS更早版本
运行你的游戏

00:05:21.321 --> 00:05:22.155 
也依然适用

00:05:22.356 --> 00:05:24.892 
这只是指那些
个人可玩性环节

00:05:25.893 --> 00:05:27.060 
这就是客玩家

00:05:27.294 --> 00:05:29.596 
我们真心希望这会让你创造

00:05:29.863 --> 00:05:33.333 
有趣的动态方式
来加入多人游戏中

00:05:33.567 --> 00:05:35.702 
我们非常兴奋地看到
大家就要这么做了

00:05:36.837 --> 00:05:40.140 
接下来 我们有了游戏中心
Sandbox 环境

00:05:41.308 --> 00:05:42.176 
Sandbox

00:05:42.809 --> 00:05:45.812 
是我们用来 
生成单独的环境

00:05:45.879 --> 00:05:48.582 
便于无需生产成品
即可测试游戏

00:05:48.815 --> 00:05:50.150 
中心的功能 

00:05:51.151 --> 00:05:53.987 
但是我们有着...完全
相同的服务器

00:05:54.054 --> 00:05:55.389 
你必须有不同的账户

00:05:55.455 --> 00:05:58.358 
在两处有着
完全相同的数据

00:05:59.159 --> 00:06:00.460 
这非常棒

00:06:00.961 --> 00:06:02.829 
但我们觉得Sandbox
已经...

00:06:03.330 --> 00:06:04.531 
发挥作用

00:06:04.998 --> 00:06:08.702 
现在我们要在制作中
统一Sandbox

00:06:09.903 --> 00:06:12.139 
我们仍然会有两套数据

00:06:12.339 --> 00:06:14.775 
但是都会在相同的
服务器上运行

00:06:15.609 --> 00:06:18.212 
这会给我们带来许多好处

00:06:18.478 --> 00:06:20.480 
这可以简化账户

00:06:20.714 --> 00:06:22.783 
你不再需要有
单独的Sandbox账户  

00:06:22.850 --> 00:06:24.718 
你也不必担心维护问题

00:06:24.952 --> 00:06:28.856 
交友
或处理 任何类似问题

00:06:29.857 --> 00:06:31.825 
这与TestFlight
完全兼容

00:06:31.892 --> 00:06:35.195 
这样你可以把游戏
发送到TestFlight 

00:06:35.429 --> 00:06:36.964 
便于测试方进行测试

00:06:37.364 --> 00:06:39.533 
而无需担心
设置Sandbox的问题

00:06:40.534 --> 00:06:42.436 
多玩家模式可以用于你在

00:06:42.903 --> 00:06:47.741 
服务器上公布的任何版本 

00:06:48.242 --> 00:06:50.911 
而且是自动完成
你不必做任何设置

00:06:50.978 --> 00:06:52.646 
在我们这边会打开开关

00:06:54.014 --> 00:06:55.983 
需要注意这么几点

00:06:56.650 --> 00:06:59.219 
首先 你所工作的
任何新游戏 

00:06:59.286 --> 00:07:02.356 
都会在游戏中心的
你的游戏名单中显示

00:07:02.856 --> 00:07:03.824 
正如大家所见

00:07:04.224 --> 00:07:06.793 
我和demo-liscious
正在研究GK测试团队

00:07:06.927 --> 00:07:08.996 
如果你是demo-liscious
的朋友

00:07:09.129 --> 00:07:12.232 
那么你可以在游戏中心app
点击她的头像

00:07:12.599 --> 00:07:15.502 
如果你点击她的游戏名单 
你就可以上下翻看

00:07:15.569 --> 00:07:16.870 
看到她正在
研究那个游戏

00:07:17.504 --> 00:07:20.440 
如果有个游戏
你不希望别人知道

00:07:20.507 --> 00:07:22.376 
我们建议你可以
设置单独的账户

00:07:24.278 --> 00:07:26.246 
但这应该
不是太大的问题

00:07:28.182 --> 00:07:29.750 
在游戏运行时你所公布的...

00:07:30.017 --> 00:07:31.051 
任何分数

00:07:31.351 --> 00:07:33.687 
都会被公布在同一排行榜

00:07:34.388 --> 00:07:39.493 
iOS 8用户仍需要在设置中

00:07:39.560 --> 00:07:41.828 
打开Sandbox开关

00:07:42.329 --> 00:07:44.631 
因为如果它们认为不该
进入Sandbox环境 

00:07:44.998 --> 00:07:48.635 
我们会自动报错

00:07:48.702 --> 00:07:50.103 
Sandbox并不存在

00:07:50.504 --> 00:07:52.206 
所以它们并不会
在Sandbox中 

00:07:52.272 --> 00:07:54.308 
但会看到部分相同的UI处理

00:07:54.775 --> 00:07:59.680 
不过幸好 大家都可以从
iOS 8升级到iOS 9

00:08:00.047 --> 00:08:01.615 
所以我们也建议
你这么做

00:08:04.051 --> 00:08:07.554 
我们来看这样做对于
所有这些部分意味着什么

00:08:07.621 --> 00:08:08.555 
排行榜

00:08:09.256 --> 00:08:12.826 
所有版本都会在同一个
排行榜

00:08:13.227 --> 00:08:15.896 
但是
如果你更新游戏

00:08:15.963 --> 00:08:18.065 
在其中还添加了
新的排行榜

00:08:18.498 --> 00:08:22.536 
这些排行榜只有你或运行该版本

00:08:22.669 --> 00:08:24.571 
即游戏的更新版本的

00:08:24.805 --> 00:08:26.406 
测试团队可见

00:08:26.707 --> 00:08:28.675 
其他人则无法看到这些排行榜

00:08:29.109 --> 00:08:32.613 
而所有其他内容都会被公布在
相同的制作排行榜上

00:08:33.013 --> 00:08:35.616 
所幸的是 所有内容
都是iTunes Connect

00:08:35.682 --> 00:08:37.985 
这会让你在公布它们或

00:08:38.251 --> 00:08:42.222 
你或测试团队调用任何分数
结果却公布了错误结果

00:08:42.556 --> 00:08:46.093 
或是你不希望
影响排行榜的真实性

00:08:46.159 --> 00:08:47.261 
可以使用当前的工具清除

00:08:47.327 --> 00:08:49.963 
通过 iTunes Connect
可以很轻松进行清除

00:08:51.131 --> 00:08:54.101 
对于多人游戏模式
这是个非常大的好处

00:08:54.501 --> 00:08:57.571 
这让你可以测试
在已经大量

00:08:58.005 --> 00:09:02.943 
制作的游戏中
你的多人游戏模式的升级

00:09:03.243 --> 00:09:04.077 
可以进行测试 

00:09:04.378 --> 00:09:09.883 
但是在产前服务器和
生产服务器之间并无壁垒

00:09:09.950 --> 00:09:11.418 
它们都是同样的服务器

00:09:11.552 --> 00:09:13.987 
你可以轻松测试并确保对多人

00:09:14.054 --> 00:09:16.557 
游戏模式的任何升级 

00:09:16.623 --> 00:09:18.692 
都会有效地
与任何现有内容相适应

00:09:21.161 --> 00:09:22.663 
对于iTunes Connect

00:09:22.729 --> 00:09:25.966 
你将保持两套
完全不同的元数据

00:09:26.033 --> 00:09:28.268 
我们都将在服务器上维护

00:09:28.735 --> 00:09:31.138 
你将会有
当前释放版本的数据

00:09:31.371 --> 00:09:33.774 
以及未释放版本的数据

00:09:34.641 --> 00:09:38.212 
你将获得哪些
数据

00:09:38.378 --> 00:09:40.380 
你或者用户或测试团队

00:09:40.614 --> 00:09:43.417 
则要 取决于在设备上
安装的app的

00:09:43.517 --> 00:09:46.987 
CFBundleVersion

00:09:47.688 --> 00:09:50.123 
如果设备的
CFBundleVersion

00:09:50.524 --> 00:09:54.928 
胜过你将从App Store
获取的松开捆绑版本

00:09:55.195 --> 00:09:57.497 
你将会得到未释放数据

00:09:58.332 --> 00:10:01.468 
如果你的设备上的
CFBundleVersion 

00:10:01.702 --> 00:10:06.073 
小于或等于
你从 App Store下载的

00:10:06.306 --> 00:10:09.343 
松开捆绑版本
你将会得到当前释放的数据

00:10:10.177 --> 00:10:11.845 
如果在App Store中没有

00:10:12.045 --> 00:10:13.747 
那你将获得未释放数据

00:10:13.814 --> 00:10:15.349 
这是存在的唯一数据

00:10:17.251 --> 00:10:18.418 
我们再来看一遍

00:10:19.353 --> 00:10:24.157 
如果你和测试团队之一
在运行游戏的...

00:10:25.092 --> 00:10:26.393 
beta版本 

00:10:26.760 --> 00:10:31.632 
那么游戏中心app中
你的好友将可以看到这款游戏

00:10:32.199 --> 00:10:34.501 
你还可以玩其他的
beta版本

00:10:34.835 --> 00:10:36.170 
这是那里仅有的版本

00:10:36.637 --> 00:10:38.338 
你将在beta排行榜上
公布内容

00:10:38.405 --> 00:10:40.440 
现有的只有这些排行榜

00:10:41.775 --> 00:10:46.113 
如果你和用户之一
在运行游戏的发行版本

00:10:47.047 --> 00:10:48.448 
这是常见的情况

00:10:48.649 --> 00:10:51.051 
你还可以在
游戏中心看到游戏

00:10:51.118 --> 00:10:52.653 
是在游戏中心的
好友名单的位置

00:10:52.853 --> 00:10:55.589 
如果是多人游戏
你可以在兼容性矩阵

00:10:55.656 --> 00:10:59.927 
和iTunes Connect中
指定的任何版本来玩

00:11:00.227 --> 00:11:01.828 
其中包括游戏不一定...

00:11:02.196 --> 00:11:05.632 
知道的版本

00:11:05.699 --> 00:11:08.202 
因为兼容性矩阵是存储在
服务器上

00:11:08.335 --> 00:11:09.903 
而服务器知道
你会匹配

00:11:09.970 --> 00:11:11.338 
这些未释放的游戏

00:11:12.239 --> 00:11:14.107 
正如你所期望的那样
你会公布

00:11:14.308 --> 00:11:15.242 
释放的排行榜

00:11:16.109 --> 00:11:18.679 
如果你和测试团队之一

00:11:18.912 --> 00:11:21.682 
在运行游戏尚未公布的 
更新版本

00:11:22.249 --> 00:11:26.053 
游戏仍从游戏中心
的游戏中心好友名单可见

00:11:26.787 --> 00:11:29.857 
你还可以玩其他的指定版本

00:11:29.923 --> 00:11:34.428 
无论是游戏的较早版本
还是正在测试的游戏的新版本

00:11:34.895 --> 00:11:38.165 
兼容性矩阵所指定的任何内容
你都可以玩

00:11:38.932 --> 00:11:42.269 
然后如果排行榜   
已经存在

00:11:44.638 --> 00:11:46.607 
你将公布释放排行榜

00:11:46.974 --> 00:11:49.810 
或者要公布未释放的排行榜

00:11:50.110 --> 00:11:52.379 
如果是该游戏和
这些游戏的新排行榜的话

00:11:52.613 --> 00:11:55.315 
这些排行榜只能被系统中

00:11:55.716 --> 00:12:00.521 
已有游戏版本的人们看到

00:12:02.322 --> 00:12:03.323 
这就是新增内容

00:12:03.657 --> 00:12:06.426 
首先是我们希望为游戏

00:12:06.493 --> 00:12:08.896 
扩大多人
游戏机会的客玩家

00:12:10.330 --> 00:12:13.200 
以及统一的服务器环境

00:12:13.734 --> 00:12:16.170 
这其实很简单 是自动完成

00:12:16.336 --> 00:12:18.305 
你无需进行任何设置

00:12:18.705 --> 00:12:20.741 
它会与TestFlight
配合良好

00:12:20.807 --> 00:12:23.443 
我们觉得大家会有更好的方法

00:12:23.510 --> 00:12:25.746 
对游戏进行功能测试

00:12:26.613 --> 00:12:27.748 
我觉得这一定会让大家

00:12:27.814 --> 00:12:29.516 
觉得生活轻松了许多

00:12:31.285 --> 00:12:32.886 
现在请埃德温上台

00:12:32.953 --> 00:12:35.956 
他会给大家讲讲最新框架
重放工具

00:12:41.161 --> 00:12:41.995 
好

00:12:42.496 --> 00:12:43.330 
谢谢 梅根

00:12:43.964 --> 00:12:45.799 
下午好 我是
埃德温·艾斯坎达

00:12:45.866 --> 00:12:48.602 
是Apple的图形和
游戏团队的软件工程师

00:12:49.102 --> 00:12:51.405 
我来和大家
讲讲ReplayKit

00:12:52.573 --> 00:12:55.342 
在游戏领域发生了
一些非常难忘的时刻

00:12:55.843 --> 00:12:57.678 
例如你终于在
看似不可能的程度

00:12:57.811 --> 00:12:59.479 
实现了三颗星

00:13:00.647 --> 00:13:02.382 
或是你终于打败了大老板

00:13:02.449 --> 00:13:04.051 
而自己毫发无损

00:13:04.918 --> 00:13:06.787 
如果能够捕捉
并分享这些时刻

00:13:07.087 --> 00:13:08.021 
那该有多棒啊？

00:13:09.356 --> 00:13:10.891 
于是就有了
ReplayKit

00:13:12.159 --> 00:13:14.561 
ReplayKit记录
运行应用的

00:13:14.828 --> 00:13:15.929 
视频和音频部分

00:13:17.064 --> 00:13:19.566 
它可以实现增加语音评论

00:13:19.867 --> 00:13:21.735 
这样可以令录音
更具个人特点

00:13:22.069 --> 00:13:23.871 
或可增添上下文

00:13:25.372 --> 00:13:26.773 
还可以允许用户
进行回放

00:13:26.940 --> 00:13:28.742 
整理和修整录音

00:13:29.042 --> 00:13:29.877 
最后

00:13:29.943 --> 00:13:32.246 
分享录音到他们所喜爱的
社交网络和视频

00:13:33.080 --> 00:13:34.248 
目的地网站

00:13:35.949 --> 00:13:38.919 
ReplayKit会生成
高质量的HD录音

00:13:39.553 --> 00:13:42.890 
在TV 网站和移动设备上
播放效果都很好

00:13:43.891 --> 00:13:45.626 
这样做效率极高

00:13:45.993 --> 00:13:47.427 
可实现性能影响较低

00:13:47.995 --> 00:13:49.730 
同时可以将功率使用降到最小

00:13:51.665 --> 00:13:54.168 
ReplayKit包括
隐私保护功能

00:13:54.234 --> 00:13:55.502 
可以帮助保护用户隐私

00:13:55.869 --> 00:13:57.938 
在接下来的幻灯片中
我们会详细介绍

00:13:59.606 --> 00:14:01.842 
在iOS 9 beta版 
就有这一功能

00:14:03.443 --> 00:14:05.946 
晚些时候到秋天
当iOS 9上市 客户就可用到

00:14:07.948 --> 00:14:11.084 
在所有A7和A8的设备中
均可使用

00:14:13.620 --> 00:14:15.088 
和所有的Apple框架一样

00:14:15.155 --> 00:14:17.724 
ReplayKit也很重视
用户的隐私

00:14:18.559 --> 00:14:20.327 
在ReplayKit
开始录制之前

00:14:21.195 --> 00:14:22.930 
它需要用户提供许可

00:14:23.230 --> 00:14:24.965 
是通过用户同意
弹窗来实现

00:14:26.834 --> 00:14:29.136 
ReplayKit还支持
家长控制功能

00:14:29.770 --> 00:14:32.306 
如果孩子会经常用设备 

00:14:32.639 --> 00:14:35.642 
你可以通过设置在
整个系统关闭ReplayKit功能

00:14:38.078 --> 00:14:41.615 
通过ReplayKit制作的
所有录制都不包括系统UI

00:14:41.682 --> 00:14:44.351 
这意味着
在录制期间所发出的

00:14:44.585 --> 00:14:46.320 
任何个人通知
都不会包括在内

00:14:46.920 --> 00:14:49.556 
游戏中的任何键盘
输入也是如此

00:14:51.825 --> 00:14:54.461 
最后 应用
不会直接访问

00:14:54.795 --> 00:14:55.629 
电影文件

00:14:55.896 --> 00:14:57.764 
只能通过ReplayKit的

00:14:58.232 --> 00:15:01.134 
预览UI和分享列表
用户才能访问

00:15:03.003 --> 00:15:05.305 
好
我们先通过架构来看

00:15:05.506 --> 00:15:07.074 
ReplayKit 
如何发挥作用

00:15:08.775 --> 00:15:11.645 
这样应用
就连接到ReplayKit框架

00:15:12.913 --> 00:15:15.449 
它会用到两个类
RPScreenRecorder

00:15:15.682 --> 00:15:16.950 
来处理录制任务

00:15:17.618 --> 00:15:20.153 
RPPreviewViewController

00:15:20.220 --> 00:15:21.955 
负责预览UI和分享列表

00:15:23.257 --> 00:15:25.025 
RPScreenRecorder

00:15:25.659 --> 00:15:27.227 
会与中继精灵沟通

00:15:27.394 --> 00:15:29.196 
这是应用的单独过程

00:15:30.197 --> 00:15:33.767 
中继精灵与较低
水平的视频和音频服务沟通

00:15:34.134 --> 00:15:36.136 
这些服务相继与

00:15:36.803 --> 00:15:40.040 
硬件沟通来捕获
应用和视频和音频

00:15:40.507 --> 00:15:42.743 
并会从设备的麦克风
获取音频数据

00:15:44.511 --> 00:15:45.612 
在捕获过程中

00:15:45.679 --> 00:15:49.483 
中继精灵
会实时对数据进行编码

00:15:49.550 --> 00:15:50.717 
并把它写入电影文件

00:15:51.618 --> 00:15:54.288 
它写入电影文件的
位置只能通过

00:15:54.354 --> 00:15:56.323 
ReplayKits内部服务访问

00:15:57.157 --> 00:16:00.060 
用户实际上是怎样
和影片互动呢？

00:16:01.628 --> 00:16:03.830 
当你告知
RPScreenRecorder

00:16:03.897 --> 00:16:07.534 
停止录制时 它会返回
RPPreviewViewController

00:16:07.968 --> 00:16:08.969 
你就可以

00:16:09.369 --> 00:16:10.237 
把它显示出来

00:16:10.504 --> 00:16:12.806 
RPPreviewViewController

00:16:12.873 --> 00:16:14.241 
显示预览并分享可以访问

00:16:14.675 --> 00:16:16.176 
影片的扩展

00:16:17.411 --> 00:16:19.246 
而用户可以与之互动

00:16:19.913 --> 00:16:21.715 
来预览并分享影片

00:16:22.950 --> 00:16:25.352 
正如大家所见
这是相当复杂的系统

00:16:25.419 --> 00:16:26.420 
有很多变动的部分

00:16:26.987 --> 00:16:28.589 
不过幸好
对于开发人员而言

00:16:29.122 --> 00:16:31.124 
只是归结为这两类

00:16:31.458 --> 00:16:34.194 
RPScreenRecorder和
RPPreviewViewController

00:16:34.428 --> 00:16:35.262 
很简单

00:16:37.297 --> 00:16:39.800 
好
我们先仔细来看这些类

00:16:41.635 --> 00:16:44.204 
首先是
RPScreenRecorder

00:16:44.538 --> 00:16:46.473 
同样 它负责
开始 停止

00:16:46.540 --> 00:16:47.708 
丢弃录制结果

00:16:48.342 --> 00:16:51.111 
它还可以用于检查录制能力

00:16:51.845 --> 00:16:52.679 
它还可以用于

00:16:52.746 --> 00:16:54.515 
启动麦克风进行评注

00:16:55.549 --> 00:16:57.050 
RPScreenRecorder

00:16:57.417 --> 00:16:58.685 
有委托 你可以 

00:16:58.752 --> 00:16:59.653 
设置委托使其符合

00:16:59.720 --> 00:17:02.122 
RPScreenRecorder
委托协议

00:17:03.290 --> 00:17:06.260 
委托可以用来
检查可用性的改变

00:17:07.227 --> 00:17:09.463 
例如由于出现错误

00:17:09.530 --> 00:17:10.696 
录制会停止工作的情况

00:17:12.799 --> 00:17:15.335 
在第二类中
RPPreviewViewController

00:17:15.402 --> 00:17:17.404 
同样 它负责
预览录制 编辑

00:17:17.471 --> 00:17:19.705 
剪辑以及最后
分享影片

00:17:20.807 --> 00:17:23.676 
RPPreviewViewController
也有有委托

00:17:24.511 --> 00:17:25.712 
你可以设置委托使其符合

00:17:25.779 --> 00:17:28.214 
RPPreviewViewControllerDelegate
协议

00:17:29.216 --> 00:17:32.019 
当用户进行
预览和分享时

00:17:32.486 --> 00:17:34.154 
这可以用来
取消视图控制器

00:17:36.123 --> 00:17:36.957 
就是这样

00:17:37.024 --> 00:17:39.226 
其实只有两类和两个协议

00:17:39.293 --> 00:17:40.727 
这是个精简版框架

00:17:41.028 --> 00:17:43.497 
大家会看到
用起来非常简单

00:17:45.132 --> 00:17:47.201 
我们来看API具体怎么用

00:17:47.467 --> 00:17:50.170 
我认为最好是
举例说明

00:17:51.405 --> 00:17:52.940 
我们的例子是

00:17:53.207 --> 00:17:56.510 
样本代码团队生成的
DemoBots游戏

00:17:56.577 --> 00:17:58.011 
大家可能在其他
讲座中见过它

00:17:58.712 --> 00:17:59.980 
不过万一你还不了解

00:18:00.047 --> 00:18:01.915 
我来介绍一下 DemoBots
的前提是

00:18:01.982 --> 00:18:05.252 
你有这个任务
自动程序所在的电路板

00:18:06.453 --> 00:18:09.056 
而且任务自动程序负责
保持电路板的运转

00:18:09.189 --> 00:18:11.458 
不过可惜的是
所有的自动程序都有问题

00:18:12.092 --> 00:18:13.627 
你需要进行调试

00:18:14.595 --> 00:18:17.831 
DemoBots的每个层次
都要用2-3分钟

00:18:17.998 --> 00:18:19.366 
这是个小游戏环节

00:18:20.567 --> 00:18:22.803 
可以在
developer.Apple.com

00:18:22.870 --> 00:18:23.704 
下载资源

00:18:23.770 --> 00:18:24.638 
你必定要去看一下

00:18:24.972 --> 00:18:27.441 
其中显示了很多
Apple的最新游戏技术

00:18:27.741 --> 00:18:28.842 
这是个相当不错的样本

00:18:30.677 --> 00:18:34.314 
我们选择DemoBots
来展示ReplayKit 

00:18:34.381 --> 00:18:35.983 
原因之一是
场景流非常不错

00:18:36.049 --> 00:18:37.417 
这在iOS游戏中很常见

00:18:38.118 --> 00:18:40.354 
一旦启动DemoBots
你就会被视作主菜单

00:18:41.121 --> 00:18:42.022 
从主菜单

00:18:42.489 --> 00:18:43.423 
可以启动游戏

00:18:43.490 --> 00:18:44.825 
它会把你转到游戏关卡

00:18:46.059 --> 00:18:49.263 
在游戏关卡
如果你成功或失败

00:18:49.329 --> 00:18:51.431 
就会被转到
关卡结束场景

00:18:51.965 --> 00:18:53.233 
从关卡结束场景

00:18:54.034 --> 00:18:56.036 
你可以重玩这一关
或进入下一关

00:18:57.171 --> 00:18:59.540 
那么我们现在
了解到场景流是什么样子

00:18:59.706 --> 00:19:01.508 
我们来看
ReplayKit怎样匹配

00:19:02.609 --> 00:19:05.412 
因为我们知道DemoBots 
有着小游戏环节

00:19:05.746 --> 00:19:08.015 
我们可以选择
自动录制策略

00:19:08.615 --> 00:19:09.950 
我的意思是说

00:19:10.017 --> 00:19:12.252 
我们会告知ReplayKit

00:19:12.319 --> 00:19:15.088 
在游戏关卡开始时
立刻开始录制

00:19:16.089 --> 00:19:17.658 
我们还想告知
在游戏关卡结束时

00:19:17.991 --> 00:19:18.859 
要停止录制

00:19:20.827 --> 00:19:23.630 
我们想让用户
可以预览和分享录制结果

00:19:24.298 --> 00:19:26.834 
但是我们不想在录制结束时 
立即这么做 对么？

00:19:27.534 --> 00:19:29.403 
我们想在所有
动作都消失后再这么做

00:19:29.469 --> 00:19:31.505 
最理想的位置是
在关卡结束场景

00:19:33.574 --> 00:19:34.775 
非常简单

00:19:35.042 --> 00:19:36.343 
我们来走一遍

00:19:37.377 --> 00:19:38.545 
首先是主菜单

00:19:39.546 --> 00:19:41.615 
因为我们在用
自动录制策略

00:19:41.849 --> 00:19:44.484 
我们想让用户
关闭这个功能

00:19:44.551 --> 00:19:46.720 
如果他们不想
自动录制每个关卡

00:19:47.354 --> 00:19:50.924 
为此
我们执行了顶部的自动录制按钮

00:19:50.991 --> 00:19:53.427 
用户可以用来
打开关闭这个行为

00:19:55.195 --> 00:19:56.797 
比如 用户打开了

00:19:57.631 --> 00:20:00.033 
这个功能
接着按下新游戏按钮

00:20:00.467 --> 00:20:03.737 
在此刻 我们转到
游戏实际所在的游戏关卡

00:20:04.137 --> 00:20:06.139 
我们想告知ReplayKit
开始录制

00:20:06.940 --> 00:20:08.842 
我们来看
代码中是什么样

00:20:11.078 --> 00:20:14.047 
首先 我们需要
RPScreenRecorder的实例

00:20:14.715 --> 00:20:17.918 
在每个应用中都有
RPScreenRecorder的分享实例

00:20:18.118 --> 00:20:21.021 
可以通过类功能访问
分享的录制工具

00:20:21.755 --> 00:20:22.589 
相当简单

00:20:23.790 --> 00:20:24.892 
开始录制

00:20:25.192 --> 00:20:27.427 
通过在共享的实例中
启动麦克风

00:20:28.228 --> 00:20:29.329 
我们调用开始录制功能

00:20:29.830 --> 00:20:32.999 
这里你可以明确
是否要开启或关闭语音评论

00:20:34.067 --> 00:20:36.470 
你还会提供处理程序块

00:20:37.404 --> 00:20:40.874 
该程序块提供了
可选的NSError

00:20:41.808 --> 00:20:43.177 
如果在这里收到错误信息

00:20:43.243 --> 00:20:44.444 
则应做相应处理

00:20:44.945 --> 00:20:46.580 
本例中
我们会暂停游戏

00:20:46.780 --> 00:20:48.215 
提示用户录制也会失败

00:20:50.350 --> 00:20:52.519 
一旦启动麦克风开始录制

00:20:53.287 --> 00:20:56.723 
用户就会看到
用户同意弹窗

00:20:57.524 --> 00:20:59.660 
此刻
用户会有三个选项

00:21:00.060 --> 00:21:01.028 
他可以选择录制屏幕

00:21:01.094 --> 00:21:03.497 
麦克风启动语音评论

00:21:04.765 --> 00:21:06.233 
他们可以只录制屏幕

00:21:07.067 --> 00:21:09.703 
或不允许进行录制

00:21:11.171 --> 00:21:14.274 
因此每次用户启动麦克风
开始录制时

00:21:14.341 --> 00:21:16.310 
同意弹窗会调用

00:21:16.810 --> 00:21:18.812 
但是一旦用户已经接受

00:21:19.213 --> 00:21:21.014 
它就不会在接下来的

00:21:21.381 --> 00:21:22.249 
8分钟内再次出现

00:21:24.685 --> 00:21:27.354 
假设用户现在希望
启动语音评论功能

00:21:27.421 --> 00:21:28.589 
并要录制屏幕

00:21:29.323 --> 00:21:31.225 
所以他们会按下录制
屏幕和麦克风按钮

00:21:33.227 --> 00:21:36.029 
好的 此刻
ReplayKit开始录制

00:21:36.363 --> 00:21:38.065 
游戏开始
用户开始打游戏

00:21:38.565 --> 00:21:40.200 
提供语音评论
等种种

00:21:42.769 --> 00:21:46.273 
他们会对这一具体关卡
调试所有的任务自动程序

00:21:46.507 --> 00:21:48.709 
此刻 他们打通的关卡
我们希望转到

00:21:48.775 --> 00:21:49.710 
关卡结束场景

00:21:50.344 --> 00:21:51.578 
在这么做之前
我们想要告知

00:21:51.912 --> 00:21:53.680 
ReplayKit
停止用代码录制 

00:21:54.882 --> 00:21:58.886 
我们只想
在共享的录制工具实例中

00:21:59.253 --> 00:22:00.721 
用处理程序
停止录制

00:22:02.723 --> 00:22:05.425 
然后处理程序阻止了
应用的可选NSError

00:22:05.993 --> 00:22:07.394 
和可选预览视图控制器

00:22:08.428 --> 00:22:11.031 
同样
适度处理错误

00:22:11.465 --> 00:22:13.901 
对于预览视图控制器
你有两个选项

00:22:14.434 --> 00:22:15.936 
可以立即显示

00:22:17.404 --> 00:22:19.306 
或是放在一边
以后使用

00:22:19.740 --> 00:22:22.442 
我们要先放在一旁
因为还不想现在就显示

00:22:24.444 --> 00:22:26.280 
ReplayKit已经停止录制

00:22:26.346 --> 00:22:27.714 
现在我们转到关卡结束场景

00:22:28.382 --> 00:22:30.751 
这里我们想让用户
预览和分享他们的影片

00:22:31.618 --> 00:22:34.755 
我们执行播放录制按钮
就在右上方

00:22:36.323 --> 00:22:37.624 
用户轻轻点击

00:22:41.528 --> 00:22:43.096 
我们想要显示预览UI

00:22:43.163 --> 00:22:46.667 
用代码来实现 我们只需调用
UIViewController

00:22:46.733 --> 00:22:48.101 
在呈现动画视图控制器时

00:22:49.102 --> 00:22:50.904 
我们临时接入了
预览视图控制器

00:22:50.971 --> 00:22:53.173 
这是我们之前
作为参考的

00:22:55.475 --> 00:22:57.778 
这就带入了
重放工具的预览UI

00:22:57.845 --> 00:22:59.580 
用户可以整理

00:23:01.281 --> 00:23:02.115 
剪辑

00:23:03.217 --> 00:23:04.651 
并最后分享
到他们的录制结果

00:23:05.619 --> 00:23:07.287 
使用ReplayKit的分享UI

00:23:08.121 --> 00:23:10.691 
这样分享UI
和UI分享预览控制器一起执行

00:23:11.058 --> 00:23:14.428 
这样你甚至可以在app中
编写自己的自定义分享扩展

00:23:15.329 --> 00:23:16.163 
这非常酷

00:23:17.564 --> 00:23:21.301 
假设用户想要
在Facebook分享视频

00:23:21.435 --> 00:23:22.736 
点击Facebook按钮

00:23:23.237 --> 00:23:24.771 
Facebook就会浮现出来

00:23:25.906 --> 00:23:28.509 
视频已经附上
他们可以编写自定义的信息

00:23:28.575 --> 00:23:31.478 
随后只需按下发表
就会在信息来源显示

00:23:31.979 --> 00:23:33.547 
用户使用起来非常简便

00:23:34.848 --> 00:23:35.849 
而且充满乐趣

00:23:38.452 --> 00:23:42.356 
现在视频已经发布到
用于的Facebook信息来源

00:23:42.689 --> 00:23:44.391 
他们可以分享和预览

00:23:44.558 --> 00:23:47.127 
现在他们想取消
并丢弃预览UI

00:23:47.828 --> 00:23:49.530 
记住
我们显示了预览UI

00:23:50.764 --> 00:23:52.399 
我们也负责丢弃它

00:23:53.500 --> 00:23:54.801 
要处理丢弃功能

00:23:56.203 --> 00:23:58.438 
只要设置预览
视图控制器委托

00:23:59.673 --> 00:24:00.941 
该委托需要符合

00:24:01.008 --> 00:24:03.710 
RPPreviewViewController
委托协议

00:24:04.411 --> 00:24:06.647 
并应执行
预览控制器

00:24:06.847 --> 00:24:08.982 
最后要提供
预览视图控制器

00:24:09.449 --> 00:24:12.085 
你可以在预览视图
控制器上调用

00:24:12.819 --> 00:24:13.954 
丢弃动画视图控制器即可

00:24:16.723 --> 00:24:18.091 
基本是这样

00:24:18.325 --> 00:24:20.260 
只要两行代码

00:24:20.661 --> 00:24:22.062 
我们在DemoBots中

00:24:22.129 --> 00:24:23.764 
有ReplayKit的基本执行

00:24:23.830 --> 00:24:24.865 
这非常简单

00:24:25.132 --> 00:24:28.802 
总结一下 我们介绍了
录制工具的分享实例

00:24:29.469 --> 00:24:31.138 
如何停止和开启录制工具

00:24:32.172 --> 00:24:34.575 
如果显示和取消预览UI

00:24:36.310 --> 00:24:38.212 
现在我们介绍了基本内容

00:24:38.545 --> 00:24:40.414 
我们接下来进入更高级的内容

00:24:40.981 --> 00:24:43.217 
微调ReplayKit执行

00:24:45.385 --> 00:24:47.321 
首先要证实可用性

00:24:48.488 --> 00:24:51.558 
出于若干原因 ReplayKit 
可以是可用

00:24:51.625 --> 00:24:52.459 
或是不可用

00:24:53.760 --> 00:24:56.797 
ReplayKit使用的
捕捉视频内容的技术

00:24:57.164 --> 00:24:58.599 
和AirPlay与TV相同

00:24:59.132 --> 00:25:01.235 
不过
它无法与这两种服务中的

00:25:01.568 --> 00:25:02.936 
任何一种同时使用

00:25:04.538 --> 00:25:07.274 
正如我提到的
A7和A8设备

00:25:07.341 --> 00:25:09.142 
支持ReplayKit

00:25:10.143 --> 00:25:12.813 
在更早的设备上
ReplayKit不可用

00:25:14.314 --> 00:25:15.749 
要想检查可用性

00:25:16.116 --> 00:25:20.220 
只需...查询可用属性和
RPScreenRecorder即可

00:25:21.855 --> 00:25:23.590 
如果不可用该怎么办？

00:25:23.891 --> 00:25:27.194 
只需把游戏或app中的
录制UI丢弃就好

00:25:29.062 --> 00:25:31.098 
因为可用性可以实时改变

00:25:32.499 --> 00:25:35.369 
你可以执行
RPScreenRecorder

00:25:35.435 --> 00:25:37.204 
委托屏幕录制工具
来改变可用性

00:25:37.437 --> 00:25:38.939 
来注意可用性方面的改变

00:25:41.108 --> 00:25:43.243 
给个小例子 
还记得我们在DemoBots中的

00:25:43.310 --> 00:25:44.478 
自动录制开关吗？

00:25:44.912 --> 00:25:46.813 
如果ReplayKits
在设备上不可用 

00:25:46.880 --> 00:25:48.248 
我们不想显示那个开关 对吗？

00:25:49.583 --> 00:25:53.020 
在RPScreenRecorder 
询问可用属性

00:25:53.387 --> 00:25:56.290 
用它来驱动录制
开关按钮的可见性

00:25:57.124 --> 00:25:57.958 
很简单

00:25:59.426 --> 00:26:01.195 
接下来是丢弃录制结果

00:26:02.529 --> 00:26:05.699 
因此ReplayKit 
在新录制开始时 

00:26:05.766 --> 00:26:07.067 
会自动丢弃之前的录制

00:26:08.068 --> 00:26:11.805 
当前
每个应用每次只有一个录制

00:26:13.040 --> 00:26:14.374 
但是在有些情况下

00:26:14.441 --> 00:26:17.678 
用户不会再访问预览UI

00:26:18.846 --> 00:26:20.314 
你可能想尽早丢弃它

00:26:20.781 --> 00:26:22.683 
在我们的DemoBots实例中

00:26:23.650 --> 00:26:26.720 
如果用户从关卡结束场景转换

00:26:27.020 --> 00:26:29.223 
要知道他们将无法再
预览视频

00:26:29.323 --> 00:26:30.490 
因此你应该把它丢弃掉

00:26:31.458 --> 00:26:32.759 
用代码来实现

00:26:33.160 --> 00:26:34.228 
在具体本例中

00:26:34.561 --> 00:26:36.363 
我将转至
下一个关卡的场景

00:26:36.530 --> 00:26:37.798 
下一种方法

00:26:38.332 --> 00:26:40.734 
我们将用
处理程序调用丢弃录制

00:26:42.236 --> 00:26:43.303 
一旦返回

00:26:43.704 --> 00:26:44.905 
我们就会
转到下一个关卡

00:26:47.875 --> 00:26:49.409 
接下来是录制指示器

00:26:50.811 --> 00:26:52.446 
当ReplayKit进行录制时

00:26:53.213 --> 00:26:55.849 
你可能会告知用户
录制正在进行中

00:26:56.517 --> 00:26:58.952 
以及语音评论
是否打开或关闭

00:27:00.487 --> 00:27:03.590 
为实现这点 
你可以直接询问录制工具

00:27:03.657 --> 00:27:06.293 
麦克风启动
RPScreenRecorder的属性

00:27:07.227 --> 00:27:09.863 
并使用这些值
打开录制指示器

00:27:10.063 --> 00:27:11.231 
的可见性

00:27:12.266 --> 00:27:13.333 
同样是非常简单

00:27:15.569 --> 00:27:17.271 
接下来是排除UI

00:27:19.006 --> 00:27:21.008 
游戏中有些元素

00:27:21.508 --> 00:27:22.876 
对用户而言非常有用

00:27:24.077 --> 00:27:26.013 
<br/> 
但是对观众来说很是无趣

00:27:26.446 --> 00:27:28.615 
我们来介绍其中的一项
录制指示器

00:27:29.049 --> 00:27:30.350 
用户了解它非常重要

00:27:30.651 --> 00:27:32.386 
但是对观众来说就相当无用

00:27:32.653 --> 00:27:35.088 
他们了解录制功能
是打开状态

00:27:35.155 --> 00:27:37.224 
语音评论也已打开
因为他们在观看视频 对吧？

00:27:39.526 --> 00:27:40.827 
所以你可能想
排除这些功能

00:27:41.361 --> 00:27:43.430 
还有两个例子是
关于虚拟控制

00:27:43.697 --> 00:27:45.199 
暂停和菜单按钮

00:27:45.799 --> 00:27:47.367 
这可能会扰乱录制过程

00:27:47.634 --> 00:27:49.169 
且对观众而言并不必要

00:27:50.771 --> 00:27:52.673 
怎样从ReplayKit排除UI？

00:27:55.075 --> 00:27:58.178 
ReplayKit只会记录
应用的主UI窗口

00:27:58.812 --> 00:28:00.681 
如果你想要排除任何UI

00:28:01.148 --> 00:28:02.015 
你只需...

00:28:02.816 --> 00:28:04.484 
创建UI窗口的新实例

00:28:05.519 --> 00:28:07.654 
并把想要隐藏的任何元素

00:28:08.121 --> 00:28:08.989 
放入新实例中即可

00:28:11.058 --> 00:28:11.992 
这就可以排除UI

00:28:14.494 --> 00:28:16.663 
接下来是要选择
何时开始录制

00:28:18.165 --> 00:28:19.933 
如果你还记得在DemoBots中

00:28:20.300 --> 00:28:21.668 
我们知道DemoBots

00:28:22.069 --> 00:28:23.504 
有小游戏环节

00:28:23.570 --> 00:28:24.838 
只有两三分钟长度

00:28:26.073 --> 00:28:27.908 
我们会采取
自动录制策略

00:28:27.975 --> 00:28:30.077 
这样可以自动
录制每个游戏关卡

00:28:31.678 --> 00:28:33.313 
但是部分游戏
是不一样的 对吧？

00:28:34.581 --> 00:28:35.849 
例如 在RPG

00:28:36.250 --> 00:28:37.951 
游戏可玩性环节就会较长

00:28:38.318 --> 00:28:40.254 
可能会有更长
的有趣事件

00:28:40.621 --> 00:28:43.290 
但是没必要
把整个环节都录制下来

00:28:43.624 --> 00:28:45.993 
相反 应该让用户
可按照自己意愿

00:28:46.059 --> 00:28:47.261 
开始或停止录制

00:28:48.595 --> 00:28:51.665 
为此 你只需搭建
自己的录制控制功能

00:28:52.432 --> 00:28:53.967 
让用户可以实现这一点

00:28:56.036 --> 00:28:57.504 
同样每个游戏情况都不同

00:28:58.138 --> 00:29:01.441 
所以需要选择适合自己的
具体游戏类型的情况

00:29:04.211 --> 00:29:07.147 
好的
实际上最后也就是微调环节

00:29:08.582 --> 00:29:10.551 
我们接下来讨论了如何
证实可用性

00:29:11.051 --> 00:29:12.386 
如何丢弃录制结果

00:29:12.853 --> 00:29:14.054 
如何显示指示器

00:29:14.621 --> 00:29:16.190 
如何排除任何UI

00:29:16.256 --> 00:29:18.759 
以及为游戏选择
最佳的录制策略

00:29:22.162 --> 00:29:23.597 
现在我们来给大家
看一段演示

00:29:24.531 --> 00:29:25.732 
在两周前

00:29:26.200 --> 00:29:29.069 
我们邀请时空工作室来到
库柏蒂诺

00:29:29.436 --> 00:29:30.637 
检查ReplayKit 

00:29:30.938 --> 00:29:32.039 
并试着将它用于...

00:29:32.472 --> 00:29:34.208 
新游戏《冠军的召唤》

00:29:34.808 --> 00:29:36.577 
我想把讲台交给
时空工作室的...

00:29:36.777 --> 00:29:37.711 
辛科·巴尼斯

00:29:38.712 --> 00:29:41.081 
让他和大家分享自己的经验

00:29:41.615 --> 00:29:42.449 
欢迎辛科

00:29:45.819 --> 00:29:46.653 
谢谢 埃德温

00:29:47.387 --> 00:29:48.388 
我是辛科·巴尼斯

00:29:48.722 --> 00:29:53.293 
2005年的时候 我和伙伴们
成立了时空工作室

00:29:53.827 --> 00:29:58.932 
我们是想制作硬核PC游戏

00:29:59.166 --> 00:30:05.973 
但是在2009年 因iOS和
首台iPad这些都不再考虑

00:30:06.039 --> 00:30:07.774 
我们推出了
《口袋传奇》游戏

00:30:08.141 --> 00:30:10.244 
之后 我们就一直专注于
iOS游戏平台

00:30:10.310 --> 00:30:12.179 
这一切都非常神奇

00:30:12.646 --> 00:30:15.983 
今天 我来和大家
谈谈《冠军的召唤》

00:30:16.049 --> 00:30:18.018 
以此作为ReplayKit的实例

00:30:18.085 --> 00:30:20.888 
我的确想和大家谈谈
它怎样影响了游戏本身

00:30:21.154 --> 00:30:24.892 
但是更主要的是
它如何搭建社区

00:30:24.958 --> 00:30:27.261 
特别是对我们来说
游戏人员的社区 

00:30:27.828 --> 00:30:29.496 
活跃的游戏人员

00:30:29.897 --> 00:30:32.999 
我想给大家
介绍一点我们的历史

00:30:33.300 --> 00:30:37.604 
时空工作室
一直在致力于硬核游戏

00:30:37.671 --> 00:30:43.277 
提取精华 并融入
手机游戏风格中

00:30:43.677 --> 00:30:45.712 
通过这种方法
我们在试图

00:30:45.779 --> 00:30:49.383 
提供可以立刻访问的内容
和具体战略丰富性的内容方面

00:30:49.683 --> 00:30:51.885 
找到了自己的强项

00:30:52.486 --> 00:30:55.822 
我们的下一个产品是
《冠军的召唤》

00:30:55.889 --> 00:30:59.359 
《冠军的召唤》是个
手机打斗竞技场

00:30:59.626 --> 00:31:01.929 
是个三对三的团队游戏

00:31:02.196 --> 00:31:05.332 
赛道机制是受到
橄榄球的启发

00:31:05.566 --> 00:31:07.868 
它是按照射手风格
在中间开启

00:31:08.268 --> 00:31:12.206 
主要内容是
挤入一个5分钟的

00:31:12.272 --> 00:31:14.308 
混合武术打斗环节

00:31:14.775 --> 00:31:18.145 
我们非常努力
在这5分钟内

00:31:18.679 --> 00:31:22.115 
加入所有不同的选择
和不同的策略

00:31:22.182 --> 00:31:25.085 
我们知道观众
定会喜欢这些

00:31:26.820 --> 00:31:30.924 
但是我们也知道
受到此类游戏吸引的观众

00:31:30.991 --> 00:31:33.393 
并不希望自己亲自来玩

00:31:33.961 --> 00:31:36.096 
他们喜欢观看游戏

00:31:36.163 --> 00:31:37.798 
他们喜欢观看游戏现场

00:31:37.865 --> 00:31:40.501 
我们所做的还包括

00:31:40.567 --> 00:31:42.069 
提供观看模式 

00:31:42.135 --> 00:31:43.971 
以便在世界各地的
任何角落都可以观看

00:31:44.271 --> 00:31:45.506 
游戏现场

00:31:45.806 --> 00:31:48.709 
通过游戏本身
可以满足我们这方面的需求

00:31:49.042 --> 00:31:53.347 
但是我们也知道
人们喜欢录制并

00:31:53.413 --> 00:31:56.416 
分享游戏内容
作为游戏社区

00:31:56.617 --> 00:32:00.087 
创建的动力 
这也是ReplayKit的用武之地

00:32:01.121 --> 00:32:04.291 
这里是我和大家
分享的重播实例

00:32:04.892 --> 00:32:06.560 
作为此类游戏的设计方

00:32:06.627 --> 00:32:09.630 
我有着顶级的编程人员

00:32:09.696 --> 00:32:12.099 
能力远比我
和合伙人高出许多

00:32:12.399 --> 00:32:15.435 
我很想来展示
观看的相关功能

00:32:15.502 --> 00:32:17.938 
在这个上下文中
重播可以

00:32:18.005 --> 00:32:19.439 
让我实现这一点

00:32:19.840 --> 00:32:22.309 
这里有相当多的
很酷的内容

00:32:22.709 --> 00:32:26.213 
但是我添加的评论
和在共享环境中的介绍

00:32:26.280 --> 00:32:30.117 
则是ReplayKit的功劳

00:32:30.484 --> 00:32:36.523 
我是说 我们会看到
这在《冠军的召唤》这类

00:32:36.957 --> 00:32:38.358 
游戏中发挥了极好的作用

00:32:38.425 --> 00:32:40.961 
我们认为在如今的富媒体市场中

00:32:41.028 --> 00:32:44.498 
对于积极发展社区的人来说

00:32:44.565 --> 00:32:47.601 
这都会很有帮助

00:32:48.502 --> 00:32:50.237 
这是很漂亮的一击

00:32:50.304 --> 00:32:52.739 
很有技术含量
而且还是个很专业的玩家

00:32:53.440 --> 00:32:55.542 
朝他开火
干掉了我的搭档

00:32:55.776 --> 00:32:58.145 
在游戏的结尾部分
捕捉到这些瞬间

00:32:58.212 --> 00:33:00.714 
并与人分享
这对我很重要

00:33:01.081 --> 00:33:03.517 
这也是所有这些的精髓所在

00:33:05.485 --> 00:33:07.087 
当我想到ReplayKit时 

00:33:07.154 --> 00:33:11.525 
在我看来 这是在
介绍社区的有力手段

00:33:11.725 --> 00:33:13.794 
并关注我们
正在玩的游戏

00:33:13.861 --> 00:33:16.997 
我们都在分享
并把这类内容

00:33:17.264 --> 00:33:19.633 
加入《冠军的召唤》

00:33:19.700 --> 00:33:21.368 
这类游戏中是很简单的

00:33:21.602 --> 00:33:24.805 
执行方面我们就
用了一个人 里克

00:33:25.005 --> 00:33:26.173 
他花了一天时间就做好了

00:33:26.240 --> 00:33:27.241 
无可否认

00:33:27.307 --> 00:33:29.142 
太精彩了！

00:33:29.376 --> 00:33:31.278 
这就是
我对它的评价

00:33:31.812 --> 00:33:32.913 
非常感谢大家

00:33:32.980 --> 00:33:34.281 
埃德温 
回到台上来吧

00:33:36.316 --> 00:33:37.150 
谢谢 辛科

00:33:37.251 --> 00:33:38.085 
非常棒

00:33:39.286 --> 00:33:41.355 
可惜的是
本次讲座马上要结束了

00:33:41.421 --> 00:33:42.723 
《社交游戏的最新内容》

00:33:42.990 --> 00:33:44.291 
总结一下

00:33:44.358 --> 00:33:46.960 
梅根
介绍了游戏中心的改变

00:33:47.427 --> 00:33:49.062 
例如
加入了客玩家功能

00:33:49.129 --> 00:33:51.598 
可以实现新玩家配置
和游戏中心的多人游戏模式

00:33:52.432 --> 00:33:54.535 
她还介绍了怎样
流线化开发过程

00:33:54.601 --> 00:33:56.637 
测试游戏中心的游戏

00:33:56.737 --> 00:33:58.505 
这是通过统一服务器环境

00:33:58.572 --> 00:34:00.307 
去除那个游戏中心Sandbox

00:34:01.408 --> 00:34:03.010 
我们还介绍了ReplayKit

00:34:03.076 --> 00:34:05.012 
为游戏中增加社交功能的
全新方法

00:34:05.479 --> 00:34:08.715 
可以让你在运行应用的同时
记录视频和音频

00:34:08.782 --> 00:34:09.850 
这样做非常高效

00:34:09.949 --> 00:34:11.851 
同时还可以保护
用户的隐私

00:34:12.553 --> 00:34:15.054 
正如大家所见
这是个高度精简的框架

00:34:15.455 --> 00:34:17.090 
使用起来也非常简单

00:34:19.193 --> 00:34:20.027 
若想了解更多

00:34:20.092 --> 00:34:22.062 
可前往
developer.Apple.com

00:34:22.129 --> 00:34:25.699 
并参考文档资料
或联系我们的游戏技术

00:34:25.766 --> 00:34:27.234 
开发顾问阿兰·斯卡夫

00:34:28.101 --> 00:34:30.404 
我希望大家尽快下载
iOS 9数据

00:34:30.469 --> 00:34:31.605 
查看ReplayKit

00:34:31.672 --> 00:34:33.340 
用于你的游戏中
把它们带到实验室

00:34:33.841 --> 00:34:35.042 
给我们看看你做出了什么

00:34:35.909 --> 00:34:36.777 
就是这些内容

00:34:36.844 --> 00:34:38.045 
感谢大家光临

00:34:38.277 --> 00:34:41.281 
希望大家会喜欢
在WWDC的体验

00:34:41.681 --> 00:34:42.516 
谢谢