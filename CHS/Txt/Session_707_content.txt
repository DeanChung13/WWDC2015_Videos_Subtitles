全天电池续航的会议
早上好
感谢您来观看关于实现全天电池续航的会议
很兴奋能够和您讨论这个领域
我是来自于Core OS的 強·安德魯斯
同时我的同事桑仁·斯碧丝也将加入我们
我希望你们所有人昨天晚上都把手机充满电了
而且在这个早晨不要看它
我们希望你能在当天晚些时候再去看
事实上 我们想让你看到它比你已经看到它的时间要晚
我们将会讨论
在iOS的环境下如何去实现全天电池续航的一些具体内容
我们将会谈到用户对于全天电池续航的期待
计算做出改进后的大致功耗
你在帮助我们实现全天电池续航中的任务
之后 桑仁 也将会更深入的
指导你们怎样改进程序从而实现这些目的
先让我们了解一下究竟什么是电池全天续航
用户在一天中不是一直使用他们的手机8或者10个小时
他们实际上只是在某个密集的时间才会使用它
可能是他们在早上上班的时候
然后手机就会被闲置
那么它就可以做一些后台工作
比如维护工作和网络通信或下载邮件等
这种模式将会持续一整天伴随着工作负载的激增
随后出现了一段空闲阶段
为了实现全天续航需要保持一个较低的功耗
因此在一天中平均的功耗都很低
而那就是我们在关注操作系统的过程中一直去努力追求的目标
因此让我们看一下计算功耗的基本原理
首先功耗有两个要素 功率和时间
而时间因素经常被忽略
你可以做些耗费很多功率的密集操作
但你需要知道它工作多长时间
如果在待机的状态下它并不会消耗过多的功率
但是你可以在很长的一段时间内保持在待机状态
对于我们的设备来说播放音频是另一项低功率的应用
因此可以提供很长的播放时间
但是当你进一步加强工作负载时
消耗的功率也会随之增加所以我们才希望你能减少使用设备时间
如果工作负载像空闲状态那样实现全天续航将会变得非常简单
只要在平均功耗很低的情况下
意味着也可以产生比较高的功率脉冲
现在我们的设备正在增加动态范围
我们正在开始接近MacBook领域
在这里你可以从系统中获取可观的性能
所以你需要非常小心的去使用它
其它要记住的事情就是
随着我们不断的增加动态范围
每一代的硬件效率也变得更好
因此我们将会给你更好的能力去实现这些低功耗的操作
但是你也可以为了实现密集操作或者超爽的用户体验
去使用更高的峰值性能
因此让我们从一个应用程序生命循环周期的角度去审视它
这幅图中的区域表示被应用程序所使用的功耗
你启动应用程序时有些需要进行的工作
比如去初始化应用程序可能在开始的时候有一些动画
当你的用户与应用程序进行交互时可以会有一些活动的爆发
你需要记住的是那样可能需要一些固定的消耗
而且那些功耗正是被系统和功耗所正使用的
而那时用户的工作负载是最重要的
当用户结束使用应用程序之后
你希望在应用程序进入后台时可以进行一些操作
然而最终应用程序被暂停了
在这儿我们可以看到有着固定和动态损耗的时间因素
现在我们也只需要从一个系统的角度来考虑
那么就让我们看看系统在待机状态中的情况
在这里绝大部分的组件都处于睡眠状态的形式下
屏幕是关闭的内存也处于一种低功耗的
刷新模式下
只有一些无线电在开着仅允许接收传入的流量或者唤醒系统
这种模式的功耗非常低
然后我们讨论一下用户闲置的情况在这儿有更多系统的组件被唤醒
你也可看到显示屏处于开启运行状态这带来了一些伴随着的的软系统
其他的组件例如CPU 和GPU等
绝大多数是不活跃的并且闲置时间短
因此这个周期也很低
如果我们把它做成动画并且展示功耗可能会是什么样子的话
那么在一天当中用户的电池消耗将会得到很好的减缓
希望在进入夜晚你准备睡觉时为手机充电
然而假如你想运行大功耗的程序比如3D游戏
这将会使用系统的绝大部分
你已经让所有的组件都处于运行状态
为了让GPU复杂的渲染跑起来你可能正在使用大量的CPU
播放游戏音频会导致音频系统启动
因此预期的使用功率稍高电池持续的时间相应的也会比较短
对于这三个组件我们有一个非常简单的策略去优化功耗
你想做更少的工作
就需要考虑一下工作是否需要现在去做或者随后再做
最终进行那项工作的时候需要设法尽可能高效率地完成
桑仁 将会在下次讨论的部分涉及到更多的细节问题
那么让我们讨论一下在iOS 9下的情况
我们的已经有了一流的电池续航能力
然而我们确实认为我们能够做的更好
除此之外我们的顾客也希望我们做的更好
你也希望我们做的更好
我们开始通过优化操作系统和集成的应用程序
从而在现存的硬件中促进电池续航
去增加电池的额外一个小时的寿命
现在我们的做法对于你们中的一些人可能很熟悉
因为我们在OS X Mavericks中曾有过相似的努力
我们取消了应用程序框架和驱动程序的轮询
我们优化了内核
同时把我们的服务质量应用到我们的线程中
采用了更多的NS操作
以及用更加正确的服务质量去安排输入输出
我们结合定时器去减少CPU
以及像午睡app这样速率限制的应用程序的唤醒次数
从系统的角度来看重新执行我们的CPU电源管理单元
功耗将会得到显著的降低
然后我们添加了个非常受欢迎的特性
即为电池目录添加“重大能源”标示
从而使得你能够看到哪个应用程序正在从电池中消耗比较大的能量
因此现在回到iOS中看一下我们怎样应用这些措施的
我们之所以专注于iPhone
是因为我们得到很多人的反馈说希望提高iphone的电池续航能力
然而从某种程度上来说这些提高措施已经应用到我们所有的iOS设备中
现在让我们通过这三个组件的策略
以减少工作量
我们希望进一步优化闲置负载以及特别关注睡眠定时器
在用户完成交互之后系统的绝大部分时间都用在睡眠上
现在是基于用户在设备上的操作基础上去优化
他们与推送的交互究竟是否进行
我们减少CPU在空闲时刻被唤醒的次数
我们已经给它添加了关于屏幕检测的一个很酷的特性
因此当手机屏幕面向桌面时
收到一条通知
屏幕不会为处理那个通知而去亮起来
我们让系统尽可能少的做准备工作
这样 只有当用户接电话的时候通知才被提供给他们
现在开始后续的一些工作
我们做了很多努力去将工作推迟到
设备被充电时
进行用户不需要的后台和维持工作是没有意义的
他们可能是一个日常的活动所以当给手机充电时可以完成一些操作
因为我们知道用户只会在一天的某些时候给手机充电
因为人们需要对Wi-Fi付费
所以连接Wi-Fi时我们同样也可以推迟网络
然后我们甚至更多的持续利用应用程序接口
使得当接收器开启时
即使接收器在做一些后台工作我们也可以完成一些相应的工作
现在对于那项工作来说一切都很好但我们想能更有效率的去完成那项工作
因此让我们做一些改变
我们优化我们的iOS和网络堆栈
去让4G网络特别是4G接收器工作的更好
我们再一次优化我们的电源管理单元
去减少维持系统在低功耗状态而产生的消耗
我们已经降低了日志记录机制的消耗
以至于它们不能和系统进行交互
当然我们继续优化我们的numerics库
使他们更好去优化每一个硬件
我认为明天可能会有关于那个话题的会议
所以我们谈论一下用户反馈及怎样添加进Mavericks中
我们已经设置好了电池使其能够显示你的应用程序的使用方法
或允许给你提供一些周围环境因素的信息
以及给想提高电池续航的用户一些建议
在这儿已经进入到更进一步的阶段
添加每一个应用屏幕或后台时间...
到这个设置面板上
所以你在角落里可以看到一个控制
让我们回过头继续向前走
你可以看到一个小的控制可以让您切换模式
然后我们已经添加了低功耗的模式
而用户的偏好也将会影响电池的寿命
它将限制CPU以及后台操作
导致以前我们引入的后台应用程序刷新机制
在这个模式下失效了
我们关掉自由裁量和后台工作
所以如果你想在后台完成预定的下载在用户退出前这些行为是不被允许的
邮件获取也被禁用了
是因为如果收发太多的邮件将会让系统产生一个较大的功耗
我们已经讨论了关于操作系统的内容
现在让我们谈论一些将会帮助你提高电池续航能力的事情
我们已经使用了一个相当周到的方式
把OS X上能量计移植到iOS中
从而能量计对iOS产生最显著的影响
系统除了其它的仪器我们又添加了定位仪
除了改善OS X的能源指南
我们还在网站上写了个全新的iOS能源指南
现在你能用这个指南做些什么事情呢？
我们希望你能够优化应用程序的功耗
给你一个简单的例子吧
比如你正在全屏播放一个视频
现在让我们做一个优化很可能像家里的电视那样
减少backlight调整伽玛补偿
从而给出同样视觉图像
现在
这些措施将会使得功耗少量减少
但是因为时间的因素节省的功耗是相当可观的
因此你在观看全屏视频的时候
我们也可以得到额外的续航时间只是在这个机制非常简单
一旦你想在屏幕上放置任何用户界面这个机制就会失效
我们也可以看到全透明用户界面层的全屏应用程序会完全禁用这个机制
这对于用户没有任何好处
在讨论过OS X后现在让我们说说iOS
在早些时候我们推出了的MacBook
因为那是我们第一个fanless系统
所以它会有点散热的约束
而MacBook被设计为可以很好的应对突发性的工作负载
我们也已经对操作系统进行优化让它能与那些机器一起工作
你也应当用适当的线程服务质量去去标记所有的工作
使用我们已经预装在OS X上可用的仪表和仪器
可以确保你利用NSOperation和GCD
来对你的工作进行优先级的考虑
如果现在有用户启动的操作确保它被尽可能的标记
但是如果它后台工作的话仍像那样去标记它
而操作系统在为这些任务提供更强性能的同时
还会管理该设备的电源和散热
最后总结一下我们知道了功耗是功率乘以时间
当你为提高电池续航的能力在思考怎样优化应用程序的时候
一定要记住时间的因素是非常重要的
硬件的动态范围正在变得更大
因此当你正在操作的时候必须认真的考虑怎样有效率的完成
进行这些工作时认真考虑是否这些工作全部需要完成
为了实现全天电池续航
你需要让平均功耗尽可能的低
现在我将会把这个任务交给我的同事桑仁 去更详细的讨论
早上好谢谢
真的很高兴看到你们在这儿学习能量效率的知识
也很希望自己能够帮助你们理解代码在电池续航中心是怎样工作的
我们将讨论两大类事情
但是首先我们要从一些強 已经讨论过的原则开始
我们将把这个原则和用户
及用户为何是在你的应用程序上获取正确的时间关键因素相互联系起来
我们也准备讨论一下能量究竟去了哪里
特别是CPU以及GPU对OS X和iOS来说都是非常重要的
通过这一部分的讨论我将会详细的向你们解释
怎样实现较低的平均功耗从而最终实现全天的电池续航
此外我们也特别的讨论一下iOS
在我们的iOS设备上你可以利用的许多硬件组件
为了让电池能够全天续航
需要同时注意功率和时间
最后我们谈一下怎样把这些理论融入在你的开发过程中
以便每天你都能思考一点关于功耗的东西
在更进一步讨论之前我们并不能看到太好的一面
但是如果你家的某个地方有个LED灯请举起你的手
好的 你们应该知道什么是LED灯很好
你们家里可能还会留着一些白炽灯我家确实还留着一些
最近我把冰箱中的白炽灯换掉了
而如果在冰箱中放LED灯泡则很有意思
请不在家时仍然让灯一直开的人举起你的手
好的 有一个人是那样做的
他是我的办公室同事我准备给他一个艰难的时刻
他在办公室时并不是让灯一直开的人
关键是当我们换了LED灯的时候功率可以明显的降下来
而且我们也不会让它们整天运行不用的时候也会把它关掉
这样的话时间也降下来了
在你的屋子里可能有很多的设备
网络 DVR甚至计算机和服务器
而这些设备都将会整天运行
因为它们并不像灯泡那样点着或许你并不会关注它们
而我准备帮助你们在软件的角度去思考这些问题
因为最终是软件来控制硬件上所有灯的开关
所以为了实现电池的全天续航我们必须让灯的开关
在绝大部分的时间中都处于关闭的状态
那么让我们谈论一下具体的措施
因为最终我们的目的就是完成用户驱动的工作
所以我们也希望用户能从电池的能量中获益
他们已经实现了
软件在很多时候都是很相似的
我现在有一些事情去处理我能去做吗？
哦 是的 可以让我们再一次完成它
不 不 不
我们必须消除任何类型的轮询或者计时器
计算机操作的比人类更加的快
确切的说在键击之间
即使你是一个超快的打字一分钟可以打一百个字
在微秒时间尺度的键击之间
我们仍然可以闲置部分系统处理器将会在按键间隙处于休眠状态
而当用户利用键盘 鼠标和计算机进行交互的间隙
对计算机来说仍有很多的运行时间
所以你希望你的软件不要按照计算机运行的速度运行
除非它直接为用户工作
你回应用户那样很棒
使用我们超强的硬件然后回到空闲状态
变得完全平坦最后归零
強 已经讨论过延时工作了
很多时候你可以无限期的延时工作
我现在需要延时吗？
并不需要稍后或许会用到
但总的来说结果就是我们不需要延时
如果现在有少量的任务
而现在用户不需要它
那么最好将其推迟可以说
“嗨 系统 请完成这个如果有计时器的话”
在下个小时的任何时刻
希望你能给出十分钟或者其它有余量的时间
如果没有计时器的话那么只能完成上传和下载了
因为系统在随后可能会安排其他
可能发生的工作
你也可以把所有的任务集中在一起
因为批处理是获得效率的重要途径
你想打开那个硬件但是把它打开需要一些功耗
而你希望在它被关闭之前去使用它
需要在硬件开启状态下尽可能多的完成工作
我们能再一次降低功耗节省时间是很重要的因素
这是我特别指出的有趣的关键信息
我们有所有的可用能源但是你不能在电池上整天的运行
否则设备会变得很热而且电池也不能持续运行
我们真正想让你考虑的是占用整个系统10%的负载
这些负载不仅是软件还包括你所做的其它操作
那么你怎样才能利用你可以实现的措施
把负载降到1/10或1/100呢
这是当你在屏幕上的情况当你后台的时候 我们需要的更少
这里我要说一个比较坏的消息
我也对我们所有的硬件做过一些这方面的研究
人们表现出就像...哦不对
这也不是谈话的要点关键在于让你去思考这个问题
大概百分之十到百分之五的负载之间是仅在打开显示器时产生的
现在显示器打开之后的状态良好
因为用户正在从系统中得到更多的好处所以这有很大的希望不仅仅是一个通知
然后有百分之十的目标
这就是平均水平
这听起来就像只实现了5%
在长周期下的确如此
但在短时间内争取100%
将你完成的工作优先呈现出来
我们将会安排它
这部分就是这样 你必须让它处于百分之5到百分之10之间
现在让我们讨论一下CPU和GPU
在OS X中CPU和GPU会消耗大部分的能量
它们也是最具活力的
我们有非常强大的多核CPU和大规模并行GPU完成各样任务
然而如果你把设备插入电源的话
CPU和GPU一般来说确实会消耗电池很多能量
在这儿你已经可以看到我们已经完成了大部分工作
我们已经让CPU开始运行了同时也让GPU运行一会儿
而事实上这并不会持续一整天
但如果这个对于你工作方式非常重要的模式
如果这个模式持续的话将会使得我们不能实现全天续航
因为平均功耗太高了
那么我们仅唤醒CPU又会怎么样呢？
是否有工作要做？是否有工作要做？
是否有邮件？用户是否点击过？
有没有什么事情发生？
嗨 服务器
不要那样做
当唤醒CPU或者GPU时
我们需要大量的能量去让他们加速
有工作要做么？
没有收到任何工作
所有你能看到的这些三角形即使是iOS的三角形
也在5%到10%的范围中占据了很重要的一部分
不要尝试不必要的唤醒
在OS X上如果你整天唤醒CPU
那么事实上你的电池根本不能实现全天续航
即使你不运行甚至只是做一些检查工作
不要那样做
GPU是一个时间尺度略有不同的怪物
它工作的频率比你需要唤醒GPU的频率更高
甚至对于一些漂亮的图形
在下一帧之前需要15ms
然而在1ms之内GPU已经可以完成大量的工作了
现在让我们讨论一下性能
你来到这里的目的是关注能源性能
而且你做事的时间效率也更高完成任务的时间更快
这些对用户是有好处的对能源的效率也是一个关键因素
现在让我解释其原因
这里是一个工作负载而是一个固定的工作负载
它的状态也不能持续下去
我只需要完成这个工作
但是它的工作负载很大
因此我可能需要优化我的代码
可以访问代码的内部循环
做更少的内存访问和传统的性能工作
这样就会使得执行更加的有效率
但功率增加了
然而时间却又变短了
从而功耗可以大幅的降低
前面的工作做的非常好但是我们能做的更好
可以将工作并行化并使用多核
最后我们可以更疯狂一点让GPU跑起来
现在的好消息就是通常你并不需要写优化代码
但是你却需要找到这个优化代码
你需要找到这些优化的数字库
在后面我们有一个关于会议和能源文件的链接
你必须找到正确的数据结构然后审视一下你的应用程序
最后谈一下为什么我一直在搅动及在规则的旧时间中我又能够优化什么
这幅图片中的东西是很重要的
那是直接执行的低功耗解决方案
在这个方案中系统就像开始工作一样
而你只需要一等等待存储和加载
你已经让一个核心运行了
如果我们让多核都运行的话
那我们才是真正的在使用该系统但如果只有单核情况会怎么样呢？
因为时间的因素只会导致虽然功率很低但是功耗却很大
现在让我们研究一下为什么会这样
在运行系统的其他部分的时候
无论CPU GPU或是系统的其它部分
固定功耗都会慢慢增加
你越快把这些固定消耗关掉效果自然就越好
我自己也为GPU增加以下额外的功耗
因为事实上在使用GPU的过程中会产生更多的功耗
观察绿色的部分我们看出
当我们节省时间之后是否使用了更少的能量
关键课程高速也是能源效率
我们在看这些在线下是否满足的时候
请谨记按照重要性排列
这是最直接的一个措施
因为任何一个熟悉高中几何的都很清楚那并不满足
我们会把它拉到平均水平
在这里不再是功率乘以时间
这只是平均水平
将不再适合
至于其他的
注意效率有所提高
但是依然不够
可以看到除了CPU/GPU平行线几乎都在线下
因为时间很短所以确实满足条件
同时虽然功率很高但时间很短
这些就是你在设计程序要遵从的方法
但是不要重复的使用这些措施
在你做这些之前请稍等一下你的用户
现在让我们调整一下
这些是应用在OS X和iOS的所有CPU和GPU
而它们对OS X尤其重要
此外我们在衡量能量对OS X的影响时
除了系统可以处理的CPU指令
还可以通过人们可以唤醒系统的次数
现在让我们切换到iOS
我们知道iOS设备不仅有CPU和GPU性能非常强悍
而且iOS的网络定位和后台运行的能力也很强大
其中网络的功率很大大量的硬件网络
此外还涉及到很重要的时间组件也需要详细考虑
定位是一个很好的功能用起来很棒
但是它主要的设计目的
比如我正在观察地图上的一个点
此时我准备穿过舞台而小点也相应的跟着移动
我很喜欢这个功能让人印象非常深刻可以告诉我自己正在穿过舞台
不幸的是这个应用程序的接口很容易被留下继续运行
甚至当我不在看地图的时候
因此我需要除了改进应用程序的接口
我们也需要你在自己需要的最短时间之内去使用定位
最终任何时刻都在后台运行
那就会使得设备
增加了保持唤醒的时间
每次我按屏幕上的home键离开你的应用程序的时候
你都在后台运行可能时间很短也许时间会很长
我们希望尽可能的消除这种情况
因为我们希望设备能保持在良好的待机状态
从而使得设备的随机存储器和接收器可以保持在一个低功耗的模式下
让我们讨论一下网络
幻灯片橘色的部分状态不好
因为它代表的是消耗
思考一下当你想向网络上特别是蜂窝设备
发送一些数据的时候会发生什么
系统可能会说“我现在必须发送数据因为应用程序告诉我的”
不要把它标记为后台任务它不可延迟 必须立即完成
我们之间没有连接起来只是通过入站连接与蜂窝系统联系
但是我们没有出站
所以举起来
找到一个基站已经找到基站
但是总体情况并不太好尝试另一个
这个基站非常好
我们连上了
好的 我发送一些数据好的 数据发送了
没有数据发送了 但是仍然连接着
连接时的代价很高当我把设备打开时
按照蜂窝网络的工作方式
我必须让它运行一到两秒
它可能只需要几毫秒时间去发送数据
但它可能需要停留长达10秒去连接到网络
显然不是高功率模式
但是功率仍远高于输入连接的闲置等待
因此消耗是一个重要的能源影响
正在运行的网络工作量大小并不重要
在某些情况下如果接收机关闭的话必须重启后运行
耗费的时间比你实际上需要发送数据的时间长一千倍
而且没有任何方法能降低功率至预期值
收音机不能一直开启去实现全天续航的目标
这对聊天应用程序是一个坏消息
好消息是人们并不会在他们的手机上点击聊天应用程序长达10个小时
他们不会这样的
因此只要你能够明白
如果没有实时聊天让网络继续下去
那么你就可以让电池实现全天续航
我们如何解决这个问题我们怎样让它更好
因为它们不是一天可以解决的事情难度很高
我们必须通过合并把它们组合在一起通过批处理的方式去解决它
所以在这个特殊的例子里
我们将会把未来的工作纳入到旧的工作中
如今将来的工作更加的重要
所以你应当推迟以前的工作那样可能更容易去完成目标
但是如果你想了解那两项工作究竟哪一个更重要
对于你的应用程序来说目标就是现在你可以实现哪一个
现在我们将这些很棒的工具展示给你
基本上在Xcode上的这些图形图形表示的新工具都将装在你的软件上
它非常好
你可以看一下再谈谈为什么我要去做这些没有必要 也许没有必要的事情
为什么我的网络模式没有一点效率
为什么它时分散的？我怎样才能通力合作？
然后我们才能真正达到这个目标平均低功耗
那就意味着全天的续航
因此对网络进行总结
如果你想在网络上做更少的工作
就必须正确的设计你的系统
即使你有一分钟的网络这只增加了几秒钟的消耗
此外 除非用户请求你现在访问网络
否则直到确实重要的事情请不要访问网络
就设计来说 对于卸载系统
以及让系统决定什么时候
在接下来的十分钟内下一个小时 下一个二十四小时
怎样变化来说你所能做的就是对允许我们对任务进行批量处理
使得你卸载网络
当工作完成的时候我们将会给你打电话叫醒你
很多时候 你可以在工作的时候等待
背景更新 NSURLSession都有这个特性
只要等着 推迟它
去排队吧 这很好
但不要强迫它马上发生
这些通知很棒
但是它们有时候也会脱离控制
比如在服务器端
记得我曾提到过我们总是和进站连接服务器相连接么
強 也提到过
入站连接很便宜
它们基本上都是可靠的
所以继续发送一些信息而不是轮询
最好把一些信息发送出去而且把这些通知标记为PushKit
有了一个适当的优先级这样我们就可以批量处理了
而当我得到一个即时消息的时候迅速地完成是最重要的
也可能是把带有新内容的通知下载到你的
新应用程序或者其他类似的东西上
现在让我们讨论一下定位
定位也有两个要素好消息是定位的功率相对较低
如果你让定位一直运行
那么只会有很少的空间去做其他的事情
因此不要让精确定位一直运行
事实上 最好不要一直运行定位
除非用户确实希望在生活中一直运行定位程序
他们会看你的电池目录
从而知道 后台定位会占用...
25%的电池
那样并不好
除非你的应用程序就是那样
那很好
如此精确的定位是很昂贵的
我们必须打开更多的硬件与卫星对话
联系所有的卫星
完成
不精确的定位便宜很多我们只能说
我已连接哪个Wi-Fi网络我附近的基站是什么
然后我们才能真正
你看到的绿色正是系统运行的地方显示正在运行
虽然我们的系统大部分是关闭的
但是仍然在跟踪你的位置甚至精确定位
它不是免费的
不会一直运行这些是漏洞
从而使得我可以确定你在家里
特别是加利福利亚居民
定位只不过是滴、滴、滴
因此我们可以优化它
尽量少用它
你知道 如果你准备去申请更新定位
请不要马上申请
那有一些应用程序当我启动时我想知道我的位置
我想知道公交车什么时候来
那很好
我周围的食物网络应用程序 很棒
启动 获取位置
否则等待用户去搜索或者无论你需要什么
然后尽快为用户完成设置你已经得到了你想要的精确定位
然后去申请停止
对iOS 9来说 我们已经引入了新的应用程序接口来完成这些任务
这被称为请求定位
它通过启动和停止
确保你得到适当的精度
你也不必管理开始和停止这种情况只对iOS 9种适用
对老版的操作系统仍然要按照以前的方法去操作
在幻灯片的结尾有关于定位讨论的链接
我们改变了系统中后台定位的行为方式
因此你的应用程序可以请求使用后台定位
但在请求被允许之前可能会和用户有更多的交互
如果不想再后台使用的话你必须对你的应用程序谨慎一点
保持允许后台定位更新的属性
除非当你在后台中积极的完成它否则就把它设置为假
当你打开硬件定位的时候要能够意识到
就像打开电灯开关一样你实际上在给它供电
切换状态也是非常容易的
当你实际使用它的时候想把功耗降下来
当我们讨论到时间的时说到要节省时间
当涉及把功率降下来
我提到过我们实际上可以卸载
所以让我们说一下我们正在做的我喜欢自行车
我可以跟踪我的自行车你知道 非常准确
但那是硬件而不是软件
所以推迟那些更新所以每15分钟就会打电话给你
嘿 看 这里是所有的跟踪信息
但是大多数系统和你的软件都在休眠
只有定位芯片在运行
最后 我们第三个因素对调试软件来说
这确实是我们希望你做的三件事
你知道 减少网络 减少定位
和后台运行
这些只是用户通常看不到的功耗当他们推出这个应用程序的时候
用户可能会喜欢这个实时更新的应用程序
但是尝试使用后台应用程序刷新
尽量呈现优质大量的leeways
如果你发送通知随后被忽略
会点亮屏幕它正在发射网络 这只是
不仅是这个消耗
如果你一直运行的话将会很快的消耗你的电池
但是这是一个...
这基本上只是去掉了
适用于其它事物的能量
它正在减少基本上如果我降低了障碍
那么就是说你已经实现了...9%以下而不是10%
我们需要避免...
而这20%更糟
因为平均下来你只有5%
只要确定你不在后台运行怎样去实现这一目的呢
调用后台任务时
我们将让设备保持几分钟的唤醒状态
这样你可以尽快的终止后台任务
除了能量指南之外还有一个很好的应用程序指南
那还有一个应用程序生命周期指南
这个消息会通知你你将进入后台
你的用户界面状态保存在那儿
和用户界面对话 保持当前状态
如果你有需要保存的重要数据
去开一个后台操作
但是确定所有的代码申请终止后台任务
不要泄露后台任务
如果你有网络
也许像保存到磁盘那样这也可能会发生
网络活动...
这是把网络从操作系统中卸载的好机会
嗨 我有这个网络 它需要发生
但它不是时间的关键只要在一定的时间范围内
有机会就一定需要完成它
给系统一个机会去优化
这也是很好的一个设计时间
在这方面可以让你在设计应用程序的时候更灵活
这是我理想的应用程序
強 展示了一个很好的幻灯片
典型的应用程序在你启动它的时候会有很多工作
我理想的应用程序是在你退出的时候几乎没有任何工作
它不做任何工作
直到用户实际交互
这很疯狂！
很多工作 需要我们完成这是所有的工作
请优先考虑
然后 在它完成之后再返回
它是好的而且是空闲的
那样你就可以推翻泛美金字塔
这达到了预期要求
那么你的应用程序是怎样运行的呢
我们真的很希望你们回家的时候运行一下这个工具
完整的运行一遍来检查你的应用程序
之后这些工具将会告诉你对应用程序的操作是什么
确定应用程序正在做的事情对功耗产生的影响
就相当于用户被交付的利益
除了OS X 对于iOS来说Xcode现在也有了一个能量计
它突出我刚才讨论到的事情
比如有中央处理器网络 定位以及后台
把所有的网络融合然后控制所有的定位
最后再取消后台任务
那么就来到我们下一个话题了解一下它
首先当你设计你的下一个特征
设计你的下一个应用程序的时候请思考一下这些消耗
比如原处理器功率CPU和GPU的模式
我是正在醒来或是准备去休息
我能对它做出更多的约束么
任何像那样的闪烁
你们中的一些人可能还记得早些时候网页上闪烁的标签
没有闪烁 特别是在高频下
比用户交互更快的任何东西都是高频率的
尝试着给自己设定一个期望值
因为如果你准备写一个聊天应用程序
全天下来你自己本身可能都变成流媒体了
你应当把程序安装在一个新的硬件设备上
这样的话用户就很有可能在你的应用程序中实现全天续航
他们必须买一个单独的手机事实上是三部手机
以确保可以整天运行
但很遗憾 那个应用程序卖的并不好
在你的商业模式中这种计划
是否与这个应用程序的电池续航能力表现的一样呢
我正在使用很多的定位以及很多的网络我在后台去完成这些任务
主要是因为它们很昂贵
看一下执行效果可以通过查阅能源指南
确保你可以给应用程序接口传递最佳参数
看一下你自己的代码再看一下我们的代码
如果我们的代码在做一些奇怪的事情比如提交一个错误
最后看一下你可能使用的第三方代码
你有一个广告框架 广告本身很好因为它可以支持我们的平台
但是 如果他们像其它广告那样做很多的下载
下载显示 下载显示 下载显示
在很长一段时间之间我们必须保持网络开启
那样并不好必须要注意到这一点
在最后 进行测试
可以通过定期运行这些工具
去确保你的应用程序可以按照你期望的方式去运行
如果你已经把这些事情都完成了我怀疑你没有 但也许你有
在这项任务中 最重要的工作
就是继续进行检查你的后台更新间隔
你能够减少或者给你的系统更大的自由度么
你能够更加谨慎的使用声明么
特别是当你开发VoIP应用程序的时候我们给应用程序的接口做了一些改变
请记住 这些传入连接是很便宜的
但并不是免费的他们会让你回电话
但不要退出
不要弄混显示屏的亮度
绘画可能是下一个过度的前奏...
我讨论到闪烁的知识那仍有很多绘画的事情你可以去完成
去年谈论到这个话题在末尾的链接中
可以知道相关的主题图是正确的
也获得了一些工具
最后...
对于OS X和iOS来说我们现在已经有一些能量指南
我只是提出把所有的这些信息都记录下来
我将会继续在developer.Apple.com中
更新这些信息
所以总结我们所讲过的内容
就是功耗是功率
乘以时间如果你想减少功耗
那么相对于你运行的时间来说功率是很重要的
我们希望你能够降低功率
当然我们的工具本身就是低功率的我们的工具在低功率方面表现的不错
你也将会在下一次讨论中涉及到它
这些可以支持用户实现电池提供全天续航
做更少的工作
或者延迟工作以及提高完成工作的效率
这里是我谈论到的链接
文档、视频、指南 以及去年的谈话
我们有我们的标准论坛
你可以和其他人交流你能够联系我或者DTS的人
他们有我的手机号码
你不必要我的手机号码 他们有和他们谈一下 他们可能会帮助你
如果他们不能的话 他们可以联系我或者我的一个出色的队友
保羅 也在这里他的电子邮箱附在这张幻灯片中
参加相关会议
或下一届会议的人请留下来
我们有一些网络的参数性能
可以看一下 他们将会帮助你
去思考怎样优化我刚才所谈论到的所有事情
请继续为了节能优化你的应用程序