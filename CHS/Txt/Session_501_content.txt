大家好 欢迎来到
了解网页开发中WebKit和Safari的新特性
我是布伦特·福安下面将由我带领大家
一起了解今年我们所取得的新进展
对于我们来说这是尤为激动人心的一年
因为这么多年以来我们只收到你们...
的错误报告以及别人告诉我们的一些事情
但是今年 我们有了自己实验室
让我们可以对完成的所有内容做测试
试着让你们用起来更加方便
无论你的主要目标是将Safari作为网页开发工具
还是一个更大应用程序中的嵌入式web视图
我相信你很快就会在演讲中
找到对你有用的内容
首先 我会简短的介绍WebKit
以及它是怎样应用在Apple的软件设计中
然后 介绍今年我们在safari中增加的一些新功能
你将会用到这些新功能
最后 我想介绍一下
关于为iOS和Mac平台创造的新奇体验
所提到新特性在这些平台都是可用的
如果你利用这些优点会令你的网站更加吸引人
有利于浏览者浏览
现在我们开始讨论WebKit
WebKit是我们浏览器的引擎
它是一个开源的项目任何人都可以加入
你可能知道WebKit
是Safari的引擎但是你也许没意识到它
也被应用在其他的Apple应用程序里通过我们
所做的一系列事情已经得到实现
WebKit也是iOS和 OS X的引擎
它们之间只有很细微的差别
因此在接下来的演讲里
除非我明确的提出新特性
仅在某一平台可用
你可以认为它们
可以用在所有的平台
这里有一个重点如果你是一个Safari web
开发者或者iOS web浏览器的开发者
你可以用我今天要讲的全部内容
如果你是一个嵌入式网页视图的app开发人员
你会用到我正在讲的所有特性
如果你只是从事JavaScriptCore
框架或者OS X自动化工具开发
你可以利用所有的JavaScript特性
这一部分中我们将会讲到
这就是我们对WebKit的介绍接下来
将会介绍我们今年开发的新特性
因此我将暂停这一部分的介绍说一下新的布局
结构和渲染特性
我们更新了一些JavaScript特性
我们让它支持新的JavaScript标准和CSS特性
这会让你的样式表
维护更加容易 可读性更强
让我们讲一点Safari中
布局和渲染等特性的改进
更准确的说 我想说的是关于是背景效果的一些改进
在iOS 7的设计中
用户界面的设计做了一些改变
加入了背景模糊效应
举个例子 这里你可以看到主界面图标
像透过毛玻璃一样
这样的叠加增加了一些深度
给你一种感觉这层后面好像发生了什么
却并没有挡住内容 当我们尝试
通过用户界面去看的时候
后来在OS X Yosemite中
我们提供了相似的背景效应
我们在搜素侧边栏也做了一点的模糊处理
让文档看起来也像透过毛玻璃一样
这些效果很重要 看起来像是原生系统的一部分
它们就是你想用的一些特性
在你的最终版本的个人网页 当人们通过Mac 
或者iOS设备浏览网页时
但更加重要的是当你想让一个嵌入式的网页视图
成为系统的一部分 或者看起来像是原生用户界面
你怎么做到的呢？
假如我有一个展示照片的应用程序
显然没有很好的方法生成背景效应
像我们之前看到的那样
我们可以尝试用半透明的覆盖层
但是你看到内容与上上面的文字有些冲突
你知道后面的东西会让阅读变得更加困难
但是现在我们有了CSS滤镜包含了模糊效果
我们可以试一下吗？
当然那是一个不错的效果
但是它并不是我们真正想要的
它唯一的作用就是清除图片的背景
除了这点还有很多其他效果
我们通过观察
发现像你一样开发者仍在继续努力实现这个效果
他们会这样做 有一个这样的背景图片
先生成一个完全模糊的图片
然后被剪裁和移动覆盖
到想要模糊的元素
这样做很糟糕我的意思是说我们很吃惊对我们来说
并不是一个好消息让你那样做
这就说明还有其他问题我们不能让这些背景更加灵活
改变模糊效果一件很困难的事
一旦我们这样做就要重新渲染所有的事情
因此 我们需要一个更好的方法使用背景滤镜
背景滤镜允许我们在CSS中指定背景效果
它也被提出作为W3C标准之一
现在正在审核中
让我们看一下它们如何搭配
假如我们想给元素提供滤镜效果
WebKit将会获取它的范围在一个关闭背景
中重新渲染
这样很有效率但是渲染过程很消耗资源
所以我们要确保不会过度使用
一旦我们有了背景环境
然后将滤镜应用在上面就会产生模糊效果
我们把前端的内容放在上面
然后我们可以重新合成完整的场景
你就可以得到想要的模糊效果
一旦我们让模糊效果出现了
就意味着我们就可以灵活的运用
所有的CSS滤镜
我们做到了 我们可以使用
其他的CSS滤镜在这个效果上面
我们可以改变颜色
可以将多个滤镜组合在一起
我们可以同时获得模糊和灰度效果就像这样
最令人激动的是我们可以把这些
效果放在在动态页面上
因此一行CSS代码可以让背景模糊滤镜
用在视频上面 多么不可思议
当实现这个功能的时候我很激动 
迫不及待的想看到这些效果出现在你的个人网站
让我们稍微休息一下
另外我们看到的一些问题是布局和滚动效果的渲染
你已经看到顶端的iTunes横幅
如果你试着玩过的话就会注意到当你滚动它时
它会以整个步长为单位移动在你每动一步的时候
你将得到一个完整的电影标题或者电影截图
我们在IOS端的图片app也能做到类似的效果
每次当我们看着一张图片想滑到另一张的时候都能直接滑过一整幅图片
而不会出现前一张的一部分和后一张的一部分同时显示的情况
这种交互对于图片库或者其他类似的平铺内容来说是意义重大的
之前人们都是通过编写复杂的JavaScript语句
来实现这种滚动操作
开发者们大刀阔斧得抛弃了之前浏览器内置的平滑滚动结构
通过人工加入JavaScript语句将其替换成这种逐帧变化的模式
我们知道它的性能代偿也是不容忽视的
我们发现这样一个问题
你不可能每一帧都通过运行复杂的JavaScript语句
来获得平滑滚动的效果
所以我们需要另一种方式来实现它
那就是滚动界线点
滚动界线点是一种在CSS里声明的方法
通过滚动曲线的动画化来呈现滚动区域
它也是一种CSS标准
可以想象一下我们有某种样式的一个观察孔
有一个盒子可以在里面看到一系列的相册封面
所以在这张图片里面还有许多被相册封面遮住
看不清的其他没有显示在屏幕上的图片
但是我想循环播放它们一次播放一张
我知道他们尺寸很厚比如说他们都有300个像素
每次我扫过这些内容时
我希望可以滚动播放直到看完一整本相册
这一行为可以通过
声明滚动界限点中的x值来实现
我们会告诉它我们想让它以300个像素为间隔行进
并且用设成300的像素参数重复这一过程
这个动画就是它所呈现出来的效果
我动手指来扫这些图片
我所滑过的图片数目
取决于我手指动的力度
但是当手指的动作一点点减慢直到我们停下来时
界面将会停在一个边界完整的图片那儿
在源程序中实现这一效果需要两行代码
我们可以通过把滚动停止类型设置为强制来打开这个功能
再声明一个300像素的重复间隔
现在我操作一个网站给你们演示一下
你们看当我这样滑的时候 它动了起来
当我轻轻得拉回来并且撒手系统画面会停留在最近的那个滑动界限点上
所以它们就像是被橡胶绑着弹回这个位置
你可能已经从它的名字里懂了这些
但是滑动界限点可以作用于两个维度x轴和y轴
所以到目前为止我给你们展示的是一个非常简洁的功能
但它不能很好得处理滚动容器中的内容的大小不一致的情况
所以在我图片元素的大小不一致时
我有一张大小为300像素的方形图片
同时也有一张矩形图片
这个矩形图片或者说它的内容
并不匹配300像素的边界
所以如果我尝试着滚动它显示出来的效果就不太正常了
而滚动界限机制可以应对这种情况
如果我们把滚动容器视作我身后的白盒子
这个就是滚动停止终点
我们在滚动图片时会在这一点对齐
它一般默认位于左上角
但我们可以通过标准的CSS定位语法给它设定位置
与滚动停止终点相伴随的是滚动停止坐标
这些是滚动容器中每个元素的位置坐标
它们也都默认位于左上角
所以我们可以这样说...
在WebKit中我们能使用这个语法
让滚动停止坐标落在每个元素的中心位置
我们可以说我们希望滚动容器的中心能作为我们的目标点我们的终点
你把它们联系到一起的时候
当你用手指来滚动图片
最终它们能整齐得停在箱子的中心点
实现这一操作的代码并不比简单的像素循环要复杂
我们强制把这个功能集成在滚动容器里
我们把停止点定位在滚动容器的中心位置
然后给每一个元素都赋予了位置坐标
在这里我创建了一个类叫做“photograph”
你知道你可以用它来做你想做的任何事把它定位在中心位置
这就是产生网页中实际效果的过程
所以对于一系列图片当我滚动经过它们的时候
我们经常会停在中间位置
接下来有请克里斯上台
用一个神奇的例子
来给大家具体展示一下
感谢布伦特 我叫克里斯·楊是苹果互动团队的一名开发人员
苹果的互动团队在公司做了许多工作
其中之一就是我们负责你们在Apple.com上看到的许多网页的内容
所以今天我非常兴奋能出现在这里
因为我感觉刚刚布伦特展示的许多功能
对于网页开发者来说是非常激动人心的我也非常激动得希望自己能够用到它们
来 让我们开始这里放了一个小的web app
用来展示一些WebKit的新功能
这里有一个图片库 我们可以上下滚动
你可以看到这里有许多照片的尺寸和其他的不同
我们将鼠标停在这里 点击打开它
它将会在overlay view中打开
使我们能在这些照片中左右滚动
甚至我们可以通过点击这里在右上角选择我们“喜欢的”图片
这是非常酷的但我想我们可以通过使用Webkit中的一些新功能
让它变得更好 首先 我想谈一下背景滤波器
大家关注一下在app上方的这个位置我们把导航元素固定在这里
现在它是实心黑色的被固定在最上面
在我们上下滚动时内容就被覆盖在它的底下
然后点击进入Safari工具条它就变得模糊
这真的很酷
但实际上我们可以通过给这个元素加一个背景过滤器
让它看起来更像是UI的一部分接下来我会告诉你怎样实现它
你们知道我喜欢在编程的时候加很多空格
我将会跳过这里的UI和代码向前再向后一点点
酷 现在我打开了Xcode以及我的一个CSS文件
我们将要把一些新的代码加进这个CSS文件中我要开始了
我要在这里粘贴一个新建的导航声明
来指向那个实心黑色的导航条
我们要把背景颜色设置成透明度为50%的实心黑色
然后我们要加一个背景滤波器来进行10个像素的模糊
如果我们再返回 将会看到
我们新加的这行代码将会神奇得呈现出来
当你滚动的时候底下的内容会变模糊
而文本依旧很清晰Safari工具条的一切也都不会被影响
我认为这是非常了不起的
这是WebKit团队做出的一项令人惊叹的成果
非常厉害接下来我想给你们展示的是滚动停止点
我认为覆叠图库是一个使用滚动停止点的好例子
记住 当我们这样左右滚动的时候
我们会到达所见内容的左边
而不是精确得对准我们看着的地方
这并没有太大影响但我们能够改善这一点
通过使用滚动界限点来对准它
我们总是能够看到想要看的图片
所以我会给你们演示如何实现它让我们回到之前的CSS界面
我将要在覆叠图库里新建一个声明
来强制设定滚动停止类型
以及设置滚动停止点x坐标让它重复100个像素的视口宽度
所有的照片容器都是这个尺寸
所以我们再次返回看的时候所有元素都能很好得贴合
如果刷新一下 现在就能非常流畅得
浏览这些图片了WebKit控制的滚动效果已经生效
你们看 我碰到了边缘它们会弹回到正确的位置
这样真的非常棒正如你们所知 如果没有这个功能
就只能用很长的JavaScript代码来实现它
我迫不及待得想看到你们能用它来做点什么这真的是太棒了
你们知道 还有一个东西也很流行
就是你们经常会使用JavaScript为元素添加样式
那也将是一个关于覆叠的非常有趣的例子...
用masonry图像库
当我们上下滚动的时候
我们实际上在JavaScript里生成了网格
所以能以此改变x轴和y轴的坐标个数
我们并不能提前知道每个元素会有多高
但我们可以通过用JavaScript
在滚动界限点设置重复值来实现它
所以在我们垂直滚动的时候
导航栏将会很好得停在这些元素中间
所以你可以总是专注于应该去做的事情
为了实现它 我们将要跳回JavaScript 在这里
这是一个新的JavaScript文件
我们将要把masonry图库的构造函数
扩展到停止点masonry图库
我们将要做以及正在做的主要就是添加进一种新方法叫做设置停止点样式
通过它我们把滚动停止模式设置为强制
它将会在y轴设置停止点
并循环y轴上和停止点在同一高度的所有坐标点
这是一种我们实例化运行时
在构造函数内部设置的变量
我们要做的最后一件事就是
告诉我们的JS文件去使用它因为我们已经完成了对它的扩展
只需要把它放在这里用这个来代替masonry图片库
现在当我们更新的时候 你会注意到导航栏非常合理得置于这些元素中
我们可以抛出它它也总会停在一个能适应内容的合适的地方
我认为这一点非常棒
现在我想重新请出布伦特上台演讲
他将会谈一些布局和渲染的问题谢谢
感谢大家 真是太奇妙了
我想回顾一下我们刚刚讲过的一些功能
背景滤波器是非常有效的它们经过了硬件加速
但是又因渲染过程变得难以触发
所以我们应该认真衡量一下
看看它在你们自己的网站上的运行情况
对于页面内容和tile内容来说滚动界限是一个福音
但当你想做任何程序相关的滑动时都需要小心
因为在操作滚动过程时这两个功能会互相干扰
所以要记住这一点
同时这些会话被封装进了布局和渲染功能中
现在我的话题将要转到
我们今年在做的一些对JavaScript的更新
JavaScript ES6标准非常得奇妙
它通过一些新的方式推进了JavaScript 的发展
克里斯在他的演示中提到了一些
我想讲一下 我们今年集成的几个激动人心的新功能
去年在我们的会议中我们谈论过一些添加的新功能
在那之后我们并非原地不动
而是做了惊人的对ES 6的扩展支持
使用了许多东西对象符号和弱集
接下来我要介绍的几样都是我认为非常非常有用的
首先从我最爱的
模板文本开始
你们是否会经常遇到这样的问题呢
比如当你尝试着构建日志字符串
或者给用户生成什么东西时
你有一群字符串块或者别的东西
想把它们组合在一起
最终你会遇到这样的旧语法样例
我曾经苦于太多的时间耗费
用来寻找丢失的连接运算符
或者寻找我忘记加的右引号
所以在ES6引入这一新的模板文本语法之后 我内心的喜悦是无以言表的
我们可以用它建立字符串一些特定的字符串
可以用反引号字符来取代常规的引用字符串
当我们那样做的时候
那些容易遗落的美元符号 花括号等
就能自动生成了
你甚至可以在语法内部操作
就像在这里我对两个数字求
和它们会得到相同的输出
但我发现第二种更容易阅读
我已经完全被它征服了
现在我写的东西全部都会用这种语法
我爱它
今年引入的另一种能让写代码变得更容易的方法
是和对象文字创建有关的
你经常会面对这样的情况
我们有一些发生器函数
包含了我们想用的变量名
实际上这些变量名是我们想赋予给新建对象文字的名字
所以你会傻傻得重复发送名字 引号 名字
以及类别 引号 类别
人们已经习以为常了
但当ES6的设计者引进了一种简写法
在这里你可以用变量名创建对象文字
你不需要提供属性名
它将会使用你所提供的值的名字
在web检查器模式下
我们可以用它来避免上百次重复
你会发现那真是太有用了
我确定 如果你看一下自己写的代码
你会发现许多可以适用的场景
如今JavaScript拥有强大的面向对象的软件设计功能
但它基于原型的语法
对于那些从Swift或者C++或者其他类似的语言
转到JavaScript的人来说
似乎有些难以理解
这里我举一个用标准的原型语法写出的多边形类的简单例子
在ES6中 引入了一种新的语法
一种基于对象和类的语法
看起来和C++或者Swift很像
允许我们把所有东西封装在一起
它变得更加好读也更容易看出事物之间的关联
这种类语法使用一个特殊的函数以及一个构造器
为我们进行对象初始化
我们可以把类中的方法定义成对象的一部分
同时它支持继承我们可以通过扩展关键字从已有的对象中继承
在继承的时候我们想确保使用超算符对母类进行初始化
我们可以像在其他面向对象的语言中那样对方法重载
现在它甚至可以支持静态方法
所以你可以把方法定义在
你不需要使用特定实例对象的类中
最后 这种新的类语法
是和已有的基于原型的语法完全兼容的
你可以直接使用这种新语法对基于原型的代码进行扩展
不用重新写任何东西
我认为这是一种巨大的优势它是一种你可以立即采用的东西
以上就是我对JavaScript更新功能的简短介绍
我们今年做了许多关于JavaScript的成果
所以我诚挚地建议你们下载 ElCapitan开发软件试着用一下
我们已经做了许多年的CSS
从许多造成臃肿式规则的模式中一路走来
今年 我们实施了一些新的CSS标准旨在与此抗争
使得它的风格更加简单易实现
这是此类演讲中经常会有的一个主题
但我并没有时间讲完我们今年做的所有成果
anylink、解释占位符、语言都仅仅是其中的一部分
但我希望你们可以拿到我们的开发器种子 自己尝试一下
所以我想先讲一下
关于最近的一些无前缀的属性和值的问题
我们对今年这些标准的适用性
以及对一些功能的稳定性都非常满意
所以我们实现了它们的无前缀化现在你可以在本机格式使用了
同时我们也将继续支持它们在WebKit里的有前缀格式
所以你现有的网站也能继续使用
我们建议你们切换成新的WebKit版本
或者切换成能减少你的新代码中字符串数目的WebKit版本
我知道把这一令人振奋的无前缀滑动做到顶端是很难的
但是我要尝试一下
这是一种很常见的需求
来识别出你的网址是否正在被
一个支持特定功能的浏览器使用
你是不是会选择使用特定的功能
这取决于浏览器可以做些什么
让我们举个例子
我想对一个网页使用首字下沉的样式为了实现这样的效果
我想用一个和那个"C"不同的字体
我想在它周围加间距和额外的填充
我希望它有不同的字号
让它看起来非常有特色
我可以通过WebKit的首字处理来实现
这是今年WebKit推出的另一个新功能
但是如果浏览我网页的浏览器并不支持它
那是非常可怕的...我的意思是说那是一大损失
如果我知道它的最终显示效果是这样
我将永远不会使用那种字体我也不会在它旁边留间隔
如果我知道它并不能呈现我想要的样子的话
我根本什么都不会去做
所以在以前 我们会用一些这样的代码
来测试浏览器 问它
欸 你能支持首字放大的格式吗？
如果你能支持我可以做一些额外的工作
遍历DOM 找到一些我想添加样式的元素
然后应用这些东西
好 那将需要运行大量的JavaScript语句
或者导入大量的库来实现它
现在我们根本不需要那样做
今年WebKit支持@supports功能
它允许我们建立一个条件语句
只有当满足条件的时候
才会执行括号内的所有内容
所以在这个我想让WebKit首字下沉的例子中
我可以把所有特殊样式存进支持它的语句中
所以当我用一个并不支持WebKit首字放大的浏览器
点进一个网址的时候
我得到一个比较清淡的效果 
但看起来很好它非常得易读并且看起来不错
如果有人用Safari进入这个网址
他们会看到首字下沉
多么奇妙！
我想讲一些关于减少代码重复的内容
这是一些web检查器实际中的代码
好 我为幻灯片清理它一下
我们有许多像这样的例子
默认值和一系列的类都是...
同一群组的一部分
我们想给它们应用一些样式
但我们在一遍遍得重复默认值
又在其他类中把上述过程重复了几十次
在其他样式中重复了几百次
它最终变得超出负荷
所以CSS4的开发者们约定
和创造了匹配伪类
它所做的是允许我们编程定义出
默认值所有可能的排列
比如像一个类和一系列选择符的排列情况
这就取代了那些无谓的重复
而是用一行程序来替换它们
和写代码相比我唯一更喜欢做的事情就是删除代码
这真是太奇妙了！
因为我们可以避免大量的重复代码
我们实现这些改变做到避免重复的那一天
是web检查器史上值得纪念的日子
这些是今年CSS的一些新功能
我们也已经完成了关于Safari的提高方面的讨论
所以我现在想切换一下话题
再谈论一点如何在OS X和IOS上创造出奇特的体验
在座的各位中有多少
拥有仅面向桌面的网站？
或者你们专门为桌面做过什么东西么？
一两个
其他人更多得可能是做面向移动端的东西
也就是IOS和Safari
所以我的演讲的最大目的就是希望你们可以使用
本次提到过的这些新开发出来的web标准功能
我希望能使你们接受这些
特别为Mac和IOS端设计的东西
通过这些技术的支持你会让用户惊喜
在我们的整个生态系统中和用户建立更紧密的联系
AirPlay是从IOS 4中开始在IOS中上线的
IOS 4之后我们在Safari中对它提供支持
但是今年 我们开放AirPlay的平台中包括Safari
和OS X 它允许用户
直接在手机中使用Apple TV
它的API和在IOS中引入的相同
所以如果你从2013年就开始使用这一支持
你就已经完成了这个工作
或者如果你使用我们的媒体控制插件
你现在就已经得到了相关支持
但如果你不是的话
我建议你看看我们2013的WWDC在那里我们提到了许多细节
关于如何支持AirPlay协议
多重任务处理
昨天我们在iPad上看到多重任务处理的时候不是觉得很酷吗？
在昨天之前你有一个好主意
当你在iPad上浏览内容的时候你想到了那个好主意
你们曾经都可以占用整个屏幕
但是现在分配给你们来演示内容的屏幕只有三分之二
或者一半 或者三分之一
这种设计已经变得非常重要
让用户来控制视图的尺寸
iPad现在看起来更像是桌面了
这是一种非常重要 非常有价值的设计
我们明天会用整个演讲来介绍它 在同一时间同一地点
既然你们今天都能来到这里我知道你们一定能做到早起
我建议你们明天来听一下这个讲座
“使用Safari对响应式web设计进行传输与调试”
它将会介绍Safari在web检查器中新加的一些工具和功能
当你尝试使用这些风格的时候
它可以带来许多便利
这里也将会有一个关于多重任务处理的讲座
针对一些在iPad和IOS 9中的基于媒体的app也非常有趣
我们昨天讲了picture-in-picture
iPad是一个浏览内容的好工具
在昨天之前你们有一个好主意
就是你们的内容可以通过这种全屏模式来浏览
但现在我们有一个新的方式也就是我们的picture-in-picture模式
让你可以把孩子们的照片压缩进一个小箱子
放在你日历中巨大的空角落里
这是一个很强大的功能
我们拥有--我们把它定义为呈现模式下的WebKit
我们支持你们所熟悉的全屏
内联了你们那些可以在页面本身
以及在picture-in-picture也就是我们的新模式中展出的内容
所以这里有一系列你们可能要担心的问题
WebKit缺省WebKit媒体控制会支持箱子外面的picture-in-picture模式
但如果你想写自己的媒体控制
你需要使用呈现模式下的API来控制它们
在我们的开发者文件中介绍了
怎样把它们用于你自己的网页中
这里有一些你需要考虑的问题
当一个查看器开始观察
你在全屏视频模式的内容时
页面可能会跳出由播放窗口完全遮盖的模式
因为查看器能够退出全屏模式
并在你不知情的情况下变成picture-in-picture模式
所以如果你有机会关掉特定的功能
或者在视频播放的时候把网页内容隐藏起来
当它们变成picture-in-picture模式时可能看起来就不太对了
由于媒体可以在非常小的窗口下播放
我们强烈建议你们用HTTP实时流媒体技术
或者用HLS传输媒体流
HLS允许我们的媒体引擎选择位编码
可以根据播放窗口的大小来自动匹配编码率
它也考虑进设备中的网络情况和电量情况
通过使用它你将能保证
最好的用户体验
因为它照顾到了许多细节
在星期三我们可以看到令人惊叹的关于在iPad上的IOS 9系统
基于媒体的app中进行多任务处理的内容
如果你今年并没有听过我太多讲座
你可以看看我和Jer去年讲高级web媒体的视频
我们提到了许多HLS的细节
最后 我想谈论一些令我非常赞叹的东西
我们的Force Touch触控板
在三月的时候我们兴奋得展示了
使用了这一新硬件的新产品
它让我们可以识别出第二级的点击
我们叫做Force Click我们真的为此感到兴奋
在添加新的用户交互功能的过程中我们获得了许多乐趣
像这种字典模式向上看它向我们介绍了“氟橡胶”是什么
我们添加了一个看链接后面的内容的新方式不需要离开网页
我知道你们都能想到更好的方法
来把这个硬件应用在网页内容中
所以我们想要给你们最大化的对这个硬件的接触机会
让它出现在你们自己的网页中为你们提供服务
让我来简单介绍一下它的具体功能
对于一个普通的触控板
当用户用一定的力下压的时候
我们可以视作鼠标键下沉
当用户保持下压 然后弹起来
我们也从那个压力中释放出来
这视作鼠标键复原而那个过程可以视作一次单击
我们扩展了这个模型用它来支撑Force Click的操作
通过用WebKit给所有的鼠标行为都加入一个力度属性
它能告诉你在触控板上使用了多大的力度
同时我们也能添加一系列
你可以注册的新事件 来处理它
让我们返回到最后一张幻灯片
在这个我们曾经抬起 放下鼠标的地方
我们触发了一个鼠标的力这可以启动事件
这是调用阻止默认行为到事件本身的一次好机会
它会防止我们调用字典或者通过链接预览
来查询逻辑如果你想自己做的话
在放下鼠标之后
如果用户继续按力度达到了第二个等级
我们把它视作一次force click
我们启动了这一鼠标向下按的事件
当用户用力来让鼠标复原时
我们收到鼠标上移的力
所以 这一机制和鼠标上下点击是一样的
我们也有鼠标按下 鼠标抬起的过程
在这整个过程中
在鼠标上升下按时我们发出力来改变状态
我们这样做是为了用户不用通过移动手指
就能改变压力
改变他们用力的量
所以这里并没有设置可以记录鼠标移动的力的事件
注意我们也定义了两个图层和两个常量
来把力的等级定义为
常规点击和用力点击
我们强烈建议你们可以使用这些常量来代替捕捉数值
因为当规范成熟时这些可能会发生变化
所以 在你们自己的网站中展示一下怎样利用它们吧
我将愉快得再次邀请克里斯上台
给我们做另一个演示
好 感谢布伦特
像刚刚布伦特介绍的Force Touch那样
这里有许多很酷的东西供你尝试它们可以切实提升你的网站质量
如果你们记得 我们之前看过的那个演示我们点进这个覆叠图层
可以选择自己“最喜欢”的图片
那是非常容易的但也是一项进步
我认为如果我们真的可以通过
Force Touch触控板提升用户体验
我们就能给他们创造更多的交互体验
所以当我在台下的时候
我改动了几处代码我所做的是扩展了界限点masonry图片库
来创建一个使用力度提升的图片库
我们将要用它来添加一些和力度有关的事件
再做一些关于力度变化的动画
有几点需要指出
其中最重要的一条是我们可以在鼠标的事件数据中
得到最小力和最大力的数值
而鼠标事件数据就是我们在用力让鼠标上移下移时记录的力
正如布伦特刚刚说过的那样
我要讲的另一点就是我们将要绑定一些事件侦听器
来侦听我们所绑定和更新的力度事件
我刚刚跳出了所要进行的事件
所以它现在什么也没做我们要一步一步得开始
酷 首先 我想开始给鼠标一个下按的力
在这个事件中我们要做的是运行一下我写的这个程序
它可以在力值范围为真时被调用
这段程序所做的是在页面中添加进CSS属性
来保证我们的CSS转场效果不会被
我们自己用JavaScript写的动画所干扰
由于我们可以从改变触控力度的事件中得到许多力度数据
我们不想它们互相干扰所以最基本要确定的是转场中设置了很多东西
我们要做的下一件事就是看看kit鼠标下压发生了什么变化
我们这里做了很少的事
事实上我们从WebKit里的这些事件的力属度性值中获得力度数据
我们将要创建一个进程要看看最小力和最大力的值之间的差距有多少
我们实际上将要用动画演示在最大最小值之间的一些东西
所以你将看到我们将会回来做一些有趣的事
我们在这个过程中做的最基础的事情
可以说是我们选出了“最喜欢”的图片可以说是我们做完了动画
当我们返回并且更新
如果你看着这张照片你会看到当我现在上下按压触摸板
我们实际上在根据我给触控板的压力缩放这张照片
这真的很酷 非常具有交互性
它添加了一个新的图层
在我这样下压的时候
你会看到这里出现了一个心形意味着我对这张照片选择了“喜欢”
但事实上我的手指还没有落下
当我上拉的时候你会看到我们进入了覆叠视图
那可能不是我们想要的效果
而这一点击事件依旧在执行
那是因为我们并没有阻止任何浏览器中的默认行为
为了那样做 我们事实上刚刚返回添加了一行快速代码
即将实现鼠标点击行为
我们基本上只是希望能默认阻止调用
一定要明白OS交互系统并不会和开发者们进行交互
你能得到全部的控制权
所以如果我们返回 可以再试一遍
在我们的力度达到这个等级之后什么都不会发生
我们必须再重新设置一遍
在此之前 我们必须移除
用JavaScript设置好的全部样式确认一切都能真的顺畅运行
所以我们可以只填充进鼠标单击的那部分
我们这样做的目的是为了移除许多之前设置的样式
要保证所有加进去的CSS属性都已经被删除
恢复成了默认模式就像我们从来没有碰过它一样
好 用这个新的交互界面
我们可以在照片上徘徊打开动画 就像这样
我们得到了添加“喜欢”的照片的功能
我们依然可以通过一次普通的鼠标点击来进入图片库
我认为这真的很酷我也很兴奋能看到
你们用这个新技术来做些什么
现在 我将重新有请布伦特上台谢谢大家
感谢克里斯
我觉得你们也会赞同这个硬件的使用会成为一个非常伟大的方式
我想要介绍几个使用ForceTouch触控板的绝佳实例
希望你们能经常使用鼠标力常量
和并不难编码的数字值
因为我们希望它们可以在导航的过程中直接改变
使这个功能更加完整
请记住 遗憾的是并不是所有的用户 都有Force Touch硬件
所以我们可以把它视作一个捷径
或者是给拥有这个软件的用户的额外福利
用它来驱动动画或者给内容提供一些
你也可以通过其他方式来实现的更简便的方式
这将在Mac和IOS中带来令人惊喜的体验
这也是今天演讲中的主体
我想做几点总结
我们谈论了背景过滤器
这是一个很神奇的硬件方式能加速你网站上的背景过滤效果
滚动停止点使你
用几行CSS就实现平铺滚动
我们也探讨了JavaScript里令人惊喜的的新的类语法
CSS中的@supports 函数可以用来封装样式
并且拥有一些仅当特定功能可用时才被执行的样式
我们谈论了一点关于从Safari变到OS X里的AirPlay
以及picture-in-picture还有IOS多重任务处理
以及介绍了一些你可以去参加的演讲还有这个新的Force Touch APU
想了解更多信息可以下载相关文档
我们欢迎大家
进入www.WebKit.org网站关注WebKit项目
加入我们吧看看我们在做些什么
突破黑暗看看明年
会出现一些什么新的功能先睹为快吧
对于一般的询问我建议你们
了解一下我们的WebKit宣传者
当你们有问题想要了解
或者你想传达给我们什么信息的时候
可以在WebKit团队中找他
谢谢你们今天早上来听我的演讲
希望你们能在这周的WWDC中度过美好的时光
谢谢