Watch用戶友好
大家好我是加西德·薩迪克
在蘋果用戶友好團隊工作
歡迎參加《Watch用戶友好》講座
開始正題之前
我們先聊聊用戶友好是什麼
要知道有許多不同用戶
可以想見
這些用戶有着與世界互動的不同方式
不過針對本次講座
我們主要關注這些用戶的部分子集
例如存在視覺受損或聽力障礙的用戶
作爲開發人員
這些用戶爲我們帶來特別的機遇
這對我們而言非常特殊
這個機遇不僅伴隨着這些個別的小組
而且還促使他們完成了
原本不可能完成的任務
現在 你們在這裏是因爲大家創造出
可以實現神奇功能的應用
那麼 我們來讓所有人都來實現這些神奇的功能
無論他們是誰
也不論他們是怎樣與世界發生互動
現在Apple正致力於這一理念
例如通過 iOS和OS X的用戶友好功能
如VoiceOverSwitch Control
Assistive TouchZoom
Guided Access等等 不勝枚舉
Apple Watch也是如此
我們盡最大努力讓設備對儘可能
多的用戶都能用戶友好
現在我們開始正題
首先 我們來談談Apple Watch的
用戶友好 具體是怎樣以及如何發揮作用
接下來 我會告訴大家作爲開發人員
怎樣讓自己的WatchKitapp也具有用戶友好性
大家也將會看到這些API是怎樣運行
最後我們會總結幾個訣竅和
技巧 以供大家
在設計自己的用戶友好體驗時進行參考
我們來談談用戶友好功能
先從VoiceOver開始
首先 VoiceOver是針對盲人用戶的替代界面
其背後的理念很簡單
VoiceOver就是將用戶手指觸碰的任何內容都讀出來
例如 如果我的手指放在Clock圖標上
VoiceOver就會讀出“鐘錶”二字
此外 我們還提供了一系列手勢
便於VoiceOver用戶
安全有效地在在界面導航
稍後我會具體演示
對於低視力用戶我們有Zoom功能
正如大家所想Zoom可以將
界面放大
此外 我們還有兩手指手勢
這是受到iOS放大手勢的啓發並運用了Crown
真正實現無縫對接便於輕鬆
在放大界面導航
稍後我會進行演示
與Zoom類似還有X-Large錶盤
這可以大聲簡單流暢讀出時間
因此用戶可以輕鬆擡起手腕
確定此刻的時間
現在Apple Watch有着簡約的屏幕
雖然字體在很大程度上會影響到可讀性
部分用戶可能會需要加大字體
針對這些用戶我們有字體大小滑塊和設置
對於對具體光感或顏色敏感的用戶
還有Grayscale開關可以過濾整個Watch的UI
使之成爲完全黑白色調
對於這些特殊用戶而言這就會更便於閱讀
不會受到界面幹擾
部分用戶會感覺界面模糊
不便於閱讀
可能是因爲對比度不夠
或是存在模糊或失真幹擾
針對這些用戶我們有ReduceTransparency開關
可以降低Notification Center
和Siri等屏幕的透明度
便於用戶讀取屏幕內容
接着還有Reduce Motion功能
這可以降低屏幕周圍的運動效果
運動本身是絕對必要的
這與用戶的動作直接關聯
舉例來說從錶盤到
Home屏幕的過渡並非是要放大圖標
我們是讓它直接顯示
這對部分用戶而言是創建了更具方向性的體驗
最後
存在聽力問題的用戶可以調節左右平衡
並通過藍牙配套耳機設置AppleWatch的單聲道音頻
我們來看這些怎樣發揮作用
好了我們先從VoiceOver開始
可以用三種方式打開VoiceOver
可以在iPhone上使用Apple Watch app
在Apple Watch上使用Setting app
如果在Apple Watchapp做了設置
還可以用Accessibility快捷方式
只需三次點擊Crown就可以啓動VoiceOver...
VoiceOver啓動 天氣
爲了演示VoiceOver如何工作
我們先用VoiceOver做點什麼
來看紐約現在幾點
在此之前 我們先了解一下屏幕是什麼樣子
要想這麼做最好是把
手指放在屏幕上讓VoiceOver讀出
手指所指的內容
那我繼續這麼做
日曆
音樂 地圖鬧鐘
那麼現在我實際上了解
自己在屏幕的什麼位置
我想通過這些元素來到 WorldClock app
圖標 以便打開這個應用
現在 VoiceOver用戶通過這些元素的方式
是右滑到下一個元素或左滑到
上一個元素
那我繼續右滑
直到VoiceOver說出World Clock
表示它聚焦在World Clockapp圖標上
世界時鐘
世界時鐘
停下來-世界時鐘
現在VoiceOver講到"World Clock"
這是指我聚焦在World Clock
現在實際上打開app我需要激活元素
要激活元素
雙擊屏幕上的任何位置即可
稍等 需要加載一會兒
World Clock
World Clock
返回庫柏蒂諾
今天下午1:37
現在我想確定紐約此刻的時間
因爲這是我的Watch
我知道紐約是在名單的最下方
所以只要滾到底部即可
VoiceOver用戶可以把兩個手指放在屏幕上
再朝着那個方向滾動
或者輕擊滾動輪的那個方向
那麼我要繼續這麼做直到到達底部
第4到7行
第6行到第7行
紐約今天下午4:38
加上3小時
我知道紐約現在幾點了
這就是VoiceOver
我們繼續來看Zoom
首先要把VoiceOver關掉
可以使用Accessibility快捷方式來關掉
點擊Crown三次即可
VoiceOver關掉了
所有的Accessibility設置都在Setting裏
Accessibility
Zoom
現在我想讀出文字內容
實際上 文字太小
這裏看似可以放大一些
那就用Zoom來放大
只需用兩個手指雙擊屏幕即可
現在就可以放大了實際上需要
稍稍調整放大尺度
要想調整放大尺度
只需用兩個手指雙擊並滾動即可
非常棒
現在還得調整焦距這樣就可以讀出文字內容了
現在可以用兩個手指做拖拽手勢 和iOS
Zoom拖拽手勢非常相似在這裏比劃
不過還有個問題
這樣有點慢
而且手指會擋住我要讀的內容
針對這個問題
我們實際上運用了Crown來調整焦距
如果將Crown向前旋轉
就可以從左到右
就像這樣
一旦觸及線條底部
就可以移到下一條線
同理 如果我反向旋轉就會是相反的效果
好了
這就是Zoom
正如大家所見Apple Watch是個
相當用戶友好的設備
但是在實現完全用戶友好之前
還需要具備用戶友好應用
大家就是爲此而來的
大家也是爲通過把自己的應用變得用戶友好
成爲用戶友好的頂尖高手也是要成爲
VoiceOver用戶中的頂尖高手
可以通過WatchKitAccessibility API
把自己的應用變得用戶友好
大部分情況下這實際上
都相當簡單
這會涉及到在幾個界面項中
設置兩個屬性
每個界面項都是WKInterface Object的分類
就是在這裏需要對用戶友好信息進行註釋
這樣 界面項就會具備用戶友好性
只需這兩個核心功能來將應用
變得用戶友好我們繼續介紹
這些內容先從Existence講起
在開始之前VoiceOver需要了解
什麼纔是 什麼不是這樣的元素
用戶友好元素是在演示中
我滑過的和觸碰過的那些內容
在默認情況下 我們的框架可以提供許多這樣的內容
比如 按鈕 標籤
開關 這些都是用戶友好元素
但有時 你可能會用到默認設置之外的情況
例如 如果希望看到不是用戶友好元素的圖像
但是它可以向用戶提供有價值的信息
或者如果想將若干可用性元素集合起來
便於VoiceOver用戶在屏幕中導航
就像我們在Conversation組做的那樣
我們把三個圖標集成一組
這樣VoiceOver用戶就不必滑過三次
來進入一個Conversation
可以通過在界面項把
AccessibilityElement放入功能設置
VoiceOver用戶看屏幕顯示的方式
是通過對這個元素的簡短描述實現
這個簡短描述就是用戶友好標籤
正如AccessibilityElement
這裏很多內容是取決於你
用戶友好是指通過查看
界面項所包括的文本內容的標籤 但是有時
所指得標籤可能存在誤導或不存在
Home屏幕就是這樣的例子
這些app圖標沒有和
任何文本內容關聯
在這些特殊情況下
需要自行設置Aaccessibility標籤
可以通過將字符串
加入功能中
在界面項的Accessibility Label
現在這些app可以實現這些應用
或者是功能的90%的用戶友好
不好意思
但是要真正實現用戶友好體驗
還應該嘗試這三個功能
我們來具體談談
現在你可能還記得VoiceOver說過一些
諸如“按鈕”或“可調整”或“未開啓”
這裏真實發生的情況是
每個用戶友好元素都與
一系列特性相連接
這些特性讓VoiceOver知道
如何將元素呈現給用戶
在Conversation組具體怎麼用
舉個例子來說明我們把按鈕特性加入其中
讓VoiceOver瞭解可以雙擊
並激活這個元素
這樣就可以在界面項的
SetAccessibilityTraits功能中加入遮罩效果
現在有時 標籤和特性不足以向用戶表示
這個元素是做什麼用的
在這些具體情況下使用用戶友好
提示可能會起作用在標籤被讀出後
字符串也會被讀出
這樣用戶就會瞭解當聚焦於一個元素時
他們可以做些什麼
可以通過在SetAccessibility Traits功能設置中
加入字符串設置用戶
友好提示
現在部分元素與一個值相關聯
在該元素的生命週期中這個值常會發生改變
以Timer app中的Minute Picker爲例
其中的數值代表着
當前所選的分鐘數
在這一特殊情況下
我們有一個Accessibility Value
在標籤被讀出後或數值改變後
可以讀出的數值
可以通過將字符串加入界面項的...
Set AccessibilityValue
來設置這個值
因此這些是核心的用戶友好功能
我們再來談談一些更復雜的內容
圖像區
現在 這是Watch中的常用模式 將一系列
信息 放入圖像中再呈現給
用戶
以Weather app中的刻度天氣爲例
我們可以爲其中加入用戶友好註釋標籤
可是要想用簡潔的幾個字說明圖像中發生了什麼
很有難度
如大家所見有11個條件
每個都與一個時間關聯還有當前的溫度
我們所真正需要的是找到相關的區
把它們
分到不同的區之中
再關聯上相關信息
例如 關聯了一個Condition圖標
是凌晨1點 多雲
可以通過WK用戶友好圖像區的對象實現這個功能
這個區是CGRect框架
信息爲字符串標籤
可以運用這些對象數組將之加入界面項的
Set AccessibilityImage Regions功能
向用戶呈現一系列用戶友好元素
他們可以滑動或觸碰這些元素
最後
在你設計
自己的用戶友好應用用戶體驗時
可能會碰到的情況
是有時需要爲VoiceOver用戶稍稍調整UI
爲此 你的應用需要了解
VoiceOver是否在運行
爲此 我們添加了新的API
WK Accessibility中VoiceOver在運行
我們來看這些怎樣發揮作用
那麼 我創建一個應用可以在手腕上預訂三明治
而且這相當簡單
首先需要選擇用什麼材料
夾放 三明治
我選的是麪包
再加些烤牛肉
也許還要點生菜
最後再放上面包
我返回的時候會看見三明治的視覺呈現
接着繼續可以下單
我們希望看看這個應用是否對
所有用戶都友好特別是VoiceOver用戶
有一個很好的方式可以實現這一點
就是打開VoiceOver
嘗試應用的效果
我們先用Accessibility快捷方式打開VoiceOver
VoiceOver啓動製作三明治
按鈕
好了
那麼我們立刻會有個問題
我們可以看到三明治的圖像顯示
這可以爲我們提供三明治
具體成分的有用信息
但是完全不具有用戶友好性
因此我們應該爲VoiceOver用戶實現這一功能
製作三明治
下單按鈕我按鈕
現在雖然這對我們而言很明顯
因爲我們可以根據信息按鈕提示看到
這是信息按鈕VoiceOver用戶只能聽到
字母i 因此會很困惑不知道這是在做什麼
我們應該添加用戶友好標籤
以便讀出信息
而且 這個按鈕看上去有些小
可以想見對於VoiceOver用戶而言
要感知並發現這個
信息按鈕可能有些難度
因此 在VoiceOver運行時 把這個
弄得大一些
我們繼續講
製作三明治
製作三明治
在三明治中點擊自己想要的食材
一層烤牛肉 210c
兩層
按鈕
第一個問題VoiceOver讀出210c
VoiceOver讀出的內容不一定限制在
界面的屏幕空間內
我們應該使之講出210卡路里
還要注意我們滑過了三次
來加入每一層的內容
假設 我當真非常飢餓
立刻就想拿到三明治不想要滑過
三次才加入來加入每一層的內容
我有個大三明治
我們這麼解決問題把每一層都分組到一起
我們繼續來解決這個問題
那麼你其實可以通過Storyboard解決很多
這樣的用戶友好問題
我們來繼續先在Make Sandwich屏幕
解決在Make Sandwich屏幕中的元素
分組問題因此VoiceOver用戶
每層只需滑動一下
首先 我們要發現包括
這三個標籤的組
就在這裏
我們可以到側邊欄設置"Accessibility Enabled"
這就把它變爲用戶友好元素
此外 我們還加上一個按鈕特性
這樣用戶就會知道可以雙擊
並激活這個元素
在屏幕上還有一個問題是卡路里標籤
被讀成“210 c”而不是“210卡路里”
我們來看卡路里數字
讀出的位置就在這裏
在Calories標籤上
把文本內容設置成卡路里數和c
在SetAccessibilityLabel再加一行
我們在這裏加上卡路里標籤
調用功能設置Accessibility Label
再加上所用卡路里數的字符串
後面是字符串Calories
這樣用戶會聽到“210卡路里”而不是“210 c”
我們再來解決MakeSandwich屏幕的用戶友好問題
我們希望測試自己的改變
可以在Watch上構建但是爲每個重複的改變
都在Watch上構建則會花費時間
相反 我們可以使用Simulator
那我繼續在Simulator上運行
現在來測試Simulator上的用戶友好改變
必須要用到AccessibilityInspector
可以通過Setting打開
AccessibilityInspector
GeneralAccessibility
AccessibilityInspector
這是隻適用於Simulator的工具
可以通過點擊檢測元素的
用戶友好性會把紅框中所包含的
所有內容都顯示出來並會看到該元素的
具體說明如標籤 提示 值
相關特性等
因此當你要實現元素用戶友好時
這一點相當有用
我們繼續來看這些改變是否會發生
有了AccessibilityInspector
點擊只能選中一個元素
激活元素需要雙擊
我們來點擊這裏
有幾個問題需要注意
首先 整個層怎樣成爲一個元素
因此 現在VoiceOver用戶只需每層滑動一次
這樣製作三明治可以更快更方便
注意Calories標籤現在可以讀作是"210卡路里"
這樣用戶會更明確
這具體代表什麼意思
最後是個按鈕特性我們的用戶現在瞭解
可以雙擊並激活這個元素
屏幕問題解決了
我們繼續來解決開始屏幕的問題
實際上這是界面控制器的位置
首先是三明治圖像顯示
根本就無法
看到
這個三明治的圖像顯示實際上
可以爲用戶提供許多信息
因此 若只是在圖像上
增加用戶可用性標籤很有難度
因爲我們想表示的是每層的內容是什麼
各層的順序如何
因此似乎是用戶友好圖像區可以實現這個功能
我們先來看在哪裏設置三明治圖像
是在這裏設置這裏生成圖像
我們來生成圖像區
那我加上功能生成圖像區
這個功能會在列出每層內容
創建用戶友好圖像區
設置圖像區的標籤使之成爲該層或
三明治層的名稱
在設置框架使之成爲生成原始圖像所用框架
最後我們把它加到數組再返回
我們繼續把這個加到標題上
這樣可以從界面控制器上調用
然後讓我繼續從界面控制器上調用
我們這樣就得到了三明治的圖像
我們調用Set AccessibilityImage Regions
或是生成圖像區
現在 第二個問題是信息按鈕
只讀出了“i”
因爲標籤在信息按鈕的整個生命週期
無法改變
我們可以只通過Storyboard設置
我們來選擇信息按鈕
我們繼續 將標籤設置爲“信息”
像這樣好了現在標籤問題解決了
但是信息按鈕還有一個問題
就是對VoiceOver用戶而言不夠大
在屏幕上不容易感知
我們需要根據VoiceOver是否運行重新調整大小
因此我加上一個功能來實現
現在做的是要檢查VoiceOver是否和
WK AccessibilityVoiceOver Running
調用一起運行
如果是 則要把高度和寬度設置爲40
否則就設成20
現在我們來調用Will Activate
以防萬一有人打開了VoiceOver
在這個屏幕上 我們應該繼續並註冊通知
並要使之調用這個功能
通知具有WK用戶友好性VoiceOver狀態改變
現在我們來修復運行中的應用
進食
進食修復
進食修復
製作三明治
- 按鈕- 剛纔
我們可以看到信息按鈕已經變大
信息按鈕
標籤讀出方式也正確
我們繼續來製作三明治
製作三明治
按鈕點擊想要的三明治
烤牛肉 210卡路里
按鈕一層烤牛肉
麪包 130卡路里
一層麪包
一層烤牛肉210卡路里
按鈕
好了 剛纔你也看到卡路里標籤的讀出方式
正確這對用戶更爲清晰
每一層都是單獨元素
使得導航更爲方便
我們來繼續看看三明治的圖像顯示
來看看現在用戶友好性如何
製作三明治
烤牛肉
圖像
麪包 圖像
現在 VoiceOver用戶可以在滑過三明治
沒問題
Home
如大家所知作爲開發人員
現在可以製作自定義的錶盤complication
和你的應用一樣這些也需要具有用戶友好性
我們的框架可以決定大部分錶盤組件的
用戶友好標籤還有兩種情況
用戶友好標籤可能表達不準確
或是不存在
來看 每個錶盤Complication
都包括一組圖像和文本供應方
雖然大部分供應方都有着明顯的
相關客戶友好標籤有兩個卻沒有
圖像供應方和Simple Text供應方
對於這兩個特殊的供應方
我們加上了屬性Accessibility Label
其功能類似於用戶友好標籤
在普通WatchKit應用中的作用
實際上 這非常容易
我製作了錶盤組件讓預訂三明治
更爲簡便以防你此刻當真
餓得發慌沒空打開應用
只需要擡起手腕
即可就能拿到三明治
這裏就是Complication就在這兒
因爲這是個圖像
並沒有相關的用戶友好性
那我們繼續在上面設置用戶友好標籤
進入Complication生成的位置
或者是供應方生成的位置
我們來設置用戶友好標籤
沒問題
非常簡單
來看VoiceOver用戶會聽到什麼
現在就拿到三明治
那麼 如果沒聽到
標籤會讀出“現在就拿到三明治”
現在VoiceOver用戶就可以
雙擊預訂三明治了
正如大家所見非常簡單就可以
讓自己的應用和Complication具有用戶友好性
來講講大家需要牢記的幾點
以供設計自己的用戶友好體驗時作參考
首先 要讓圖像具有用戶友好性
特別是如果它們可以爲用戶提供
重要信息時
應該在上面設置用戶友好標籤
或者當它們提供非常複雜的信息時
使用用戶友好圖像區API
當設計自己的應用時
考慮一下VoiceOver用戶將在屏幕上怎樣導航
如果不這麼做VoiceOver用戶
就不得不多次滑過才能加入邏輯項
因此通過Set As Accessibility Element
對用戶友好元素進行分組
可能對非VoiceOver用戶也是如此
但是應該避免使用過於小的界面項
這樣VoiceOver用戶會很難感知
在屏幕上很難找到太小的界面項
最後 也是最重要的一點
在自己的應用中嘗試用戶友好的效果
來看自己的應用字體變大的效果
或是看看應用在VoiceOver打開時的效果
你可能會被自己所見嚇一跳
總之 Apple Watch是非常用戶友好的設備
但是在實現完全用戶友好之前
還需要具備用戶友好app
這也是大家準備爲VoiceOver用戶
實現的這一功能
正如大家所見這其實非常容易
讓我們爲所有用戶
都實現這些神奇的功能讓應用物盡其用
無論他們是誰
也不論他們是怎樣與世界發生互動
感謝大家
在《WatchKit編程指南》講座中
大家還可以瞭解更多內容
大家還可以在開發人員論壇中提問
或者與開發顧問保羅·馬科斯聯繫
感謝大家
非常感謝