Safari可扩展性的最新内容
<br/> 大家好
我是布莱恩·温斯坦
是Safari和WebKit的工程师我来这里和大家
聊聊《Safari可扩展性的最新内容》
今天 我们会介绍扩展Safari的几种新方法
你可以为iOS和OS X编写内容拦截器
Safari ExtensionsGallery也有改变
还有新的app扩展类型 可以将你的
内容直接加在Safari的Shared Links中
我们这就开始直入正题 谈谈
内容拦截器
我们先来看一个大问题：
内容拦截器是什么？
内容拦截器确定了页面上的内容子集或
资源不会显示或者都不会加载
我相信大家都可以设想自己在浏览Web时
有意拦截的内容
可以通过两种重要方法使用内容拦截器
来拦截内容
可以在页面隐藏元素或一并拦截
加载资源
一段时间以来 你可以在OS X上使用Safari扩展
来实现这个功能但是如今 我们让
iOS也有了这个功能
App会提前告知Safari它们想要拦截的内容
而不是在实际加载过程中Safari咨询
app是否进行拦截
这种新模式快速而高效 
因为Safari不需要 在加载时 
咨询app 
内容拦截器被编译成字节代码
这样可以高效地进行评估
除此之外 新模式可以很好地保护用户隐私
因为内容拦截器不会浏览
用户在做什么
要创建内容拦截器你需要在
iOS上生成app扩展这会返回一个列表
包括你想拦截的内容
规则列表的JSON字符串
这里是我常去的网站作者会介绍 
他打球的不同球场 还有
一些漂亮的图片
但是网站有些内容很是烦人
我希望编写内容拦截器
来拦截那些让我烦心的内容
最显眼的恼人之处是左侧的
点击诱饵链接
在我滚动页面时它们甚至都不离左右
我们来编写规则隐藏这一元素
首先来看 我们应该隐藏哪个元素
来看网络检测器我们看div存在ID泄露问题
在网络检测器中选中时
我们实际上在设备上做了覆盖
显示这是需要隐藏的正确元素
那么我们现在知道该隐藏的元素
我们来编写规则完成此事
每项规则 每项内容拦截规则都是
包含动作和触发器字典的JSON对象
这个动作告知Safari该做什么
触发器告知Safari
何时要采取相应的行动
我们先来看看隐藏这个元素的
动作字典 是要隐藏这个元素
我们的动作就是将类型CSS不显示
也就是说我们在页面元素应用
不显示样式
当动作类型为CSS不显示时
在动作字典中会用到选择器
所有的选择器都得到Safari支持
WebKit是得到内容拦截器支持
在本例中 我们想
用ID Link来拦截内容
现在我们来定义何时想要采取这个行为
会用到触发器字典来实现
因为Links是相当泛型的选择器 可以用于
其他页面的真实内容
我只想让这个规则
在用户位于bigbearsgolfblog.com页面时应用
如果我想让规则在用户位于
bigbearsgolfblog.com以外的任何站点运用
我会只将如果域值秘钥
替换为除非域值
并保持相同值
我希望在加载任何资源时都应用这一动作
同样只要我在bigbearsgolfblog.com
我就会设置作为正则表达式的URL过滤器
在下载的每个URL资源上运行
以便匹配所有的URL
在稍后的例子中
我们会再说说URL过滤器
我们来看这个规则放在一起是什么样子
我们有动作类型CSS不显示
也就是说我们在隐藏元素
选择器用于描述我们隐藏的元素
接着在触发器里
我们说明想要这个样式运用到哪个域名
在加载时 我们希望将它用在哪些资源
在运用内容拦截器时
网页是这样的
链接列表不复存在 我可以
集中在感兴趣的内容上来
但是
当我看着Web检测器时
发现页面上还有一处烦人的内容
如果你来看页面的资源
就可以看到从example.com
加载的脚本名为Trackingscript.JS 
这个脚本实际上
在跟踪我访问的不同页面
这样可以从我的浏览历史中
可以搭建出我的配置 
当我在看控制台时
它会帮助警告我
称我被跟踪了
感谢 Tracking脚本
我会在加载时一起拦截这个脚本
我们先来定义这个规则的动作 
动作类型为拦截
是指我们会拦截
匹配相应触发器的任何资源加载
我们来看这个触发器
触发器会定义动作何时应启动
但是在本例中我们已经定义过URL过滤器
资源类型和加载类型
当三项内容 URL过滤器资源类型和加载类型
全部匹配 触发器就会启动
我们先来介绍URL过滤器
这是个正则表达式
在所被要求的每个URL上
都会运行
在这种情况下它会与任何包括
字符串Tracking 的下划线脚本相匹配
这将匹配
example.comTrackingscript.js
触发器的其余组件
会提升触发器的针对性
我们并不需要拦截的内容矫枉过正
首先我们要的是确定一组
资源类型来匹配
在本例中 我们只想拦截加载脚本
所以把脚本作为我们希望匹配的资源类型
最后 我们规定了第三方的加载类型
加载类型可能为两个值
是第一方和第三方
当加载是来自相同的方案 域名和端口时
则被视作是第一方
作为页面的主要资源
在我们的例子中我们只希望拦截
第三方加载的跟踪脚本
也就是说如果用户是在example.com
脚本仍然会成功加载
我们来看规则放在一起是什么效果
当我们配合这个内容拦截规则重新加载页面时
大家可以看到
我们根本没有加载
我们根本没有加载
Tracking script.js
控制台没有给出警告
称我们被跟踪
非常棒！
因此
你的内容拦截器会成为这些规则
的JSON数组
现在 你已经描述了想要拦截的内容
下一步就是在iOS设备上获取
内容拦截器
我刚才说过 iOS上的 内容拦截器是
从app扩展中加载
很简单 你可以自己做一个
开始时 你只需要在项目中添加新目标
从iOS应用扩展列表中选择内容
拦截器扩展
当设置在启动了你的内容拦截器 
app扩展就会被实例化
与其他的app扩展类似
它是默认关闭状态
Safari会把你的规则编入字节代码
这样每次启动
Safari时 就会加载并快速评估
一旦你生成了app扩展
就会有动作请求处理器
像这样
app扩展所做的就是在app扩展实例化时 
将拦截器
list.JSON的内容返回Safari
拦截器list.JSON自动进入
你的扩展目标编写自己的内容拦截器
你所需要做的就是
填写这个JSON文件
此外
内容拦截器自动用于Safari
或任何使用
Safari View Controller的app
如果你有显示Web内容的app
则应该查看本周早些时候
介绍Safari ViewController的讲座内容
但是
对部分app而言静态拦截表 
还不够
你可能想提供内容拦截器的
自定义内容
或是让用户从
诸多不同拦截表中选择
或是让用户选择他们不想运用的具体站点
为此
和其他 app扩展一样
我们建议你把管理设置放入app
当用户采取的动作会改变
拦截表的内容时
你只需要告知
Safari重新实例化app扩展
这将导致内容拦截器被重新编译
为此
我们在Safari服务框架中
的新款API
名为SF内容拦截器
管理器重新加载带有标识符的内容拦截器
你只需要传递内容拦截器的
束标识符
这将导致Safari重新运行app
扩展并升级解析内容
拦截器生成的字节代码
这不过是内容拦截器可实现的部分功能
可见开始制作自己的内容拦截器是多么简单
我想有请阿莱克斯·克里斯滕森来做演示
阿莱克斯?
<br/> 谢谢 布莱恩
我是阿莱克斯·克里斯滕森来自Safari和WebKit
我将给大家展示如何在iOS制作内容拦截器
我们会通过两种方式 拦截内容
我们将在Web页面隐藏部分元素
我们还会拦截部分加载
现在
我不了解大家会怎样但是我自己是时常在
Web冲浪
感觉的确可以通过删除
部分网页内容的扩展
来提升用户体验
大家看看我收藏的Web页面
大家就会明白我是在说什么
就这样
哦！我就喜欢这样的Web页面
我可以了解可爱小狗图片的世界上
在发生什么
这些内容 我每天至少会查看一个 
宝贵的屏幕空间非常有限
这里的评论有些烦人 而且还占用了
宝贵的屏幕空间我本想留着
放可爱的小狗照片的
我们进入Web检测器 
来看这个问题该怎么解决
在Mac上打开Safari
如果进入开发菜单模拟器
可爱的小狗和cats.com
大家可以看见 
我们要检查这个iOS模拟器实例
如果我们按住鼠标可以看到
这就是我想隐藏的div
这是个类评论
如果我们研究Web页面的结构就会看出
我想隐藏的其他div
也都有类评论
编写选择器div.comments非常简单
可以发现 页面上我想隐藏的所有元素 
都使用了CSS不显示样式
我们来制定规则在iOS内容拦截器中完成这个任务 
打开Xcode 生成新项目iOS 
单视图应用
我的app希望大家能有比"我的app"更好的名称
在桌面上生成它
好
从这里我们进入文档
新建
目标
在iOS下
应用扩展
这里有内容拦截扩展模板
就是布莱恩刚说过的那个
我的内容拦截器
我们不要激活这个方案 因为我们
要在iOS模拟器上 运行app
加入新的目标
变成这个样子：
mycontentblocker
在其中
生成了拦截器list.JSON
我们准备把规则放在这里
现在
我有应用于
选择器div.comments的规则
并把样式CSS不显示应用于选择器匹配的
页面所有元素中
我们现在把这个应用到所有地方
用点星号正则表达式
代表所有地方
在模拟器中运行
这就是我的app
好的
如果我们进入设置
Safari
内容拦截器
这是我的app的内容拦截器
我们把它打开
重新加载页面 看看它会做什么
所有评论都不见了
我可以把屏幕空间
放可爱的小狗照片我来这个站点就是这个目的
如果仔细看你可能会发现
有一幅图 不是可爱的小狗照片
我其实是个爱狗人士 而不是爱猫人士
我不想看到这些猫咪的照片
(Laughter)我不想等到这些猫咪照片都加载下来
也不想把带宽用在下载
我根本不想要的
猫咪上面 我们把这些加载完全拦截掉
回到Web检测器和资源选项卡
大家可以看到这个页面上的资源
有些名称我可以通过编写正则表达式识别出来
如果包括斜杠
猫咪那可能就是猫咪照片
我们拦截这些加载
这里我还有个规则
动作类型拦截
如果匹配正则表达式
斜杠猫咪 我们就拦截它
我觉得这有点太过泛型
我估计这样可能会拦截掉一些
我不想拦截的页面比如任何位置的URL
要是有这样的斜杠类型就会被拦截
但是这可能会导致问题
我们先这么用在
cutepuppiesandcats.com之中我相当肯定
网站上若有斜杠猫咪的URL 可能就是
我想要拦截的猫咪照片
好的 我们来运行一下看看会怎样
我们回到设置中做转换  
并重新编译内容拦截器
你还可以使用API从app内部完成这个任务
返回Safari
重新加载页面
就这样
猫咪照片不见了
但有些内容出现了问题
小狗照片太大了
没有背景颜色
看似CSS也不见了
<br/> 我们肯定不想这样
我们回到设置中Web检测器
看看是怎么回事
这里
大家会看到
CSS在URL中
还是以 /cat开头
是猫咪和dogs.css
我们无意中把它拦截了
有两种办法
来解决问题
我们还有一个规则
只适用于图像或...
可以有些创意
但我会这么做
如果匹配了猫咪和小狗
我们想忽略掉拦截的规则
就这样
其中有猫咪和小狗就忽略之前的规则
这会拦截猫咪图片这是我想要的样子
但是会让猫咪和dog.css通过 
好的 我们再来运行一下
切换 重编译内容拦截器
并重新加载页面
就这样
我希望内容拦截器的用户像这样
来查看网页
直接就是小狗照片
好
今天 我们拦截了部分猫咪照片隐藏了一些评论
谁知道明天你想拦截什么内容呢？
随你啦
试着在iOS上制作内容拦截器吧
布莱恩 上来吧
<br/> 谢谢 阿莱克斯
刚才是对怎样
在iOS生成制作内容拦截器进行综述
其中只是介绍了可实现的部分功能
因为我们觉得拦截列表模型是
拦截Web内容的最好方法
我们已经把
相同的模型通过传统的Safari扩展API带回Mac
几年前 大家就可以使用Safari
拦截内容但是当前的拦截模型
可以反向影响用户浏览的
效果
有了这款新的拦截列表模型 因为Safari
在任何加载发生之前 就知道了拦截列表
速度就会快很多
因为我们已经优化了这些拦截列表
生成的编译字节代码
也会大幅提高内存效率
如果有人使用...编写扩展
如果有人过去编写过内容拦截扩展
他们会了解可加载方法
所以我们在反对可加载方法
如果Safari扩展规定了拦截列表
调用可加载会变成扩展中的停止操作
在Safari扩展中增加内容拦截器
你只需要在Safari的扩展构建器中
设置内容拦截器文档
这可以是你的iOS app所用的完全相同的JSON文档
但是 如果你想为用户提供
拦截内容的自定义选项
同样要让他们从不同的拦截列表中选择
或者当用户在具体页面时让拦截列表
不能适用我们已添加了JavaScript API
来动态配置你的内容拦截器
你可以从扩展的全局页面调用
Safari.extension.set内容拦截器
并传递至内容拦截器
内容拦截器
可以是对象
或JSON字符串
API二者都接受
刚才是对iOS和OS X
的内容拦截器进行综述
当我们谈论传统的Safari扩展时
我们对
Safari ExtensionsGallery有所改变
若有谁不熟悉Safari Extensions
Gallery 它其实是用户发现Safari 
扩展的最佳位置
可以直接从Safari的菜单
并从Safari的扩展偏好直接访问
只有在这里
用户点击一下即可安装扩展
如果你对制作Safari扩展很是认真
你现在就已经在这个库里了
我之前说过 这里是用户发现并
安装扩展最便捷的位置
为了用户的安全起见
很快库里的所有
扩展都会由Apple签署并主持
利用这一点你只需向
库中重新提交扩展即可
还有一点非常棒的是
一旦你已经向库提交过一个版本
如果提交更新的话用户会自动
免费获得扩展的更新版本
你不必再编写更新清单
但是如果你的版本在库中没有
当你想让用户更新库中的
最新版本时你需要在更新
清单中添加新的旗标说明
Safari应更新扩展到
库中的版本
很快
自动更新将仅适用于
ExtensionsGallery中的扩展
这些是Safari ExtensionsGallery
所做的改变
我来介绍本次讲座的最后一项内容
Shared Links app扩展
Shared Links是一项Safari功能
就在书签和
阅读列表旁
其中包括你感兴趣的
不同来源的链接流
推特 领英 微博账户的链接
都会自动显示
此外 在iOS 8和Safari Yosemite版本
我们为用户增加了收藏网站
RSS订阅功能使其可以直接
在Shared Links显示
在截屏中 大家可以看到我的推特账户以及
订阅的部分网站是分散状态
在iOS 9和Safari的OSX ElCapitan版本中
我们添加了新的方法
可以直接在Safari的Shared Links中获取内容
这些是SharedLinks app扩展
这是新的app扩展类型
对于iOS和OS X有着同样的API
先从生成新app扩展开始
就像我们刚介绍内容拦截器时那样
你生成新的目标在感兴趣的平台
选择Shared Links扩展
若要app扩展能在高层级运行
这需要在正确的时机调用app扩展
你会返回NSExtension项的列表
在Shared Links app扩展的情况下
每个NSExtension会直接转为
Shared Links项
这里有NSExtension项的白板 还有我们
准备生成的Shared Links项
我将向大家介绍怎样通过代码来完成
先在NSExtension项定义部分用户信息
我们首先要定义的是每个NSExtension项的
标识符
app扩展返回的
NSExtension项不会有重复的标识符
接着来定义URL字符串当用户选择Safari的
Shared Links项时这就是加载的内容
然后 我们定义SharedLinks项的出版日期
Safari使用每项的日期
在用户的Shared Links内部
不同来源分散项 
最后
你可以定义显示名称
这会在Shared Links项的顶部显示
要注意两点
独特的标识符必须与扩展的
多种实例化相一致
如果扩展需要多次调用
并返回相同的Shared Links项
独特的标识符需要是时间相同
显示名称可以完全可选
如果没有设定 Safari将使用
Shared Linksapp扩展的显示名称
然后 我们定义Shared Links项的标题
这就是NSExtension项的属性标题
然后定义SharedLinks项的说明文字
即NSExtension项的属性内容
文本
如果内容太多 二者都会
自动省略
这是Shared Links项的全部文本
我们看到的图像会怎样呢？
左上角的图标是NSExtension项
附件数组中的首次输入
在本例中 我会使用扩展束中的一个图像
但是你可能会从这里的Web抓取一个图像
右上角的图标就是你的app图标
因此如果返回多个Shared Links项
而且是不同的显示名称
右上角的图标将提供app的品牌化
让用户知道这些内容是来自你的app
一点提示 如果这是首次使用NSExtension项
那么NSExtension项的所有属性
属性标题属性内容文本
和附件 必须在设置用户信息后完成设置
这就是从Shared Links内部获取内容的全部所需
我想有请阿莱克斯回来 介绍另一个演示
阿莱克斯?
好
我有些内容想放在SharedLinks当中
我会制作Shared Links扩展
先来给大家看看我说的是什么意思
好
如果打开Safari大家可以看到在侧边栏
我有一束来自推特账户订阅的链接
我希望把Shared Links 扩展的用户准备的内容
放在这里
我们来制作Shared Links扩展
打开Xcode
生成新项目
我们按照OS X来做但是在iOS上也一样
现在 把它放在桌面
好的现在 从这里进入文档新建 目标
在OS X应用扩展下这里有Shared
Links扩展模板布莱恩刚给大家看过
我们继续
My Shared Links扩展
这个名称不错
激活扩展方案
好 我们激活了因为想要
在Safari上运行扩展
现在新的目标
形成了My SharedLinks扩展
它把模板Swift放在这里
这个Swift非常简单
它刚生成了NSExtension项填入了用户信息
提供了属性标题和部分上下文文本
不好意思 是内容文本
它用一个数组调用了完全请求返回项
在本例中 就是一项
我们来看看它在框外做了些什么
用Safari来运行
我们用Xcode进行调试
工具想知道目前发生的情况
就这样
这里我们有来自My Shared Links
扩展的部分内容如果我点击它
就会被带到Apple.com 非常棒
这就是模板表示的内容
现在 不过我希望把内容放在这里
我想把Swift稍作调整
我带大家看一下怎么做
非常简单
只要发送NSURL请求
到我的服务器
HTTPS
一定要用HTTPS
cutepuppiesandcats.com
斜杠data.JSON
我给大家看看发送请求后 
将会收到的代码
就是带有几个链接的
JSON API
还有我想放入
Shared Links的部分内容
好
这会生成一个请求获得JSON
它会为解析的
JSON数组的每个值解析JSON
从中会得到一些字符串
它会填入通过部分
内容制成的NSExtension项
我将URL作为独特的识别符 因为我知道
对于我的数据而言它们都是独特的
如果这对你的数据而言不是这样
那么就想办法为每个获得独特的值
我有个图标
需要添加
就这样
就是我的小狗图标
我把它的位置放错了
我们把它放在演示中
我需要加上它
加上小狗图标
我还要加
在这个目标上
My Shared Links扩展
那么 My Shared Links扩展
就可以访问这个图标
我们现在来运行一下
我们来看看会怎样
首先关闭Safari
就这样
我们就来运行这个看看会怎样
工具需要了解目前发生的情况
我的内容还没有显示
我们来看看是什么问题
如果直接看这里
会看到一系列错误
如果打开控制台来看系统
日志控制台你会看到
一系列沙箱异常
这是因为
我的扩展是沙箱的
为确保用户安全
这些扩展只能访问有必要的内容
这一独特的扩展
现在还不能访问网络
我们试着提出NSURL请求
我们的确需要
访问这个网络
如果我点击
这里的项目
然后进入功能
这里
我需要检查对外的连接
以便
这个扩展
可以发送
初始的对外连接以获取
JSON数据 
好
好 我们运行一下
就这样!
就在我们想要的位置
现在有了内容
以及内容的链接
我可以将用户
从Safari Shared Links带到网站
如果有内容想要放入
Safari Shared Links
试着制作Shared Links扩展
好的 该你了 布莱恩！
<br/> 谢谢 阿莱克斯
跟我们演示了帮助用户
帮助用户使用SharedLinks app扩展
发现你的内容是多简单的事情
我们今天都聊了些什么？
我们介绍了为iOS编写
内容拦截器的功能
如果你在Mac上有内容拦截器
你就肯定会用到这个新款API
它可以为用户提供更快
内存更高效的浏览体验
若在Safari ExtensionsGallery
有扩展请再次提交
这样你的新版本就可以得到Apple的签署和主持
如果在这里没有扩展
现在就是开始的绝好时机
最后
如果你有一组链接在Shared Links中
可以运用你现在可以直接
把它们放在Safari这样用户就可以
找到它们 并返回你的网站
如果有任何问题可以联系约翰·戴维斯
我们的Web技术开发顾问
很快
我们还有博客介绍Safari
内容拦截的所有功能 是在
WebKit.org博客上
尽可以通过Apple开发人员论坛和我们联系
有关讲座如果你有app
其中会显示Web内容
可以查看《介绍Safari视图控制器》的部分
正如大家所见我们用Web检测器
帮助生成内容拦截器
若想了解Web拦截器的更多详情
可以查看《使用Safari来交付和
调试响应式Web设计》讲座
我将...
阿莱克斯和我 在本次讲座后会直接去媒体实验室A
如果有问题 就来找我们
谢谢！祝大家周五过得愉快