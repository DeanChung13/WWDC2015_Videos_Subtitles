深入WatchKit 第二部分
諸位早上好
我叫 內森·德弗里斯
過一會兒您會見到我的同事 科洛·張
我們這裏將爲大家獻深入WatchKit第二部分的講座
在上一節課 也就是第一部分中
我們談到了watchOS 1和watchOS 2
在架構上的區別
以及它與您的應用的相關性
在此講座中我們將更深入地查看
這一新的架構上的改變所支持的新的API
它們讓您的手錶app和擴展成爲可能
現在開始 我將先講一點非常激動人心的的事情
我們將在app內支持DigitalCrown體驗 這將會很棒
接下來我們將談一下
關於短視頻以及音頻內容的文本回放
以及後臺播放的較長類型的音樂和播客等等
這也是一個很出色的新API
接下來我們將談談音頻錄製
您現在可以從自己的手腕上錄製音頻
然後將音頻片段發送給朋友發到服務器
在互聯網上分享它們等等
最後我們將談一下
在手錶商存儲敏感數據
現在既然您的手錶對它顯示的所有信息全權負責
重要的一點是牢記你將要存儲的敏感數據
那麼讓我們開始講座
Digital Crown 是一種全新的用戶輸入機制
它讓您靈活地而且非常有觸感地
使用Digital Crown在屏幕上滾動並選擇元素
它確實是一種與設備互動的極好的方式
讓我們看一下DigitalCrown支持的一些最重要的互動
首先 您最熟悉的一個
當然是滾動
把您的手指放在Crown 上面慢慢轉動 慢慢滾動
或者快速地輕輕拂動藉助慣性滾動
它是一種真正自然而然的體驗
就像是我們過去所做的Multi-Touch 滾動一樣
接下來您可以使用DigitalCrown選擇可選項
這是與iOS類似的選擇器樣式
但是在手錶上您可以使用Digital Crown
這裏我將在活動設置UI內選擇我的年齡
這裏有一個表單展示了三個不同的選擇器
讓我有一個簡潔而精確的UI能夠在一個單一模式的表單內
選擇我的出生年月日
接下來我們有一種不同的呈現選項以供選擇的方式
在很多情況下
你選擇的選項有一種更爲獨特或具體的
呈現數據的方式
在這種情況下 我將設定一個45分鐘的定時器
那麼我們認爲 設定時間時以一種時間特有的方式
對信息進行佈局是合乎情理的
在這種情況下它是一個60秒的錶盤
因此 轉動Crown會表明隨着你轉過每一個分鐘數
你的進度是怎樣的
在你的每個應用中你將需要找到
你將向用戶呈現的選擇的呈現方式
要以與數據相關的方式
因此要牢記這一點
最後因爲Crown提供流暢精確連續的動作
這裏我們可以使用 Crown
在連續的數值內循環
比如正在播放的glance中的音量
那麼這些就是Crown所支持的幾個
最重要的互動而能夠爲您的應用提供這些特性
也讓我們倍感激動
那麼我們先從最重要的互動回退一點
Digital Crown 有哪些優勢呢？
我們認爲Digital Crown
是一個極其直觀的體驗當你戴上 Apple Watch
你急於嘗試的第一個東西就是Digital Crown
人們喜歡擺弄它而且以非常自然而然的方式
與屏幕上的內容互動
然後 也是非常重要的一點它讓UI維持可見狀態
在不讓你自己的手指阻擋屏幕的情況下
你可以看到你在與什麼互動
因此 使用 DigitalCrown接觸各種互動
讓您的用戶可以清晰地在系統內進行導航定位
第三點 它是一個非常精確的輸入機制
如果我們回顧剛纔的定時器的例子
你無法想像只用觸摸方式在0-60之間
對定時器進行調整
藉助 Crown 你可以非常精確地調整
一個 2、3、或4分鐘的定時器
或迅速創建一個60分鐘的定時器
只需對Digital Crown輕點幾下
最後它是有可玩性的
這是一種有趣的體驗
它非常具有觸感我們認爲用戶會喜歡它的
那麼我們在watchOS2中將會暴 露什麼呢
這個特性將是大家非常熟悉的
它是與我們在系統中別處使用的相同樣式的選擇器
比如complication 編輯
以及活動設置中
我們將其稱爲WK界面選擇器
而且也在watchOS 2應用提供
這裏我們有一個選擇器特有的樣式或者列表樣式
這非常適合選擇一系列的選項
以文本方式顯示的選項
以一種列表的方式同時會有些上下文
提示你在選擇中的位置
接下來我們有堆疊樣式
堆疊樣式非常適合於
視覺化圖形化的數據呈現方式
它可能是照片可能是消息應用中的貼紙
這真的是很不錯如果你希望在某個地點
集中展示您的數據的話
您可以像手翻書一樣使用Digital Crown
最後我們看下次序樣式選擇器
這個選擇器確實是非常棒的
我會激動地看到你們將能夠用這個東西做些什麼
這裏我用它創建了個表情符號選擇界面
那麼如果你轉動DigitalCrown會在不同的表情間循環
這一特性也被用來創建您自己的滑動條 旋鈕
計量表甚至遊戲如果你足夠有創意的話
那麼那就是次序樣式
三種樣式是列表堆疊和次序
讓我們談一下關於我們所謂的聚焦樣式
除了選擇器的三種視覺樣式以外
這些樣式也都支持聚焦樣式
那是什麼意思呢？
那麼我們這裏有一個例子它是另一種表情符號選擇 UI
通過這個 UI 我們有機會選擇一張臉和一隻手
在本例中並不能立刻看出轉動 Crown將會起何作用
甚至屏幕上有兩個選擇器也不明顯
我們能做的就是更改默認的聚焦樣式
讓這兩個選擇器變成輪廓樣式
這樣做會讓選擇器顯示輪廓
表明它是一個互動元素
而且以系統的綠色清楚地顯示
所選中或聚焦的元素是可以用 Digital Crown編輯的
現在當我點擊屏幕上的另一個項目時
我看到聚焦輪廓發生變化
我知道轉動DigitalCrown會起到什麼作用
對於聚焦輪廓 你可以有一種
額外水平的控制
如果你的選擇器中的項目需要更多的上下文
來描述其中的內容 我們可以使用帶有說明文字的輪廓聚焦樣式
這讓您創建一個類似於
Complication編輯UI的UI
你會希望顯示一個突出的方框
它清楚地表明你目前選中的
項目是什麼
而且同樣 如果我移動到另一個
將重心移到另一個選擇器上你會注意到
說明文字也會跟隨移動
我在這裏實現這種效果的方式是讓選擇器中的每個項目
有同樣的說明文字
但是對選擇器中的每個項目
你也可以有不同的說明文字
現在有些其他有用的方式
來提供上下文同時用戶與Digital Crown維持互動
其中之一是顯示
上下文指示器即DigitalCrown指示器的系統樣式
它被顯示在 Digital Crown 旁邊
而隨着用戶轉動Digital Crown
它爲用戶提供可選值範圍的上下文
它也顯示他們目前已經使用過多少數值
因此 當你的選擇器不一定會顯示你在選擇中的位置
它將有利於確定你自己的方位
即通過可視化元素來確定
對於希望顯示更爲
定製化的progress UI應用
它們並不希望顯示這個小小的Crown指示器
我們有很不錯的新方式幫助您營造那些體驗
這裏是另外一個例子最好是通過例子進行展示
在本例中 我在屏幕中央有一個選擇器
它讓我在0 到100% 進行調整
因此隨着我轉動DigitalCrown會看到數值
會以10%的幅度跳升
這是有點酷的
但我們不知道下限是 0 上限是 100
它不是一個非常視覺化的體驗
它不是一個令人愉悅的體驗
我們可以使用上下文指示器
但是在我們的app中我們將使用一個略有不同的UI來顯示進度
這個UI與您的應用更具相關性
這裏我選擇使用一個弧形或環形進度條樣式的 UI
當我旋轉DigitalCrown時我已經讓選擇器與我的UI中的
另一個界面要素相協調因此隨着我在選擇器的項目間切換
它會將圖像更新
藉助這個互相協調的圖像API您可以營造出各種
美妙Digital Crown體驗
因此 有各種不同的旋鈕 鈴鐺 哨子
你可以配置到 WK 界面選擇器上
這就是如何創建選擇器
現在讓我們直接跳到那一步看看
那麼 對於已經熟悉watchOS 1的朋友
這是一個非常簡單明瞭的過程
如果您到storyboard選擇一個界面控制器
您可以簡單地直接將一個新的選擇器對象
從對象庫裏面拖拽出來放入你的 storyboard
一旦你有了選擇器你當然就可以配置它的各種屬性
我們已經談到了這些
如樣式次序和堆疊聚焦樣式
不管你是否喜歡可選的DigitalCrown指示器被顯示出來
在本例中 我將使用列表樣式
帶說明文字的輪廓樣式以及一個被禁用的指示器
因爲我將向我自己提供數據
或者由於有了我將提交的數據
我覺得上下文是沒有必要的
接下來 我們需要進入界面控制器代碼部分
而且我們需要爲選擇器創建一個IB插座變量
那麼可以在storyboard裏面將我們的代碼和對象相關聯
這給了我們一種對選擇器的參照物
最後我們回到storyboard
並將這兩個東西關聯起來
那麼只有類似於
創建按鈕和圖像等簡單的幾步
有了選擇器它們是非常容易創建的
那麼現在我們有了一個選擇器也把它連接上了
我們已經將其創建並使其運行而這就是我們所得到的
它可能是世界上最無用的選擇器
轉動Digital Crown迅速地進行導航定位
儘管其中空無一物 棒極了！
那麼我們需要做的就是配置我們稱之爲“項目”的東西
正如你們從標題上可以看到的
爲了進行配置 現在既然我們已經通過IB插座變量
有了對選擇器的參考 可以簡單調用set items API
並指定一系列的WK選擇器項目
這些是非常簡單的對象
只帶有一些可選屬性
這裏我將使用title(標題)屬性caption(說明文字)屬性
以及accessory(附屬)屬性
我將在手錶上呈現的視覺樣式
現在如果我希望對選擇器的每行所顯示的內容擁有完全控制
我還可使用這些各不相同的
WK選擇器項目的內容圖標屬性
這將讓有擁有對選擇器中
每個項目所顯示內容的全面控制
對於堆疊和次序樣式
內容圖標用於
定義那兩個選擇器中顯示的內容
因此 對於那兩個樣式
您將僅需使用內容圖標屬性
關於在watchOS 2中的新內容我們有一個新的API
用於指定你希望在您的 UI 中顯示的圖像
對應於選擇器或您將在以後見到的一些其他的對象
這個被稱爲WK image 類
而我將給出幾個例子告訴您如何使用這個類
最常見的例子將是
內已有的圖像加入到應用中
在自己的資源目錄或框架本身
那麼你就能使用WK圖像
圖像名稱API 將這些圖像上傳到應用中
然後它們就能顯示
擴展所要做的就是指定圖像的名稱
從互聯網Companion下載了圖像的情況
對於您的擴展已通過watchconnectivity
您要做的並不是把那些圖像數據轉換爲圖像
而是在擴展內對圖像解碼
並將圖像數據傳遞到應用中從而節省用於解碼的必要內存開銷
在應用中 數據將被轉換爲圖像然後就可以顯示出來
這前兩個創建圖像的方法是首選
如果你已經有了圖像數據的話
在您的擴展內創建UI圖像是不必要的也是沒有意義的
因爲它們是由應用顯示的
最後一種情況是你確實需要UI圖像
現在既然手錶上提供了核心圖形
您可以用它將定製特效渲染到
即將用在您的WK選擇器項目中的圖像內
那麼這裏我將使用WK image後面加上image API
它是用來獲取UI image對象的
現在我們看一個已經配置了項目的選擇器
而轉動Digital Crown 將在那些項目間移動
但是在您你的應用中
知道選定的項目何時發生變化是有幫助的
爲了做到這一點 我們使用一個與按鈕滑動條或開關類似的技巧
通過關聯一個IB動作實現
現在 尤其對於選擇器的IB動作
是一個需要一個單一參數的方法
這個參數是個整型值代表在您的陣列中
所選定項目的索引陣列是我們用set items指定
那麼 在這種情況下
我將使用提供給我的選中索引將選擇器項目編入索引
而且我將印出那個選擇器項目的標題
因此確實是很容易處理選定項目和變化的
需要注意的一件事情是
爲了應對項目的變化
你不希望做特別重要的工作
正如您在覈心互動部分看到的
迅速轉動Crown快速在項目間移動
因此您選擇器動作將被非常迅速地調用
如果您正在做非常重要的事情我建議您暫停
直到您在經過一小段時間後仍未收到選擇器動作的調用爲止
然後您再做重要的工作
比如更新您的桌面視圖等等
接下來我們看一下圖像協調
它讓你創建那些定製的
好看的互動你的界面的很多部分
與選擇器相互協調
隨着它的數值變化而變化
它的設置也是非常簡單的
在這個實例我在屏幕中央有個選擇器顯示70%
輪廓環形進度條是一個WKInterfaceGroup類
是選擇器的父類
一個非常簡單非常容易設置的UI
現在 爲了在代碼中對它進行設置
我們需要做的就是創建一組動態圖像
它們將由選擇器管理
因此這裏我們創建了一個progressImages 變量
並將UI的動態化圖像與圖像API配合使用
來指定我們已經使用代碼畫出的
或者已存在於我們的資源目錄內的一系列進度圖標
我們將爲它指定持續時間爲0
但選擇器將自動在整個動畫過程中搜索
然後最後在過程界面羣組內搜索
它是存放環形進度條地方 調用setBackgroundImage
以便將動態圖像設置爲背景圖像
最後調用選擇器上set Coordinated Animations
爲它提供一個不同的界面對象的清單
我們希望當你在選擇器內部移動的時候
選擇器對這些對象進行協調
在這個實例中我們只有一個單一羣組
但我們可以指定多個羣組
一個圖像內一個羣組諸如此類
這可以支持任意多的對象只要你願意
隨着在WK界面選擇器的各項目間切換
我們與任何關聯的羣組和圖像相協調
指定哪個圖像將顯示在特定的界面對象上
在這個例子中我把項目和圖像的編號相匹配
但是過一會我要向你展示
不一定是需要這樣的
因此 那就是你如何讓圖像與選擇器相協調
現在 爲了完成這部分的內容
我想我應該爲你們做一個小小的演示表明在你們的應用中如何實現這些
那麼讓我把它設置好
這裏有一個我早些時候創建的小app
它顯示了各種不同的選擇器樣式
你們可以創建這些樣式
而最後一個用於演示如何進行協調
那麼讓我們從列表樣式選擇器開始
在這個特別的例子裏我創建了個選擇器
它的輔助圖像是使用核心圖形
選取隨機顏色繪製的
而我這裏有很多項目
您可以看到在這些項目間滾動是非常流暢的
每次項目發生變化時我也將在storyboard內
更新一個單獨的界面要素
這是一個簡單的標籤而我將更新它的文本
那麼爲了應對已選中項目的變化
這些事情是非常容易做到的
實際上只有那些更重要的事情你才希望將其延後再做
那麼讓我們回到頂層菜單
並進入堆疊模式
這裏我也將使用核心圖形
來渲染以隨機顏色繪製的隨機方塊
而在這裏你將看到我可以非常流暢非常快速地
瀏覽在這個堆疊樣式選擇器中的圖像
也請注意隨着轉動Digital Crown
在右上角你將看到DigitalCrown指示器會顯示
我在這麼一堆項目間的進度
它確實是很有用的
第三個例子是一個次序樣式
我想我將會展示那種你們能夠用次序樣式實現的內容
因爲符號表情的例子明顯地展示了你能夠用它來做些什麼
這裏我可以營造一種引人入勝的體驗
使用色盤選擇隨機顏色
在這裏 我轉動Digital Crown
我將按照顏色出現的順序選擇不同圖像
所以這是很酷的並且請注意它也支持慣性操作
那麼我可以持續拂動Crown而它將在各個數值間快速移動
最後 讓我們談一下協調
這裏我已經用一個左右選擇器建立了一個例子
在這個例子裏我讓左邊的選擇器作爲焦點
當我轉動Digital Crown我將在左側的12個選項之間移動
如我聚焦在右側的選擇器
現在我將在60個項目之間移動
你可以看到這可能是一個大概的定時器UI的樣子
那麼需要注意的一件事是
兩個選擇器都有同樣的協調良好的圖標
我的這個協調良好的圖標右邊的選擇器包括60個不同的弧形進度條
但我左邊的這個選擇器也可使用
同樣的進度條圖像
這確實是一盒非常方便的技巧
如果你希望保存你正在選擇器之間使用的資源的數量
那麼 這就是演示的全部內容
那麼 來總結一下您學到的
關於Digital Crown內容一些你能夠爲用戶提供的
watchOS 2中的新的體驗
我們有三個全新的可定製化樣式
即 列表 堆疊和次序
每個都是爲了顯示不同類型的信息而量身定製的
因此您應該根據您的app中用戶的互動對象選擇使用哪一個
這些樣式中的每個都支持聚焦和指示器
因此當你在選擇器內的項目之間切換時
我們通過演示聚焦向您展示了Crown將會做些什麼
而且我們也支持
顯示標準的Digital Crown指示器
最後 爲了創建真正定製化的
引人入勝的界面同時使用量身定做的圖形
你可以使用圖像動畫協調API
以便將您的界面的其他部分與正被編輯的選擇器同步
話到此處 我要有請科洛上臺接替我
她將講一下watchOS 2上的媒體回放
非常感謝諸位！
嗨大家好
我在這裏講一下watchOS 2的更多新特性
首先是媒體回放
那麼讓我爲大家展示一下watchOS 2的新媒體播放器內
播放一段簡單的視頻是什麼樣的
首先加載內容
一旦用戶按下“播放”圖標它將開始播放
而且任何時候用戶都可以轉動DigitalCrown
以調整音量而且如果你輕敲屏幕
播放器控制器將會出現
而對於僅有音頻的內容
我們也有一個專用的內置UI
兩種情況下的音頻都將被引導到
選定的輸出源
那可能是您的Apple Watch揚聲器
或者已被配對的藍牙設備
現在讓我爲您展示如何在代碼中實現
比如你試圖從你的界面控制器
呈現這個媒體播放器
你做的第一件事
是弄清楚內容的URL 
假如您有一個來自於您的擴展框架的簡單影片
這是你如何爲內容找出它的URL
你也可以使用遠程URL
如果是那樣媒體播放器將會爲您處理下載
此外 它還將用進度指示器更新UI
而對於URL我們可以在之後決定
如何播放內容
這裏我們提供了幾個選擇
第一個是自動播放
當它被設置爲真的時候一旦媒體播放器出現在屏幕上
並且內容被加載
回放就將自動開始
接下來我使用start time
我讓它在視頻的3秒鐘標記處開始
這是確實有用的如果回放在之前暫停
用戶回到播放器
你希望從同樣的點繼續回放
這裏使用的第三個選項是視頻重力
關鍵取決於一旦視頻出現在播放器中如何調整它的大小
有了所有這些信息 現在你調用
present Media PlayerController With URL
而且你可以指定completion handler
它將告訴你回放是如何結束的
而那說明瞭從你的代碼內呈現一個媒體播放器是多麼容易
在另外一些情況下casesfor example
比如在社交媒體app中你希望在某種上下文內嵌入一小段視頻
我們有你需要的對象
在watchOS 2中現在你有這個WKInterfaceMovie
你可以把它插入到一個UI中
這個對象有一個播放器圖標覆蓋在一個海報圖片上
這張圖片代表了你的內容
一旦用戶輕擊播放圖標我在開頭向你展示的媒體播放器
就會自動出現在這裏
而你不必寫任何代碼
那麼讓我向你展示如何在 Xcode 裏做到
在新的Xcode裏面你將發現這個影片對象
它就在你的對象庫裏面
你可以將其拖拽並放在你的Storyboard裏面
而你可以使用這個屬性檢查器
來自定義這個影片對象
你可以指定視頻重力或者海報圖片
如果願意對它進行動態配置
你也可以在代碼內實現它
假定在你的代碼內有內容的成員變量
而且你有內容的URL
以及代表影片的圖片
IB插座變量從interfacebuilder拖拽過來
它代表你正在使用的影片對象
萬一你希望更新你的UI或者你的內容必須發生變化
你可以使用這個方法
來配置你的影片對象
因爲AppleWatch的硬件與其他iOS設備有很大不同
我們有幾種專用媒體格式
你應該將其用於任何你試圖
在Apple Watch播放的內容
如果你的內容 以全屏幕模式播放最佳
那麼建議的分辨率是208乘260
如果你的內容實際上最適合以16:9的長寬比播放
建議的分辨率則是320乘180
如果你遵照這套媒體規格
你就能預期得到最佳的回放性能
那就是如何在你的app中播放音頻和視頻 就那麼簡單
我想講的下一個特性是長格式的音頻回放
到目前爲止我爲您展示的特性都爲您呈現了某種UI
而一旦這種UI被關閉回放也將停止
長格式的音頻就不同了
它並不伴隨你的app的任何內置UI
就是說你可以創建你自己的UI
而一旦你的UI被關閉
回放實際上仍在後臺持續
這種特性的一個常見的使用實例是播客app或音樂app
用戶可能正在跑步或通勤過程中聽音樂
這一特性的音頻將只會
被引導到已配對的藍牙設備
而回放狀態則將會在
正在播放glance中更新
因此用戶控制回放是非常方便的
現在讓我爲您展示這個API
如果您熟悉AVFoundation API
您會覺得這些是很眼熟的
假如你有正打算播放的音頻的URL
您可以創建一個像這樣的資源
有了這個屬性你可以創建音頻文件播放器項目
播放器項目有該屬性的呈現狀態
而且你可以使用KVO來監聽這一狀態
就像是AV Foundation API一樣
用它你可以創建一個播放器並且調用play命令來播放它
超級簡單
對於我剛纔提到的例子-播客app
您可以創建一份你打算播放的項目的清單
而如果你希望爲用戶提供一種天衣無縫的收聽體驗
那就不要使用AudioFilePlayer
而是要使用AudioFile QueuePlayer
那將讓你達到想要的目的
就像是在其他iOS設備上一樣
如果你希望創建後臺模式的回放
您需要在app的Info P-list內啓用它
正如在Xcode中一樣超級簡單
現在我將用一點時間爲您講述
應該在您的app中的什麼位置存放你的所有這些媒體數據
如你所知在AppleWatch上的app由兩部分組成
一部分是app另一部分是擴展
而當擴展被安裝的時候
擴展框架將位於app框架之內
每個部分都有一個用於存放動態數據的容器
而每個容器只能由
每個獨立組件訪問
因此假定你有一張你希望用在你的app中的靜態圖片
而且你希望使用WK image加上圖片名稱來引用它
您應該把它放在app框架內的一個資源目錄內
如果你有其他資源
比如音頻或視頻回放以及你希望
在代碼內直接操縱的圖片數據你應該將其放在擴展框架內
以便能夠爲它們創建URL
現在 在其他情況下如果你希望在回放時加入動態內容
你可以使用watchconnectivity
來從iPhone獲取那些內容
或者你可以使用NSURL進程從互聯網上下載您的內容
對這些內容 你不能把它們
放在我這裏爲你展示的兩個容器內的任何一個裏面
因爲它們將不會被app或擴展讀取
那麼你需要做的就是創建一個app羣組
它將爲您提供一個共享容器
用於存儲這些數據而且它們也將可以被二者讀取
那麼這就是您需要知道的全部內容而如果你希望瞭解更多
關於app羣組的知識請查閱這個文稿
接下來我要講的特性是音頻錄製
讓我們看一下UI然後看它是如何實際工作的
一旦用戶按下錄音按鈕
錄製就會開始而且波形將會被更新
只須通過一個功能調用你可以就可以實現這個操作
在您的界面控制器次類裏面您可以調用
present AudioRecording
Controller 無須插入特別URL
並指定URL
現在您知道這個URL將指向共享容器
然後你決定預設
過一會我將談一下預設
然後你可以爲此錄音操作指定最大持續時間
如果你希望控制文件大小的話這確實是有用的
現在我把它設置爲60秒
你也可以自定義動作標題
它顯示UI在右上角的
假定你的app提供一種
將此錄音輸出給他人的功能
可以對其進行自定義比如發送就是比較合適的
否則默認將會是完成
也可指定completion handler
它將告訴你是否內容被保存
以及是否有任何錯誤
讓我們回到URL
URL包含了文件名稱而文件的擴展名實際上
決定了我們將爲生成輸出使用什麼樣的編碼解碼器
這些是我們支持的文件類型MP4和4A
它們將分別使用AAC編碼解碼器波形將使用PCM編碼解碼器
我們支持三種不同的預設窄帶語音 寬帶語音和高質量音頻
每種都有不同的採樣率
而根據您選擇的編碼解碼器
輸出波特率將會不同
如你所料 輸出質量越高
輸出文件就會越大
因此它取決於您的使用場合
因此 如果你的錄音是作爲語音備忘
預設爲窄帶語音將是最適合您的
如果您試圖錄制更高質量的音頻
或許是出於後期處理的目的
那麼你可能會考慮預設爲高質量的音頻
通過這些預設
錄音操作變得非常簡單明瞭
可以根據您的需求進行自定義
接下來我將談一下安全性
在watchOS 2中 您現在可以使用Keychain
存儲您的用戶的敏感數據
你可以設定那些數據可以被讀取
只有當設備解鎖後
用戶輸入爭取的密碼後appwatch會自動在設備上解鎖
當Apple Watch在用戶的手腕上時 
然後數據就是您一直可以讀取的了
直到用戶將手錶從他們的手腕上取下
這確實會是有幫助的 如果您將爲錶盤創建一個complication
而在complication 中您可能會顯示一些用戶數據
它們是敏感的
那麼這對於使用Keychain保護那些數據來說確實是非常重要的
有一件我想讓大家牢記的事情是
您在Apple Watch上所創建的Keychain
並不參與Keychain SYNC同步
它們並不是圖標Keychain
儘管其使用方法是與其他平臺完全相同的
這是一個創建Keychain的例子它用來存儲用戶的憑證
假定您有一個安全密碼
而且你希望存儲它
讓它只有在設備解鎖時纔可讀取
您可以做類似這樣的事情
並且調用add來添加這些屬性
那樣您就會創建一個Keychain
總結一下我們今天的講座
開始時大家聽內森向您介紹了選擇器的一些新樣式
每個都可以被Digital Crown控制
使用是非常有趣的
然後大家聽我講了音頻和視頻播放器
而且您也可以在後臺播放長格式的音頻
對於音頻錄製現在您可以只用幾行代碼就可以實現
最後 在watchOS 2裏面您可以使用Keychain
來保護您的用戶數據
如果您需要更多信息 請看這張幻燈片
裏面有個您應該參考的示例代碼文稿
本週還有幾個講座
您可以親臨現場或觀看錄像的相關課程
感謝您的傾聽