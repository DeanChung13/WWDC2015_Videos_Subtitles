應用內蘋果支付
大家好
歡迎來到WWDC歡迎來學習應用內蘋果支付
我叫尼克我是iOS應用和框架團隊的軟件工程師
我將邀請理查我們將一起談談蘋果支付
現在 希望你們已經非常熟悉蘋果支付了
或許你已經使用過或許你已經使用蘋果支付到商店進行購物了
但你同樣可以在你的應用內使用蘋果支付
這就是我們將在今天的環節裏討論的內容
這是一個會超過一個小時的環節
請把你的手錶設置爲靜音
你不必站起來
我們今天將說及四個主要的部分
因此我們首先要談的是蘋果支付到底是什麼
我們將談談你如何在你的應用中使用蘋果支付
還有更重要的是爲什麼要在你的應用中使用
然後我們將說說結構
技術的角度而言蘋果支付是如何完成支付的在那裏發生了什麼接下來呢
緊接着我的同事理查將出來與大家談談關於設計問題
如何讓你的應用爲蘋果支付做好準備
以及如何讓應用在視覺和感覺上給人帶來好的體驗
在那之後我想我們將深究一下Xcode
然後我們將看看我們如何在簡短的幾行代碼中迅速
且輕鬆地在我們的應用中設置好蘋果支付
我想會很有趣
現在讓我們開始吧
什麼是蘋果支付呢
如何在你的應用中使用呢
蘋果支付是一種在應用內運行的
具有隱私性和安全性非接觸式的支付方式
它允許觸摸付款你可以用來購買實體商品和服務
這是一個來自Groupon的例子
蘋果支付有許多好處無論是對開發者還是用戶
對於用戶來說蘋果支付是容易使用
你不需要重新輸入任何付款或聯繫信息
你不需要記住幾個月前在網站上創建的密碼
它們已經在那裏準備就緒了
而且很安全
我使用Touch ID支付
這真的很好用而且最重要的是很私密
卡號不會告知商家
相反 你發送一個帶有驗證碼的設備號
它只對當次購買有效
因此它是絕對安全絕對私密的
所有這些綜合在一起不僅讓你受益也讓開發者受益
因爲由於你沒有獲取真正的卡號
你也無需處理它們
如果你以前從事過電子商務我確定你知道
所有你要處理的問題例如實卡信息
因爲蘋果支付是如此易於使用
你將會看到更高的轉換率和更快結賬速度
它是如此容易你甚至不需要用戶註冊
他們僅需打開應用就可以立即開始購買
而不需要一個現有賬號 
而且最重要的是用戶非常喜歡蘋果支付 
它們也喜歡應用使用蘋果支付 
他們會充分利用蘋果支付
你真的不需要我來打包票
我們繼續說說成百上千中應用裏的僅有幾種 
已經在商店內使用蘋果支付
並且它們已經取得了一些驚人的成功
首先 我想要說說StubHub
它是一個很棒的蘋果應用
你可以在手機上直接購買入場券
它們與蘋果支付相結合並且它們發現 
使用蘋果支付用戶交易比普通客戶
交易頻率高出20%
這是一個很棒的結果
另一個很棒的蘋果支付應用是OpenTable
這周你就應該使用這個應用
你不僅可以預約也可以到飯店
在餐桌上用手機直接支付你的餐費
當他們把產品與蘋果支付相結合
他們會看到交易量增漲了50%
還有更好的 
我們說說Staples
他們有一個非常棒的應用 
你可以通過手機直接購買所有你需要的辦公專業用品 
他們會看到總體轉化率增漲 
那就是109%的用戶使用蘋果支付 
併成功支付
這是一個令人驚訝的數字
應用開發者都非常喜歡蘋果支付
我們說說Fancy的CEO喬伊·愛因霍恩
他說蘋果支付不僅促成了更多的交易
而且激活了我們最大的消費羣
我還可以告訴你Fancy的iOS用戶
在所有移動平臺的消費將兩個因素合併爲一
這些客戶非常喜歡用蘋果支付
來買東西 而且他們想買許多東西
這對你的應用來說是非常好的事情
現在 你們當中一些人可能會想 嗯 
蘋果公司已經有一種允許應用在應用內
購買東西的機制它就是程序內購買
關於程序內購買 蘋果支付的位置何在
它們有一些不同之處 現在我想讓你弄清楚它們 
一個最主要的不同是
它們實際上位於SDK
蘋果支付存在於PassKit框架
而程序內購買存在於StoreKit
它們有不同的代碼基 
你可以用它們來處理不同的東西
對於蘋果支付你將它用於實體商品和服務
我的意思是諸如健身館會員 
合乘 雜貨派送以及在實體店購買東西
包括實體物品
程序內購買適用於程序內的內容
和功能性 程序內貨幣服務 數碼訂閱
另一個很大的不同是誰負責處理付款
當你用蘋果支付你將通過
你自己的支付平臺來處理付款
而當你使用程序內支付的時候 
蘋果公司代替你處理付款
並按月將你的餘額
和剩餘應用交易發送給你
因此這裏有一點點不同之處
它們在應用商店指南中也有略微不同
如果你對此感興趣第29節是關於蘋果支付
第11節是關於程序內購買
獲取這些指南 看看什麼你可以做 什麼你不可以做
現在我們所有有安全元件芯片的設備
都可以使用蘋果支付
因此安全元件是用來安全儲存
你的卡片信息的硬件芯片
這在iPhone 6iPhone 6 Plus
iPad Air 2 和 iPad mini 3上已經實現
所有這些設備都支持蘋果支付
直到最近蘋果支付在美國可用了
我們昨天宣佈它也即將在英國可用
對於蘋果支付我們還有長期目標
因此如果你是一個開發者但不是來自
其中任何一個國家 那麼仍然值得好好想想
在將來如何將蘋果支付
整合到你的應用中
這就是一個關於蘋果支付的大體情況
希望我已經成功地說服你 
蘋果支付是非常值得你在應用中使用的
現在我想回答一些關於
蘋果支付的結構問題 從技術的角度上講 
支付是如何實現的
關於蘋果支付你要做的第一件事情是創建一個商家識別符
我們需要這個 它是唯一能識別你商家身份的東西
現在 你可以在開發者網站
或者通過Xcode屬性窗口
設置商家識別符
而且識別符由私人祕鑰證書保護
這類似於其他在iOS上的識別符
諸如推送令牌識別符 
或者Wallet AppPass識別符
現在我們運用此證書
對生成的支付信息進行安全加密 
作爲商家來說這是唯一的
沒有人可以破解支付信息 
這是蘋果支付的另一個很棒的安全優勢
我們推薦你把它設計成
標準反向域名解析格式
就像其它 許多識別符一樣
從商家開始
這是一個我們稍後在樣板應用中將用到的例子
這是你使用蘋果支付要做的第一件事
一旦我們有了一個商家識別符 我們就準備就緒
可以在應用內啓動蘋果支付了
你要做的第一件事是調用支付表 
它由我們提供 
它總結了你的應用需要支付的所有費用
然後用戶使用Touch ID授權
並且你的應用將收到一條支付口令
支付口令包含所有你需要支付費用的信息
它將被加密通過使用你的商家ID證書
那是獨一無二的 只有作爲開發者的你可以解密它
然後你可以驗證生效並啓動處理程序
在你的應用裏顯示一份成功支付情況清單
那裏有許多信息讓我們來詳細瞭解
流程很少
我將系統分解爲兩個部分
iOS和安全元件
記住安全元件是唯一
安全儲存你卡片信息的硬件芯片
第一你的應用將會展示你的日程驗證流 
你將詢問iOS用戶是否有任何可用的蘋果支付卡片
因爲如果用戶沒有任何可用的蘋果支付卡片
或者設備不支持你需要使用傳統的驗證流
現在假設它們可以然後你將展示蘋果支付表
然後你或者iOS將會驗證Touch ID是否有效
現在假設是有效的
你將傳輸一些信息到 
專用安全原件它將安全打包 
所有支付信息
這包括密碼文件即付款需要的加密數據
然後會將它們發送至服務器
現在服務器將使用商家識別符
進行重新打包這就是我們所做的全部事情
這是因爲我們不想
在應用裏推送你的證書
因此我們的服務器按新的路線發送支付
對它進行獨一無二的加密 然後返回到系統 
從而你可以將它發送以便處理
現在假設處理成功 
你可以刪除支付表
並回到自己的確認屏
我想你們當中的許多人會有疑問  
所有這些都很好尼克 
但是我如何處理支付 
那是如何運行的 
讓我們來談談你如何獲取你的錢
這可能是一個你內心更關心的話題
這裏有兩個方法處理蘋果支付
第一個這個是我們最想向你推薦的 
就是使用一個支付平臺
支付平臺可以處理
解密並代替你理解密碼文件
當你簽名後你提供商家ID和證書到平臺
平臺將爲你解密你只需發送一個支付令牌給平臺
一些支付平臺實際上
在Swift或者C語言上提供一些本地iOS發展配套原件
因此你可以很容易地啓動並運行
由於這原因我們認爲支付平臺對於
大多數開發者來說是首選
許多許多的支付平臺已經支持蘋果支付
這只是其中的一小部分還有許多其它的我們把她們列成了
清單放在了我們的網站上
這些是在美國的
很有可能你已經使用了這些當中的其中一個
許多英國支付程序已經
可以支持蘋果支付
如果你在英國你現在就可以回公司
商量如何使用支付程序
現在 正如我說的還有其它一種方法 
那就是你自行處理支付
現在我們推薦這種方法給你
如果你很擅長處理支付問題並且你有一些現有支付基礎構架 
如果你需要這樣做 
你可以在自己的服務器上解密支付令牌 
然後發送底層密碼文件 
那就是爲商家收單者
即收單銀行生成的安全原件
如果你覺得不合理再次說明
我們只在你有現有支付基礎構架的前提下
向你推薦這種方法 
今天我們不會涉及到解密令牌
但是如果你想了解更多
關於該部分的內容我們已經將一些文檔放在網站上 
你可以在網站上查找支付令牌相關文件 
同樣今天和明天我們將有工作人員在實驗室裏 
他們可以回答你們關於自行處理支付的問題
好的 這是對如何使用蘋果支付 
它如何完成付款的一點簡單介紹
我想我們現在可以看看iOS這邊了 
第一步就是要查看設計 
非常重要的是當你使用蘋果支付的時候 
要確保你的應用充分利用了我們提供的功能
以及我們提供的設計
關於這方面更多的東西我將請理查
來爲你講講如何獲得蘋果支付的最佳用戶體驗
理查
大家好 我是理查·勞斯我是蘋果公司的
一個用戶體驗專員今天我在這裏講講
如何在你的應用裏使用蘋果支付
得到最佳的體驗
嗯 正如尼克說的用戶喜歡蘋果支付 
因爲它使購物變的容易
作爲一個商家這對你來說是非常好的 
因爲購物越容易
交易就越容易達成
現在人們的購買慾可以是很短暫的
因此任何影響交易流的障礙都可能使交易終止
好消息是蘋果支付會提供所有
你完成交易所需要的東西 因此你可以消除
現如今阻礙交易達成的許多障礙
沒有必要讓人們在
購物之前註冊一個賬號
我想不會有人喜歡繁瑣的形式填寫表格
你不必擔心過時的賬單
配送信息幹擾或者瞭解誰購買了什麼東西
最近我提出任何時候我要購物
如果應用不使用蘋果支付
我就必須經歷更新賬單及麻煩的配送信息
如果我時間緊迫或者沒有心情
填一堆表格我會選擇
走開而不是把表格填好
讓我給你舉一個例子
關於如果沒有蘋果支付情況會是什麼樣子的
假設我的狗需要一個新的項圈
我的朋友告訴我這家店
生產很棒的寵物物品
我會下載他們的應用開始找商品
哦 我要做的第一件事竟然是註冊
嗯 我的朋友告訴我這邊的寵物物品很棒
這對我的狗來說是一件很棒的事
因此我繼續並註冊
即使是我很有可能收到一些我現在不想要的郵件簡訊
啊 下一步竟然是創建一個賬號
我還沒買任何東西我也不確定是否會買東西
正常情況下到這個點我就會徹底關閉這個應用 
但是因爲你們大家都在這裏我將繼續
我將完成這些
最後 我找到了狗項圈這太好了
我的狗戴上它一定很棒
我開始交易過程
好的 首先是賬單信息
有許多類型需要區分我住在公寓裏 
所以我要從鍵盤上輸入對應我公寓號的號碼
我想要它運輸到我上班的地方而不是家裏 
所以我也要輸入這些信息
好的 配送選項
好的 好的 我將選擇其中之一
最後 這裏就是我將從我的口袋裏
拿出信用卡並輸入所有信息的地方
需要六次輸入以及一大堆的打字
讓我分心的時間太多了
容易被打斷 感到沮喪 甚至離開
如果我在我的上下班路上
搜尋這個狗項圈 嗯 當我站在
擁擠的月臺上讓我掏出我的信用卡
我真的高興不起來
真的不想這樣的情況
蘋果支付可以更加快速地完成這些
啓動應用
找到一個產品 無需註冊賬號
點擊蘋果支付按鈕
把我的大拇指放到Touch ID 完成 
兩次點擊 不需要任何打字
這快多了
因爲蘋果支付你省去了一大堆麻煩
更少次數的點擊意味着更多的銷售
接下來 讓我們討論如何使蘋果支付整合到你的交易流
第一件要考慮的事是讓人們可以快捷地購買物品
你不需要爲了開始交易過程
而把所有東西都放入購物車
這是Chairish 我正找尋一些適合我家裏的
有趣的東西這些玻璃看起來很有趣
蘋果支付按鈕就在這裏
我不需要把它們放入購物車
然後點擊購物車 然後說我準備好要結賬了
這種方法減少了完成交易
需要敲擊的次數
Groupon採取了一種非常類似的方法
我即將在芝加哥度過幾個星期
我正找尋一些有趣的事來做
這看起來很有趣
因此當我點擊更多的信息
蘋果支付按鈕就在旁邊
這讓我很容易就可以快速購買
因此考慮一下添加蘋果支付按鈕放在產品詳情旁邊
讓人們可以快捷地開始交易
嗯 如尼克說的用戶們喜歡蘋果支付
因此如果安裝到一臺支持的設備上
並別激活一張你接受的銀行卡 
很有可能他們將使用蘋果支付因此你應當將蘋果支付設爲默認設置
現在尼克將向你展示
如何在幾分鐘內進行設置
如果他們沒有支持的設備
並且他們沒有激活的卡你也不接受 
那就沒有必要展示蘋果支付按鈕或者信息 
僅需像今天那樣完成交易即可
但如果他們有 默認蘋果支付爲支付方式 
然後突出展示這些按鈕
現在iOS 8.3蘋果支付按鈕可以通過API使用
所以你無需擔心要調整圖形的大小
以及如何嵌入到你的應用
這是非常容易的
當你正考慮你要你要將它們放置在哪裏 
他們應該至少與
其他付款方式按鈕一樣大
更大一點當然更好
這就是Fancy的做法
他們將蘋果支付按鈕放於添加
到購物車按鈕旁邊 Shoptiques將它並排着放置
這些都是很好的實現方法
現在一旦你的用戶輕敲蘋果支付按鈕
下一個他們將看到的是付款單 
因此他們可以快速地放下他們的大拇指並完成交易
你不會因爲被詢問其他任何信息而打斷這個過程
只有當你將要銷售
即將達成的時候它纔會被打斷
蘋果支付將提供給你
所有完成交易需要的核心信息
有一件你可能需要提前做的是促銷代碼
或者其他打折代碼
在你的應用裏找到一個位置
像在家裏的地方在那裏當某人點擊
蘋果支付按鈕之後它不會打斷出現的付款單
好的 我們說了很多關於付款單 
讓我給你一些提示 
關於自定義你所需要的東西
當然 你需要付款方式
但你還需要賬單 配送
和聯繫信息如果你使用蘋果支付 
正如尼克說的蘋果支付是相當安全的
我們希望你不需要
只是驗證而收到賬單信息
如果系統如果請求的用戶仍然可以獲得賬單
如果你銷售實體產品你需要
將它發送給某人你需要一個配送地址
在付款單裏更改這些對於用戶來說
是很容易的
他們只需輕敲它付款單裏就會展示
最近用過的地址列表
並且可以快速添加一個新地址
你之前可能收集了
用戶已有的配送信息 
但正如我之前說的 很有可能蘋果支付信息
是當前最新的因此我們推薦 ̨你相信它
你可以要求一封聯繫郵件和電話號碼
因此如果你想要通過確認郵件
跟蹤交易或者防止任何配送問題 你可能需要一個電話號碼 
這些都是可以獲取的
在iOS 9你同樣可以要求一個聯繫人名字
讓我們假設某人要訂一些食物
然後到餐廳裏選擇
你可能需要一個聯繫人名字 
當他們到達櫃檯的時候 你可以告訴職員訂單是給哪個人的
現在 如果你不需要
所有這些信息不要提出請求
尊重你客戶的隱私只問他們需要什麼
Uber只要求郵件和電話號碼
他們不要求填配送地址
因爲他們不需要它
現在你可以具體說明配送方法
或在付款單中挑選出正確的方法
蘋果商店中提供多種多樣的配送選擇
因此客戶可以點擊選擇
然後可以看見其它可行的選擇
那裏還有交付預測的位置 
因此你可以幫助你的客戶選擇合適他們的選項
同樣還可以列出配送花費 稅收
甚至是負價值物品
如小計後的折扣
現在 這不是一行一行的
某人購買的所有產品清單 
而是加入小計的商品清單
因此在這裏你可以看到Keep 是如何列出配送清單
稅收和商品小計處理
現在 如果你沒有任何這些產品 
你甚至不需要列出小計 你可以只列出總計
這使得付款單簡潔 
這樣客戶就不用花太多時間在審覈上 這就意味着更快速的交易時間
如果你增加產品你可以列出它們 
如果你沒有隻需展示總數
可能會出現一些總數
不清楚的例子
在這些情況下很重要的是
你要有一個清洗的預估
Uber在Bay地區是一款非常流行的汽車服務應付
而且總價直到乘行結束纔會被結算
現在 它們處理付款單語言
非常清晰易懂
我發現總價總是在統計時間和距離後可以計算得到
因此如果你正處理訂閱
反覆出現你預估的付款或情形 
確保你在付款單中使用的語言是清晰易懂的 
因爲沒有人喜歡後來的驚喜收費
最後 確保你的地址你的公司名
顯示在付款單下方的總額旁邊
這就是客戶希望在
銀行費用上看見的名字和總額
因此在這裏
我清楚地看到Fancy有一個299美元的費用
再次重複 沒人喜歡在他們的銀行對賬單看到充滿疑問的費用
以及讓人驚訝的數量
因此現在你應該非常清楚了
這就是自定義付款單
另外一件你唯一要做的事情
是確認交易正如你今天已經做的那樣
一旦有客戶用Touch ID付款 
拇指打印按鈕將會變爲已完成狀態 
付款單將被確認用戶將返回到應用
<br/> 因此你可以讓他們安心
告訴他們訂單已經在處理 
而且他們會在郵件中收到更多信息
當你正考慮如何使蘋果支付
整合到你的應用之中 
嘗試將所有的障礙移開進行一次購買
不需要讓人們在購買東西前註冊一個賬號
明顯地展示蘋果支付按鈕
如果他們的設備支持蘋果支付而且有你接受的已激活的銀行卡
你只要確保你定製的付款單
是合適的即可
別忘記把你的公司名放在
底部的總額旁邊然後確認交易就像你今天做的那樣
我希望這些會讓你在應用裏設置蘋果支付的時候
有一個好的體驗
我今天下午將在蘋果支付實驗室 
如果你還有任何關於蘋果支付的UI問題 
或者你想要更多關於
如何在你的應用裏處理支付的建議 我將很樂意爲你們解決 
但是現在我將把舞臺交回給尼克 
他將向你們展示如何將所有這些放進代碼裏 謝謝
謝謝 理查
好的 我想我們已經做好了準備看看總體情況了
我想我們已經準備好要談談一些代碼
這是非常令人激動的
現在我們將建立一個樣板應用
它將基於理查向你們展示的應用 
但我將把UI簡化很多
因爲我們只想專注於代碼
它將要求一項付款
它將展示付款單然後處理授權
在我們深究Xcode之前讓我們來看看
組成蘋果支付的類
我要討論的第一類
是PKPaymentSummaryItem
再次說明蘋果支付存在於Passkit 
因此我們可以在那裏找到它
PKPaymentSummaryItem描述你將在付款單上
索價的個別項目例如稅收 
配送 或總額
然後你把所有項目綜合起來放入PKPaymentSummaryItem
現在PKPaymentRequest是一個對象
它描述你要索價的項目
以及你想如何支付的信息 
還有諸如你想要支持的卡網
你要求什麼樣的配送信息
如此這類的事
你作出詢問並將它發送
到PKPaymentAuthorization ViewController 
這是付款單類
就像其它所有視圖控制器
你運用presentViewController進行展示
然後當這些都做完了你將接收到一個PKPayment對象
一個PKPayment對象包含你需要處理
付款的信息
以及展示確認單
或設備回執
可能需要的信息
因此第一件我們要做的事情是
檢查設備是否支持蘋果支付
我們要看看它們是否有
我們可接受的付款卡
首先 我創建一個paymentNetworks數組
它包含字符串常量你可以
將它用於蘋果支付支持的網絡
我在這裏檢查用戶是否有任何MasterCard或Visa卡
然後你將這個數組
傳輸到一個類PKPaymentAuthorization
ViewController
它稱爲canMakePaymentsUsingNetworks
現在 如果這返回爲真你將知道用戶
創建了蘋果支付
並且他們有與你要求相匹配的卡他們可以付款
如果返回爲假你可以把用戶
帶到傳統支付流
現在你同樣可以用其它一些方法
我們有一個方法可以測試硬件是否支持蘋果
因此你不必做任何複雜的設備檢查
你只需要調用canMakePayments 
然後它將回饋給你爲真
如果設備有支持蘋果支付的硬件
在iOS9中 有一點新的你同樣可以檢查
銀行卡的容量容量主要指的是信用額度
我想這在英國和歐洲是非常實用的
在那裏你可能只想對借記卡進行檢查或收費
假設用戶有一張卡可以用於付款
讓我們創建一個PK付款請求
讓我們將讓付款生效
因此我們想要做的第一件事
是傳輸我們的商家識別符以便我們知道
如何正確地加密付款
現在你可能已經在開發者門戶網站
或者在Xcode屬性窗口設置了
如果你使用Xcode你也獲得權限
因爲所有這些API都授權了
然後你輸入一個國家代碼
這是一個標準的ISO國家代碼它是你的
付款處理器你將進行
收費的所在國家的代碼
不是用戶或者
貨幣所在的國家因爲有貨幣代碼
用來表示貨幣在ISO標準代碼中同樣如此
你可以在蘋果支付中收取任何你想要的貨幣
這裏我僅用USD但如果你想變爲英鎊
或歐元這是很容易做到的
下一步你將提供一些supportedNetworks
supportedNetworks再次說明
它是一個類似canMakePayments的數組
檢查你接受的supportedNetworks
在這裏我作出一點點變化
我說我可以支持American Express和Visa卡
這裏還有另外一個
在PaymentRequest上需要的特性
它起初看起來有點神祕
那就是merchantCapabilities
結果是我們有兩種方法生成付款數據
其中一種叫3DS另一種叫EMV
你不需要知道他們是如何運行的
你們中大多數人都會使用3DS 
你應該檢查你的付款處理器或者諮詢銀行
讓它們爲你進行正確的設置
再次說明你們中的大多數都會用3DS 
但是付款平臺或者處理器會給你你需要的精確的建議
3DS標準就點到爲止
最後PaymentRequest最後一個也可能是最重要的屬性
那就是我們實際要收費的東西
現在在我們討論它之前我們先看看
一些iOS 9裏的新東西
你可以使用merchantCapabilities屬性
來允許某些類型的卡可用於付款
這有一些掩碼如果你想把卡限制爲借記卡
相比於在美國這方案在歐洲更普遍
你可以很容易地做到
因此一個PKPaymentSummaryItem 
描述一些你想要收費的信息
它有一個數量和一個標籤
標籤是一個字符串
數量是一個類稱爲NSDecimalNumber
它是一個Cocoa類之前你可能已經發現NSDecimalNumber 
它精確地表示基數10的浮動點數
當你處理財務和貨幣工作時
浮動點數非常重要
因此這避免了任何基礎2的浮點錯誤
這裏有一些很方便的初始化器
它有一些字符串初始化器
它同樣有一對初始化器
你可以從另外一個NSDecimalNumber
進行初始化 我將使用字符串
我在這裏創建一個總結項目
因爲正如理查說的我如果只有一件東西想要收費
我應該只有一個單獨的總額
標籤是Apple Inc 因爲那是將在賬單上顯示的物品
我從字符串中創建一個數額$349.99
在我的數組中只有一個單獨的項目
我將它傳到我的SummaryItems
強調說明一下總結項目數組
最後一個項目是你想要收費的總數
這是我們將授權併發送給你的
付款請求很完美
我們爲把請求發送到
請求付款授權的視圖控制器
這裏顯示了付款信息 
在應用上是這樣顯示模塊
在iPad上 則是一種形式單是多任務形式單
它將覆蓋整個屏幕
如果你有兩個並排應用
它們不會同時對兩件東西收費
它完全是模塊顯示的
它的初始化很簡單
僅需通過paymentRequest
它同樣有個指派我們等會會說到
你展示它就像其它任何控制器
你很有可能想要通過動畫進行展示
而且你可能想要使用蘋果支付按鈕進行展示
現在 從iOS8.3開始我們有這個很棒的類PKPaymentButton
它有各種顏色的預定款式
而且很重要的是它已經完全本地化
因此我們真的推薦你使用
它就像一個UI按鈕它是一個UIButton子類
如果你需要8.3版本以下的
在我們的開發者網站
有一些可用的圖片你可以使用
在環節的末尾會有一個鏈接
關鍵時刻到了讓我們看看演示是否能夠成功
我們將轉換到演示機器
漂亮
好的 在這裏我創建了一些很簡單的應用 
所有這些樣板代碼也將在
開發者網站上可以下載
讓我們看看它現在是什麼樣子的
我還沒有在蘋果支付裏執行任何東西
讓我麼把模擬器弄小一點
一個小的購物應用
你可以看見我獲得一些價格和通過蘋果支付按鈕購買的描述
好的 什麼事也沒發生
讓我們把代碼放進去
讓我們談談到目前爲止我獲得了什麼
在這裏你可以看見我有一個canMakePaymentsUsingNetworks
我還有這個supportedNetworks屬性
因此我進一步地明確這些
讓我們看看那些
這裏
你可以看到我支持所有四種銀行卡American Express卡
Discover卡 MasterCard卡和Visa卡
如果支持可用我會添加一個按鈕
我有這種applePayButtonPressed方法
因此我將添加內容到那裏
讓我們設置我們的paymentRequest
好的 在我們開始設置
在設置paymentRequest之前我們要再三檢查
我們的權限已經設置好
所以它們全都列舉在權限裏
你可以看見我的有點紅
但不用擔心
稍後你將看見這是爲什麼
好的 讓我們返回到我們的代碼
讓我們設置它創建我們的paymentRequest
我們一行一行地看發生了什麼
把滾動條向上滾動一點
好的 首先我們創建paymentRequest 
然後我們傳輸商家識別符
爲了方便起見 我將它界定爲結構類屬
然後我傳輸必要屬性countryCode
和currencyCode 現在在這個情況下我的應用只以USD收費
我同樣將它傳輸到supportedNetworks
現在 我和我的付款處理器對話
它們告訴我應該使用3DS作爲我的屬性
我已經按如此做了
我也想創建我的SummaryItems
我這裏有一個很方便的方法 將它隱藏起來了
但它將創建一個產品
在這個應用裏所有的產品都來自appealists
這是一個人爲的例子
它將爲我生成一個總結版本
我們將更加仔細地看看
好的 現在我已經準備就緒了展示視圖控制器
再次說明它被PaymentRequest初始化
並獲得一個授權
我的授權方法在這裏
我們將再次查看
我只能展示它
讓我們運行它
我剛想到某些東西我不知道
你們當中是否有人嘗試在iOS8中使用蘋果支付
而實際上無法在模擬器上運行
因此我可能會有許多問題
讓我們看看
哦 好的 我猜蘋果支付現在再模擬器上運行了
iOS 9支持蘋果支付
我們將售賣你需要的
各種制式模擬卡
它們隱藏在這裏
讓我們通過密碼付款而無需Touch ID
哦 好的 我猜我又有一個難題
這就是這些麻煩的指派方法
讓我們談談這裏我們還需做些什麼
讓我們談談一旦情況發生我們如何處理指派
因此一旦用戶Touch ID 
我們將在PaymentAuthorization
ViewControllerDelegate收到一些反饋
我們將使用這些指派
來確認我們是否收到
付款以及是否可以處理它們
現在 有兩種指派方法
第一種方法是paymentAuthorization
ViewControllerdidAuthorizationPayment
你將取回一個PKPayment對象
你返回一個完成處理器一個帶有狀態的數據塊
這個狀態會告訴我們你是否可以
在自己的服務器上處理付款
這個情況下我們將在表單上顯示一個核對符
或者如果有什麼錯誤我們將告訴用戶發生了什麼
然後你需要釋放付款視圖控制器
這會發生在另外一個指派方法
因此你不能在didAuthorizationPayment中
釋放視圖控制器
你想要指派它
paymentAuthorizationViewControllerDidFinish
現在PKPayment對象
它將取回其它包含PKPayment令牌的對象
在成功授權之後
它將返回這就是你要
發送到付款處理器或你自己的服務器上的
它將獲得加密的付款數據
和任何其它你可能需要的元數據
所以 關於配送地址
好的讓我們把這些添加進去
我們把它放入到應用中
好的讓我們首先做didAuthorizationPayment
現在 我將整合今天的付款處理器
所以 你只需要想象這些完成
這就是我將發佈到服務器的東西
我們繼續
現在我獲得一個應用聯線
用於發送確認表
已經定義好了 我必須找到它
找到了 我有一個簡單的聯線在paymentToken上屬性
我們稱之爲交易識別符
PKPayment令牌如我所說
它包含你需要的付款信息
它也獲取一些有用的你可能想要顯示在收據中的元數據
比如銀行卡名稱的淨化版本
這個東西稱爲交易識別符
這保證是唯一的
如果你喜歡你可以使用它你可以在收據中使用它
它對每個蘋果支付購買都是唯一的
最後但不是最重要的我可能想要
釋放我的視圖控制器
我們繼續
現在 我發送成功了
但我們有一些其它狀態如果你想你可以發送
成功與失敗在你嘗試授權它的時候
可能某些東西產生了錯誤
正如我們後來看到的我們有其它的狀態
如無效支付地址以及無效郵寄地址
或者沒有提供足夠的聯繫信息
好的 讓我們運行它
因爲我覺得因此我想找鋁顏色
這次在WWDC我們沒有足夠的鋁
好的 用密碼支付
好的 很好
你看交易識別器這裏顯示
模擬識別器
這是因爲我在模擬器上它返回給我虛擬信息
如果這是一個真的設備
我將有一個真實的交易識別符
我也將它發送到我自己的服務器進行處理
我有一個應用可以接受蘋果支付和付款
這看起來我不需要太多代碼 對嗎
我想十幾行就可以了
我的應用裏有一個小問題
我購買狗項圈但我不知道要把它們運到哪裏
所以我們必須把這安排好
我們必須看看我們如何獲得聯繫信息
你可以在付款請求上
使用一些掩碼來請求用戶的聯繫信息
這叫做requiredShippingAddressFields
我們有郵寄地址 郵件和電話 然後在iOS8.3 
我們引入了名字它僅僅是名字
因此如果你是一個共享類應用
你不想收集用戶的郵寄姓名
但你想要他們的名字讓司機知道如何
稱呼他們 你可以使用那個名字
另外你還可以請求賬單 賬單地址
這是另外一些帶有需要的賬單地址區域的掩碼
對於所有這些聯繫信息我們建議你
不要請求它除非你絕對需要它
這很重要 用戶喜歡蘋果支付是因爲它快速且易於使用
因此你不要反其道而行
尤其是賬單地址
處理蘋果支付並不需要該地址
付款過程也不需要用到
出於這個原因我們建議你不要請求它
但是我們明白你們中的一部分人可能會有平臺
欺詐系統 現有結構
因此這樣的情況下你需要請求
但是請想一想避免的方法
因此聯繫人信息
與配送成本聯繫在一起
因爲用戶可以在蘋果支付單裏
更新配送信息或許你想要
更新收費的價格
所以你將通過選擇性指派方法接收到一個回調函數
paymentAuthorizationViewController
didSelectShippingContact
它返還給你一個聯繫方式並且它有完成處理器
現在完成處理器有一個狀態
所以你可以有成功或無效信息
它將分爲兩個數組
最後一個數組是PaymentSummaryItems數組
看起來很敏感你可以更新你要收費的總項目
但還有一個數組叫做ShippingMethods
所以蘋果支付單也可以展示配送方法及成本
這是一個獨立的數組
PKShippingMethod是PKPaymentSummaryItem
的一個子類就像SummaryItem 它有一個標籤和一個數量
但它有另外一個字符串屬性稱爲詳情
你可以用它告訴用戶
送貨需要多少時間
這裏我創建一個單獨的配送方法
把它分配到我的付款請求這樣它就會在表單中顯示
聯繫信息
出於對於用戶的隱私在這個指派回調函數
你將不會得到完整的未編輯的聯繫信息
因爲用戶還沒有使用Touch ID
我們把用戶使用Touch ID視爲
同意信息傳輸到應用
因此你將接收到城市 州以及郵編代碼或者英國郵政編碼
或者淨化版本的英國郵政編碼我該這樣說
我們認爲這對於估算配送成本已經足夠了
例如 在州際或國際上方面
但在最終付款一旦你取得授權
你就可以獲得完整的聯繫方式
現在 這些API 對你來說可能比較不熟悉
這是因爲它們在iOS 9 
使用新的Contacts框架
所以此版本中通訊簿已被取消
是的 不用爲我鼓掌爲Contacts團隊鼓掌
我知道我做到了
那些已經遠離我們了
我們也在蘋果支付中找到代替方案
現在 我們將在接下來的版本中
對API作一點點改變
它們不會一模一樣
如果你在線觀看影像
查看最新信息的開發者文檔
但這裏有一個非常簡單的例子
說明提取名字和郵箱地址的例子
讓我們結束我們的應用
讓我們把所有的信息化爲代碼
我想做的第一件事是請求配送信息
我想要郵政地址
這是我的請求
然後我們需要放入指派方法
讓我們找到正確的那個
didSelectShippingContact讓我們將代碼放入
在應用裏我將做什麼
我這裏可以人爲做示例
我將一行一行地帶你瀏覽
我將索要手續費
如果用戶選擇了一個不在美國的配送地址
那麼就產生一個國際手續費
現在這個paymentAuthorization ViewController  
didSelectShippingContact 方法總是被調用
如果用戶在表單內有地址
所以如果用戶有一個默認地址
或許來自名片因此當表單被展示的時候
你將得到一個回調
我設定了一個配送方法
我將有一個標準配送
然後我將檢查地址
現在這裏我將用新的聯繫API來獲得地址
關於聯繫API 我們將有另一場說明
因此不用太擔心這個
稍後有機會詳細瞭解
然後我檢查在這個例子中地址是否在美國
我說這是人爲的原因是因爲在iOS上
地址信息可以有許多不同的來源
它可以來自用戶在Contaact應用輸入
也可能來自Facebook的同步信息
或者其他與iOS系統上的社交網絡
所以很重要的是你要確認地址的正確性
不能假設它們永遠是一樣的信息
所以 爲了展示之方便
我要把事情簡化一些
之前 我看到我有稱作makeSummaryItems的
幫助功能
所以這實際上的功能是如果是國際費用
你可以檢查樣板代碼
並在我的付款項目中添加了手續費
這也是爲什麼這裏可以看到
稱爲requiresInternationalSurcharge的布爾屬性
然後我將返回我的完成處理器成功完成的
這裏獲得了一個配送方法數組只有一個
以及我的總結項目數組
再次說明你可以在這裏返回一個失敗狀態
或許用戶輸入了一個你不能配送到達的城市
州或國家這樣你可以返回
一個無效的郵寄地址狀態
好的 讓我們試一下
我已經在我的蘋果支付表中獲取了一些地址
我獲得了一個加拿大地址
它不是在加拿大
我把它放在一起
你可以看到這裏有國際處理
但如果我把它變爲一個美國地址
你可以發現這裏有個副標題
國際處理不見了這是一個單獨的標題
在蘋果支付單上更新你所有的
配送成本是很容易的它們被列在單獨的屏幕上
這裏我隨便獲取一個這裏只有一個可供選擇
直接從你的表單裏獲取配送信息
和另一個購買流的步驟這是一個很好的方法
所有的樣板代碼都在開發者網站上
現在已經可以下載使用
這裏還有一些其它東西我想談談
在iOS9裏我們有一些新的API
其中有一個被稱爲PKPaymentMethod
它讓你可用找到更多的付款工具
我說的工具指的是用戶選擇的卡
它讓你可用做這些事情
比如 申請借記或信用手續費或折扣
再次說明在美國不是很普遍
但適用世界的其它地方
當用戶改變他們的支付方法
你將會收到一個指派回調函數
因此我在這裏
可以通過確認屏提升檢查是不是使用借記卡付款
你可以使用這個API它真的很棒它對你來說可能非常實用
這裏有一個警告大多數添加
到蘋果支付的舊卡我們不知道它們的類型
因此你將會接收到PKPaymentMethodTypeUnknown
現在由於這款API的主要目標在歐洲
我們下個月將啓動英國
這不會是一個問題但如果你是在美國
並且你想要使用這款API 那就請牢記這一點
你需要在這編寫代碼
我們在PKPaymentSummaryItem上也有了一個新屬性
用戶或者開發者需要的某些東西
以及能夠改變總結項目的功能
我們有兩種類型一種叫做最終自解釋另一種叫做待定
你可以用它來表示你的收費不是最終的如果你是一個共享類應用
而你不知道用戶將花費多少
你可以選擇待定類型
現在這個類型的相關文件
將在未來版本中發佈我們會再次做出許多改變
在此 如果你是在線觀看
請查看開發者文檔獲取最新消息
我已經討論過模擬器支持
很重要的是雖然我們已經
爲模擬器添加了支持但你仍需把應用放在真實硬件上
如果你有開發者在另一個國家
我想這是一個很棒的特點如果你現在在英國
那麼可以馬上進行安排和運行了
很重要的是在你來到商店之前
你要在真實硬件上對你的應用進行測試
確保支付可以成功處理
我也想談談Apple Watch
當我向你展示硬件幻燈片
你可能在想Apple Watch 有一個安全元件
Apple Watch在WatchKit應用裏
不支持蘋果支付
然而它可能會使用Handoff 
在Apple Watch上直接觸發付款
一旦用戶從鎖屏上啓動應用
你可以直接切換到
你手機上的應用並展示蘋果支付單
在應用裏我只展示一些樣本代碼說明一下
我有一個WatchKit拓展
WatchKit在手機上觸發付款
如果你感興趣的話請看一下
實際上 我們也爲手錶 
打開了PassKit API
如果你想知道更多信息
請觀看剛剛進行的關於Wallet 蘋果支付的主頁的部分
你可以在線觀看
總結一下 蘋果支付使用非常方便
它具有隱私性和安全性
我強烈建議你使用它
去商店下載應用
我們在商店裏有一個很棒的精選部分可以下載
很多很棒的使用蘋果支付的應用今晚就試試吧想想它如何和你的應用
融合在一起不僅想想如何提高用戶體驗
也想想如何改善蘋果支付的成果
讓你的用戶感到滿意
我知道他們會很喜歡蘋果支付的
我們爲你準備了更多的信息
我們有一些文檔我們爲開發者微型網站創建了一個蘋果支付
如果你對安全元件和硬件有興趣
你可以在iOS安全白皮書上
找到更多信息
它深究了許多我們如何生成這些付款的細節
以及在設備上獲取卡的過程
閱讀起來非常有趣你可能會想查看
我們還有技術支持
以及開發者論壇如果你有任何問題
你可以跟我們的專員保羅或理查討論
之前你在臺上見過他們
我們的用戶體驗專員會爲你解答任何關於蘋果支付的設計問題
另外還有相關的部分
包括我已經提到過Wallet部分你可以在線觀看視頻
如果你對新的Contacts框架感興趣
我強烈建議你敢看該部分
時間是在週四3:30
瞭解我們已經所做的如何讓Contacts更方便的工作
最後一點我們有實驗
今天和明天下午
有關於蘋果支付的實驗請來參加
我們將邀請來自服務器團隊的人員
回答關於加密系統的問題
我們還會邀請來自iOS方面的人員
我們還邀請一些商業團隊如果你有任何
關於如何接受蘋果支付以及支付手續的問題
理查今天將在實驗室
到時候可以進行設計反饋
非常值得大家過來參加我們將非常高興看到你們
這是我和理查今天的全部內容
十份感謝
希望你喜歡餘下的部分
午餐愉快 再見