无缝连接APP
大家好我是康拉德·舒尔兹
是Safari和WebKit 团队的工程师
这是第509号讲座《无缝连接APP》
如果参加WWDC 你几乎肯定会app
甚至会有app的网站
大家举手示意一下在座的有哪些
有网站 可供用户访问与app中相同的
部分内容或功能
非常棒 这次讲座是为你准备的
我们要谈谈怎样让app和
网站之间的壁垒不复存在
并在二者之间建立紧密的联系性
关于我们想谈的内容举例而言
我希望开始先演示一个app
你可能已经在iPhone或iPad上安装了它
这就是WWDC app
我收到同事乔纳森发来的一条消息
让我查看主题
听上去这是个不错的想法
我把WWDC app安装在这个iPad上
看到是个网页链接
那么可能还是在Safari打开
我们继续 轻点一下
哦 相当酷 直接进入WWDC app
也许你错过了我们再来一遍
我来继续 轻点回左上方的信息
看到就是普通的HTTPS链接 前往
Developer.Apple.com
轻点 一下就好！
直接到了app直接就是主题
不要再通过Safari来一遭
非常棒！
我们要谈谈三种很酷的技术
可以帮助消除app和
网站之间的壁垒
首先 刚才大家看到演示当中的神奇表现
轻击普通链接时 WWDC app在
正确的地点打开
接下来 我们来谈谈Smart App Banner
它可以帮助用户在访问
网站时 发现app
最后 分享网络凭证允许app访问
Safari保存的密码因此使得
用户登录app非常快捷
首先 我想有请我的同事乔纳森
上台来和大家聊聊怎样连接app
<br/> 谢谢 康拉德
大家好 我是乔纳森·格林斯潘
是Apple的核心服务软件工程师
我希望先和大家聊聊app
在宇宙中的位置
刚才康拉德问 有多少人既有app也有网站时
我看到很多人都举起了手
这并不奇怪
许多现代的app不仅是让用户下载
它们还有着强大的网站呈现
网站内容常常可以反映出app内容
在座的很多都有强大功能的出色网站
我们希望用户可以使用到这些功能
甚至都无需安装app
我们也希望各种app都可以彼此配合
app仿佛是生态系统的组成部分
在app或网站中需要访问其他app
或网站所提供的内容
需要某种程度的交流互通
例如 如果有美食家app你可能想把它连到
菜谱搜索网站Yumly这里app
或服务中
怎样让app连接到Yumly 怎样快速
准确地提供Yumly的内容呢？
在iOS上 我们通常用URL在app之间发送
数据信息
我们先来看今天我们会怎么做
许多 iOS app执行所谓自定义URL方案
这些是非常有效的工具
因为它们可以让app彼此交流
但其中也有陷阱
首先 它们不会总能映射到正确的app
因为没有哪个app真正拥有它们
两个app可能会请求同一个URL方案
用户并没有真正的好方法
表示他们指的是哪个app
第二 如果app没有安装 则会回退
URL无法打开app需要自定义代码
才能处理这种相当常见的情形
最后 它们会使得保护用户隐私
很是困难
App需要查明app是否在设备上安装
才能使用自定义URL方案
这意味着 它们可以探嗅出用户是否
安装了约会app或银行app或者是政治相关的app
这属于个人信息
用户不愿意对外分享
应该有更好的办法但是这所谓更好的办法
应该是什么样子呢？
显然 它应该和使用URL方案
一样简单我们现在还会
介绍一种URL
它必须具有 可证实的所有权
URL应该在正确的app中打开
在app和URL之间应该存在强大的
双向联系
如果app并未安装 它必须有能力
优雅地回退 
当用户轻点URL时它还应该可以工作
Safari和网页浏览器一般而言是显示
富内容的不错方法而且在各种平台上
都有显示因此我们将确保
这些链接可以在网页浏览器中打开
它绝对必须保护用户的隐私
当我在自己的设备上运行app时 它无权
知道 我已经安装了你的app
当然 链接...不好意思 当然
你轻击的链接是在你和
设备之间的事情
没有必要牵扯第三方进来
正如康拉德给大家看的网页URL可以满足
上述所有标准 是理想的解决方案
你知道它们何时打开
它们在哪里几乎都可行当轻击它时 没有第三方
会牵扯其中
现在我们确定将网页URL作为
我们的解决方案我们再把它细分
我知道大家都见过URL 但是如果来看
URL的组件我们会对这些
链接怎样发挥作用有更好的理解
这里是个非常正常的网页URL
如果你感到好奇
这是去年的WWDC主题演讲视频的链接
这并非是我们为此目的或
仅为此app而新生成的URL
它是现成的今天就可以在
Apple开发人员连接网站上看到
如果在Safari打开我希望看到的是
你所希望的内容视频和相关信息
如果... 我也希望如果是在Mac或其他
平台 我也看到的是完全一样的内容 是通用的 
多亏这个通用链接这个链接将在
WWDC app中打开无需牵扯到网页浏览器
为了这可以发挥作用
iOS需要找到几项内容
首先 我们要看这个方案
我们支持HTTPS和HTTP URL
接下来是域名或主机名
通过使用SSL证书 签署存储在安全
网络服务器的文件 域名与app
安全关联
稍后 这方面还有更多详情
我们分析过方案和域名后
我们再来看路径
路径可以是完全匹配
或者是和前缀匹配
在两种情况下都要规定匹配 不好意思
你需要规定匹配而且要控制情形
如果你网站的内容无法在app上
显示时 这会非常有用
如果URL并不匹配可以在Safari打开
和其他任何链接一样
如果我们匹配URL 则需要不好意思 如果匹配URL
并发送给你 你可以使用NS URL组件
来做细分 并获得URL上的
有用信息
我特别喜欢使用NS URLQuery Item
因为这可以让访问查询组件
变得非常简单
通用链接是指让app而不是Safari
来处理网站上的链接目的是为了打开app
当用户轻点网站链接时iOS需要了解
app应该打开该链接
app必须请求它可以从网站处理链接
iOS随后可以联系 网站 证实网站
了解app愿意被它
来代表
我们将服务器准备好
全程包括四个步骤
第一步是生成特殊文件
Apple-app-site-association文件
iOS可以从网站服务器下载
文件包括特殊结构的JSON数据
如果去年你从Web用过Handoff
或Shared WebCredentials这会非常相似
顶层密钥是applinks 这是网站
证书的兄弟类或活动延续
若你有二者之一的话
app秘钥非常重要应该和作为值的
空数组一同显示
在新的详细秘钥下你会看到字典
字典秘钥是应用的识别符
其中包括团队ID 这可以从
开发人员门户网站获得后面跟着句号
后面还有束识别符
如果有不止一个app 可以用不同的
秘钥 规定每个app
路径数组告知我们 网站的哪部分
可以通过app支持
如果app中可以支持整个网站
你只需要包括一个星号
就像这里这样
但是在第一天
很可能app不会支持网站的任何一个网页
我们已经让你有能力规定
它可以处理哪些网页
如你所见 我已经为数组增加了两个路径
第一个是完全匹配
如果用户轻点连接可以直接前往路径
会在app中打开
如果网站的全部内容都得到app的支持
可以使用路径前缀例如本数组的第二输入
来规定
该部分将在app打开
注意结尾的星号它告知我们
这是路径前缀
需要注意这些路径要分大小写
其他URL组件如查询或
片段则不支持
第二步是从认可的证书签发机构
那里获得SSL证书
这不是为了App Store签署app所用的
那个证书不是Apple生成的
我们建议你使用HTTPS服务器上用的
相同证书但不做要求
如果有不止一个域名需要在app体现
我们建议考虑获得
通配符证书
若要了解证书生成的更多详情
请联系证书签发机构
第三步是签署JSON文件这是你刚通过SSL证书
而生成的
为此 你需要在
开发Mac的终端使用openssl smime
命令
这两个文件名都很重要
第一个是你刚生成的文件名称
是在开发Mac上未签署的JSON文件
第二个必须和你在这里所见到的完全匹配
apple-app-site-association
这些是你的私人秘钥
是在证书生成期间生成的
以及证书签发机构所提供的证书
同样 这不是Apple提供的证书
也不是App Store的证书
也不是开发人员ID证书
这是需要注意的最后一点
如果你有证书签发机构提供的
中间证书在签署期间
也需要包括在内
第四步也就是最后一步
你现在有了签署的JSON文件
需要上传至网站服务器
这会到达 服务器的根目录
例如
www.example.com
/ apple-app-site-association
需要注意域名支持的每个app
也许需要不同的JSON文件 
这是为域名妥善签署过的
例如example.com
和<u>www.example.com</u>
<u>&lt;http://www.</u><u>example.com&gt;</u>是不同的
我们在iOS 8中引入了这个功能性
支持两个功能：Handofffrom the Web
和Shared Web Credentials
在iOS 9中 我们添加了通用链接的支持
我们需要让它变得尽量简单
便于尽快在app中采用通用链接
不好意思 是从iOS 9种子2开始
我们不再要求大家签署
Apple-app-site-association文件
只要上传未签署的JSON 谢谢
谢谢
只要上传未签署的JSON文件加上相同的文件名
apple-app-site-association
到HTTPS服务器
iOS就会处理其余工作
如果需要支持iOS 8的向后兼容 
注意签名要求还依然有效
如果是从 iOS 9开始
则无需填写文件
我们来谈谈应用的运用
需要调整应用委托
需要用到授权
我给大家看看怎么做
首先是应用委托
如果去年用过Handoff 这会非常相似
当用户活动 应用委托
这个方法会发送到应用委托
用户活动对象不好意思
用户活动对象有着页面URL属性
在这一功能的情况下
会一直是HTTPS或HTTPURL
这一功能永远都不会为零值
在通用链接的情况下活动类型
一直都是
NS User ActivityType Browsing Web
一旦确认了活动类型符合你的预期
就可以通过NSURLComponent类
从网页URL细分URL
与自定义URL方案相似URL可能会
不代表app中的任何内容
或代表过时或变形的内容
如果出现这样的情况你应该查明并优雅地失败
现在 在这里优雅根据各app的情况
也许需要向相关使用显示提醒
解释出了什么差错或者在Safari
打开链接效果会更好这可以从app来实现
调用UI ApplicationOpen URL即可
从中拿走的最重要的是
不会让用户盯着空白的
View Controller
一旦应用委托得到升级 
你需要更新app的授权
使用XCode会很容易
导航至项目设置
再到配置不好意思
功能选项卡并选择相关域名
你需要添加app支持的
每个域名的输入app链接 后面加上冒号
再加域名名称
同样 app支持的
每个域名在这里需要单独的输入这些都很清楚
Example.com和www.example.com
需要不同的输入正如大家所见
我给大家看看这些怎样
才能很快都实现
但是 首先我想回顾两个最佳实践
因为所有内容是来自app以外
数据可能会变形你可能会需要验证
如果是这样 这并非是说你犯了错
而是说这种情况发生时
你需要优雅地失败
一旦在处理URL你需要牢记
HTTP在iOS 9上做出警告
这是为了用户安全
和隐私的考虑
例如 你传递了使用数据
NSURLSession
就应该一直使用HTTPS
如果需要在app使用未加密的HTTP
则要回顾第711号讲座
《网络互联NSURLSession》
其中涉及重要的网络互联新技术
App Transport Security
我们来看这些怎样在XCode中使用
我会为大家展示
来自WWDC app的代码
这在App Store中可以获得
这里是
WWDC项目
我创建一个新的扩展 其中会有
我们今天看到的代码
这个扩展是在应用委托类
我首先要做的是
添加我们探讨过的应用委托方法
同样
如果去年用过Handoff 这里是
同样的委托方法
你需要加以扩展来支持这个新功能
我们感兴趣的参数是
用户活动参数其中包括用户
所作所为的信息
在本例中是从网站导航
我们还感兴趣
活动类型和网页URL
出于我们的目的活动类型一直是NSUser 
活动类型BrowsingWeb
但是 如果app支持来自其他来源的
用户活动 例如Handoff 那么你就要
检查我所做的活动类型
因为它是NSUser活动类型BrowsingWeb
我知道会有网页URL而且不是零值
因此我使用网页零值
属性的显性打开来从中获取URL
我会把它发送给函数显示URL
它负责细分URL 并把它
交付给用户界面
这样用户就可以看到
这个函数的签名相当简单
它将单一的URL作为输入 并返回Boolean
表示我们是否可以处理URL
现在方法的主体有些更为复杂
但是我会带大家逐行来看
首先我们要做的是创建NSURLComponents实例
我说过 这个类 会细分URL
并允许你访问其中的各部分
而无需你搭建自己的解析器
一旦有了这个对象我们会从中
提取感兴趣的部分组件
对于WWDC app我们感兴趣的是
主机和路径组件
现在WWDC app
可以处理URL来自
不止一个域名的情况
所以我要检查域名
确保它是我所预期的
在这里 我有个开关语句
是在developer.apple.com介绍的
康拉德之前给大家看过这个URL 不好意思
URL的主机名称
一旦进行了匹配我希望匹配路径
我会用开关语句这在Swift中非常强大
立刻搜集所有的组件并在一个代码行中
进行比较s/videos/WWDC
有些可以是也可以不是一年
我希望来看看值 
现在是个字符串并把它改为Int
我把它转换为Int初始程序 不好意思
我还会搜集讲座序号
在本例中是第509号讲座
在康拉德给大家展示的例子中
是第101号讲座
我马上给大家看Find Session方法
如果组件可以匹配
我就会将它呈现给用户
但是我希望先确认输入
因为可能会是
它不在任何合理范围
例如 年份是在Apple成立之前
或讲座序列号是数百万
我用讲座的年份
在两个范围中进行比较
2011到2015是年份
100到10000是讲座序号
如果是在这两个范围内则看似有效
可以向用户进行呈现
我们继续来呈现
我提到这个Find Session方法 马上就给大家看
在这里
这是专为app准备的
大家不大可能拿到完全相同的代码
我也不会讲太多细节
但是思路是提供的数据可能是
来自不止一种来源我们希望检查所有这些内容
首先我们要看这个片段 是2014年 
和之前的URL的情况包括讲座ID
如果不包含讲座ID 我们就看看
查询
从NSURL查询项分离出的查询
在本例中 查询项的属性已经为我们填好了
我们再重复一遍可以发现
匹配的ID或实例
任何一种都会包括讲座序号
现在 代码基本已经就绪
不过 有些内容缺失了
这里有很多返回错误
还有很多无法处理URL的情况
同样 这样是可以的因为我们会时常
收到无效输入
但是在应用委托中
我不会对返回值做任何处理
如果获得明显无效的URL
用户则什么都看不见
打开WWDC Apple 会出现空白的
View Controller
这是我希望完全避免的情况
我们需要优雅地失败
这可以非常非常简单地实现
在本例中 如果出现URL返回错误
我会了解 我并未 给用户呈现任何内容
并通过UIApplicationpenURL
将URL传递给Safari
所有这些代码改变你都需要采用
如果你已经获得自定义URL方案的代码
很可能它会与我们这里的情况
非常相似
现在我就将向大家展示添加代码前后
app会是什么样子但是在此之前
我需要加上授权
因此我进入Project Setting
选择Capabilities选项卡
并选择Associated Domain
我还会在这里加上一个输入
因为我们并非是只用到一个域名
不过同样 如果不只是一个域名 example.com
www.example.com它们需要在这个
授权中 分别输入
在本例中 我需要applinks:
developer.apple.com
就是这样
我准备在客户端继续
那么我会让大家看看在加上这个之前
app是什么样子
这里是我的iPad这是我们加上之前
安装的WWDC app拷贝 不好意思
是在我们加上通用链接之前
我将前往同样的文本信息 不好意思
是我之前发给康拉德的同样的iMessage 
信息内容完全相同可是当我点击它的时候
因为我没有使用通用链接
它只在Safari中打开
Safari是个不错的app可以显示很棒的内容
特别是 它并未 提供可以从app
获得的所有选项
我可以在app和Safari上观看视频
我还可以从app提供反馈 使之成为 
以后可作为收藏以后观看我甚至可以下载后 脱机观看
正如我会给大家展示的那样 在app中 现在有了这个
在app中 现在大家手中有了这个
看上去有点像是这个样子
这还是我之前给康拉德发的URL
和之前一样 我轻点一下打开主题
并可以把它加入收藏
我可以观看视频下载 等等
基本上 我们要做的所有内容就是这些
谢谢
我把遥控交给康拉德之前
要非常感谢大家能来而且我非常希望
看到大家能用iOS 9中的
通用链接能有所创造
谢谢
非常棒
谢谢 乔纳森
通过通用链接
你可以为所有
用户提供可能实现的最佳用户体验
用户如果在你的iPhone或iPad上安装了你的app
连在你网站上的链接
就会在app立刻打开
而不需要通过Safari中间过渡
你不再需要在自己的网站上编写JavaScript 
来检查是否安装了你的app
或是试图去检查是否安装 
再代替用户安装app
如果用户并未安装你的app
你的链接也仍可以在Safari无缝打开
出于同样原因
你的链接在Mac
甚至其他平台上也会依然有效
因为这些都是在用户设备上本地操作
就不会浪费时间前往用户
网络服务器
或是你的网络服务器
当然 这也意味着Apple或其他
第三方都无法跟踪用户在做什么
我们今天讲了一些 
谈到如果没有安装你的app 
这些链接怎样将用户带到你的网站
如果是这样 许多人可能会希望
帮助用户发现并安装你的app
ILS有一项技术 可以帮上忙
这就是Smart App Banner
我们用几分钟时间来谈谈
Smart App Banner这是关于使用它们
将花费多长时间
那么Smart App Banner是什么？ 
这是无侵入的UI元素
可以帮助将用户带到app
可以在iOS上通过Safari 
自动呈现
如果用户并未安装你的app
广告条则会 
启动App Store以便用户下载
如果用户已经安装了你的app
你的app 广告条则会
用户启动app
Smart App Banner的添加对你的网站而言微不足道
iOS 9 app搜索功能有项新内容
Apple将Smart App Banner
用于帮助索引你的app及其内容
这可以提高用户发现
并安装你的app的可能性
现在 有些人也许会用自定义URL方案
让用户从网站进入app
这样也可以
但并不推荐这么做
这样并不会确保自定义URL方案的
用户体验在未来会保持一致
Smart App Banner可提供更好的用户体验
为使用Smart AppBanner 你只需要
在网站的标头部分
添加一行HTML
apple-itunes-app元标签
会告知Safari 
你想要安装或显示Smart App Banner
内容属性必须
包括你的app ID 
这是用于将用户指向正确的app
可以通过便捷的iTuneslink maker链接生成工具
来获取你的app ID
app参数应该包括
当前显示页面的URL
这其中有两个原因
首先
这可以实现自定义为用户
显示的视图
它会被传递到应用开放URL源
应用注解方法
其二
它可以帮助确保app搜索可以
识别出你的站点不仅仅是
着陆页
若要了解这方面的更多详情
我推荐大家听听《介绍搜索API》那场讲座
可以找到相关视频
这是昨天的讲座
最后 要注意SmartApp Banner不会出现在
iOS模拟器中 所以一定
要在实体设备上进行测试
一旦你使用了Smart App Banner
一旦你的app可以将链接带入你的网站
你就会有非常棒的机会来简化
你的网站
它不再需要成为你的app的
推广工具
这样可以专注于以最好的方式
呈现你的内容
你不再需要参与
显示广告条
或开场屏
或编写代码
来处理自定义URL方案
网站现在使用起来更简单编写也更容易
好的
我们已经介绍了如何让用户
进入你的app
一旦如此
许多人就会登录
你的服务因为这样会有帮助
如果是这样他们也许会看到
类似这样的屏幕
登录表
这对用户而言会很是沮丧
也许他们不记得凭证
即使已经在Safari多次登录过
你的站点也无济于事
他们不想或者不知道怎么去查找密码
这时候 用户可能
就会选择放弃 离开
你的app 也许甚至会删掉它
但是如果你可以
罗列出一系列凭证
让用户选择会怎样呢？
可能会变成这个样子
和这个样子
用户可以轻松一点他们之前
保存在Safari中的密码
具体实现的技术在iOS 8中有过介绍
叫做SharedWeb Credential
Shared WebCredential允许你的app
访问Safari保存的密码
因此可以让用户后顾无忧
不必在不同的设备的不同
上下文中记住自己的密码
怎么做到的呢？
当Safari在iOS或OS X上
看到有用户登录
或填写账户创建表单
它可以通过不同方式帮助用户
具体而言 Safari 可以在钥匙串上
代替用户保存密码
它可以通过iCloud Keychain
在用户的所有设备中同步这些密码
那么 它们可以在用户的
iPhone iPad和Mac上可供使用
它会建议用户使用保密性高的密码
当然 在用户 
登录的时候也可以代替用户
自动填写密码
有了Shared WebCredential API
它可以防止用户在登录时
卡在app上
使用Shared Web Credential
分为两步骤
首先
你需要在app和我们谈及
通用链接的网站之间
建立密切联系
其次
你需要在你的app中使用
一个小API 来访问凭证本身
因为分享网页认证证书允许
用户分享密码我们需要确定
你可控制自己的app和网站
正如我们允许允许你的app
可以从网站处理链接一样
你的服务器告知我们
可以信赖你的app
只需要简单添加
Apple-app-site-association文件
即可 这点乔纳森提到过
具体而言
你只需要通过你的网站所信赖的服务器
app秘钥
app ID数组分享凭证
在网络凭证秘钥下
添加顶层字典即可
你的app还要告知我们要信赖你的网站
这可以通过添加一个或多个
网络凭证输入到相关
域名授权这个我们
刚才谈到过
还可以使用XCode的项目检测器来实现
就像乔纳森演示的那样
好的
现在 我们来谈谈在你的app中使用API
在你的app中 典型的流程是这个样子
首先
你的app要检查是否在钥匙串
保存了凭证如果保存了 则用它来登录
如果没有
它会要求用Safari保存的
任何密码来进入
如果可用它就会使用这些
还将在本地保存然后登录
如果不可用
它会显示内置的登录UI
请求凭证再按照通常方式来继续
请求Safari的密码的
基本执行大概是这个样子
主要函数是
SecRequestSharedWebCredential
它会用到完成处理器
也可以使用域名和用户名参数
在完成处理器中
我们会检查是否取回了凭证
如果取回 则用它来登录
否则
我们将显示登录UI
注意在两种情况下我们都会分派到主队列
因为这样并不会确保
完成处理器会在主队列调用
如果你的app允许用户创建账户
或改变密码
你则的确应该升级Safari的钥匙串
这样 下次用户登录你的网站时
比如 是通过Mac来登录
则会自动填入正确的密码
可以使用这里显示的
SecAddSharedWebCredential函数来实现
Shared Web Credentials API
也会让你生成安全的密码
所用的算法和Safari完全一样
通过Sec Create Shared Web
Credential Password函数 如这里所示
还有一些额外的高级API功能
如果大家感兴趣我建议大家
可以看看去年的讲座《你的App你的网站和Safari》
我们已经介绍了一些不错的工具
可以为用户在你的app和
网站上提供最佳体验
首先
在iOS 9上只需你做一点工作
你的网站的普通链接
就会变成通用链接
可以像打开你的网站一样 轻松打开
你的app
iOS还可以确保 用户可以获得
你的app或网站可实现的
最佳体验
使用自定义URL带用户进入
你的app的时代已经过去了
接下来
你可以使用Smart App Banner
可以让用户首次来到你的网站时
帮他们找到你的app
在时候的访问中
它们会重新引导用户进入你的app
它们始终会帮助App Search
索引你的app和内容
这样在用户的Safari和
Spotlight中就都可以使用
最后
通过使用共享网络凭证
你可以让app访问Safari保存的密码
帮助用户轻松登录你的app
若要了解我们今天介绍的更多详情
可以去看看我们的文档资料
大家还可以在开发人员论坛中提问
当然也可以去DTS看看
还可以联系约翰·戴维斯我们的网络技术开发顾问
或者杰克·伯伦斯App框架开发顾问
去年和今年 还有若干相关讲座
其中会深入介绍我们
所讲的内容
感谢大家 希望大家喜欢大会的其余部分