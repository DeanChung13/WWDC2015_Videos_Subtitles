UIKitDynamics和视觉效果的最新进展
欢迎参加WWDC和"UIKitDynamics
和视觉效果的最新进展"的最后一天的活动
我是麦克·特纳
我将和我的同事大卫·杜汉一起为大家进行介绍
我们两个都是Apple在这里的UIKit开发组成员
所以 在我们开始今天的介绍之前
我要向各位推荐几场非常好的讲座
我只是简要介绍一下
在过去几年里我们进行过几场非常好的
围绕UIKitDynamics动态和视觉效果的讲座
所以我们今天就从简要概述
动态动画模拟系统开始
我们会进行 基本示范 然后
我们直接切入今年UIKit Dynamics的新进展
然后大卫会过来与我们讨论视觉效果
以及你怎样在你的应用程序中运用那些效果
最后 我们会稍稍涉及
一些应用UIKitDynamics的最佳操作范例
和你的应用程序里的自动布局
所以我们谈论UIKit Dynamics时
我们说的是一个二维的基于物理启发的
动画交互系统
它有一个非常易于组合的说明式的API
可以显示你的应用程序里的高水平动画
我们所说的并非核心动画或用户界面视图UIView动画的
替代程序 而是另一个
能够帮助你在你的应用程序创建定制的效果的工具
让我们来看一个示例
这里有一个基础的滑动视图
用户可以平移视图但是如果你放开它
它就像受到重力影响一样落下来
现在 它并不会直接从电话底部消失
相反 它先在底部边缘停止
再稍稍向上反弹 然后停在那里
现在 让我们看一看如何创建这个基本示例
首先你需要先选定一个很好的参考视图
在这里 我们选择视图控制器的视图
其中包含我们的滑动视图
选择引用视图后 我们要
创建一个动态动画并将它与引用视图关联
这段动态动画为我们的动画
保持整体背景 它的主要作用是跟踪
行为和动态项目
对于滑动的例子我们有一个滑动行为
UI动态行为的伟大之处之一
是更高层次的行为可以由相对原始
的行为组成
所以我们的滑动行为只不过是
重力 碰撞 附件的组合作品
稍后 我们将向大家展示
我们如何使用UIAttachmenBehavior和增加的新组件
让滑动比过去更简单
所以一旦我们有滑动的行为
我们就需要一个动态的项目
这里我们选择了滑动视图
它只是一个自动符合动态项协议的UIView
所以这是一个很好的选择
然后我们选择动态项 将它与
滑动行为关联 将滑动行为
和animator组件关联
现在animator组件将自动确定
系统静止或运动的时间这是要创建这个
伟大的效果你所需要的全部条件
现在我们已经看过了一个基本示范
这就是今年UIKitdynamics的新变化
我们支持
UIDynamicItem的非矩形碰撞结合
我们有一个全新的UIDynamicItemGroup
允许多个项目就像引擎中的一个部件
一样运转 我们还有一个全新的
模拟向量力场的行为
我们对UIDynamicItemBehavior以及UISnapBehavior进行了
一些基础性的优化处理
我们会看到UIAttachmentBehavior新增了一些很好的功能
我们最后还将介绍一些新的方法 你们可以
用这些方法调试动画
所以 在iOS 9里 我们增加了UIDynamicItem
碰撞边界类型可以提供三个新方法
为动态项指定碰撞边界
在默认情况下你的碰撞边界是矩形
与边界数据访问器返回的动态项目协议
匹配
现在你可以指定一个椭圆类型 它来自
协议中的边界宽度和高度
最后 你可以指定一个UI BezierPath用于
动态项的碰撞边界
现在 为了实现这一点 我们采用了现有的动态项目协议
并已经延长两个可选属性
如果你不应用这两个
可选属性中的任何一个你将像过去一样
遭遇到矩形碰撞边界
如果你执行第一个碰撞边界类型
并返回椭圆就将得到一个
基于边界的宽度和高度的椭圆
如果你执行第一碰撞边界类型并返回一个路径
我们会将你调回执行第二个类型
此时您将需要提供一个UI BezierPath
用于碰撞边界
所以如果我们要模拟项目之间的
边界不同的碰撞为保险起见
我们要多做几次情况可能看起来像这样
这次碰撞看起来比过去所有项目
都有矩形碰撞边界
的情况下更现实
现在 为碰撞边界设定路径时有
一些限制特别是
BezierPath要求必须是凸起的逆时针模绕
并且非自相交
这些都是非常基本的如果你仔细想想
也没有什么太花哨的东西
我们还需要记住当项目在屏幕上时

动态项的中心点
这就是碰撞边界的更新内容让我们来谈谈动态项目组
这是进行多个项目
并使他们作为一项在底层引擎运行的基本方式
这个项目组保留每个项目
的位置和各自的碰撞边界
所以因为这个原因 你应该把这些项目与一组
而不是单独的行为关联起来
与其将它们与组进行关联
将组与任何行为进行关联
你更倾向于与animator组件关联
总的来说 这会把那些行为
强加在项目上
而一个组却不能被添加到其他组中
这是一个一级抽象
所以要创建凹形或其他
复杂的不能用动态项目边界路径创建的几何结构
而且总体来说行为能够有此影响
要做到这些 这是一个很好的方式
那么 让我们暂时回到滑动示例
我们希望实现更丰富的滑动效果而不仅仅是简单的平移和回落
比如我们让屏幕在用户触碰时轻微跳动
显示可以平移
要做到这些 我们只需要
给滑动视图添加一个简短的力
这就是那力
所以我们可以在项目的中心把这个力
作为一个向量进行模拟在项目的中心向量的长度对应的这个力
的长度 向量指向上方以说明
这个力的方向 在本例中我们要
向上移动视图 所以这个力指向上方
为了应用这个力我们就要使用UIPushBehavior
你还记得的话UIPushBehavior
有两种截然不同的模式
它有一个连续模式代表了一种跨越时间的力
另一个模式是瞬时模式
代表一个简短的瞬间的力
或者称为一个脉冲
对于这种交互 我们只需要一个简短的力 它会反弹回来
然后静止所以我们要
使用瞬时模式
我们这样做就得到一个简短的力
但是什么使视图回来？
我们给它一个力使它向上移动
但它却回落下来
这是我们的复合行为是由重力
碰撞和附件构成的
所以是重力使其移动下来
然后它再以碰撞行为反弹
但让我们来多了解一些重力
以及它如何影响我们的项目
我们从开始施加脉冲力的瞬间
来看滑动视图
的垂直运动
你会发现这个力是作用于一个点
然后项目向上移动再以弧形回落
这是因为在我们的图表中重力
无时无地不在影响它
如果我们把这些力与重力相加情况看起来
可能像这样这个力是应用于
所有位置和时间的
所以不容易模拟
也许我们可以试着使用UI来推动行为
但是这会非常复杂的 而且很快
所以我们需要更多地把重力当作一个场加以思考
场非常简单它只是一个函数
在指定的定义域内给每一个点分配一个向量
在这个例子中我们的定义域
是整个参考视图
所以我们希望重力在整个参考视图里
影响滑动视图
特别简单
所以我们采用了这个场的想法 并加以扩展
在iOS 9中 我们引入了UIFieldBehavior
UIFieldBehavior
是一个可以添加到参考视图的
一个区域中的方法场在参考视图之内的
每一个点都被赋值
任何产生的力量
自动被动态animator组件应用
到已经与场关联的项目中
如果你在想我们现有的UIGravityBehavior
被作为一个场实施
重要的是还要记住
这是简化的物理
为适应这个展示进行了调整
我不会用它来建造
星际空间站或类似的东西
让我们看一看内置场的类型
这里种类非常丰富
有线性和放射重力场、
速度和阻力场、
涡流场以及依据胡克定律的弹簧场
还有电场
和磁场
如果还不能满足你的需要
我们也提供自定义力鉴别器
此话题我们稍后再叙
我们先从线性重力开始
我们首先会注意到它处于一个区域内
就像我们之前讲的那样
而且它有场强我们使用默认值1
它也是一个方向作用力
我们使用熟悉的重力方向
举例
但它实际可以指向任何方向
让我们看一看放射重力和线性重力的区别
除存在于一个区域并且有场强外
这儿有一个位置作为一个质点用放射重力可以模拟
如你所知
两个物体之间重力
与距离的平方成反比
这儿是物体之间距离的平方
这个指数是场的衰减值
距离场的位置越远
场产生的作用力就会减小
这儿也有最小半径
这一方法可以确定一个物体距离位置点多远
才可以感受到场的作用力
我们还有一个噪声场
在这方面我们注意到的第一个问题是
它随着时间变化 你可以使用动画速度
来调节 默认值为1

你也可以使用平滑参数
调节噪声程度
让我们看一看自定义场鉴别器
使用起来非常简单
先使用场鉴别框创建一个UIFieldBehavior并初始化
然后就可以调用该框使用几个场取样包含相关取样位置
速度、质量、负载以及时间
下来你就可以使用它来
判断任何作用力
这里我们需要做的是选择位置 x位置
然后绘成正弦波
一个很酷的结果
这是一些基本的内置场
和UIFieldBehavior的概述
我想邀请大卫
举例展示
大家好 我们将
带你体验一个
我相信你们以前都见过的一个例子
我确信你们某个时候都使用过FaceTime
所以这儿的例子是
创建一个相似的UI
管理屏幕中的脸孔
正如你所看到的 在我滑过这儿时
方框移动顺畅
如果我从角上拉开一点 它会弹回
如果我再拉 它会有
漂亮的渐入曲线
如果向下抛 它就会
沿着四周边沿弹开
你会注意到在我向下抛时 它并没有
直接到它应到的地方
实际上有一个物理过程 它会弹离
屏幕边沿并回到原位
现在 我可以产生一个调试视图
看看这些作用力场的样子
这样 你可以看到
这儿你可以看到我们有四个弹簧场在运行
我们可以很容易地解释所发生的事情
如果我们把这个放在边沿
我们知道它会弹回
如果我们跨越两者 那么根据
我们跨越的位置它会选择一边或另一边
穿过中间
它会选择最近的一边
让我们看看怎样设置
怎样在实际中独立完成
第一就是建立StickyCorners 行为
根据麦克的说法它是由其它行为构成的
这种复杂的行为可以做完成我们的一切想法
在这种情况下 它会产生冲突行为
因为我们不想让你的面孔
急速离开屏幕边沿
我们有一个动态的项目行为
可以影响面孔的属性
这样 我们可以减小密度
使引擎具光感
但需要增加其对运动的耐受性 这样
它位于某一地点时就不会绕着那个位置
不断旋转
最后我们禁用旋转
因为这样做没有意义
你并不想让自己的面孔
在屏幕中旋转
最后我们有个这些场行为
四个弹簧场标出了四个角
我们也把它们增添到行为中
现在无论什么时候人们增添这种StickyCorners 行为
都会免费得到这种行为
接下来 看看视图控制器
我们去看一看建立视图层级需要的一切
但还需增添一个拖动手势识别器
这样 用户可以选择面孔
并在屏幕移动
长按手势识别器则会使我们
开关调试界面
我们创建动态仿真器
并增添StickyCorners行为
手势识别器是如何工作的？
像往常一样手势识别在状态之间进行
它从begin开始开始后 我们做一些记账
这样我们可以跟踪进展但我们也需要禁用sticky behavior
我马上会演示我们是怎样做的
同样 当它变化时 我们向四周移动
当它取消或结束时
这是比较特殊的地方
当用户停止互动时
我们检查拖动手势识别器的速度
并使用它把速度增添到
动态体系中
这样 当用户离开视图时
它会继续随用户的动作而移动
而不是突然停止并
由场完全接管
禁用和启用
都是由于相同的理由
在用户在活动中时
我们不想让这些场处于活跃状态
否则它会从我们的
指尖下溜走
所以我们再回过来看一下
看看是怎样启用的
的确非常简单
在启用时 我们把所有项目增添到
这些行为中 当禁用时我们再取出来
创建这样一个系统非常简单
你可以在自己的程序中
建立类似FaceTime的行为
所以 为了告诉你们如何将调试UI
置入你自己的应用程序
我要让麦克上来帮我一下
谢谢 大卫
真的非常好 在大卫的例子中
为了能够一探究竟
将这些场线可视化了
在他打开它之前 这显得很神秘
所以 在你的动画设计参照视图中
这些线基本是用来显示这个场的叠加图
特别是 这个叠加图能够帮助你将
各个场、碰撞边界、附件 以及
某特定组件是运动还是静止可视化
现在 你可能奇怪 这不会是API
但是它在LLDB中可以存取而我们也正在把它
作为UIDynamicAnimator上的一个有效的调试功能加以推广
而且它用起来确实很简单
暂停调试程序
为你的动态动画设计找一个参照
激活调试功能 设定在true
然后你将得到这个漂亮的叠加图它能够给出所有的物理属性
现在 除了激活和灭活调试功能之外
我们还要给出调试间隔
这样你就可以调整
调试叠加图更新的时间间隔了
所以 默认情况下
每个动画帧都会更新但是如果你有许多
复杂的物理属性 那么可能
例如 最好把间隔改为5
即只是每到第5帧才更新
同时 我们还允许你调节
动态动画设计的动画速度
此时放慢速度可能有利于
观察真实的过程
之后 重要的是要记住 在使用时
如果放慢速度
可能会影响模拟效果
所以一定要确保以1x修正
那么接下来让我们谈谈UIDynamicItemBehavior
现在 如果你再次调用
可改变你的视图或动态道具的物理属性
这适用于一个或多个动态道具
在大卫的例子中
他为FaceTime方块选用了低密度
及高阻力
使其牢牢固定于场的角点
就现有特性 在此多举几个例子
我们有弹性、摩擦力我们看到了密度和阻力
我们有角阻力 这些都可调节
你的道具在动画引擎中的状态
在iOS 9中我们增加了两个性能
这影响你的道具
在我们新型电场和磁场中的参与度；
我们还增加了anchored属性
这个略有不同
但是它能让你的道具
参与动态系统 参与碰撞
不过没有自己的速度
所以更像是碰撞边界
那么接下来
我要谈谈UIAttachmentBehavior
这让你能够约束两个动态道具
从而让它们彼此保持特定的距离
你可以利用阻尼和频率进行配置
让它更像一个弹簧 而不是连杆
这是一个很好的附件
你知道 它很有用 但是你也确实
只有一个办法来约束两个道具
所以 在iOS9中 我们增加了更多附件类型
第一个是限制附件
这与刚讲到的距离附件很像
但不是我们能想到的
像一个连杆或弹簧一样受约束
而是更像两个道具间的一根绳子
唯一约束是彼此间的最大距离
你对它的配置类似于距离附件
规定从每个道具中心偏移出的两个点
很简单
接下来是一个固定的附件
这与限制附件或距离附件略有不同
在你创建这种类型的附件时首先规定一个锚点
就每个道具中心而言 这个锚点
位于你的参照视图坐标空间
而这类附件无论如何不会在两个道具之间运动
相对于允许道具端部旋转的连杆它更像是两道具间的焊接杆
我们还增加了一种锁销附件
这个类似于固定附件
即你可以先在两个道具间规定一个锚点
但是这种类型附件允许两个道具围绕这个锚点在彼此之间旋转
这样你可以规定一个旋转范围默认状态下无界
但是我们可以给出界限如缩小范围
最后我们增加了一个滑动附件
这个滑动附件有点复杂
我们等一下看一个例子
和固定附件及锁销附件一样
我们先在参照视图坐标空间
规定附件锚点
但是与这两个类型不同 我们还要
规定一个平移轴
这里 两个道具之间
相对运动都将沿着这个平移轴
这个类型的附件可阻止两个道具所有的相对旋转
所以 两个道具不能再旋转
只能沿着这个平移轴运动
但像锁销附件一样
你可以限制平移范围
这样 如果你规定了一个平移范围
就要把附件锚点
放在确定为范围零点的
锚点位置
所以如果我们以这种类型附件建立该系统
我们就能够得到
两个道具间直线运动就是这样
所以 相当复杂
让我们看一个基本示例
为此 我想
再次回到滑动的例子
是说过在过去 如果我们
使其可滑动 将必须
在底部每一侧以及顶部离开屏面的某处
增加一个碰撞
以限制滑动视图
沿着垂直轴的运动
那么有了UI附件 我们再无需如此
我们用滑动附件就能做到
所以 我们把系统控制在一次碰撞
使其表现更佳
而代码确实更易读
所以 如果我们在此激活调试视图
你就能够看到
通过沿垂直轴的直线描画的滑动附件
它随我们滑动视图而缩放
但是同时还有一个附件
即距离附件 我们用它
通过一个平移手势识别器
附于一个操控锚点
所以 不同于大卫的演示
这个完全在动态系统内
我们不做任何禁用或启动
我们只是保持动态
好极了
所以最后
让我在UISnapBehavior上为你做一个快速更新
如果再次你调用UISnapBehavior 它能做的更多
它可以被用来将一个视图从一个位置移动到另一个位置
并有一种快动效果
通过SnapBehavior你可以定制快拍阻尼
这样确实可以调节
感觉上的快慢
在iOS 9中 我们也新增了
初始化后定制捕捉点的功能
同样相当不错
这里让我看一个简单的例子
所以 如果我们试着平移视图那么打开调试功能
就会回到如最初捕捉点的屏面
如果我们轻敲另一个位置就会对齐到新点
即在现有动态特性基础上
调节捕捉点
相当不错
你还会注意到 有了调试叠加图
这些实际上都是自行合成
这里4个附件 配置如弹簧
把视图对齐到新位置
确实非常棒
所以 这就是
UIKit Dynamics和iOS 9中新增的内容
我要把它交给大卫
让他谈谈视觉效果
各位早上好
那么我们接下来要谈谈利用视觉效果
为你的应用增加新模式
那么我们用一个简单的图像浏览器应用示例来形象地加以说明
这里 我们要向用户额外介绍一下
他们目前正在看的图片
看右边 图像上面
有点叠加部分
是我们图像的文件名
所以我们要看看如何创建
那么 第一步是你要
形成一种模糊效果
我们有3种模式 超亮、
明亮及阴暗模式
你通过这些模式形成一种模糊效果
就是那样
最后 你用模糊模式形成
你的视觉效果图
之后只要添加你需要的布局
你就能够得到屏面上你看到的模糊效果
下一步 我们要添加振动效果
振动的作用是 使某物在模糊模式
突然弹出
所以接下来 我们要
通过模糊效果形成振动效果
如上面提到的 确实要要模糊叠加
所以我们从模糊效果开始
形成振动效果
我们形成振动效果
正如我们之前形成模糊效果
此时 我们要
在模糊视图中添加内容视图
现在 不必直接加到模糊视图上
而应是在视觉效果图后
有一个模糊视图
最后 我们
在振动视图的内容视图上加标签
视觉效果图的内容视图上
加这些东西是要确保
你给出的所有内容
效果无误
所以 当你完成这些之后
模糊视图顶部就有了可爱的标签
正如你在屏面上看到的那样
那么iOS 9有什么新东西呢
首先我们使得
你的视图边界有清新的动画效果
在模糊视图中你可以向用户显示更多信息
而无需做任何复杂的工作
但是 除此之外 我们让你能够
让模糊视图生动有趣
那么现在 比如如果你的app有夜间加载模式
你在你的应用中可以日夜都采用非常清新的动画
并推动用户
接下来我们要简要介绍
我们如何切实地把这些效果搬上屏面
它做什么用 以及你为什么需要知道
这很重要 因为所有这些都会影响
性能和修正
这里 小婴儿Sophia带我们看
如何向她的小UI加一点叠加内容
那么先想想
我们要捕捉哪里
我们只要看到一个视觉效果
就知道我们需要捕捉的内容
我们将它从屏面移开
这样我们就把这个小东西拷贝了出来
现在它从屏面上下来了 我们可以用它了
但是我们为什么将它从屏面取下
好 有一个原因是我们需要确保
我们获得正确的效果而且在这种情况下
我们捕获了我们需要用于模糊的所有一切内容
为了达到那种模糊效果
而且我们经常离屏做这些事情
这样我们就不会弄乱屏幕上已经做好的内容
当我们正在离屏做出这样效果的时候
于是我们将这个模糊效果应用在它这里
最后 我们把它复制回原来的位置
即效果视图对它所要求的位置
而所有这些给了我们一个定义
它定义的是你以前可能已经听说过的一个东西 即所谓“离屏通过”
就是无论什么时候我们获得一个内容我们将它复制到屏幕以外
做好后 再把它返回到屏幕上
那么有什么其他方法我们可以得到“离屏通过”？
好正如你所看到的
我们已经有了Alpha
而且你可以看到你做那种效果的方法
因为如何你有一个复杂的视图层次
其中需要Alpha
那么我们就不能只把Alpha适用于单个视图
因为你将得不到正确的效果
相反我们需要获得整个复杂的视图层次
通过离屏获得它渲染它然后将Alpha应用到整个事情
遮罩在它的背后有一个非常相似的推理
在那个推理中我们需要将所有像素用于遮罩
正如我们刚才提到的模糊和虚化也是通过离屏完成的
但快照不是 为什么是这样呢？
你可能会问自己
嗯 首先 什么是快照？
我们已经有了这两种UIView方法一种是在屏幕更新后
获得屏幕快照然后以矩形绘制出视图层次
一种是UIScreen方法即在屏幕更新后获得快照视图
而且所有这些都会把快照上的内容返回给你
那么 快照基本上是做同样的事情
即如“离屏通过”做的一样但让你能够控制最后一个步骤
从而将内容复制回屏幕
我们获得了所有你要求我们进行快照的内容
对它进行离屏渲染然后返给你一个视图
或者代表那个图像的像素内容
但是 再一次想问的是 这与确保
你的效果必须正确无误有关吗？
好
不幸的是如果你得到的视觉效果陷入了
这一点正如你可以看到的
索̨菲亚已经失去了她的模糊度
而这就是你在视觉效果完成后将在屏幕上所看到的内容
视学效果是你离屏时所得到的
它是你事先没有想到会遇到的
好重新回到这里
我敢肯定你们今年都已经参加过多任务会议
如果没有你可以下课后看看它们的视频
但在所有事情当中即你需要启动一个非常好的App
以参与多任务处理
其中关键的一点是屏幕上要有好的表现
因为现在你的App的表现也会影响到其他正在运行的App
所以 既然我们在这个特殊的例子中没有出现任何滚动
那么我们就可以决定让我们不要一直保持对模糊进行渲染
让我们只是为它照一个快照好了
因此我们决定为那个特殊的视觉效果图照一个快照
但随后发生的事情是捕捉区域是离屏完成的
而且由于你只快照了视觉效果图
因此在捕捉区域上什么也没有
这样一来捕捉区域什么也没带给你而且模糊功能也没有可以模糊的
你得到的是你之前看到的被破坏的效果
所以 既然我们已经看到
你是如何破坏了你的效果那我们能做些什么来解决这个问题呢？
好了 第一件事就是
我们有了这个简便的方法即用于视觉效果图上的方法
所谓的“这个效果怎么了？”
就像使用动态调试标志
在SDK中不是这样的 但你可以
从调试器中调用它 就像这个一样
你会得到一个字符串看起来和这个有点像
在这种情况下我们发现在层次结构上的某个地方
有一个遮罩视图 它造成的视觉效果
需要在屏幕外来完成因此无法捕获尽可能多的
它所需要的内容以便进行正确的渲染
那么如何解决这一问题呢？
第一种方式如果你使用的是Alpha
或者遮罩这项工作实际上是重新排列你的视图层次
我们在这里所拥有的只是一些容器或许窗口
和一个容器视图
包含一个模糊和更多的内容
那么在这种情况下 模糊实际上并不需要
加入我们所拥有的Alpha或者遮罩
所以我们只是重新安排以便将模糊作为第一个子视图
将容器作为第二个子视图这样一来容器
和它里面的一切都将渲染于模糊的顶部
而且我们可以将Alpha或遮罩适用于这个容器视图
却不会搞乱我们的模糊
我们能为遮罩做的第二件事是
不是将容器视图进行遮罩
而且我们可以将那个遮罩
向下移动到我们实际上需要遮罩的内容上
现在 正如我们前面所提到的
遮罩往往会采取“离屏通过”
所以你在做这样的转换时
应该非常地小心谨慎
最后通过快照 正如我们前面提到的
快照只会捕获你告诉它需要做的
所以在这种情况下
我们要求快照的内容视图中 有一定的透明度
这样我们就可以看到它背后的东西
但是如果我们只快照了那个视图那么我们在模糊中将得不到透明度
它会看起来有点滑稽
因此 当我们一直向上移动快照时
窗口通常是最容易做的事情
但有时你可能需要一直将它向上移动到屏幕上
所以如果你要快照模糊 你应该确保
你在快照时尽量远离模糊内容
以确保你得到你所需要的一切
然后有了这些让我们转到有关动态和自动布局的
一些最佳做法
所以你可能要做的第一件事是
你可能需要使相当复杂的
视图层次在动态系统内发生作用
而你想要的是使外部视图加入
动态系统而不是内部视图
它们的布局将正如
你用其他内容所做的布局的一样
所以 你可以将UIKitDynamics用于外部视图
这只需要将“自动调整遮罩大小转变为约束”
变为“真”即可
是的在WWDC中唯一的幻灯片里讲的是“真”
然后你就可以使用“自动布局”
将所有其他的东西正好放置于视图里面
就像你经常做的一样或者使用新的句法
即如幻灯片上所显示的一样
你可以做的另一件事是你在动态系统里经常会有
各种项目但你可能对它们作了标记
它们不应该参与 但需要跟随
所以在这里Lola有她的小标签
上面写了文件名是什么而我们只有这个锚点
它代表了我们的自动布局约束
然后当动态图起作用并准备四处移动Lola时
标签也跟着一起动 但标签最终不会
与动态图有互动
最后你可以使用动态图来操作
其方法是创建一个自定义动态项目
正如麦克前面所提到的
你只需要将NSObject划入子类
或者其他适当的对象类
只要符合UI动态项目协议
并提供了所需要的方法
对于Bounds 有的尺寸...
它不能是“00”或者动态系统准备
抛出一个异常...然后你执行居中和转换
并按顺序使用这些数值
以构建自动布局约束
或者改变你系统外部的一些东西
然后关闭 我们将给你一个演示你也可以做到这样
所以我们这里得到的是什么？
对 同刚才一样是一个简单的应用程序
它刚刚显示了一张照片
但是我们希望能够以某种风格向用户展示
照片里人的面部
所以当我们点击
我们的动态项目时系统就会伸出
并且在那个模糊中出现动画
如果你再次点击 当然 它的移动
会出现更好一点的效果
但是如果你继续点击 你就可以看到
它在动态系统上的反应非常流畅
并且不具有非常固定的、僵硬的路径
所以它对于用户正在做的动作做出恰好的反应
那么 我们是如何做到这个的？
所以我们做的第一件事是
我们使这个面部执行布局向导
这正好是UI布局向导的一个子类
而在它的内部是一点点的动态
我们将这个面部布局向导执行动态项目也就是再一次
将NSObject划入子类并符合UI动态项目
并且它将管理一个约束
然后通过将该约束的常数设置为中心点的x值
或y值 不管该约束是如何变化的
在这里 当你设置布局向导时
它就会得到一个中心位置
并且创建了四个额外的动态项目
在系统中表示上、左、下
和右
我们将它分配到约束而约束刚好从动态项目的
左上角发生作用
以及从动态项目参考视图
而我们使用滑块附件以限制
这四个动态项目相对于该位置
可以去的范围大小
这可保证它避免飞到系统外
或者折叠到一个过小的位置
现在 在视图控制器里
我们得到这种行为的方式是我们有一个
沿着面部布局向导的重力行为
然后在彼此的顶部将它们居中
因此当重力发生变化时
布局向导将会适当地移动
我们从故事板中得到模糊效果
这样我们不必不断地摆弄它
如果我们决定要改变我们使用的风格
我们使用约束将那个模糊视图
附加到面部布局向导上
因此 当此向导改变了尺寸
模糊视图也会随之改变
现在为了使它看起来像是模糊视图切割了
除面部以外的所有东西对此我们确实有一个小窍门
我们做了一个原始图像的顶替图像
刚好切出我们需要的图像给它们一个遮罩
并创造更多的UI图像视图放置于
已经在那里的视图的顶部
所以它看起来好像模糊刚好遮挡着面部
但实际发生的事情是你所看到的视图
被放置在顶部而面部从它们上面切除
最后 我们对这个视图点击我们设置的手势识别器
得到的正好是使我们的动态系统发生改变的东西
当我们要暴露面部时
我们只需要改变重力就可以
所以重力通常是造成一切被拉向中心的原因
但当我们打开它时它像一个反重力一样想推开一切东西
然后我们利用以下这个事实
即我们通常在这个过程中始终布局子视图
以实际地触发模糊动画进入或退出
而所有这些都是为了建设这个非常好的效果
我们所依靠的是自动布局和动态都可以很容易地提供给你
至此我们将回到幻灯片来做一个结束
总而言之
我们希望你能够使用这些技术以真正地改善用户体验
所以 当你添加一个模糊你添加了它
这样你就可以通过其他的信息来弥补你的内容
当你使用动态
你可以有一个反应刚刚好的用户界面
并且正如用户对他们输入内容的期待一样
但是你也需要考虑到表现当你在做这些事情时
因为如果你有很多在屏幕上的动态项目
它们能够使用户界面真正陷入困境
而且你不会得到你所期待的的物理现象
所以请谨慎地使用
而且对于视觉效果如果你有很多这样的效果
你最终将有很多“离屏通过”
并且这也会招致相当高的成本
这些都是与课程相关的内容这是我们今天为你准备的
不幸的是其中大部分都在之前发生过
仅有一个没有发生而且是与我们一起出现的
即所谓“通过GCD建立响应和效率的App”
而且我们在此之后将在实验室里回答你的所有问题
并帮助你避免出现你这一年遇到的大部分情况
我们已经有了各种文档
以及你以前在演示中看到的用于StickyCorners样本的组装代码
将会提供给你
而且 当然 寇特·罗斯特将通过电子邮件回答大家的提问
我很高兴你们在周五坚持与我们一起学习
我希望你拥有一个伟大的WWDC并祝大家一路平安