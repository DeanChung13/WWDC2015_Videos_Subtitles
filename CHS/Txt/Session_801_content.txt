面向未来硬件的设计
大家好
欢迎参加“面向未来硬件的设计”讲座
我是杰弗里·特拉·伯恩斯坦
今天的主讲人还有马特乌斯·格伦和 比尔·林德梅尔
哪些人应该参加今天的讲座呢？
也许你正在开发一种设备
这种设备连接到某个APP
比如这个设备是一个洗碗机
你希望通过APP来控制它
或者是一种无人机你希望用APP进行控制
或者是高尔夫俱乐部设备将你的练球信息传送到APP
或者你有一个设备想要为它开发一个APP
也许是一款游戏你想要为它开发用户控制器
或者你想开发消息发送APP
或开发一个配合约会APP使用的装置总之各种各样五花八门
你想要为你目前还未拥有的设备开发APP
例如Apple Watch或者我们刚发布的新产品
本讲座也会对你有帮助
我们是谁？
我们是一个投资者 设计师和原型设备开发者团队
我们的工作涵盖所有的Apple产品
我们研究新界面技术对于我们产品
操作系统和应用的意义
我们推出了一些令人兴奋的功能，例如多点触控和手势控制
触控板和触觉反馈
在WWDC 2014大会上我们举办了名为“原型开发”的讲座
你们有人参加过这个讲座吗？
谢谢 好极了
感谢你们的参加
你们有人看过网上视频吗?
人数不多 好的
本讲座并不需要那个讲座上介绍的知识
但是我还是建议你们看一下那个讲座
我简单介绍一下今天的内容
我们推出了
一款革命性的新应用名为Toast Modern
你可以用它来查找旧金山街道上的美味吐司面包店
拍摄你正在品尝的吐司面包的照片并与亲朋友好分享
我们使用这个APP来解释为什么要进行原型开发
主要有两个原因
首先是对验证想法
以节省产品开发所需要的时间和金钱
第二是获得新的想法从而让你的产品变得更好
以前我们讨论过如何进行原型开发
其过程是制作一个虚拟APP，介绍给用户取听他们的意见
然后反复进行改进直到产品完美无缺
你们知道互联网上的反馈信息很有价值
人们可能会说“这个操作方法看上去不错我可能会试一下”
“WWDC 开发者大会上的原型开发讲座视频很不错”
“来一盘吐司面包”
“需要记住：第一开发虚拟APP第二：我忘了...”
“我为感到骄傲”我的妈妈
今天的讲座不容错过
我们将推出全新的革命性的Toast Modern产品
它建立在Toast Modern的成功基础之上
我们还会介绍Apple和合作伙伴
进行iWatch原型开发背后的小故事
我们将会创建一个设备和连接到这个设备的APP
我们将会介绍一些硬件和软件原型开发策略
今天我将向你们展示Toast Modern产品
你们想看到它吗？
好极了
这是一个
革命性的连网
社交大数据互联网APP
谢谢
非常感谢
我们将它称为Toastal Service
这是世界首个社交面包机
让你能够发送Toast消息
给你的亲朋友好友
它有三种颜色：银色
太空灰和18K金色
我们不仅有iPhone
还有Toaster
它们都具有强大的功能
iPhone拥有美观的界面
它连接到互联网
而且始终陪伴在你身边
我们的吐司面包机将面包变成吐司面包
我们想要组合它们的功能
我们想要模糊硬件和软件之间的界线
创造完美的混合体
我想到有一个产品已经做到这一点
那就是Apple Watch
你们可能会认为在Apple设计师构想出
完整的Apple Watch设计方案然后进行生产再交付给你们
而实际上我们的做法是在其他设备上
模拟Watch让我们能够试验界面功能
这是成熟的Apple watch它与现在的成品基本相同
它的初始设计是一个矩形我们使用这个界面
来试验我们想要添加到Watch的各种功能以确保完美的用户体验
我们可能添加
一个数字表冠并显示在屏幕上
进行滚动操作以理解它的工作方式
并试验各种按钮功能
这是一个很好的方法让我们能够更好地理解Watch界面
和测试它的功能
但是你不能把iPhone绑在你的手腕上走出户外尝试使用它。
我们的一些APP开发合作伙伴在开发Watch APP时
Watch还没有正式推出但是他们想出一些好办法
比如这个FrenchTransit APP
他们制造自己的Apple Watch
看上去很简陋但是很有用 
他们绘制了一些不同的屏幕图片
然后在Watch内滑动这些图片这很重要
这是一个火车时刻表APP
我需要知道它是否能够显示我已经赶不上的车次
我可以赶得上的车次
他们需要在实际环境中进行测试
German新闻报纸Bild打印了一张
Apple Watch图片在其下方滑动显示不同的内容
他们需要进行测试
确保他们的文章在Apple Watch容易识读
关于硬件和软件原型开发我们有一些经验和教训
我们知道我们可以在屏幕上模拟硬件
就像AppleWatch那样
我们可以使用图片来模拟软件
去年我们曾经使用Toast Modern进行过讲解
我们需要在应用环境中以合适尺寸在适当位置进行测试
就像我们刚才看到的纸质Watch原型那样
这是我们去年的原型开发流程
开发虚拟设备展示给消费者听取他们的意见
今年我们将开发虚拟硬件和软件
在此之前我们需要问我们自己三个重要的问题
哪些内容需要变得更真实？
哪些项目可以进行模拟？
除了那些必须真实的项目之外其他所有一切都可以模拟
最后一个问题设备将在哪里使用？
然后我们将进行开发并且展示我们的成果
我们应该展示给谁呢？
你的APP用户
如果你的办公室同事不是你的用户
你应该去找目标用户
去哪里找？去人们可能使用它的地方找
你需要走出去
请记住不要与你的潜在用户进行争议辩解或忽略其意见
你需要了解他们对你的原型产品的印象
将原型产品展示给潜在用户之后我们获知他们的反馈意见
然后我们问自己三个问题：
第一 哪些功能正常运行？
第二 哪些功能不能运行？
第三 我们可以获得哪些其他想法？
今天我们需要重复这个流程三次
我想向你们介绍一些不同的技术
我们首先从图片和动画开始
然后我们将使用其背后的技术
之后我们将创建一个轻量级交互式联网原型
我想要简单回顾一下Toastal Service
这是世界首个具有社交功能的吐司面包机
你可以接收吐司面包消息我们称之为Toastie
也可以发送吐司面包消息
让我们来体验这个神奇的面包机
在开始之前我想请马特乌斯上台
谢谢杰夫
很好 我们应该怎样开始呢？
首先让我们来看我们的硬件和APP
我们需要问自己一些问题杰夫前面讲过这些问题
首先哪些内容应该变得更真实？
让我们首先来看接收消息和烤面包功能
在硬件上让我们来想办法  提示已经接收到Toastie
在APP上我们考虑使用新Toastie通知
思考APP可以显示哪些类型的信息
下一个问题是我们可以模拟哪些项目？
这时我们应该开动脑筋
我们并不打算建造一台吐司面包机
我们要做的事情并不是把面包变成吐司面包
我们要做的是在设备上放几张图片
然后模拟硬件工作方法
在APP上我们使用图片来表示所有的内容
我们并不想要实现真实的交互功能
而且不会编写任何代码
第三个问题 产品将在哪里使用？
吐司面包机的使用位置是厨房
APP则可以在家里的任何位置使用 这是肯定的
让我们来看我们的Toaster
我们说过我们想要通过在屏幕上显示图片来模拟硬件
这听上去很像杰夫刚才所说的
在iPhone上模拟Apple Watch
幸运的是Apple还生产一种与Toaster的形状相似的产品它就是iPad
在这里我们可以使用它
为了画出我们的Toaster我准备使用keynote
你们可以使用自己熟悉的软件
我将会使用keynote你可以使用自己喜欢的软件
我将会尽可能简单化
Toaster实际上是一个盒子有几个支脚一个控制杆
也许我们应该将它称为数字操控杆
还有一个插槽你可以插入一块面包
我们还说过我们想要指示
收到的新Toastie
我们在这里设置一个LED灯它可以变亮
在Keynote我将添加几片面包给这个Toaster
这是正在制作吐司面包的Toaster
最终将会有一个Toastie弹出来
让我们看看上面写着什么
我们可以取出它
我们可以在iPad的Keynote中打开它
这样一个Toaster就完成了
对于app我们想要做相似的事情
我们进入主屏幕这是iPhone主屏幕上的屏幕截图
我们将APP图标放在上面
我们将截取一张屏幕截图
作为APP背景图它是可以自定义的
就是这么简单
对于我们的APP我们想要使用一张Toast Modern截图
这个APP是我们去年推出的
你可以看到 在左上角有一个方便的打开位置
十分适合放置我们的Toaster收件箱链接
在这里我将会放上Toaster图标和一个通知小图标
在Toaster 收件箱中我将使用面包片作为占位标记
因为我们不想隐藏Toastie上显示的内容
我不想打消
你在等待你的吐司面包片时的热切期待心情和惊喜时刻
我们还会显示这个Toastie的发送者
我们会放置一张图片在这里显示发送者的姓名
还会添加发送日期和时间
我想我们还应该能够
设置面包的烤制时间
这些效果会更好
对此我们只需要在这里使用一个滑动条
现在让我们在iPhone上打开它看看它
在实际设备上的效果
这看上去像是一个真实的APP
但实际上是一个完全虚假的app
现在让我们来看它们如何配合工作
你可以看到当我点击屏幕
显示通知打开APP
以进入收件箱
在Toaster你会看到LED已经在闪烁
然后我可以点击插入一些面包
我再次点击下拉数字操控杆
几秒钟之后Toastie将会弹出面包片
让我们看看上面显示什么
到此一切正常
我可以立即将它取出来显示给我的朋友们看
听取他们的意见
从中获得有价值的信息
它们是怎么运作的呢？
LED看起来能够很好地指示新Toastie
APP上的通知告诉我们有了新的Toastie
即使我们不在厨房之中
满怀期待地盯着我们吐司面包机
有一个不太完美的事情是很多人对向我们问起过
如果有多个Toastie将会怎么样？
确实此如我们的设计并没有很好地考虑到这一点
那么对于这种情况我们应该怎么做呢？
也许我们会升级Toaster上的Led
也许我们的APP会显示一个Toastie清单
而不是仅显示一个Toastie
让我们再次从最顶层开始
让我们来看我们的硬件和APP
在这个阶段让我们问自己
哪些内容需要变得更加真实？
我们需要硬件能够处理多个Toastie
并且烤制合适的面包片
在APP上我们希望能够浏览Toastie
选择我们想要的Toastie
那么我们可以虚拟哪些内容呢？
我们仍然需要虚拟尽可能多的内容
在两个设备之间不会有真实的连接
我们还不触及与实际的面包烤制相关的任何内容
对于APP的数据发送和接收
我们也需要进行虚拟我们的UI仍然还是图片和动画
那么用户将在哪里使用产品？这和前面一样
Toaster在厨房中使用而APP则可以在任何地方使用
让我们再次来看Toaster
前面我们说过我们想要更改LED
在这里我们可以使用一个点阵式显示屏
我们可以指示收到多少个Toastie
我们不会在Toaster的这个位置
使用高分辨率触摸屏因为这会增大产品生产难度
而且会导致价格上升
我们并不需要重复提供手机上已经存在的功能
我们将保持简单的硬件设计
并将重点放在手机上的复杂功能
因此我们将更多的Toastie添加到的收件箱之中
我们可以轻松滑动选择我们想要烤制的面包片
我们创建一个状态指示已经选择一个不同的Toastie
我们将增加一个APP显示屏幕
显示Toaster正在进行烤制
在顶部我们添加一个倒计时
显示还需要等待多长时间就可以吃到美味的吐司面包片
最后 Toastie烤制完毕重新显示在清单上
我们可以看到APP上的内容
我们有一个iPhone
让iPhone运行Keynote 
绘制的虚拟APP iPad运行keynote绘制的虚拟Toaster
利用它们我们开始播放更贴近现实的产品运行情况
两个设备上都显示一个通知
我们打开APP
进入收件箱选择一个不同的Toastie
我们添加一些面包片到Toaster
按下数字操控杆
最后两个设备上都弹出Toastie
看起来很不错
不幸的是我们发现了一个严重的问题
当我们测试产品时当我们把它们放在一起
发现并不能通过点击触控功能
让它们协调一致地工作
更现实的情况是Toaster始终在厨房里
而APP将会随着你到各个不同的位置
这是一种基本的使用情况
你收到通知
走到Toaster跟前进行一些操作
机器开始烤制面包然后你走开
去刷牙或者干别的事情
最后Toastie烤制完成
你回到Toaster那里
如果你不知道这种应用情景
你就不能切合实际地测产品
我们如何让两个原型设备
在一定的距离相互通信呢？
我们应该如何做到这一点
而不需要花费额外的力气呢？
我想继续使用我们使用keynote绘制的原型设备
我们发现我们的团队拥有十分便捷的技术
正好适用于这种情况
让我展示给你们看
你可以看到在手机上这仍然是Keynote绘制的原型设备
但是现在通知确实自己出现了
我们可以点击打开APP
然后选择想要烤制的Toastie
在Toaster上
你可以看到我们仍然可以点击插入一些面包片
我们来看app当按下操控杆时会发生什么
APP将会实时进行响应
当Toastie返回到 完成烤制状态时
它同时显示在两个设备上
这看上去很不错
但是我们如何做到这一点呢？
这些还只是设备上的图片
我们还没有编写一行代码
我们有一个秘密武器比代码更酷
更快速 更智能
我们称之为...
我们称之为幕后技术
它实际上是一个人假扮成电脑
在这个例子中这个人就是我 在沙发后面
使用两个keynote绘制的遥控器它们连接到iPhone和iPad
远程控制每个设备的状态
并执行原型设备上的点击操作
当你在APP上进行操作时我可以按一下摇控器
然后Toaster做出反应
这样我们就完美地模拟了实际的操控体验
而我们并没有做任何事情来实现它
在Apple我们经常开这样的玩笑
我们假装让人们相信
我们实现了一些非常神奇的技术
就像我们展示原型设备时所做的那样
实际上背后的秘密是
团队的一些人某个角落控制这些原型设备
我们将这种更贴合实际的构造
展示给我们的朋友们看并征求他们的意见
我们询问他们哪些功能工作正常
从许多Toastie中选择一个
然后进行烤制这个任务完成得很好
那么哪些功能不能正常运行呢？
虽然我们原型开发花费了我们很大的力气
但是设备仍然不能真正连接和快速做出响应
对此我们可以做什么呢？
也许我们可以让Toaster
快速响应APP中的输入反之亦然
为此我们需要一步步地设置我们的原型开发计划
现在我想请比尔上台
为你们介绍如何做到这一点
谢谢马特乌斯 做得不错
大家好 我是比尔
我花费了几天的时间
来试验这个绝秘Apple硬件它确实很不错
现在我想向你们介绍我们的流程
为你们提供一点经验
让你们更好地设计自己的绝秘硬件或你们还没有问世的产品
在进行几次迭代之后我们对马特乌斯为我们
开发的设计已经比较满意
但是对于这些Keynote绘制的原型设备
它们的功能还很有限
我们可以切换各种状态进行模拟
但是还没有实现真正的交互功能
例如数字操控杆
我们不能上下扳动它而这是很重要的
因此我们回到前面的三个问题
并决定如何增强这些原型设备的真实功能
实现可交互性和连通让它们变得更好
哪些项目需要变得更真实在？
在硬件方面我们想要安装一个数字操控杆
我们将想要将Toaster的状态关联到APP
在APP方面我们想要允许朋友查看收件箱中的Toastie
选择Toastie进行烤制
我们希望虚拟这些功能
我们如何继续进行虚拟呢?
请不要担心服务器 烤箱界面
以及面包变成吐司面包的过程
在APP侧我们应该保持消除队列的完全封闭状态
而且也不需改变Toastie状态
我们将在设备上用图片来表示它们
我们不会在设备之间
无线传输和发送消息
我们将在哪里使用这些设备呢？
我们将会在厨房使用Toaster
APP可以在任何位置使用当你想吃东西时可能会使用它
也许在你起床后第一件事就是打开这个APP
我们应该问我们自己将下来最需要做的事情是什么？
马特乌斯说过他想要连接Toaster和APP
我们开始捣鼓一台真实的Toaster
为它装上微型控制器
也许会装上无线收发器和LED指示灯
让显示界面变得好看一些
也许这个办法行得通
但是我们并不会付出太多的精力来实现这个设计
因为这已经非常接近最终的真实设备
也许现在应该3D打印一个Toaster模型
使用激光切割机开始定制Toastie
说实话我们总是喜欢
找借口使用3D打印机和激光切割机
做这个幻灯片是有意思的事情
但是 这看上去 有一点本末倒置
那么是否可以使用一个虚拟现实Toaster？
这看起来很不错 趣味十足
但是Toaster虚拟控制技术还是五年以后的事情我们必须放弃它
事实上这三个例子都有相同之处
它们会让我们分心而偏离我们的当前任务
即设计良好的用户体验
到这里我们需要开始进行工程设计
我们的工程设计任务是改进我们的设计
让我们进行更深入的研究
这样当我们实际这样的设备时
我们就知道我们的做法是正确的
现在请大家思考
从原型设备的功能来看一台Toaster应该是什么样的？
它不是一个面包加热设备
而是一个联网状态机
我的意思是它是一个具有特定属性的物理对象
这些属性包括操控杆位置
是否有面包片 是否正在烤制信息等
我们需要知道这些属性
如何响应用户的输入
我们可以轻松地使用软件进行建模
我们将使用的keynote绘制的原型设备
和Toaster APP
我们将在Swift中实现它们
我说在Swift实现
并不是说编写一个完全可以运行功能丰富的Swift APP
目前我们仍然使用屏幕截图表示这些原型设备
并使用动画表示用户触摸操作
但是我们需要编写一些代码
实现一些比较复杂的功能
当然不一定必须使用Swift
也可以使用你喜欢的编程语言
你也可以使用具有更多交互功能的工具
但是在Apple我们将会使用Swift
让我们来定义想要实现的功能
这是一个Toast-a-Toastie流程
第一步要做的是从收件箱中取出一个Toastie
然后我们将Toastie发送给Toaster
第三我们想要烤制选定的Toastie
最后我们需要指示Toastie烤制完成
这是我们的新交互式app原型
我们已经完成的事情是将此流程转换为UI滚动视图
让我们的朋友能够轻松翻页浏览各条消息
在底部有一个UI滑条
可以利用它选择吐司面包片的颜色
我们还会每个吐司面包片添加一个手势识别器
让我们能够将将它拉入虚拟Toaster
并模拟这个过程
让我们来实际效果
我们启动收件箱
你可以看到当我们扫动时选择的Toastie数量增加
我们可以调整烤面包片颜色深度
然后我将要面包片
拉入虚拟Toaster将Toasting设置为true
启动一个动画显示烤制完成的Toastie
很好 我们转到Toaster
我们将为数字操控杆添加一个手势识别器
当你开始向下拉动时它就开始烤制
将Toasting设置为true启动计时器
我们还在底部增另一个分段控件
让我们能够轻松选择需要烤制的消息
而不需要连接到APP
最后动画将显示烤制完成的面包片
让我们来看一看
我们选择Toast将载入一个面包片
当你把操控杆拉到1位置时
你可以看这个动画
显示在LED屏幕上
然后显示烤制完成的面包片
这是一个重要的阶段
这种软件建模技术非常有用
我们经常在工作中使用它
你可以设想制作一个联网壁炉
然后使用HomeKit集成它
你可以使用你的投影仪或大屏幕电视机
设置壁炉的使用位置
然后模拟需要使用的控制功能
也许你在为Apple Watch开发地铁时表APP
但是你还没有APPle Watch
你可以在iPod显示界面上进行虚拟将iPod带到地铁站
在实际环境中使它
也许你在开发下一代无人机
你可以在iPhone上模拟硬件控制器
将它捆绑到纸质原型设备上
当你移动设备时可以传输回陀螺仪
和加速仪数据如同在真实硬件上一样
现在我们已经拥有交互式APP和交互式Toaster
现在我们需要发送数据
从APP中拾取Toastie将Toaster的物理状态发送至APP
那么最好的实现方法是什么？
对你来说最好的方法就是最简单和最快速的方法
我们不会设计一个新的网络API
我们在以后让其他人来做这个工作我们也无需担心效率
如果你在浏览器中进行原型测试
你可能会使用Web套接字
如果你已经完成无人机而且将手机连接到它
你可以使用O.S.C.传输陀螺仪数据
也许你有一个后台服务器
你可以使用HTTP请求
我知道你们有一些人以前可能从来没有进行过网络层编程
因此应该创造性地思考
你可以使用合适的服务
来观察两个设备之间发送和接收的消息
然后据此进行处理
也许你注意到当添加一张新照片到共享照片流时
因此我们将使用多点端到端连接
我们的网络看起来是这样的
我们有两部iPhone连接到一个iPad
我们将这个网络称为Toast Talk
我们使用多点连接
是因为它非常容易设置
它不需要服务器，
而且支持连接任意数量的设备
这是部分代码
我们将使用这种连接方式
因为我们的时间有限
我们想要创建一个会话
我们将这个网络命名为Toast Talk接收任何
输入数据并转换为字符串
我们选择设备使用简单易用的MCBrowser View Controller类
很容易设置 将名称传入构造函数
和会话之中
可以点击按钮或在APP启动时显示此名称
在连接之后 就可以忽略它了
我们应该发送和接收哪些消息？
APP原型需要向Toaster告知Toastie数量
和烤面包片颜色深度
当烤制开始和结束时
Toaster需要发送操控杆位置信息
只需要很少的代码就可以了
只需要将字符串转换为数据并发送给会话
这个例子显示如何发送操控杆位置信息
我们需要表明已经收到消息即操控杆位置
添加参数名称并传递参数值
这是一个随意格式但是快速而简单
我们通过这个参数传递接收消息
然后转换消息名称
将数据传输给相应的函数
这让我们能够在Toaster和APP之间实现可靠的通信
你可以看到当上下拉动数字操控杆时
也会反映在APP上
看上去很不错我们实现了这个流程
我们拥有交互式APP和Toaster
一切都很顺利
我们将它提供给朋友让他们试用
并听取他们的意见
好 ToastalService已经完成了
请开始体验吧 我们并没有进行大量的工程设计工作
让我们来看看反馈意见
哪些功能运行正常？显然我们可以选择收件箱中的消息
将它们发送至Toaster
这是一项基本功能
哪些功能不正常？
朋友们告诉我们有一点奇怪的是
当你在颜色滑动条上选择颜色时
Toaster并不能显示反馈信息
也许在下一轮原型测试迭代中
我们可以调整LED显示颜色
以反映接收到的数据
并且记住颜色
最后我想请杰夫上台
让他为我们进行总结 谢谢
谢谢比尔
感谢你们参加今天的讲座
让我来简单进行回顾
我们使用图片和动画设计原型设备
让我们很快能够看到Toaster的各种输入和输出
我们介绍了背后的技术
了解APP和设备如何配合工作
然后我们创建了一个简单的交互式联网原型
让我们可以尝试完整的端到端使用体验
在这个过程中我们了解Toaster的运行模式
我们不需要为Toaster设置烤制颜色深度
虽然这是大多数Toaster都具有的
我们需要在Toaster上设置一个数字显示屏
我们需要一个数字操控杆感应器以便将消息发回至APP
我们很快就弄清楚了这些事情
我们节省了大量时间和金钱
设想一下，如果我们要制造一台真正的Toaster，
在这个过程中我们可以获得很多不错的想法
所有这些都提醒我
进行原型开发的原因有两个：
首先是验证想法以节省开发APP功能
所需要的时间和金钱
其次是获得新的想法让产品使用体验更加完美
我们如何做到呢？
我们虚拟了一些功能
让用户使用这些功能并听取他们的意见
我们反复执行这个流程直到产品完善
你们应该执行这样的流程
如果你开发一个需要连接到APP的设备
在屏幕上虚拟它的功能
并在实际环境中试用
对于你的App应该使用图片进行虚拟并在环境中测试
对于二者之间的连接
应该使用所述的幕后技术或进行简单的模拟
你可以创建一个简单网络原型
如果你还没有可用的设备
尤其是我们还未发布的新产品你无需等待
你可以在屏幕上虚拟在实际环境中测试
这是一些相关的信息
你可以参加一些相关讲座
一个重要的讲座是明天举行的“使用动画进行设计”讲座
我的同事将在3:30举行这个讲座也是在这个房间
此讲座将会对你们有所帮助
谢谢大家