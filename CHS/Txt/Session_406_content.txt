UI Testing在Xcode
早上好
欢迎来到XcodeXcode的用户界面测试
我的名字是威尔·特纳
这位是布鲁克·柯兰翰
我们俩都一起在研发Xcode的开发工具
我们今天非常激动因为因为我们今天要和你们分享
一个在Xcode开发工具测试技术上的
很大的突破
就是用户界面的测试
通过用户界面的测试 您可以找到用户界面的一些元素,
与 他们互动 并验证并验证用户界面属性的状态 
除了用户界面测试 我们我们已经介绍了用户界面记录
这将允许 您为 您的项目
快速设定用户界面测试 
最后 我们已经更新了在Xcode的测试报告 
显示了通过和失败的和测试的结果 
以适应用户界面测试的新的数据
所以我想谈谈核心技术
对于用户界面测试 首先是 XC测试test 
其次是辅助功能 
所以XC测试test是Xcode的测试框架 
在它的里面  您创建测试用例的子类
您执行测试方法 并并用断言来验证
您期望的结果是正确的 
XCte测试st集成Xcode 这意味着 您可以
通过这个用户名完成编码、 测试 
和直接从 您的原始编码
测试的能力 和并直接就在那里看到结果 
您也通过Xcode Server得到连续整合
和Xcodebuild 创建
最后 XC测试test支持Swift和Objective-C
所以 您可以选择 您最适合的
母语编码语言
Xctest测试在Xcode 5里是
作为一个单元测试框架存在的 
在Xcode 6里 我们扩大了 支持的性能测试 
这让 您能捕捉到 您的编码中的回归 
并确保 继续
在每次发布时都有最佳表现 
现在的Xcode 7
我们已经介绍了您可以使用的用户界面测试的
的正确性和性能测试 
这就是XCtest 测试
现在让我们再来看一看在辅助功能 
辅助功能是在我们的平台上的
这给不启用的用户在我们的设备设备和所有其他用户接受
我们的应用上提供同样体验的
一种技术 
为了能够达到辅助功能  提供了丰富的关于用户界面的
语义数据的设定这种技术可用语音
来引导用户使用这个应用 
用户界面测试使用 和和辅助功能与用户界面工具包
和应用程序包的整合 所以 当 您使用这些框架中的控制
您会马上就能得到大量的免费的
可访问支持 
还提供应用程序接口来让 您可以
微调辅助功能的数据 
这里的的关键是使用用户界面测试 
您的测试将与应用程序进行
像普通用户一样的互动互动 
用户界面测试有几个要求
您应该需要了解 
首先是 取决于在操作系统中的新功能 
如果您用的是iOS 则需要iOS 9
如果您用X操作系统 则需要操作系统10和.11 
用户界面测试保护保护您的隐私 
这样做意味着 您需要启用iOS设备
才可以为开发和连接一个受信的运行主机Xcode 
在X操作系统上  您需要给一个特殊的Xcode
帮助程式许可 第一次运行用户界面测试时
会有提示 您这么做 
让我们来看看什么在 您的项目开始用户界面测试时
需要做些什么 
首先 有一个新的Xcode的目标类型 
传统来说上 单元测试是在Xcode中特定的目标类型 
现在用户界面测试也是目标类型 
我们还为 您介绍了一大套的新的应用程序接口
作为用户界面测试和用户界面记录 
这将使 您很快就可以开始了 
因此 Xcode测试目标支持用户界面测试的
特殊要求 
这包括执行 您正在测试的应用程序中的
一个单独的程序 
也处理隐私保护中使用
使用辅助功能的许可权 
这些目标都有Cocoa和CocoaTouch新的范本
而且这个的助手和都会将根据 您喜欢的方式
设定好开始 
有一个目标要测试用户界面测试包的设定
以确定 您正在测试的应用程序 
新的应用程序接口有三个重点类别 
首先是应用程序 
其次是元素 
第三是元素查询 
我们将稍后将对这些应用程序接口
进行一次深入的介绍 
用户界面记录让您与您的应用程序 掌上设备
掌上设备模拟器 或OS XMac 
进行互动 
当 您这样做时   生成必要的编码
重建这些相互作​​用 
您可以新建测试测试或扩展现有测试 
让我们来看看这是什么 
布鲁克 让我们看看一个快速演示 
谢谢 威尔 
所以 事不宜迟 
我今天的演示所使用的项目
是李斯特的应用 
这个例子项目
您可以从developer.apple.com下载
那么我们开始 现在现在我的目标配置
正是我想要的那样 但但我想指出的是
要测试的目标是李斯特应用 
这是一个我的测试将能够
与之互动的应用程序 
所以现在我得到了我的新的测试类别 
这里还有一个小测试方法方法和设定功能
这将会被使用
会在我的测试方法被使用之前启动应用程序 
我在这个类别下所添加的所有测试方法
都会这么做 
所以在让我们从李斯特A应用里PP里添加一个新的测试 
我要把鼠标移到方法中 按一下
按一下调试栏里的记录按钮 
现在 Xcode已经开始启动我的应用程序了 
启动好了 
李斯特应用允许我来管理一系列的清单 
因此可能人们做的最常见的事情是
从他们的名单中补充、删除项目 
所以我要点击这里 添加项目 
看起来我们在这食品杂货清单中
有很多东西 
那我添加饼干 
您可以看到 当我在打字时
源标题正在更新 
如果我按删除  也从文字栏里删除
我删除的东西 
下一件我要做的事
就是点击一下饼干项目
把 标记为完成 
我要做的另一件事是
从清单中删除项目 
所以我点击编辑 然后删除饼干 
删除确认 终于完成 
好 现在我有一个简单的测试从名单上
从名单上添加、移除项目 
所以我点击停止
让我们看看什么情况 
新增了饼干
并且正在移除  
我们完成了 
谢谢 当测试与用户界面元素进行互动的时候 
我们得到间接的验证这些用户界面元素的存在 
但我们没办法得到验证的是
事物更改应用程序的状态 
例如 当我们打开那个饼干按钮 
我们没有得到任何验证该按钮的状态
实际上改变了 
后来的测试中 当你点击
确认删除的按钮时 
我们知道删除确认按钮已经被点击了 
但运行测试无法验证
饼干那一行实际上被删除了 
所以要得到这些验证的话 
我需要添加一些断言 
首先我要做的是添加一个断言
说这里的饼干按钮实际上已经改变了 的状态 
要这样做的话 我会我会添加一个新的常数 
称这个为饼干按钮吧 
我将要改变这个测试
就要点击这个常数 
现在 要新增我的断言我需要一些状态 
一些元素属性的断言 
还有饼干按钮是XUI元素的
还有XUI元素有一个价值的属性 
我要做什么 我要我要在这里设定中断点 
并将测试运行到该点 
所以我们在这里有测试状态了
里面有添加饼干那一行 
还没有点击按钮 
所以我要在调试器那里 
列印出这个饼干按钮的数值 
--好 
我可以看到饼干按钮的的价值是
数位为零的字串 
下一步我要跨过那条线 
所以现在 点击了饼干按钮 
我又一次将列印出 的数值 现在我可以看到
该按钮的值是数字一的字串 
好 所以现在我有了我需要的一切资讯
要断言当 被点击时按钮的数值会变化 
所以我要用XCT
断言平衡assertequal来添加一个断言 
我会断言被点击后的数值
是一个数字为一的字串 
这个值现在是任何的类型 
所以我需要断言这是一个字串 
所以我使用字串 
并断言 被点击后是”“一”“ 
而且我断言 被点击前是
数字零的数位字串 
最后
当当删除按钮确认后
我就断言饼干那行消失 
我启用XCT
断言平衡assert equal并断言
这个按钮就不再存在了 
现在 如果我再运行这个测试我们我们应该看到同样的东西
但也通过所有的这些断言 
好 我现在刚刚添加了我的第一次测试 
交给  了 威尔 
<br/> 那相当厉害 
您可以看到布鲁克就像普通用户一样
非常容易地使用这个应用 
而且在很短的时间内就创建了一个测试 
他可以拓展那个测试用XCT 断言assert来
做了一些额外的验证就可以用最少小的功夫
给他的项目增加可靠性 
那是相当令人兴奋的 
所以 您可以看到我们新增的用户界面测试目标 
非常简单明了 就像就像我们所有其 他目标 
是有帮助和范本的 
使用记录 与应用程序互动 创建使用元素、
综合事件的编码
然后用XCT断言来验证 
让我们来看一看这个用户界面测试 
我之前提到过有三个类别 
xxx<br/><br/><br/>他们是XCUIApplication
XCUIElement 和
XCUIElementquery
他们是如何工作的？
让我们从一个非常简单 
比布鲁克的例子更简单的例子 
一行一行地演示给你们看
首先我先启动
应用对象 
这是一个我的应用代理 
然后我启动  
启动好了 
然后我用元素和查询去找添加按钮 
然后我点击综合事件 
最后 我加上了一个像布鲁克那样的断言
来确保用户界面在测试结束时
有了预期的状态 
所以我提到UIApplication应用程序
是一个为测试应用程序的代理 
的启动和关闭的
周期是独立的 
因为 您的测试是在一个单独的过程中运行 
您可以明确地控制应用程序什么时候启动
及和什么时候被终止 
当 您启动时 总是产生一个新的程序 
所以这就是为什么我们
不给 您完全的程序 因为 您有很多
需要 您操控的应用在运行 
但通过每次干净无干扰的地启动 
我们帮 您将 您的测试中
必须要处理的变数最小化 
所以 如果 已经运行 
再次启动将终止先前正在运行的实体 
应用也是寻找元素的开始 
让我们谈一谈元素 
XCUIElement元素
就像应用程序 是一个代理对象 
但这一次是作为测试应用中的
用户界面元素 
元素有几种类型 
有的类型是按钮 或或格子、 或视窗 等等 
它们有我们所说的数据的识别字
字串 这些是通过可访问的系统得到的
它们是识别字
例如 如果 您添加了一个按钮 
您要找这个按钮
键入识别字添加 
在您的应用程序层次结构中的元素 
应用程序就像一棵树的根 
如果 您回想以前学习计算机科学的日子 
您就会想起数据的树形结构 
李斯特应用中我们有一棵很简单的树形结构
在应用的顶部 我们有
我们有像导航栏和“添加”按钮 
杂货标签 
等等 
所以每一个都是在 您的测试中
您可以参考的一个元素 
这些都是查询用的
这个层次结构以及作为类型和识别字
都用来寻找 您的元素 
当 您使用元素时
在 您的测试中它 们必须是独一无二的 
所以是什么意思？
每一个元素都是由一个查询支持的 
查询必须变成一个单一的实体 
否则 当我们整合事件时
要点击按键 但很多个按钮
都符合条件 所以没办法确定 
我们就不知道 您要我们做什么了 
类似的地 如果 您问我们元素的属性 
我们不知道 您到底指的是哪一个？
也许一个也不是 
所以元素查询最重要的是
要缩小到只有一个符合的范围 
如果 他们没有做到这一点
当 您访问元素时就会就会出现失败的信息 
这有一个例外 
这是一个在XCUIElement元素上叫做
存在属性的应用程序接口 
这让 您测试元素存在的安全性 
您可以用这个像布鲁克那样验证
用户界面中被删除的元素
您也可以用来处理
可能在某些情况下有条件的
用户界面的案例 
例如 如果 您要保存一个档案到一个位置
另一个档案已存在这时会出现
确认单 
但那不会每次都出现 
只在是案件冲突的时候出现 
您可以用一个存在属性去检查这些情况 
元素就是事件整合应用程序接口时出现的​​ 
事件整合就是我们如何模拟用户和应用程序的互动 
并做到系统的最底层 所以当用户体验的时候
所有东西都经过了同样的通道 
整合事件的应用程序接口是有具体的平台的
但也有些例外 
我们有按钮点击 如在X操作系统中
相应的 在iOS中在iOS中就是按键敲击 
我们有类型文字 这在两个平台都是一样的
并且是字串文字 
XCUI元素查询Elementquery是用于指定元素的 
查询最终变成一系列的可访问的元素 
他们只能找到具有辅助功能的元素 
他们将在这一组中找到答案 
这意味着 您可以通过计数属性获得一些符合条件的答案 
您也可以通过下标和识别字
来指定不同的元素
或者使用索引里的应用程序接口的元素
我们稍后会讨论这个 
那么查询是如何工作呢？
我提到元素的层次结构 
这个层次结构的一方面是
如何查询 
另一方面是过滤 
过滤是集中一个组合并
并根据特定的范围条件减少那个组合里面的内容 
我们再次用李斯特的例子下面是我们如何表达
某些关系 首先是后代关系 
我将展示给你们看 
所有金色的格子都是它的​​后代孩子 
另一方面孩子孩子是更具限制性的关系 
这些元素都是直接在 您查询这些元素下面的 
所以 表格中的孩子们只是这些格子 
最后我们使用的关系是包含关系 
这个关系很有用特别是当
特别是对有些元素 如一些格子  他们没有很多
独特的数据 
但它们包含了独特的元素 
例如 第一单元包含食品标签 
过滤让我们采取像象这种类型的元素 
或识别字在之前的
在之前的过滤的基础上创建查询 
这样做的话我们可以
越过识别字直接看数值
或做部分匹配如“以您开头”
诸如此类 
我们在应用程序接口中结合关系和过滤
第一个是descendantsmatchingtype
后代匹配类型
您能想出那是什么 
在它的后代中寻找匹配的某一类型 
这是您将使用的最常见的查询 
比如我能找到在应用程序中
所有的按钮通过
通过descendentsmatchingtype后代匹配查询按钮 
类似的地 我可以找到表中的所有格子
我只要告诉表格
要找descendentsmatchingtype
后代匹配查询的格子 
或者另一个与功能表项目有关的例子 
这是非常常见的查询我们为每一种类型
都提供便利的应用程序接口 
descendentsmatchingtype
后代匹配查询按钮 就变成了按钮 
descendentsmatchingtype
后代匹配查询格子成为格子 等等
等等诸如此类的 
这些便利的应用程序接口能让您的测试变得非常有效
且准确 
Childrenmatchingtype
类型是过滤关系中的中的另一组合 
所以我们要区分
子孙关系间的不同 符合条件的子孙
而且只有特定的子孙关系是孩子关系 
所有的按钮都是Aapp按钮
如果我想找到孩子关系的按钮
我可以打开导航栏并说
并说说childrenmatchingtype孩子匹配类型按钮
这虽然不如查询那样常用 
但有时候用于区分的时候会很有用 
最后 包含类型 
这使我们能够找到描述 他们的后代的元素 
所以在我们有些格子里
格子是匿名的 
他们没有任何识别特征 
但它们确实包含着独特标签 
标签也被称为作为静态文字 
所以在这里我可以建立一个格子查询
去查找那些包含类型静态文字
且识别字是杂货的格子 
这将帮我找到第一个格子 
还有与该应用程序接口不同的属性 
那些是我们的三个结合了关系和过滤的
应用程序接口 
后代匹配类型 孩子匹配类型 
包含类型还有所有的
后代匹配类型的应用程序接口 
另一关于查询强大的的事情是
他们可以绑在一起 
所以我们可以采取一个查询的输出使它变成
使它变成下一个的输入 就像 您一样在Unix命令列里
把命令都连接在一起 
这是非常强大的 并且让 您建立
复杂的查询 而且
而且这是很准确又而明了的 
所以在这里有我们的应用
我只是想找到表中的标签 
我从应用程序开始 
然后我到了表格 
然后我寻找静态文字 然后就完成了 
我有这三个标签 
有时查询会自己结束 
您想得到查询的计数 可能断言的项目数量
项目数量是正确的 
但往往一个查询目标是要找到一个元素 
我们所有的元素都由有查询支持着 
从查询中得到一个元素我们提供了的几个
不同的选择 
第一个是下标 这使我们能够进行查询
然后使用识别字来下标 
那应该会出现杂货标签 的一个元素 
也可以用元素和指数这样做 
如果我有一套格子 也许也许一些表中的行
我想 
我可以再在一个一个地启用元素和指数 
如果我有一个查询我知道的唯一解决方法 
帽子是一个单一的东西 也许也许我只有一个导航栏
在我的应用程序中 我可以我可以使用元素属性
来创建一个受查询的支持新的元素 
我们什么时候评估查询？
所以 他们实际上不是真正的当您创造他们
在您创造它们的时候的评估 
它们是按需评估或者按他们的需要 
这意味着只有当 您整合事件或读取属性值的时候
才会对一个元素查询进行评估 
您可以创建元素但在 您使用 之前 
该查询都不会被评估 
类似的地 如果 您直接创建一个查询
当 您得到一些匹配或如果您调用一个
应用程序接口而得出所有的匹配 
则 必须是在这一点上评估
用户界面更改时我们将重新评估查询 
所以 您总是使用着用应用中最新的数据
而不是十秒前的数据
或2分钟前的数据 视 您的测试长度而定
您可以思考一下查询
查询和元素类似于网址 
他们是有一个网址  您可以创建一个网址
但您不能立即获取资源 
直到 您真正去创建您的网址请求
或实际网址得到解决 
即使这样的网址是无效的 
只要没到那个点上 都不会有错误提示
类似的 查询和元素  它们只是
在测试中的应用可访问的元素的规格 
所以创建他们
不到您要使用它们的时候不会有任何变化
等 您要使用时它们才会做出反应 
所以这就是应用程序接口 
这三个类别：应用
是启动 您的应用
元素像应用程序但是元素的在您的应用程序中的
中的一个代理；最后是查询 
是用更复杂的方法指定元素 
所以现在我想我想讲一下
关于辅助功能和用户界面测试 
我之前提到过
辅助功能数据使用户界面测试成为可能 
所以这是不难看出辅助功能数据
的质量如何将影响 您的测试 
事实上 辅助功能数据质量越好
您就越更容易写应用程序的测试
随着时间的推移 这些测试也就越更可靠 
所以当 您提高辅助功能
您在您的应用程序中
就得到了双倍的好处 
您不仅更容易为 您自己测试
而且也为我们的不启用的用户
体验带来了提升高 
我建议您在用户界面测试和辅助功能工作的时候
要记住这一点 
有时需要做一些调试 
有时一个元素可能不可访问 即使 您使用记录功能
也不能显示 
那可能是因为自定义视图子类
可能默认无法访问 
或者它实际上不是一个视图 
而是一个在低层图形子系统的图形对象
如涂层之类的 
在其 他情况下 元素是可见的
但具有较差的辅助功能数据 
我在看的所有这些包含查询的格子
如果这些格子本身有更好的辅助功能数据
部分可能已经消失了 
当这情况出现时 我想向您指出几点 
第一个是用户界面记录
因为用户界面记录将向给 您最直观地的展示
测试系统是如何看待元素的 
但除了那之外 在我们的平台上还有辅助功能检查员 
他们会让 您看到的在应用程序中的
原始辅助功能数据 
当 您需要改进数据 
您第一步应该要看界面生成器 
界面生成器有很好的辅助功能检查员
让 您可以启用或禁用辅助功能 
为可访问属性设定值 
并配置特征  这些特征这些特征对元素是如何表达的
作为用户界面测试的一种类型将产生有直接的影响 
如果 您是用不能访问界面生成器的元素
您还可以使用应用程序接口 
您可以在NS可达
NSAccessibility里用应用程序接口
UIAccessibility可达直接控制元素的
辅助功能 
所以请记住上面的那点让我们再看一个演示 
这一次布鲁克要带我们
通过更复杂的测试再加上一点
再加上一点辅助功能调试 
-布鲁克？ -谢谢 威尔 
所以在上一个演示中我们看到添加一个测试
可以添加和删除清单中的项目 
我在这里 我会在这个区域的用户界面
添加更多一些测试 
首先 我要添加一个测试
让您可以在相同的清单清单新增多个项目 
这多个项目是有相同的名称清单 
所以我要在这里复制上次测试的
这个编码 
我叫这个为新的测试测试 添加到饼干 
我现在把编码粘贴好了 
好
现在我有一个测试
要贴在杂货标签上 
接下来将要添加的新的饼干到项目清单里 
然后就要点击在那个项目中的饼干按钮
验证 实际上是
连接上的状态 
所以要加上第二个项目在这里项目我就也
我也在这里复制这个编码 
然后看看第二个新的按钮也连接上了吗 
现在我要复制这一段 
所以让我们运行这个测试看看这是如何工作的 
现在让我添加第一个 
第二个 
啊 断言失败了 
在这一行中说 我们得到的的
的饼干按钮的数值在在两二次左右 
我们的实际上断言实际上是失败的 
看来是因为多相匹配而失败的 
我想我知道这里发生了什么 
饼干按钮常数是指定的 
这个只是寻找表格上所有的按钮 
然后找到一个所谓的饼干按钮 
通过这一点 在测试中 
有两2个按钮被称为饼干 
会找它们两个但是
但只返回一个数值
因为有两个匹配的结果 
我现在知道了是因为是因为看到了测试运行 
通常 您不会是看到 您的测试运行 
所以我们认为我们应该为 您提供一个
可以看到测试运行的方法
我们已经在Xcode的试验报告中添加了这个资讯 
所以如果我去报告导航栏和点击
并点击最近的测试报告 
您可以看到测试添加到了饼干测试 
如果我展开这个条目  您您可以看到在测试过程中发生的
所有的活动 
在这里我看到了这最后的一条的饼干按钮项目 
这是我们要找的失败 多相匹配 
还有一个快速查找按钮在这里 我可以在这里看
将显示应用程序发生时的
确切的状态 
正如我们所知道的原因一样
有两排都叫做饼干 
其中一个被选中另外一个没被选中 
如果我想要看到完整的断言的话
<br/> 我可以去查看日志
在这里我可以展开测试日志 
在这里我们可以看到完整的失败的断言
展示辅助功能等级的的两个按钮 
在这里我可以看到是的 有一个按钮
没有被选中另一个被选中了 
正如我所预计的一样 
让我们返回去去把那个问题解决好 
最简单的解决这个问题的方法是
再次使用记录 
我会在这个断言失败前设定一个中断点
然后在那个点那里运行测试 
好的 所以现在我得到了我想要获得的
那个为被选中的按钮的数值 
我要做的就是要点击记录 
点击按钮
停止记录 
现在我有办法关联到那个按钮了 
我要用常数用表来把这个给清除一下 
这个就叫做饼干按钮2 
新的测试出现了 
现在来解决测试问题我要用那个新的参考
改变以下的每一个三行 
当我再次运行测试  就应该是成功的了 
好！
好的 
现在我有一个测试可以从清单添加和删除项目
另一个测试可在同一个清单里添加两2个项目的测试
并验证它们都存在 
现在我要建立一个测试
这将清单中的所有项目都删除 
我又一次使用记录 
点击杂货标签的编辑 然后删除
测试行中的苹果那行 
好吧？点击停止录制 
这样的测试差不多就是我想要的 
但我想做的是 我想让我的测试与对应用的
数据无关 
我想把所有的项目删除 但我不想要它们
指向它们的标签 
因为那会变得很啰嗦 
所以首先我要做的是
您看到这些标记在这里 
这些标记提供了获得相同的用户界面元素的多种途径 
在这种情况下 首先删除苹果按钮 
我可以把这个叫做
桌面按钮table.button删除苹果 
我可以更具体地的
在苹果的格子里
说这是删除苹果按钮
我就采用这个
双击 把它转换为文字 
所以现在
我有了两2排
像以前获得一样的元素那样 
我想做的是通过索引获取格子 
我会加一个常数叫let格 表格 
并设定这个
与桌面单元table.cells元素索引相同 
因为自从苹果是索引1我就用那个 
我只需把那个常数
替换成这个关联
好的 我几乎完成了 
下一部分我需要改变的是的是如何把
按钮从格子里弄出来 因为其他行不
不会有删除苹果的按钮 
他们会有删除橙子或删除面包的按钮 
我只需要找到那个标签
开头写着删除这个词 
我需要使用属性
所以在这里
我用匹配属性
找到了标签
开头为删除的按钮 
所以 我最后要改变的是 
我想补充一个像之前一样的断言 
我想验证一下一下在我们删除后
那格子消失了没 
我将使用XCTAssertEqual断言匹配 
并断言这些格子存在属性返回是false否的
当我们点击了确认删除按钮 
我要现在要运行测试 
苹果那行已被删除
但断言是失败的 
我可能知道是怎么回事 
要显示是怎么回事现在我要将使用调试器 
我会在这里设置一个断点并再次运行测试 
运行到相同的断点 
好 
在调试器中 我现在我现在启用格子的调试说明 
调试说明有大量的信息
是关于有关如何格子是如何运作的 
因此 在我启动它的时候时候可以看到 
这个格子第一个去应用程序里找
然后它再到找到表格里找 
然后到元素里去寻找 
然后到所有元素和索引里去找 
我可以看到 它实际上找到橙子那行 
它看起来可能是
当我们调用这个格子的的存在属性时 
它实际上是自己重新启动 
虽然我们除去了苹果那排
在索引里又有了新的格子 
所以总的来说是没问题的 
这只是意味着我需要另外的方法来
来找出我们是否已经删除了那行 
所以我要添加一个断言 
断言格子的数量
到达这一点 
所以 我要增加一个新的属性属性称为“计数”
我把这个设置为等于表中格子的计数 
然后 断言这等于计数减1 
现在 最后一件事我将会说这个是一个
一个删除所有项目的测试 
把它改为添加循环
循环 然后
只要表格里还有一个格子
就一遍又一遍的不停循环 
让我们来运行一下 
好的它移除了苹果和桔子橘子那排 
好 
最后一件事就是添加一个测试
来使用在编辑界面看到的颜色那行 
我再一次使用记录器 
我将点击杂货标签和编辑 
现在
这里的UI颜色
让我可以改变列表的颜色 
它现在看起来是绿色的 
所以我会尝试改变它红色或者蓝色怎么样？
好了 所以当我点击这些按钮 看起来
看起来它没有记录我想要的 
它看起来像是它记录了一个
所谓的静态文本颜色您看在这里 
所以 我认为可能是什么出了问题就是
就是这些UI元素可能是对辅助功能
不可见 
所以 我要停止记录 
我可以使用辅助检查
来告诉我是怎么回事 
右键单击Xcode然后去开启的开发工具 
辅助检查 
而辅助检查提供了大量的信息 
但我只想使用快捷方式 命令S7 
这将突出鼠标光标下面的UI元素 
如果我把鼠标光标
放在面包这个词这里 按命令F7 
它就突出面包 
如果我把它放在面包删除按钮这里 
您可以看到 它突出了这一点 
现在 让我们看看如果我把鼠标光标
放在这个黄色按钮会发生什么 
啊哈！它突出了整排 
所以这几乎证实了
这个UI元素根本对辅助功能是不可见的 
幸运的是 我可以用故事板
改变这种情况 解决这个问题 
我现在打开故​​事板 
在我的故事板这里我有同样的按钮
如果我打开检查 我可以看到
这些按钮实际上有一类的可点击的颜色视图 
我熟悉这个类别 
我知道它实际上不是用户界面按钮 
这是自定义视图如果我再往下辅助检查的部分
我可以看到它是没有被启用 
我已经过了一遍并且并且添加了标签 
为了解决这个问题  我需要做的我需要做的是选择所有的按钮 
然后我会启用辅助功能的选框 
由于它他们像按钮 
我纠结要不要给它们按钮的特性 
好吧？
现在让我们再来运行这个应用程序 
而现在我要再次记录这个测试 
点击杂货和编辑 
然后红色  然后橙色 
黄、 绿、 蓝和灰 
好  它实际上记录所有这些 
我会停止记录让我们来运行它看看
它是否可以回放 
好  我已经修复了访问我的应用程序 
而且我也让它变得更容易测试 
如果我要完成这一测试 
我可能会增加一些断言验证
这些按钮的变化的状态 
现在 我将舞台还给威尔 
所以这所以这真的挺棒 
尤其是使它变得多么的简易
以前配音用户用户没能那么幸运地
做到这些  现在只是现在只是在界面生成器做了
几个简单的变化布鲁克能够使
能够使它变得可访问并和UI可测 
因此 在演示中 更先进的UI测试 
您看到在一些情况下它如何处理冲突
和一些个查询  以及如何以及如何纠正这些查询 
以及如何调试它 如何建立循环
并对其进行验证  以及如何还有如何使用存在的属性
并且还强调如何重新评估查询 
他们用标准创造了它们 
这标准就是确定怎样重新评估 
我们使用索引1一的元素 
这里要指出的是  苹果苹果标签在第一时间通过UI改变后 
UI改变后它就马上消失了 
现在被指向橘子标签橘子标签 然后最后 
如何提高辅助功能 
这样做的回报是非常棒的 
布鲁克也给你们看了一眼测试报告 
我们在Xcode 7做了一些努力来
检修它他们的UI测试 
概括总括来说就是  测试报告测试报告就是所有的运行测试
您看到的结果 
它显示了通过或失败失败 失败消息 
性能测试的
性能指标都显示在报告里 
您在XCode和Xcode Server里得到相同的用户界面 
这是一个一致的经验
不管您是否正在寻找整合或
您在本地计算机刚刚做的运行 
在Xcode Server您也能获得每个设备的结果 
因为您可以有设备能可以同时
整合多种设备 
对UI测试的一点补充一点是 
我们在UI测试中收集了多余的数据 
这包括屏幕截图 
您看到了它是如何帮助布鲁克调试他的查询冲突
通过在查询失败时拿出屏幕截图 
此外 我们还整理了应用程序接口调用进入这些嵌套活动
来帮助您了解应用程序接口调用是如何工作的 
让我们一起来看看这样的一个例子 
这不在名单草案里 
它是一个不同的应用程序 
但我要告诉您在嵌套的活动
几个步骤是如何分解的 
这个例子我们我们输入到测试现场
然后所以您就可以调用高层次的应用程序接口型式测试 
但在内部里它已经分解了 
在第一步我们等待应用程序空闲下来 
我们实际上观察测试的应用程序的
主运行循环 
因为我们不希望在它忙于处理的时候 
发送事件给它 
我们希望它是尽可能快速响应的 
一旦它的闲置 我们就从辅助功能那捕捉到我们的数据
然后我们启动查询 
确保它的匹配正好是一个 
下一步  我们综合我们综合真实事件
<br/> 在该区域插入文本 
最后 我们在应用程序空闲之后再等待多一点的时间 
因为 再一次 我们要我们要以可靠的和确定的方式
掌控 
快相是在关键的步骤
截屏用的 
您可以在这里看到我输入的文本后的状态 
确保一切都和您预计的样子一样 
因此 UI测试显然是那种您可以为你您的应用程序做的
巨大的扩展 
所以您在想什么时候用它呢 对吗？
我们已经有单元测试了 
UI测试是一种补充测试测试 而不是替代 
您应该对您的模拟的目标继续使用单位测试 
和您的控制器逻辑 
因为单元测试将更能精确查明在您的代码中
出现的故障 
UI测试可以让您覆盖更广泛的功能范围
但跟踪故障
却更能会比较困难 
这是在您的项目的单元测试之间和UI测试之间 
寻找合适的平衡 
适合UI测试的人选 
嗯 想想您的应用程序 
您有用户客户 您展示给他们看 
您很少能展示一系列的演示给他们的 
您给他们过一遍后说“好 
这是您要怎么做” “ 
一系列的演示是UI测试的很好的候选人 
经过每日每夜的构建之后
您会知道这些演示非常有用 
第二 除此之外 常见的工作流程 
如果它是一个编辑应用程序 那么这个应用程序是做什么用的
您如何编辑文档 
任何自定义视图 
最后基于文档的工作流程工作流程 打开和保存 
这些都是可以自动化的很好的事情 
它他们如果进行单元测试的话的话会很难捕捉 
如果它他们出错了会对用户产生巨大的影响 
因此 UI测试 
在新的XCode 7中 
开启打开了您如何测试您的应用程序的
的各种可能性 
在UI测试您您查找并和与用户体验元素互动
互动和您整合事件
驱使它他们  就是些就是些普通用户会做的事情 
您可以验证的用户界面属性和状态 
和UI记录让您超快速地创建这些测试 
超级简单 
最后 我们已经彻底改革了了测试报告
让您能更好地了解您的测试是如何工作的
并收集更多关于它他们的数据 
所以这就是UI测试 
那么关于更多的信息我们已经上传到XCtest 
XC测试上了 
您可以在通过Xcode和我们的网站中得到它 
辅助功能也有很好的的文件 
我建议你们去看看 
开发者论坛是提出问题与交流技巧和与其他
您如何使用方法的好地方 
我们的宣传员传道斯特凡·莱斯是一个可以帮您开始使用的
很好的联系人 
这里也有一些相关教程如果您稍后要观看的话
可以观看昨天早上的关于关于辅助功能的教程 
如果想的话也可在您的午餐时间观看
持续整合、代码覆盖率 新技术
在Xcode Server上您可以在看明天下午观看 
希望每一个人都有很大收获 