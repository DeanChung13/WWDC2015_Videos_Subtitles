用於WatchKit的佈局和動畫技術
大家好
歡迎參加會議216
“用於WatchKit的佈局和動畫技術”
我叫米格爾·桑切斯 我是一名WatchKit工程師
稍後爲你做演講的 是我的同事湯姆·威特金
今天的日程 是給你們一個WatchKit
佈局基本原則的概述
我會仔細講一講如何使用組來設置
複雜的佈局 之後湯姆就會上來 
給你們講一講Watch OS 1中現有的動畫技術 
以及我們在Watch OS 2中引入的
新的API
所有的WatchKit開發者 還沒有看過平臺 但是正在
學習瞭解佈局的人羣
當然還有你們中的那些老手 全部都是
本次會議的
目標聽衆
我們就從佈局基本原則開始吧
WatchKit佈局模型 
要我說 自從WatchKit OS 1之後 
佈局模型就沒有變過
WatchKit和Watch OS是不一樣的
如果你之前沒有用過 它和你已經熟悉的
UIKit和AppKit模型是不一樣的
不同之處在於 在WatchKit中我們使用了一種
基於流的佈局 我這樣說的意思是 
你之前可能已經看過這個動畫了 
在 InterfaceBuilder中
你有WatchKit對象庫
和目錄 
你可以把它們拖動到你的控制器上
當你拖動它們的時候 它們就會落到
流上下個可用的槽上
流一開始是縱向的
這樣你就有了第二個元素
它會落到它的置位槽上 當然了 
如果你引入一個分組對象 並且告訴它使用水平佈局
的話 你就可以添加一個水平流
作爲一名WatchKit應用程序的程序員 
你寫的不是對象創建代碼 這一點很重要
你所有的UI創建 都發生在故事板
和InterfaceBuilder中
我們不提供API 也不會分配你的
典型WatchKit對象
這並不是說 你不能對你的佈局層級 
對齊 尺寸改變 當然還有你在這裏看到的
動畫 進行微調
我們來詳細分開講一下
我們先來講一講對齊和改變尺寸
你所有的WatchKit對象實例 
都是WKInterfaceObject
的子類
這些都有對齊設置 
尺寸改變調整的屬性
說到對齊 
我們說的是包含對象內部的對齊
這是水平對齊和縱向對齊 
可以是左對齊 居中對齊或者右對齊
對於尺寸改變來說 你會告訴我們 在對你的
對象進行橫向 縱向尺寸的改變 
可以是固定的 相對的或者自動調整 其規則是什麼
在Watch OS 2中 自從Watch OS 1之後 
Interface Builder中就可以用
這些屬性了但在Watch OS 2中 
我們通過API 提供了更多屬性
我們想讓你更多地控制自己的代碼 並且能讓它們
“動起來” 待會兒你會看到
通過新的枚舉類型 我們有了一個新的API 
可以設置水平 縱向對齊
它對你百依百順
這裏有一個WK藍色框 
可以進行左上角對齊 
居中對齊 右下角對齊 
至於改變尺寸API 
我們已經提到過了橫向 縱向尺寸的改變
對於Watch OS 2來說 我們進一步提供了相對寬度 
自動調整API
同樣地 它讓你能更多地控制自己的代碼了
用圖表表示的話 它看起來是這樣的：
這是一個固定寬度和高度的
藍方格 
再說一次 
已經用過的話 
你就應該知道 
我們對零值的解釋已經發生了變化
在Watch OS1中 如果你在代碼中
給我們一個零值 
我們會把它恢復爲故事板零值但是在Watch OS 2中 
我們會把零解釋爲絕對零值
這一點不要忘了
假如說你想把矩形的尺寸調整爲包含元素
寬度的75%
你就可以使用剛纔提到的相對寬度 設一個0.75的值 
然後你就得到了寬度的四分之三
如果你想把它的高度設爲包含元素高度的一半 
你也可以這樣做
這些API中的第二個參數是一個調整值 
這個值可以是正的或者負的 當你第一次調整尺寸後 
這個值就會生效
在這個例子中 我給寬度增加30 
給高度減去30 那麼我就得到了下面這個
最後一點 自動調整和自動調整高度 
它們的功能和你預期的應該是一樣的
如你所知 根據你的矩形中的內容不同 
我們會恰當地改變尺寸
我們接着來講講組元素
你對佈局進行微調  實際上就是在這裏進行的
WKInterfaceGroup 首先把它當成一個
沒有默認內容的容器
它的內容可以是我稍後舉例說明的內容 
但是一開始 它就只是一個容器
它是一件可以佈置你所有的元素的工具
這裏 
你可以選擇是要一個水平佈局還是要一個縱向佈局
你在這裏還可以開始引入嵌套
你在這裏也可以對我們剛剛看到的包含元素
的對齊 尺寸進行調整
就像我們剛剛在第一組幻燈片中看到的那樣 
我現在要轉移到藍色上面
你可以在Interface Builder上
放置你的界面 得到了縱向佈局
引入一個組
然後在InterfaceBuilder中說明
你想要水平佈局 你就可以開始在那裏放置
你的對象了
定義好你的包含層級後 
你就可以在你的組內
定義插入物 空格等
事情
你可以在這裏定義左插入物
這些都是點值
左插入物 底部插入物 頂部插入物 右插入物以及
右邊 當然還有讓你的元素彼此分割 分離
開來的空格
對了 別忘了你的頂層容器對象
也是一個組
你可以在那裏設置插入物 
空格
你的組內有幾個元素 我們就使用幾個空格
這裏 你的組內的三個頂層元素
那就來十個空格
那麼一旦你開始用 一旦你開始用嵌套 
你就可以實現複雜的佈局
這裏有一個簡單的例子
如果你想讓這兩個正方形堆疊在一起 
然後右邊跟着兩個正方形 
那麼你可以先通過縱向佈局使用一個組
然後你再通過水平佈局使用另外一個組 
接着你再用第三個組把這兩個組包裹在裏面 
這樣 你就可以實現這兩個元素的
水平佈局
你的組內默認是沒有內容的
所以它們是透明的 你只能看到你的正方形
我們再來看個例子 這樣可以更具體 
我會在會議的這一部分介紹這個例子 
之後湯姆就會開始製成動畫
我們這裏有WKRecipes
這是一個簡單的食譜查看器
它會把你的食譜列出來
魚肉卷 匹薩 烤翅
你可以看到你的各種食譜的原料列表 
你可以看到每個食譜能夠做出
幾份菜
湯姆在動畫那裏 還會再講一下
其他畫面
不過我們現在要看的 是這三個元素的
靜態佈局
我們該怎麼辦呢？
我們看到的第一個畫面是一個食譜表
在WatchKit中 你有一個表控制器 你可以用它來
對你的行進行配置 但是你需要告訴我們
各個行的樣子是什麼
它的結構是什麼？
因此我們在這裏需要一張圖片和一個標籤
我們現在有了一個水平佈局 
它會自動告訴你 
這是一個水平佈局的組
這樣你就定義好了包含層次 
現在你要對你的空格進行定義
你的左插入物 
底部插入物 
頂部插入物以及空格都搞定了
對齊也沒問題了
對吧？你的圖片是垂直居中對齊 
但是它是左對齊了它指向的下個槽
標籤也是縱向對齊 
左對齊
注意它是在對應的槽中左對齊 
是的 因爲前面有一張圖片 所以就在它旁邊
我們的圖片是方形的
資源
每一邊都是30個點的固定尺寸
標籤當然就是自動調整
從表格行我們可以看出 
我們可以使用組
來水平調整尺寸 然後我們就可以微調對齊 
設置一些空格
現在我們再來看看原料控制器
你們中可能有人注意到 這裏有五種辣椒醬 
不管單位是什麼 哪種煎玉米卷的食譜也用不了
這麼多的辣椒醬 但這不是你關注的重點
你應該注意 
雖然我們有了表佈局 
有了行 
我們現在又有了圓形元素
我們應該怎樣實現？
水平佈局還是一樣的
我們有一個組
當然了 我們有標籤 
不過左上方的那個紅色圓圈是什麼？
我剛纔已經說過了 我們可以嵌套組
所以我們在這裏用一個組
現在我們接着移動 
移動到組的背景那裏
組沒有默認內容 但是它們可以有背景
背景可以是顏色或者圖片
我們可以在這個組裏選擇圖片 
然後選擇繪製背景的半徑
這樣我們就給設置了一個帶有彩色背景的組 
原理圖是藍色的 實例是紅色的 
半徑是8 你就得到了一個漂亮的藍色圓圈
有了組之後 你就可以在裏面嵌套標籤 
標籤在組內是居中的
現在你有了水平居中和垂直居中 
這樣你就能看到概念的構造 
我們說的就是這些概念
再說一遍 我有點囉嗦 請原諒我 
這是模型
現在你可以定義 微調你的左插入物 
頂部 底部
和空格
記住 如果組是嵌套的 
那麼你可以使用嵌套來
實現複雜的佈局 
你還可以在組內使用背景 
不管是顏色 還是圖片
最後 我們有份數控制器 
數字已經高亮顯示了 
是個圓圈 高亮顯示了份數 
對於你的食譜來說 這個例子中是四份
你們中有人會想了 
這是個圓形佈局
這是怎麼實現的？
你剛剛說的是
格狀流佈局
我們有十二個圈 
一個十二個對象的圓形圖案 
但是如果我們仔細看一下 
這裏實際上只有三個頂層組
這是第一個組 
第二個組 
第三個組
我們隨後在這些組內
使用了更多嵌套
我們來看看中間的組
抱歉 我來講講
頂層組那裏 我們的組對齊了
舉例來說 
頂層組是水平居中對齊 
固定尺寸
中間的這個是自動調整 
佔去了容器的整個寬度
第二個組內有更多的組 對吧？
一個組是縱向佈局
一個組是水平佈局 
最後 第三個組又是
水平佈局
如果我們仔細看一下各個組 
這些組都是由更多的小組構成的
一旦我們有了這層定義 
我們就可以說明對齊 說明每個圓圈的
精確對齊方式
現在你可以清楚地看到 
這個圈是水平向右對齊 
頂部垂直對齊
這個圈你就可以左對齊 
居中對齊
另一個圈就可以右下對齊 對吧？
現在你知道了 格狀流佈局真的很強大 
讓你實現想要的東西 
這裏的整個圓圈 我們遵循的
也是相同的模式
所以要實現複雜的佈局 
組嵌套是關鍵
現在我給了你們繩子 
但是我得警告你們 
別把自己吊死了
組有可能會被濫用 不是嗎？
你要記住這點
如果你試着嵌套所有的事情 
你就是在走極端
所以要記住這點
我不能給出一個精確的數字
這得看你的背景是什麼 
你的佈局運行的怎樣 
但是不要忘了這些事
演示開始之前 
我說過我們不會給你提供API 
讓你們直接創建元素 破壞元素
這些都是在故事板
和Interface Builder
中完成的
因此你在InterfaceBuilder中
創建的任何東西都是被實例化的
創建好了
當你實例化你的某個控制器時 
你就實例化了裏面的全部元素
可以隱藏某些元素
某些元素你可以有這種屬性 
但是 即使這些元素是隱藏的 
你們還是會...我們還會創建它們
所以你還是需要承擔
創建成本
你可能節省佈局成本 
因爲我們不會進行佈局 
但是擋不住創建
當你往控制器內添加一批對象時 
不要忘了這一點 好嗎？
記住 即使在那個特定的時間 
它們是不可見的 它們也還是被創建了出來
最後 
就像我向你們展示的組 組的背景圖片 
記住
在你的Apple Watch上 
這些圖片是有轉換成本的
對於Watch OS 1 app來說 
插件是運行在手機上的 
圖片需要...我們需要把這些圖片
弄到你的Watch上 對吧？
你的用戶每次使用你的界面都是這樣
記住這一點
我們有圖像緩存API 
你可以告訴我們把某組特定的圖像移過去 
但它們還是必須通過無線傳到你的Watch上
在Watch OS 2上 這變得不那麼相關了
因爲插件是運行在你的Watch上 
但是 你還是需要安裝app
你還是需要安裝
一系列資源
從安裝角度來說 你的用戶
還是會有轉換成本
所以要記住 
使用你的圖片的合適尺寸
如果你給我們一幅圖片 然後告訴我們在屏幕上
以某個尺寸顯示出來 我們就會調整它的大小
但是這樣做 你就給我們增加了處理週期 
給Watch上的WatchKit
增加了處理週期 對吧？
所以你可以正確調整你的圖像的尺寸大小 
要麼在手機上 要麼在你的服務器上 如果
這些圖像碰巧是動態圖像 就會對你的
UI渲染產生影響
最後 如果你有一些圖像
需要調整大小 
比如說 按鈕
你就可以用 你並不需要多個尺寸的圖像
你可以使用圖像瘦身
你的資源目錄 Interface Builder中
有這個UI 你可以對你的圖像進行瘦身 
告訴我們它們的尺寸發生了什麼改變 
我們就會把事情做好
你就可以給我們一組特定的圖像 
那麼你的UI中不同的尺寸
也就適用了
會議的靜態部分就是這些 
現在我想邀請湯姆上來 
給這個模型增加動態元素
太棒了
大家好我是湯姆 
我也來自WatchKit團隊
我們會討論下動畫 把動畫引入你在
Watch OS 2現有的app
以及你的新app之中
我們先從Watch OS 1現有的一些
動畫類型開始說起
表格是很靈活的
表格中的特定的更新已經做成了動畫
如果你插入行 
如果你刪除行 
如果你在某個行中更新內容 
它們真的會動 
我們都會談談
我們所有的例子都是在我們的
食譜app這個背景中發生的
讓我們從食譜列表開始
如果我們能夠對列表進行排序 那就太棒了 
或者依據我們指定的等級進行排序 
或者依據字母表進行排序
我們排序的時候 列表是如何排序的 
這點並不太清晰
如果我們插入行 然後看到列表是如何排序的 
然後過了幾秒鐘 從UI中除去 
如果是這樣的話 那就太棒了
我們怎麼做？
很簡單
我們有一張表
我們對插入行 插入索引進行調用 
我們就插入了一行狀態類型
然後我們到行控制器中 更新行上的文字 
然後我們設置一個定時器 設置過幾秒後 
移走行 這樣就在這裏
實現了這種方式
因此 插入行 刪除行真的能夠
增加你的界面的靈活性
需要指出的一點是 你能插入 刪除
任何類型的行
比如說 我們這裏有一個食譜列表 
都是同一類型單元 
但是我們現在插入了一個
類型截然不同的行
再說一遍 有了它 你就有了動態十足的內容
就在你的界面內
我還想指出的是 如果你想更新表 
而不是製作動畫 我們有兩個API 
如果你們已經用過了WatchKit
或者Watch OS 1 那麼你們應該知道了
接着來看行裏的內容 
我們可以點擊看到
食譜的詳細視圖
我們也有一個描述
考慮到Apple Watch的尺寸 
考慮到描述的長度 
我們可能不想在那裏一直呈現
完整的描述
因此我們把描述放到了一個表的行中 
在那裏顯示有刪節的版本
如果你點擊那個行 
它就會就地展開 展示完整的
描述 這很棒
真的很漂亮 
動畫真的很漂亮 
並且它能給你提供你想要的信息 
分毫不差
我們是怎樣實現的？
我要回到我們的藍盒那裏
這是我們的表的單元
單元內 我們有幾個標籤
我們有短標籤 這是描述的
刪節版本
我們還有一個標籤 上面寫着“點擊顯示更多信息”
當然 我們還有第三個標籤
這個標籤是完整的描述
所以一開始 
我們的單元隱藏了完整描述
標籤 我們所做的 就是用戶點擊單元 
我們就把它顛倒過來
我們會取消隱藏完整描述標籤 
我們會把其它的隱藏起來 
這樣 就可以在
WatchKit中播放動畫
就是這麼簡單
再說一遍 這是代碼
就是這麼短短几行代碼 
加在你的應用程序內 
就是一次奇妙的經歷
行又重新加載 
不管在高度上 它們的內容發生了什麼改變
如果你重新加載某個行 但是高度不變 
那就沒有動畫
要實現這個 
你的行高就得是自動調整 
因爲 如果它們的高度是固定 
行就不會真的發生變化
現在我們回到我們的食譜列表 
看一個不同類型的動畫
回到了我們的單元中 
我要喚起這些箭頭
就像它展示的這樣 如果我們能夠增加某種...
讓箭頭旋轉起來 比如說 
那就太棒了
我們可以在一個動態圖像中實現這個
動態圖像功能很強大 
有了它們 
你就可以在給定的時間內 循環一系列的圖像
你也可以重複 顛倒動畫
WatchKit中允許的
動畫類型就只有這一種
同樣地 它們也很強大
我想指出一點 如果你有一系列的圖像 
圖像的數目會很快增長 它們的加載時間成本 
性能成本也會很快增長 並且 
內存使用也會很快增長
記住這一點 
儘量減少圖像的數量 
儘量降低圖像的尺寸 
這樣你才能獲得更好的性能
我還想指出的是 
我們在Watch OS2上的
新選取器對象 允許你用一個“數碼皇冠”
在一張動態圖像中整理圖像
它的功能很強大 會給你一次奇妙的體驗
如果你想獲取更多信息 有一個會議 
叫做“深入瞭解WatchKit 第二部分” 
你可以瞭解新選取器對象
這是WatchKit中現有的功能
我知道很多人對新東西感興趣 
也就是我們在WatchOS2中引入的動畫API
動畫API
允許你把界面對象上的特定的屬性製作成動畫 
包括不透明度 
寬度 高度 
對齊 包括從左到右 
從上到下或者居中
組上的背景顏色 
圖像上的顏色 色彩 
就像我們幻燈片
和組插入物上面的這樣
你可以把很多東西製作成動畫
如果你用過的話 如果你在iOS上編過程的話 
API可能會看起來很熟悉
需要過一段時間 一個動畫塊 
你在動畫塊內進行的全部更新
就都會在指定時間內 繪製成動畫
那我們就來插上一腳 談一些例子 
希望能向你演示一些技巧 希望能向你演示
如何把它整合到你的WatchKit app上
我們首先回到app的詳細視圖 看第一個例子 
點擊份數畫面
我們要添加一個動畫 讓按鈴四周的圓圈
依次淡出
就像這樣
在代碼中 
我們要依次通過外環四周的組
因此每個圈都是一個組
我們要創建一個調度塊 對我們的動畫進行安排
然後在這個塊內 
我們會把組的端製作成動畫 
它就會淡入
非常簡單 但是效果很棒
我還想指出的是 我們引入了兩個新API
顯示 消失 它們都位於
WK界面控制器上
這些對你的動畫很重要 
我再談一談 
我想指出 
它以後會生效
因此在這個界面 
如果你在某個視圖出現之前
就開始播放動畫的話 使用“不要顯示”
就可以激活
我知道很多人都在使用“立即激活”
來開始動畫 
因此可能在顯示在屏幕之前 
就調用了“立即激活” 
所以說它不是開始你的動畫的好地方
所以使用“顯示”這個方式吧
同樣 你可以用定時器
或者GCD把你動畫錯開
當你這樣做的時候 
要記住只有激活後你才能更新某個控制器 
如果你在控制器釋放之後再繪製動畫 
這些更新就不會真的生效；
所以要記住這點 
務必使你的控制器處於激活狀態
此外還要對你的動畫總時長進行記錄
如果你加入了大量的動畫 
動畫時長就會很快增加 
很有可能用戶和你的app進行交互的時間
就很短 如果你有一個冗長的動畫 
那麼它就會拖延你的app的時長
所以要注意這一點
爲了方便起見 你可以在故事板中
設置你的初始值
舉例來說 在這個界面 
所有的這些圈初始都是隱藏的 
一開始初始值都是零 
我們就可以把它們寫到故事板中 
這樣運行時就不用擔心了
我們再來看我們的第二個例子 
這是我們的原料畫面
如果我們能讓標籤飛入 那就太棒了
就像你看到的這樣
我們到藍盒外面
我們也有了表格行
就像我們之前展示的那樣 
左邊的背景是我們的數字 是個組 
右邊是我們的標籤
我們現在要在兩者之間增加一個組 
我們稱之爲“空格組”
組內可以佈置內容 功能很強大 
但是 
組也能影響到四周的內容
這是因爲內容 
這是因爲我們在WatchKit內的佈局
是基於流的 
流內的組會影響到其他組
舉例來說 這裏 
單元的初始狀態是：
“空格組”爲全寬 它實際所做的 
就是把標籤推到屏幕的邊緣 
因爲你就可以在內部用了 
在你的app內部 水平流 
縱向流都會在某種程度上影響
佈置的事情
當我們繪製動畫時 
我們所做的 就是更新我們的“空格組”的寬度 
那個標籤此時就會進來 
因爲此時我們會重新計算
流是如何在界面佈置的
因此在代碼中
我們一次通過了我們全部表格行 
我們讓數字背景和標籤都淡入了 
我們還設置了“空格行”的寬度 
我們用一個單一的動畫塊 
把這些都包在了裏面
如果可以的話 
你可以通過用一個單一的動畫塊 
把你全部的動畫包在裏面 
這樣來提高性能 
但是 就像我剛說的 剛展示的 
如果是連續的動畫 那沒問題 
但是要記住 動畫太多
會對性能產生立竿見影的影響
因此不可見的“空格組”功能確實很強大 
你可以跳轉它們的寬度 高度 對齊 
改變你的佈局
還有一件事要指出的是 當你製作動畫時 我們實際上
會轉送出你的整個界面 我就是這樣設置
那個組的寬度的 標籤頁實際上改變了它的位置 
即使我自己根本沒有改
現在我們繼續來看第三個例子 
這是最複雜的一個例子
這個畫面這裏 你可以添加一項註釋 
如果你點擊添加註釋 我們會把文本的默認值
輸入系統
如果你選擇一個選項 我們會插入一個對話框 
或者 我們會繪製一個對話框的動畫
我們已經有了一個非常複雜的動畫 
但是我們要更進一步
如果你點擊“確認” 
我們會繪製一個
確認框
這些都是在一個界面內 都是用了
新的動畫API
我們把這個分成兩個部分
我們先來談談這個對話框
返回了一個線框
在我們的界面內 我們有一個組 
我要調用的 就是那個文本容器
在容器內 頂部有我們的文本泡 
文本泡內有我們的標籤
下面 有我們的確認按鈕
當我們繪製動畫時 
我們的初始狀態會把文本
底部右對齊 
就像你在這裏能看到的這樣 
按鈕淡出了
當我們繪製動畫時 
我們會更新文本泡的寬度 
高度 並且讓它和按鈕
淡入 就像你在這裏看到的一樣
我們就可以得到這種特效 
就是這麼幾行代碼 我們就可以得到這種特效
就像我說過的 我們在文本泡上更新了
寬度 高度以及開端
因爲我們想適應那個標籤的全文 
還有自動調整高度
無論註釋有多長 都會適應
我們會通過更新開端 讓那個按鈕淡入 
我們也會更新文本容器的高度 
以便適應所有的事情
並且用一個動畫塊把所有一切包裹進來
這就是動畫的第一部分
第二部分是這裏 我們展示了一個確認畫面
再回到我們的藍框
這裏我們有文本容器 爲了清晰起見 
我不會在那裏包括對象
但是還是在下面的界面中 
我們有另外一個組 
我會稱之爲“確認容器”
我們在此所做的 就是把界面的不同部分
包裹進它們各自的組裏 
這樣 我們就可以...
我們就可以隱藏 展開它們 
展示界面的不同部分
舉例來說 這是界面的初始狀態
因此文本容器就是全高度 
而確認容器實際上高度爲零 
因此在屏幕上隱藏了起來
因爲我們設置寬度 設置高度API的新行爲 
你實際上就可以實現
比零更高的寬度
當我們繪製動畫時 
我們所做的就是顛倒這些的高度
因此文本容器現在高度爲零 
而現在確認容器是
屏幕的全高度
在代碼中 正如我所說的 
我們更新了文本容器的高度 
更新了確認容器的高度 
並且把它包裹進了
一個動畫塊
這樣 你就實現了界面的一部分
縮小屏幕 另一部分放大屏幕的特效
因此我想提一提動畫上的幾個註釋 算是某種小結 
概括 指出你可能會
遇到的一些陷阱
任何影響改變你的界面元素的更新 
實際上 實際上都會
繪製佈局動畫
比如說 如果你更新某個標籤的文本 
自動調整 
這樣做的時候 
文本的寬度或者高度就變了 
它實際上會繪製那個標籤的新的幀的動畫
然而 你不會繪製文本的應用
的動畫 只是調整那個文本的尺寸
如果你立刻播放大量的動畫 
或者你的界面內有類型複雜的佈局 
那會對性能產生影響 所以千萬要記住這點 
一定要在硬件上進行測試
因此模擬器是製作你的動畫 
並且確保一切正常的好方法 
但是對於實際性能來說 
要看看實際情況如何 
一定要在硬件上進行測試
這點非常重要
還有一點要指出 
動畫是在你的應用程序內
生效的
但是 如果你在某個閃現 某個通知內調用它 
這些更新仍然會生效 
但是不會繪製成動畫
因此 在某個閃現 
某個通知內使用它毫無意義
還有幾點
請謹慎使用動畫
這是因爲動畫
絕不應該成爲你的界面的焦點
如果你的界面存在的理由 就是因爲動畫 
那麼也許你該考慮下了
另外 再強調一次 總時長不要太長
你的app內的時間可能是以秒爲單位 
所以 不要延長動畫 
不要超出必要的長度
有一個會議與此相關 很不錯 
叫做“結合動畫設計” 我強烈推薦這個會議
小結一下 對本次談話做個總結 
WatchKit中的佈局
與UIKit和AppKitt是不同的 
UIKit和AppKitt在設計時就指明瞭 
但是運行時非常靈活
我們有很多API 我們又引入了許多新的API 
它們可以讓你一次更新你的UI
再說一次 它們是基於流 
因此你指定的是你的對象的
佈局探試程序 但是完成佈局的是WatchKit本身
組的功能真的很強大 
如你所見 你可以構造非常複雜的界面 
你之前可能以爲在WatchKit中是不可能的
現在 在你的app中添加動畫吧
動畫能在你的app內增加生機 反饋 
非常棒 我相信你們都瞭解這一點
我們在WatchKit中已經有很多方式 讓你可以
引入這些動畫 在Watch OS 2中 
功能就更加強大了
如果你想獲取更多信息 這裏有很多資料
和技術支持
我們也會在developer.Apple.com上
把示例代碼當成一個項目發佈出去
如果是普通的問題 我們有福音傳道者 
傑克·拜倫斯
因此如果你有問題 就問他吧
本週 有很多相關的內容 
有些相關的會議正在進行
我想要指出幾個 明天上午的“要訣和技巧” 
明天下午的“設計要訣和技巧”
這兩個都很不錯
謝謝
祝你們在此過得愉快謝謝