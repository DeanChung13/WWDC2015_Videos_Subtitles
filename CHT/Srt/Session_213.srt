00:00:20.387 --> 00:00:23.090 
構建App跟Researchkit

00:00:30.764 --> 00:00:31.598 
大家好！

00:00:31.798 --> 00:00:32.766 
我叫約翰·厄爾

00:00:32.833 --> 00:00:34.835 
是ResearchKit
團隊的一名工程師

00:00:35.269 --> 00:00:37.004 
今天我要講講ResearchKit

00:00:37.337 --> 00:00:39.373 
以及如何促進App研究

00:00:40.841 --> 00:00:42.509 
今天 我的談話內容由四個部分構成

00:00:43.477 --> 00:00:45.879 
首先要講講什麼是
ResearchKit

00:00:46.880 --> 00:00:49.283 
然後再談幾個問題

00:00:49.516 --> 00:00:51.985 
幾個影響App型研究設計的相關問題

00:00:53.153 --> 00:00:55.522 
雖然我的主旨是在闡述如何使用

00:00:55.822 --> 00:00:57.524 
ResearchKit構建App時

00:00:57.591 --> 00:00:59.893 
ResearchKit
在研究App的具體功能

00:01:01.495 --> 00:01:03.630 
最後 由於它是一個開放源碼項目

00:01:04.197 --> 00:01:06.433 
我要講講大家該如何促成
ResearchKit

00:01:10.470 --> 00:01:11.305 
那我們就開始吧！

00:01:12.439 --> 00:01:14.007 
什麼是ResearchKit？

00:01:14.441 --> 00:01:17.177 
簡而言之它是一個開放源碼工程

00:01:17.311 --> 00:01:18.612 
可以在GitHub上使用

00:01:19.546 --> 00:01:20.881 
但是如果延伸一下

00:01:21.281 --> 00:01:22.683 
我們首先需要了解一點動機

00:01:23.684 --> 00:01:26.486 
即使您以前從未參與過醫學研究工作

00:01:27.321 --> 00:01:28.755 
但是類似工作您可能已經見過

00:01:29.122 --> 00:01:30.824 
無論是在大學還是在醫院

00:01:32.092 --> 00:01:33.594 
如果您已經參與了一項研究工作

00:01:33.861 --> 00:01:36.263 
您可能會打電話和調查員碰頭

00:01:36.630 --> 00:01:38.899 
別人給您解釋具體工作及其風險和效益

00:01:39.900 --> 00:01:44.638 
然後您可能要回答
問題採集樣本比以往更頻繁

00:01:45.539 --> 00:01:47.474 
現在 這可是一個重量級模型

00:01:48.141 --> 00:01:50.410 
研究人員已經告訴我們它有三個問題

00:01:52.913 --> 00:01:55.115 
第一個問題是有限參與

00:01:57.885 --> 00:02:01.188 
在大學校園內貼傳單只是將人員參與

00:02:01.588 --> 00:02:03.357 
侷限在校園附近的居民

00:02:03.957 --> 00:02:07.694 
進行海量研究則
需要很多研究團隊開展合作

00:02:08.362 --> 00:02:11.231 
這就意味着 如果開展研究
頻率也不會太高

00:02:12.999 --> 00:02:16.003 
第二個問題是數據較主觀也不常見

00:02:17.004 --> 00:02:19.606 
經常是通過調查每月收集一次數據

00:02:20.974 --> 00:02:21.975 
或者週期更長

00:02:22.576 --> 00:02:24.545 
這就影響了提出的問題

00:02:25.078 --> 00:02:26.079 
限制了數據質量

00:02:28.115 --> 00:02:30.150 
第三個問題是單向通信

00:02:30.951 --> 00:02:35.355 
您曾經參與的研究工作具體結果
您可能從未聽說過除非您認識調查員

00:02:36.790 --> 00:02:38.358 
這就是我們認爲App帶來的好處

00:02:40.194 --> 00:02:42.229 
App Store經銷
模式輻射範圍很廣

00:02:42.496 --> 00:02:45.065 
可以幫助研究人員接觸更多研究對象

00:02:45.632 --> 00:02:48.168 
因此採用ResearchKit的
前五種研究App

00:02:48.635 --> 00:02:52.172 
註冊參與者超過70,000人
在他們的研究領域中

00:02:52.372 --> 00:02:54.608 
已經開展了很多研究項目
這也是規模最大的一個

00:02:56.443 --> 00:02:58.912 
第二 App的數據可以持續流動

00:02:59.213 --> 00:03:02.115 
這與主觀不常見的
人工收集數據形成鮮明對比

00:03:03.317 --> 00:03:05.853 
最後 App可以局部記錄

00:03:05.919 --> 00:03:08.188 
每個參與者的情況以便向他們反饋

00:03:09.356 --> 00:03:11.425 
在症狀管理方面的具體表現

00:03:12.492 --> 00:03:14.061 
並有助於保持他們的參與度

00:03:14.261 --> 00:03:15.796 
而且也不會增加調查人員的工作量

00:03:16.897 --> 00:03:18.932 
在Apple我們以前
希望爲更多研究項目

00:03:18.999 --> 00:03:21.735 
讓這一點成爲現實這就是構建
ResearchKit的原因

00:03:22.669 --> 00:03:24.671 
ResearchKit是一種
開放源碼框架

00:03:24.738 --> 00:03:25.973 
可以在GitHub上使用

00:03:27.107 --> 00:03:29.176 
使用它 創建研究App更容易

00:03:29.376 --> 00:03:30.477 
無論是商用App

00:03:30.844 --> 00:03:33.947 
還是納入學術研究

00:03:35.282 --> 00:03:38.018 
現在iOS有了很棒的API

00:03:38.085 --> 00:03:39.520 
可以用來收集被動數據信息

00:03:39.820 --> 00:03:42.022 
比如HealthKit
和CoreMotion

00:03:43.190 --> 00:03:44.725 
但是要成功開展App研究

00:03:44.791 --> 00:03:46.994 
還有很多方面需要了解

00:03:48.295 --> 00:03:51.298 
我們希望在這些方面，
ResearchKit對您有所幫助

00:03:51.765 --> 00:03:54.001 
現在ResearchKit
有三個模塊

00:03:55.302 --> 00:03:56.670 
第一個模塊是調查

00:03:57.271 --> 00:03:59.206 
ResearchKit
提供標準UI模板

00:03:59.473 --> 00:04:02.176 
可以用來調查iPhone或iPad

00:04:02.676 --> 00:04:05.012 
我們採用了最常見的健康研究測量工具

00:04:05.479 --> 00:04:08.215 
對它進行了測試
比如SF12或EQ5D

00:04:09.583 --> 00:04:11.752 
第二個模塊是知情同意

00:04:12.953 --> 00:04:15.756 
在人體觀察研究領域它是一項常規要求

00:04:16.557 --> 00:04:18.692 
爲了讓參與者充分了解研究細節

00:04:18.992 --> 00:04:21.562 
並在此情況下獲得參與者的同意

00:04:22.896 --> 00:04:24.498 
每項研究工作的細節都存在差異

00:04:24.598 --> 00:04:26.500 
因此ResearchKit
會提供模板

00:04:26.867 --> 00:04:29.236 
在App過程中可以用來展示這種差異

00:04:31.972 --> 00:04:34.341 
ResearchKit
的第三個模塊是現時任務

00:04:35.375 --> 00:04:37.477 
現時任務是一種半控測試項目

00:04:37.778 --> 00:04:39.980 
在此項目中參與者按步驟接受指令

00:04:40.180 --> 00:04:42.216 
通過裝置上的傳感器收集數據時

00:04:42.683 --> 00:04:44.117 
即可執行該任務

00:04:44.852 --> 00:04:46.687 
例如在這種步態與平衡任務中

00:04:47.554 --> 00:04:51.158 
我們在來回步行過程中將手機放入口袋

00:04:51.491 --> 00:04:55.596 
通過加速儀和陀羅儀
可以收集步態評估數據

00:04:56.830 --> 00:04:59.132 
因此我們瞭解了
ResearchKit三個方面

00:04:59.466 --> 00:05:03.136 
調查知情同意和現時任務

00:05:04.438 --> 00:05:06.173 
在發佈ResearchKit同時

00:05:06.773 --> 00:05:10.244 
與我們合作的調查人員向App
Store 提供了他們自己的App

00:05:11.245 --> 00:05:14.114 
即使現在我們也在使用這些
Apps收集疾病相關數據

00:05:14.348 --> 00:05:17.618 
非常廣泛比如帕金森病、糖尿病、

00:05:17.885 --> 00:05:20.454 
心血管疾病、哮喘和乳腺癌

00:05:21.622 --> 00:05:24.691 
我們已與上述合作機構
共同爲這些App

00:05:24.925 --> 00:05:26.059 
以及這些機構

00:05:26.260 --> 00:05:28.495 
共享的核心共用庫開放了源代碼

00:05:30.731 --> 00:05:33.100 
因此如果需要快速啓動
它就能幫助您開始App

00:05:33.433 --> 00:05:35.402 
那麼App究竟具備哪些功能呢？

00:05:36.904 --> 00:05:39.306 
在適應階段它們都採用了

00:05:39.373 --> 00:05:41.775 
ResearchKit的
知情同意模塊

00:05:42.409 --> 00:05:44.611 
但是之後一旦註冊參與者

00:05:45.579 --> 00:05:46.947 
它們會以幾種方式採集數據

00:05:48.582 --> 00:05:50.551 
首先它們採用
ResearchKit的

00:05:51.118 --> 00:05:53.353 
調查模塊和現時任務模塊通過排程活動

00:05:53.654 --> 00:05:55.088 
採集更多主觀測量結果

00:05:55.856 --> 00:05:58.492 
此外它們採用HealthKit
和CoreMotion

00:05:58.692 --> 00:06:02.062 
通過被動數據採集獲得了客觀度量值

00:06:03.931 --> 00:06:07.901 
而且 通過加入一份儀表盤標籤

00:06:08.368 --> 00:06:09.970 
解決了單向通信問題

00:06:10.170 --> 00:06:13.807 
因此參與人員可以查看和跟蹤

00:06:14.308 --> 00:06:16.710 
源自調查結果的兩種主觀量度值

00:06:16.777 --> 00:06:19.513 
比如情緒以及源自
HealthKit的

00:06:19.847 --> 00:06:21.715 
客觀度量值如重量參數

00:06:24.384 --> 00:06:27.120 
因此正是ResearchKit
和App在使用它

00:06:27.888 --> 00:06:29.723 
但是隨着
ResearchKit的開發

00:06:29.790 --> 00:06:31.391 
我們對構建App型研究項目過程中

00:06:31.525 --> 00:06:34.228 
涉及的其它方面有了更好的瞭解

00:06:34.494 --> 00:06:36.029 
當時我們認爲這些對共享至關重要

00:06:36.230 --> 00:06:38.732 
因此在這裏我願意
和大家一起分享我的一些心得

00:06:40.501 --> 00:06:42.636 
如果您是一名構建研究
App項目的工程師

00:06:43.237 --> 00:06:45.072 
可能在項目團隊中並不只有您一人

00:06:45.839 --> 00:06:48.108 
還有很多事情需要其他成員去完成

00:06:48.609 --> 00:06:50.777 
這裏我可以就此作一些簡單介紹

00:06:52.479 --> 00:06:57.417 
也許最重要的就是聯繫
與您所在單位有關的道德委員會

00:06:57.618 --> 00:07:00.988 
或機構評審委員會

00:07:01.455 --> 00:07:05.526 
以便就研究方案

00:07:05.859 --> 00:07:06.994 
通過某種形式的道德評審

00:07:08.595 --> 00:07:11.398 
爲此您需要決定向該參與者

00:07:11.465 --> 00:07:13.400 
通報研究情況究竟會意味着什麼

00:07:15.669 --> 00:07:17.504 
您會採用這種紙質形式

00:07:17.804 --> 00:07:19.940 
並且希望您能夠對它進行壓縮

00:07:20.274 --> 00:07:21.708 
最終適合移動App需要

00:07:22.042 --> 00:07:24.511 
在我們進入ResearchKit
知情同意模塊時

00:07:24.578 --> 00:07:25.946 
我們會詳細闡述

00:07:27.814 --> 00:07:32.586 
接下來 由於ResearchKit
不提供後臺服務

00:07:32.886 --> 00:07:35.055 
您需要計劃如何保持研究數據

00:07:35.422 --> 00:07:37.324 
因此可能需要您本人去調查

00:07:37.658 --> 00:07:39.526 
或與第三方服務提供商簽訂合同

00:07:40.627 --> 00:07:45.332 
任何一種方式您都需要爲
數據安全和保密承擔責任

00:07:47.968 --> 00:07:51.071 
最後您還需要策劃如何共享研究數據

00:07:51.405 --> 00:07:53.807 
參與人員可能需要採用儀表盤標籤

00:07:53.874 --> 00:07:57.311 
或其它方式而調查人員則

00:07:57.711 --> 00:08:00.914 
可能要求您去尋求各方知情同意

00:08:02.449 --> 00:08:04.184 
因此如您所見實際App架構之外

00:08:04.251 --> 00:08:05.652 
還有各種各樣的問題

00:08:05.986 --> 00:08:07.955 
它們將對研究型App設計
產生一定影響

00:08:08.722 --> 00:08:10.190 
更多相關資源

00:08:10.657 --> 00:08:13.193 
請登錄我們的網站
ResearchKit.org

00:08:13.493 --> 00:08:14.328 
並且還可參閱

00:08:14.428 --> 00:08:16.463 
我們的ResearchKit
用戶郵寄清單

00:08:16.663 --> 00:08:18.232 
通過上述網站和清單

00:08:18.298 --> 00:08:20.100 
可以接觸之前也順利
完成任務的其他研究者

00:08:21.668 --> 00:08:22.903 
因此無需道別

00:08:22.970 --> 00:08:25.105 
接下來讓我們談談使用
ResearchKit構建App

00:08:25.172 --> 00:08:27.207 
在研究過程中ResearchKit
究竟能夠發揮什麼作用？

00:08:30.177 --> 00:08:32.880 
如上所述
ResearchKit有三個模塊

00:08:33.447 --> 00:08:35.849 
調查模塊知情同意模塊

00:08:36.850 --> 00:08:37.683 
和現時任務模塊

00:08:37.751 --> 00:08:39.586 
ResearchKit
所有這些模塊的

00:08:39.785 --> 00:08:40.921 
運行模式大致相同

00:08:44.057 --> 00:08:45.926 
要求用戶執行的每項活動

00:08:46.260 --> 00:08:47.361 
被確定爲一項任務

00:08:48.061 --> 00:08:50.364 
每項任務可以包含一個或幾個步驟

00:08:52.032 --> 00:08:54.935 
爲了執行一項任務
您希望就此向用戶展示

00:08:55.269 --> 00:08:57.971 
爲此將使用任務視圖控制器

00:08:59.039 --> 00:09:02.309 
一個任務視圖控制器就是
一個容器視圖控制器

00:09:02.376 --> 00:09:06.680 
有點像導航控制器或標籤條控制
器這在UI工具箱您可能比較熟悉

00:09:08.749 --> 00:09:12.352 
在展示任務視圖控制器時

00:09:13.086 --> 00:09:14.922 
將進入該任務的第一步

00:09:15.422 --> 00:09:19.059 
然後在任務視圖控制器內顯示
它是一個視圖控制器

00:09:19.126 --> 00:09:20.394 
可以顯示該步驟的數據

00:09:21.995 --> 00:09:24.865 
這一步結束時任務視圖控制器將

00:09:24.932 --> 00:09:26.767 
採集它輸出的結果並對該任務所有步驟

00:09:26.834 --> 00:09:28.569 
輸出的數據進行覈對

00:09:29.903 --> 00:09:33.874 
最後當任務完成時
任務視圖控制器將通知委託代表

00:09:34.875 --> 00:09:36.009 
您也會瞭解任務結果

00:09:37.044 --> 00:09:40.614 
關於已經通過的步驟
該任務結果將有一個相應步驟結果

00:09:40.948 --> 00:09:41.982 
如果超過一個步驟

00:09:42.282 --> 00:09:44.117 
相應會有若干步驟結果

00:09:45.919 --> 00:09:47.955 
這就是ResearchKit
內的對象模型

00:09:48.222 --> 00:09:51.625 
現在我們深入瞭解一下
其中一個核心對象

00:09:51.692 --> 00:09:53.460 
也就是上述步驟

00:09:54.294 --> 00:09:55.362 
下面我們看看各個步驟

00:10:00.334 --> 00:10:03.103 
在ResearchKit內
一個步驟實際對應的

00:10:03.170 --> 00:10:05.939 
是一項ResearchKit任務中

00:10:06.206 --> 00:10:07.341 
用於每個頁面的基本模板

00:10:08.242 --> 00:10:10.177 
並且子類是一種步驟

00:10:10.310 --> 00:10:12.312 
剛好是一個抽象基類
對於ResearchKit不同模塊

00:10:12.513 --> 00:10:14.381 
需要的每個不同步驟而言

00:10:14.448 --> 00:10:16.617 
可以用於每個不同類型

00:10:16.683 --> 00:10:17.518 
如調查

00:10:17.584 --> 00:10:20.254 
因此您可能會收到一項指令
一個調查問題和調查問卷

00:10:20.621 --> 00:10:23.223 
或者對於其它而言
如現時任務需要倒計時器

00:10:23.624 --> 00:10:27.294 
對於認知型任務
可能需要玩記憶遊戲

00:10:29.263 --> 00:10:33.534 
因此一般情況下這個基本模板

00:10:34.535 --> 00:10:37.538 
會在頁面中央展示該步驟內容

00:10:38.172 --> 00:10:39.806 
爲此已有預定義要素下面我們會談及

00:10:40.240 --> 00:10:43.977 
此外一般還包括向前導航控制器

00:10:44.244 --> 00:10:46.146 
在步驟視圖控制器內顯示

00:10:49.783 --> 00:10:51.685 
從代碼來看它的效果如何呢？

00:10:52.519 --> 00:10:57.124 
將ORKStep作爲抽象基類

00:10:57.191 --> 00:10:59.193 
並且它是該對象內的一個子類

00:10:59.526 --> 00:11:02.062 
因此我要說說使用
Objective-C

00:11:02.129 --> 00:11:04.264 
撰寫這個框架文件
但從Swift完全可以使用

00:11:04.565 --> 00:11:07.234 
並且我們還在此基礎上
增加了爲空性和泛型

00:11:07.301 --> 00:11:09.469 
因此它可以和Swift 2一起使用

00:11:10.003 --> 00:11:10.838 
那麼基類

00:11:12.439 --> 00:11:15.509 
有哪些重要特徵呢？

00:11:16.977 --> 00:11:19.213 
第一項特徵也是最關鍵特徵即標識符

00:11:19.513 --> 00:11:21.415 
這是您作爲開發人員
需要提供的一串字符

00:11:22.049 --> 00:11:25.285 
它可能是人工
可讀字符串也可能是UUID

00:11:25.352 --> 00:11:26.854 
或者與本步驟某項記錄

00:11:26.920 --> 00:11:29.690 
以及數據庫中相應任務對應的標識符

00:11:31.992 --> 00:11:33.293 
該標識符的重要性在於

00:11:33.360 --> 00:11:36.096 
它將該步驟與相應步驟結果連在一起

00:11:36.296 --> 00:11:38.832 
並且在您的任務語境中
必須是唯一標識符

00:11:40.400 --> 00:11:44.605 
接下來所有步驟都有一個標題和文本

00:11:45.272 --> 00:11:48.275 
並且一般來說它們
都適合每個步驟模板中的

00:11:48.342 --> 00:11:49.276 
同一對應位置

00:11:51.011 --> 00:11:54.681 
如果您正在寫一個問題
例如針對調查中的一個問題步驟

00:11:55.148 --> 00:11:56.683 
一般來說您會設置一個短標題

00:11:57.017 --> 00:11:59.720 
並且這個實際問題本身
會對文本特徵進行覈實

00:12:02.823 --> 00:12:05.292 
還有一項特徵需要說明一下
那就是備選性質

00:12:05.659 --> 00:12:08.662 
因此調查和ResearchKit
中的每個步驟

00:12:08.729 --> 00:12:10.430 
或者很多其它步驟可能都屬於備選性質

00:12:11.131 --> 00:12:12.466 
實際上它們默認爲備選性質

00:12:12.699 --> 00:12:15.602 
如果需要關閉它
比如因爲需要提供特定答案

00:12:15.836 --> 00:12:16.870 
您就可以利用這種特徵

00:12:18.205 --> 00:12:20.874 
那就是所謂的步驟
但是爲了使用一項步驟

00:12:20.941 --> 00:12:22.042 
需要將它放入任務文本

00:12:23.710 --> 00:12:27.514 
現在ResearchKit中的任務
還沒有一種抽象基類

00:12:27.581 --> 00:12:28.582 
相反它只是一份協議

00:12:29.116 --> 00:12:33.120 
定義了任務視圖控制器
與每項任務的互動方式

00:12:34.354 --> 00:12:36.723 
仍然有一項關鍵特徵即識別符

00:12:37.157 --> 00:12:39.193 
與在本App中可能收集的
其它任務結果相比

00:12:39.426 --> 00:12:42.930 
它是該任務結果的唯一識別方式

00:12:45.132 --> 00:12:47.701 
接下來雖然任務視圖控制器需要

00:12:47.768 --> 00:12:50.003 
瞭解該任務中下一步驟的具體內容

00:12:50.404 --> 00:12:53.173 
爲此我們根據步驟協議方法
對該步驟進行了定義

00:12:53.407 --> 00:12:55.642 
其中我們從任務
視圖控制器通過了當前步驟

00:12:58.312 --> 00:13:00.080 
通常情況下您剛好回到下一步驟

00:13:00.747 --> 00:13:02.549 
但有時您想了解...

00:13:02.616 --> 00:13:05.185 
您想根據現有結果
決定採用哪種測試方案...

00:13:05.586 --> 00:13:07.921 
需要展示哪一步

00:13:08.055 --> 00:13:10.424 
例如如果我選了A您希望進入A步

00:13:10.490 --> 00:13:12.526 
如果我選了B您希望進入B步

00:13:13.694 --> 00:13:17.130 
爲此任務視圖控制器將
通過該任務一項結果

00:13:17.364 --> 00:13:20.133 
您可以用來做出上述
決定的現有任務結果

00:13:22.402 --> 00:13:24.071 
在尋找該任務的第一個步驟時

00:13:24.338 --> 00:13:26.373 
任務視圖控制器將通過零作爲當前步驟

00:13:26.940 --> 00:13:28.675 
並且該任務完成時

00:13:29.076 --> 00:13:31.378 
告知任務視圖控制器沒有其它後續步驟

00:13:31.445 --> 00:13:33.547 
就此已經沒有能夠
讓您歸零的其它步驟了

00:13:35.883 --> 00:13:38.118 
同樣任務視圖控制器

00:13:38.185 --> 00:13:40.320 
可能會詢問您的任務：
之前應該有哪些步驟

00:13:40.821 --> 00:13:43.490 
因此通過方法前步驟
您可以採取一些措施

00:13:43.557 --> 00:13:44.892 
比如防止後向導航

00:13:46.527 --> 00:13:48.662 
因此關於任務協議

00:13:48.729 --> 00:13:50.831 
有多種其它特徵和方法

00:13:51.265 --> 00:13:53.734 
執行一項任務可能比較複雜

00:13:54.134 --> 00:13:57.771 
因此ResearchKit包括
ORKTask的執行

00:13:58.272 --> 00:14:01.208 
它是單純情況下
的ORKOrder任務

00:14:01.275 --> 00:14:03.377 
其中您希望採用連續順序
展示您的各種步驟

00:14:04.011 --> 00:14:06.747 
因此在這裏您通過
一個標識符和一個步驟陣列

00:14:07.447 --> 00:14:09.983 
即可讓這些步驟從只讀特徵返回

00:14:10.484 --> 00:14:12.186 
但是任務視圖控制器

00:14:12.252 --> 00:14:15.222 
只是通過ORKtask協議
與它的預訂任務互動

00:14:15.489 --> 00:14:19.059 
因此您可以按步驟呼叫
而不是對該步驟特徵進行評估

00:14:20.394 --> 00:14:22.162 
現在如果您需要條件邏輯

00:14:22.596 --> 00:14:25.432 
還有一種預訂任務版本是它的一個子類

00:14:25.499 --> 00:14:27.267 
稱爲ORKNavigable
預訂任務

00:14:27.334 --> 00:14:29.236 
通過它可以明確結果相關述語

00:14:29.303 --> 00:14:30.637 
以及相應終點步驟

00:14:31.305 --> 00:14:34.141 
這是最近通過
外部促成方在該框架基礎上

00:14:34.541 --> 00:14:36.343 
增加的內容
今天我沒有時間談論它

00:14:36.577 --> 00:14:38.478 
但是您有機會
瞭解GitHub相關細節

00:14:39.179 --> 00:14:40.047 
任務就談到這裏

00:14:41.415 --> 00:14:44.117 
但是執行一項任務需要使用
任務視圖控制器來展示這項任務

00:14:44.885 --> 00:14:46.453 
下面讓我們看一看任務視圖控制器

00:14:47.421 --> 00:14:48.422 
您將啓動一項任務

00:14:49.089 --> 00:14:51.992 
並且需要經由此項任務
創建一個任務視圖控制器

00:14:53.126 --> 00:14:55.729 
但是您會注意到第二項特徵
任務運行UUID

00:14:56.597 --> 00:14:58.298 
這就是UUID

00:14:58.432 --> 00:15:00.934 
它是該任務此次特定
運行的唯一識別方式

00:15:01.502 --> 00:15:04.505 
因此如果這裏我們通過零

00:15:04.571 --> 00:15:08.208 
表明這是一個新任務實例

00:15:08.675 --> 00:15:09.610 
我們從零開始

00:15:10.110 --> 00:15:12.946 
但是如果我保存工作成果
假設調查時間很長

00:15:13.113 --> 00:15:16.483 
假設我希望中途暫停
那麼我可能保存

00:15:16.683 --> 00:15:18.519 
在新任務視圖控制器中確定日程

00:15:18.585 --> 00:15:21.889 
重新啓動這項任務時我們一定
會希望恢復以前的工作運行UUID

00:15:21.955 --> 00:15:23.423 
因爲它與任務運行確實相同

00:15:25.659 --> 00:15:27.060 
然後您需要設立代表

00:15:27.361 --> 00:15:28.829 
如果希望瞭解何時完成任務

00:15:29.062 --> 00:15:30.364 
可以召回代表

00:15:30.764 --> 00:15:32.766 
但是同樣也會召回代表

00:15:32.833 --> 00:15:33.834 
這樣就有機會

00:15:34.001 --> 00:15:35.736 
對任務視圖控制器行爲進行定製

00:15:36.069 --> 00:15:38.238 
例如針對特定步驟
使用新步驟視圖控制器

00:15:38.872 --> 00:15:40.874 
代替默認步驟

00:15:42.876 --> 00:15:45.846 
此外有些任務可能會輸出信息

00:15:46.213 --> 00:15:47.314 
一種文件輸出

00:15:47.548 --> 00:15:50.817 
例如如果在執行任務時
使用麥克風收集音頻數據

00:15:50.951 --> 00:15:52.986 
那麼我們會希望在執行任務過程中

00:15:53.053 --> 00:15:54.288 
將該數據寫入音頻文件

00:15:55.656 --> 00:15:57.591 
在ResearchKit中
爲了給予支持

00:15:57.658 --> 00:15:58.959 
您會給來自該任務的文件輸出

00:15:59.026 --> 00:16:01.695 
應該進入您的任務視圖控制器

00:16:01.762 --> 00:16:02.829 
指定一個輸出目錄

00:16:03.330 --> 00:16:05.766 
任務完成時您需要處理這些文件

00:16:05.832 --> 00:16:07.334 
然後負責清理

00:16:08.602 --> 00:16:11.471 
最後通過程序展示
任務視圖控制器並獲得類似信息

00:16:12.573 --> 00:16:15.976 
因此您所看到的這種任務視圖控制器

00:16:16.577 --> 00:16:17.911 
它的行爲相當標準

00:16:18.212 --> 00:16:20.480 
並且任務視圖控制器本身

00:16:20.547 --> 00:16:21.949 
只能控制數量很少的視窗不動產

00:16:22.516 --> 00:16:24.384 
因此它控制這個導航條

00:16:24.685 --> 00:16:25.919 
設定進度顯示結果

00:16:25.986 --> 00:16:27.921 
可能還設定一些向後導航控制機構

00:16:28.555 --> 00:16:30.991 
此外它向步驟視圖控制器提供的信息

00:16:31.058 --> 00:16:34.795 
剛好能夠正確顯示向前導航控制機構

00:16:36.363 --> 00:16:37.631 
任務視圖控制器到此爲止

00:16:38.298 --> 00:16:39.399 
但是得到結果呢？

00:16:39.666 --> 00:16:41.301 
讓我們看看下面如何獲得結果

00:16:42.870 --> 00:16:45.172 
下面介紹
DidFinishWithReason

00:16:45.239 --> 00:16:46.106 
代表召回

00:16:46.206 --> 00:16:49.176 
任務完成時
您的代表將收到該信息

00:16:50.177 --> 00:16:53.380 
這裏您會瞭解到
任務視圖控制器結束的原因

00:16:53.881 --> 00:16:57.684 
可能結束的其中一項原因是
用戶選擇了在任務中途保存工作成果

00:16:58.185 --> 00:17:00.921 
如果是那樣您會希望提取恢復數據

00:17:01.255 --> 00:17:05.125 
它是一種不透明
NSData性質 然後保存

00:17:05.692 --> 00:17:08.662 
因爲以後希望繼續執行任務時
需要用示例說明新任務視圖控制器

00:17:08.729 --> 00:17:11.598 
並將其傳輸到專用
初始化程序中的恢復數據

00:17:13.099 --> 00:17:17.003 
但是通常情況下您會順利完成任務

00:17:17.304 --> 00:17:19.439 
因此您希望從
任務視圖控制器的結果屬性

00:17:19.506 --> 00:17:21.541 
抓取相關結果並用它解決一些問題

00:17:21.775 --> 00:17:23.844 
如對它進行序列化發送到服務器

00:17:24.178 --> 00:17:28.315 
或者可能需要分析以便
向用戶展示其中一些信息

00:17:29.750 --> 00:17:31.985 
最後需要解除該任務視圖控制器

00:17:32.586 --> 00:17:34.521 
因爲已經展示了任務視圖控制器

00:17:34.588 --> 00:17:35.989 
還需要爲解除控制器承擔責任

00:17:38.492 --> 00:17:41.461 
現在大家瞭解了
ResearchKit的基本概況

00:17:41.662 --> 00:17:43.430 
以及使用任務型模式的方法

00:17:44.097 --> 00:17:45.766 
現在讓我們看看它該如何匹配

00:17:45.832 --> 00:17:47.868 
ResearchKit第一個模塊
調查模塊

00:17:49.303 --> 00:17:51.872 
因此ResearchKit中的
調查由三部分構成

00:17:52.105 --> 00:17:55.209 
指令、調查問題和調查問卷

00:17:55.809 --> 00:17:57.811 
反之每部分對應一個步驟

00:17:58.412 --> 00:17:59.646 
因此我們有一個調查問題

00:18:00.814 --> 00:18:04.084 
我們有一個指令步驟 一個問題步驟
和一個問卷步驟

00:18:05.085 --> 00:18:06.820 
在ORKStep基類現有內容基礎上

00:18:06.887 --> 00:18:09.289 
我們再增加一些指令步驟

00:18:09.690 --> 00:18:11.792 
但是問題步驟和
問卷步驟比它們稍微多一些

00:18:12.326 --> 00:18:13.227 
我們要看看下個環節

00:18:14.761 --> 00:18:16.663 
這是問題步驟和任何其它步驟一樣

00:18:16.730 --> 00:18:19.366 
它有一個識別符在任務範圍內必須唯一

00:18:20.200 --> 00:18:22.836 
問題步驟也有回答格式

00:18:23.704 --> 00:18:26.340 
回答格式是ORKAnswer
格式的一個子類

00:18:26.406 --> 00:18:29.009 
對應希望展示步驟的特定類型

00:18:29.810 --> 00:18:32.579 
由於各種子類覆蓋範圍很廣

00:18:32.646 --> 00:18:34.615 
因此我們可能有一個
Boolean回答格式

00:18:34.681 --> 00:18:36.550 
包括“是/否”問題
文本選擇回答格式

00:18:36.750 --> 00:18:38.852 
提供圖像比例尺的圖像選擇回答格式

00:18:39.186 --> 00:18:41.588 
或者日期型和時間間隔格式

00:18:41.855 --> 00:18:43.490 
種類繁多可以在GitHub上查看

00:18:44.658 --> 00:18:46.426 
問題步驟就談到這裏

00:18:46.660 --> 00:18:47.494 
那麼問卷步驟呢？

00:18:48.695 --> 00:18:52.399 
這裏有一個問卷步驟
並且問卷步驟有一個識別符

00:18:52.733 --> 00:18:54.334 
而且還有一系列問卷項目

00:18:55.235 --> 00:18:56.370 
這裏是問卷項目

00:18:56.537 --> 00:18:58.105 
每個文件項目都有一個識別符

00:18:58.338 --> 00:19:01.041 
在問卷步驟語境內必須唯一

00:19:03.410 --> 00:19:06.280 
和問題步驟一樣問卷項目也有回答格式

00:19:06.713 --> 00:19:10.751 
並且在受支持答卷項目中

00:19:10.817 --> 00:19:13.820 
ResearchKit
支持相同回答格式

00:19:14.054 --> 00:19:16.890 
例如我們可以將文本選擇回答格式與

00:19:17.491 --> 00:19:19.760 
同一表格的數字答案格式混合在一起

00:19:21.461 --> 00:19:26.700 
這就是ResearchKit
調查模型對象的對象模型

00:19:27.501 --> 00:19:28.669 
那麼如何獲得結果呢？

00:19:30.304 --> 00:19:33.440 
這是預訂任務及其識別符
和一個步驟陣列

00:19:34.541 --> 00:19:37.911 
完成任務後就會獲得任務結果

00:19:38.345 --> 00:19:41.615 
同樣有匹配識別符和一系列結果

00:19:43.283 --> 00:19:45.519 
如果預訂任務啓動一個指令步驟

00:19:46.153 --> 00:19:47.988 
那麼指令步驟會有一個識別符

00:19:48.322 --> 00:19:51.058 
一旦完成任務就會獲得步驟結果

00:19:51.325 --> 00:19:52.459 
及其相應識別符

00:19:53.327 --> 00:19:56.663 
該步驟結果的結果屬性爲空

00:19:56.730 --> 00:19:58.832 
因爲在該指令步驟期間
未收集到任何數據

00:19:58.899 --> 00:20:00.534 
我們要做的就是向它們展示該指令

00:20:01.969 --> 00:20:03.837 
雖然這個對象沒有什麼有用屬性

00:20:04.071 --> 00:20:05.272 
類似開始日期和結束日期

00:20:05.506 --> 00:20:07.374 
告訴您該指令在頁面上持續的時間

00:20:10.110 --> 00:20:11.512 
此外還可能有一個問題步驟

00:20:12.312 --> 00:20:15.582 
這個問題步驟有一個識別符

00:20:15.649 --> 00:20:17.384 
與相應步驟結果匹配

00:20:17.951 --> 00:20:22.556 
不同於指令步驟結果

00:20:22.756 --> 00:20:24.191 
實際上會有一個child結果

00:20:24.458 --> 00:20:27.427 
承載實際答案與答案格式對應

00:20:29.763 --> 00:20:31.198 
表格結果工作方式極爲相似

00:20:31.598 --> 00:20:33.667 
這裏有一個預訂任務包含唯一問卷步驟

00:20:34.501 --> 00:20:37.371 
有兩個問卷項目當然在問卷步驟內

00:20:37.671 --> 00:20:38.972 
識別符必須唯一

00:20:40.474 --> 00:20:42.042 
收到答案時

00:20:42.476 --> 00:20:44.878 
會收到任務結果和匹配識別符

00:20:45.879 --> 00:20:49.183 
還有步驟結果
以及與該問卷步驟匹配的識別符

00:20:50.517 --> 00:20:53.487 
然後收到相應child問題結果

00:20:53.787 --> 00:20:56.557 
這次還會收到一系列問題結果
每個問卷項目都有一個結果對應

00:20:56.924 --> 00:20:59.993 
還有與相應文件項目匹配的識別符

00:21:02.896 --> 00:21:05.766 
這就是ResearchKit中的
對象模型

00:21:05.832 --> 00:21:08.202 
以及如何使用調查
並且用來展示調查項目的方法

00:21:09.570 --> 00:21:11.305 
我要讓大家看一看
Xcode簡短展示

00:21:17.644 --> 00:21:21.748 
這裏有一個示例App它顯示錶格視圖

00:21:21.815 --> 00:21:24.985 
和一份有效任務清單
這裏我要將一項調查任務

00:21:25.052 --> 00:21:28.388 
整合在一起讓大家看看
我已經提到的一些特徵

00:21:30.991 --> 00:21:33.694 
這裏是表格視圖控制器

00:21:37.631 --> 00:21:43.403 
表格視圖控制器有一個--
當您選擇一行時

00:21:43.637 --> 00:21:45.506 
它會舉例說明任務視圖控制器

00:21:45.839 --> 00:21:47.641 
並顯示該任務設定代表

00:21:47.708 --> 00:21:50.310 
和輸出目錄完成任務後

00:21:50.911 --> 00:21:56.717 
我們會在didFinish召回中
顯示--我們會解除該任務視圖控制器

00:21:58.752 --> 00:22:01.922 
現在切換到任務枚舉這裏保留實際任務

00:22:02.489 --> 00:22:05.392 
大家看到我定義了
各種情形包括調查情形

00:22:05.826 --> 00:22:08.595 
並且顯示的任務當前爲空

00:22:08.662 --> 00:22:10.764 
但是現在我要將它定義爲調查任務

00:22:11.331 --> 00:22:13.133 
下一步我會創建它

00:22:15.836 --> 00:22:20.741 
爲了創建調查任務我要定義計算屬性

00:22:20.941 --> 00:22:23.810 
調查任務這裏我創建了一項預訂任務

00:22:23.911 --> 00:22:26.380 
以及識別符調查並附帶一個步驟陣列

00:22:26.713 --> 00:22:27.981 
現在該陣列爲空

00:22:28.315 --> 00:22:29.416 
我要添加一個指令步驟

00:22:30.184 --> 00:22:32.119 
現在這個指令步驟有一個識別符

00:22:32.286 --> 00:22:33.654 
這裏我正在生成識別符

00:22:33.720 --> 00:22:36.857 
因爲我知道它們
在該任務內是唯一識別符

00:22:38.759 --> 00:22:39.960 
我設置了一個標題和文本

00:22:40.260 --> 00:22:41.328 
將在頁面上顯示

00:22:41.461 --> 00:22:43.463 
您會注意到我已經將這些
標註爲本地化字符串

00:22:43.597 --> 00:22:47.000 
因爲這些模型對象的內容
實際上已經本地化

00:22:47.067 --> 00:22:49.336 
如果打算在多個場合使用App

00:22:49.636 --> 00:22:52.105 
需要將該內容
以及App中需要本地化的

00:22:52.306 --> 00:22:54.141 
其它項目進行本地化

00:22:55.576 --> 00:22:58.679 
然後我會添加一個問題步驟

00:22:59.313 --> 00:23:01.949 
這個問題步驟是一個“是/否”問題

00:23:02.015 --> 00:23:03.317 
現在有了一個布爾回答格式

00:23:03.684 --> 00:23:06.687 
它有一個標識符組
和一個標題問題如下：

00:23:06.954 --> 00:23:08.889 
在一個典型日在您爬完幾段樓梯後

00:23:08.956 --> 00:23:10.591 
您的健康狀態對自己是否有所影響？

00:23:10.991 --> 00:23:13.060 
這是一個非常典型的問題

00:23:13.126 --> 00:23:14.461 
在普通健康調查問卷中很常見

00:23:15.362 --> 00:23:17.764 
我們已經提過問卷表格
所以我要增加一個問卷步驟

00:23:18.098 --> 00:23:21.435 
這是一份問卷 有識別符 有標題

00:23:21.502 --> 00:23:24.004 
還有一個常見問題：
在上兩週您受到以下問題

00:23:24.071 --> 00:23:25.939 
困擾的頻率是多少？

00:23:26.940 --> 00:23:30.878 
現在我們列出各種問題
每個問題都有一個問卷項目

00:23:31.578 --> 00:23:36.216 
因此其中每項都是一個問題

00:23:36.383 --> 00:23:38.685 
採用文本選擇回答格式

00:23:38.752 --> 00:23:41.922 
這是一個多項選擇問題
但只能選擇一個答案

00:23:42.556 --> 00:23:44.925 
大家可以看到這裏我給的答案

00:23:44.992 --> 00:23:47.728 
根本不是幾天 
超過這些天數的一半 幾乎是每天

00:23:48.161 --> 00:23:51.798 
它們也有相應數值這些值將會進行編碼

00:23:51.865 --> 00:23:55.736 
納入結果對象因此以後可以分析結果

00:23:56.136 --> 00:23:58.472 
這些同樣可能是屬性列表類值

00:23:58.539 --> 00:24:00.774 
它可能是一個整數--寧可是一個s數

00:24:01.108 --> 00:24:02.442 
或者可能是一個字符串像這樣

00:24:04.411 --> 00:24:06.280 
我們看到了這個興趣項

00:24:06.680 --> 00:24:08.448 
我的問題是做事情少有興趣或快樂

00:24:08.515 --> 00:24:10.350 
我們會再增加兩項

00:24:11.218 --> 00:24:12.753 
填完表格

00:24:16.356 --> 00:24:18.692 
設置完畢後我還想做一件事情

00:24:18.759 --> 00:24:20.694 
讓您看看結果，

00:24:20.961 --> 00:24:23.931 
爲此我已爲大家構架了UI
所以我們可以研究一下

00:24:23.997 --> 00:24:26.700 
App自身中的一些結果

00:24:28.001 --> 00:24:30.103 
這件事情實際在GitHub上的

00:24:30.170 --> 00:24:32.039 
ORKCatalog
樣本App中完成

00:24:32.472 --> 00:24:34.608 
但是今天我還要序列化到JSON

00:24:34.675 --> 00:24:36.944 
讓大家看看JSON輸出效果

00:24:37.611 --> 00:24:42.549 
爲此 我們將回到任務視圖控制器委託
DidFinishWithReason

00:24:43.650 --> 00:24:45.719 
它希望再增加一個步驟 我要把它挪開

00:24:47.754 --> 00:24:50.224 
我要在任務上添加結論步驟
我忘了做這件事情

00:24:52.593 --> 00:24:53.727 
所以這是我們的結論步驟

00:24:53.894 --> 00:24:54.828 
那就回到這裏吧

00:24:55.596 --> 00:24:56.597 
我要打開reason

00:24:57.531 --> 00:24:59.933 
如果順利完成任務

00:25:00.200 --> 00:25:02.035 
我會從任務視圖控制器提取結果

00:25:02.836 --> 00:25:04.471 
然後我想將它序列化到JSON

00:25:04.905 --> 00:25:08.675 
並且ResearchKit框架本身
不包括任何JSON序列化

00:25:08.742 --> 00:25:12.713 
我們已經將一些東西
納入其中一個測試App

00:25:12.779 --> 00:25:15.182 
以便證明JSON序列化
會用於一項真實App

00:25:15.682 --> 00:25:17.885 
這裏我已將其納入
現在我可以向大家演示了

00:25:19.820 --> 00:25:23.290 
所以我會運行它並讓大家看看調查項目
在ResearchKit的情況

00:25:32.099 --> 00:25:33.066 
開始執行任務時

00:25:33.700 --> 00:25:35.469 
我會立即看到這個指令步驟

00:25:36.503 --> 00:25:37.938 
還會顯示進度

00:25:38.138 --> 00:25:39.373 
我可以取消該任務

00:25:39.540 --> 00:25:42.843 
我已經有了標題和文本
也有了導航控制機構

00:25:43.210 --> 00:25:45.179 
大家看到它已預先生成方便開始啓動

00:25:45.245 --> 00:25:46.780 
從任務視圖控制器搭建的框架開始

00:25:46.847 --> 00:25:47.981 
實現了自動化

00:25:48.949 --> 00:25:50.450 
我進來時看到了自己的布爾問題

00:25:50.651 --> 00:25:53.053 
我可以選擇自己的答案
如果我選擇跳過這個問題

00:25:53.220 --> 00:25:55.622 
我輸入的答案會被清除
如果我返回答案已經沒有了

00:25:56.223 --> 00:25:58.091 
一旦我返回我可以回答一些不同問題

00:25:59.159 --> 00:26:00.861 
因此我要仔細檢查給出答案

00:26:01.295 --> 00:26:03.630 
可能我並未回答全部問題但我可以繼續

00:26:04.565 --> 00:26:05.399 
最後我完成了

00:26:06.099 --> 00:26:07.434 
我們看看結果吧！

00:26:10.170 --> 00:26:13.540 
如前所述這裏我們看到了任務結果

00:26:13.640 --> 00:26:16.877 
還有一個起始日期和結束日期
據此可以查看該調查項目持續的時間

00:26:17.477 --> 00:26:19.680 
我們有了輸出目錄
一個任務運行UUID

00:26:19.746 --> 00:26:21.381 
從任務視圖控制器開始直接通過

00:26:21.748 --> 00:26:23.817 
我們也有了任務識別符

00:26:25.485 --> 00:26:27.955 
child結果陣列包含
一個步驟結果陣列

00:26:28.088 --> 00:26:29.923 
因此初始指令步驟
我們有了指令步驟結果

00:26:29.990 --> 00:26:32.426 
初始指令步驟沒有children

00:26:32.626 --> 00:26:35.062 
因爲我們未收集到用戶提供的附加信息

00:26:36.396 --> 00:26:39.833 
此外 還有問題步驟結果

00:26:39.900 --> 00:26:41.902 
包含一個布爾問題結果

00:26:41.969 --> 00:26:43.604 
以及爲我的問題提供的實際答案

00:26:43.670 --> 00:26:44.805 
這時我回答“是”

00:26:46.039 --> 00:26:50.077 
然後從這裏的答卷步驟
我們得到答卷步驟結果

00:26:50.210 --> 00:26:54.181 
以及感覺形式標識符和
我輸入的每個答案

00:26:54.248 --> 00:26:55.549 
我回答了前兩個問題

00:26:55.849 --> 00:26:59.753 
我沒有回答該表格中的
最後一個問卷項目

00:26:59.820 --> 00:27:02.122 
大家可以看到這裏沒有實際答案屬性

00:27:03.557 --> 00:27:06.226 
並且最後對於結束指令步驟
我們還有一個步驟結果

00:27:07.661 --> 00:27:10.664 
現在我要讓大家看看
在開發App過程中

00:27:10.731 --> 00:27:14.334 
如果需要變更調查項目
修改答案格式該有多輕鬆

00:27:16.803 --> 00:27:19.173 
我希望做的一件
事情就是改變我的布爾答案格式

00:27:19.540 --> 00:27:21.408 
或許“是”提供的信息並不充分

00:27:21.475 --> 00:27:23.343 
或許我的健康狀況受到很大影響

00:27:23.410 --> 00:27:24.945 
或者影響不大

00:27:25.279 --> 00:27:27.648 
爲此我可以切換到文本選擇回答格式

00:27:28.081 --> 00:27:30.117 
針對允許我提供全部答案的每個選項

00:27:30.484 --> 00:27:34.054 
我可以提供一些細節文本
這樣我可以選擇“是 影響很大”

00:27:34.121 --> 00:27:35.122 
或者“是 影響不大”

00:27:37.057 --> 00:27:41.195 
這裏您還要注意一點排他性設置

00:27:41.528 --> 00:27:46.700 
如果是多選項您可以
將一個或多個選項設爲排他性選項

00:27:46.767 --> 00:27:49.236 
如果選擇了一個選項
系統會取消所以其它選項

00:27:50.671 --> 00:27:52.472 
我也可能希望改變我的答卷步驟

00:27:52.539 --> 00:27:55.475 
正如大家看到的那樣
它是一種垂直捲動的長表格

00:27:55.542 --> 00:27:57.211 
可能那不是我在App中期望的那樣

00:27:57.377 --> 00:27:59.813 
也許我希望有一些水平滑條

00:27:59.880 --> 00:28:02.382 
可以用來顯示大致相同的內容

00:28:02.816 --> 00:28:06.153 
得到相同答案但是表現方式可以不同

00:28:06.353 --> 00:28:09.089 
只需切換到ORKScale格式

00:28:09.156 --> 00:28:11.925 
明確最大值和最小值的說明內容

00:28:12.226 --> 00:28:14.194 
即可在ResearchKit
內輕鬆實現

00:28:15.028 --> 00:28:17.097 
所以我要再次運行並讓大家看看效果

00:28:21.502 --> 00:28:22.469 
又是我們的調查項目

00:28:22.936 --> 00:28:23.770 
非常相似

00:28:24.037 --> 00:28:26.139 
在這個步驟我們已經有了不同選項

00:28:27.140 --> 00:28:31.945 
以前是多選問題現在是滑條

00:28:32.012 --> 00:28:33.280 
可以用來調整數值

00:28:35.849 --> 00:28:37.584 
當我完成任務看到結果時

00:28:38.185 --> 00:28:42.356 
從架構來看結果非常類似
但結果類型不同

00:28:42.689 --> 00:28:44.858 
因爲相應答案格式也不同

00:28:44.925 --> 00:28:46.994 
所以對這些結果的解釋也需要有所變化

00:28:48.562 --> 00:28:50.097 
ResearchKit
調查就講到這裏

00:28:57.671 --> 00:28:59.339 
第二個模塊是知情同意

00:28:59.540 --> 00:29:02.009 
ResearchKit
第二個模塊是知情同意

00:29:03.377 --> 00:29:04.545 
我們現在看一下

00:29:04.912 --> 00:29:05.979 
什麼是知情同意？

00:29:10.484 --> 00:29:15.522 
知情同意是保證參與者
完全明白爲何和如何進行調查

00:29:16.557 --> 00:29:17.558 
調查意味着什麼

00:29:17.791 --> 00:29:20.127 
有何風險和收益的過程

00:29:21.261 --> 00:29:22.930 
如今 調查通常針對個人

00:29:24.198 --> 00:29:28.635 
而需要同意什麼詳細要求
將取決於您的調查標準

00:29:28.702 --> 00:29:31.371 
也取決於道德審查過程

00:29:33.707 --> 00:29:39.847 
現在 參與者和調查者
一起審查知情同意書

00:29:39.947 --> 00:29:41.849 
從起始頁到結尾簽名

00:29:42.583 --> 00:29:45.452 
也許您需要在同意過程中籤名

00:29:47.221 --> 00:29:49.923 
最終 知情同意通常是一份法律文件

00:29:52.860 --> 00:29:57.531 
現在App Store
提交的人類研究必須包括

00:29:57.598 --> 00:29:59.166 
道德審查的證據

00:29:59.800 --> 00:30:03.637 
這並不完全意味着您需要
包含像我們要討論的那個研究

00:30:03.704 --> 00:30:06.874 
元件中的知情同意模塊
那樣的知情同意過程

00:30:07.474 --> 00:30:11.478 
因爲低風險研究可能是例外的

00:30:11.745 --> 00:30:14.615 
一定的高風險研究可能需要親自工作

00:30:15.983 --> 00:30:18.051 
但許多案例中假設
Researchkit

00:30:18.118 --> 00:30:19.953 
可以幫到忙那麼研究元件中的知情同意

00:30:20.521 --> 00:30:23.457 
就是合適的您可以在道德審查過程中

00:30:26.226 --> 00:30:27.561 
自行決定

00:30:27.928 --> 00:30:30.097 
那讓我們來看看知情同意模塊

00:30:32.366 --> 00:30:37.171 
是如何工作的
Researchkit中

00:30:37.304 --> 00:30:39.640 
有兩個步驟需要
在知情同意文件中被同意

00:30:40.340 --> 00:30:42.876 
並且這兩個步驟都可以

00:30:42.943 --> 00:30:44.745 
從ORKConsent中獲取內容

00:30:44.811 --> 00:30:46.580 
這個知情同意文件由兩個序列組成

00:30:47.080 --> 00:30:48.582 
第一個是一個部分序列

00:30:48.815 --> 00:30:50.651 
這些部分序列可能是預定義類型

00:30:50.951 --> 00:30:52.719 
就像數據採集、隱私、數據使用

00:30:52.920 --> 00:30:56.190 
這些都是您希望在知情
同意文件中看到的類型

00:30:56.823 --> 00:30:58.425 
但也有自定義部分

00:30:58.759 --> 00:31:02.095 
因此Researchkit並不打算
提供一個完整的解決方案

00:31:02.262 --> 00:31:03.463 
我們提供80%的解決方案

00:31:03.530 --> 00:31:06.600 
如果您需要給您的App
附加信息您可以自行添加

00:31:07.835 --> 00:31:11.872 
除了知情同意文件以外
還有一個簽名序列

00:31:12.172 --> 00:31:13.740 
因而我們可能有一個

00:31:13.807 --> 00:31:15.843 
包含有預填充姓名和圖像的調查簽名

00:31:17.678 --> 00:31:23.083 
以及一個我們在調查同意過程中
採集的參與者的簽名和圖像

00:31:25.185 --> 00:31:28.989 
讓我們看看調查元件中的這些部分

00:31:29.056 --> 00:31:32.860 
我們有了視覺同意步驟 分享同意步驟

00:31:33.327 --> 00:31:36.697 
以及檢查同意步驟我將稍作詳細解釋

00:31:39.600 --> 00:31:43.237 
視覺同意通常在文件中各部分佔一屏

00:31:43.770 --> 00:31:46.440 
有着簡潔的動畫過渡
稍後我將就這些預定義部分

00:31:46.874 --> 00:31:47.941 
作個演示

00:31:48.141 --> 00:31:50.677 
它完全可以定製因此您可以用圖像替代

00:31:50.911 --> 00:31:52.913 
您可以用動畫替代

00:31:53.180 --> 00:31:56.283 
也可以填充知情同意文件中的確切內容

00:31:56.950 --> 00:31:58.185 
讓我們看看如何編碼

00:31:59.152 --> 00:32:01.188 
您將創建一個特別種類的知情同意部分

00:32:01.355 --> 00:32:02.523 
這種情況下采集數據

00:32:04.157 --> 00:32:05.926 
然後設置屬性

00:32:06.126 --> 00:32:07.628 
我不用設置標題

00:32:07.728 --> 00:32:10.197 
因爲在iOS的所有語言
都已經進行過本地化

00:32:10.264 --> 00:32:11.732 
現在我選擇的是預定義部分

00:32:12.366 --> 00:32:15.903 
但如果我不需要預定義部分
或者如果我需要指定我自己的

00:32:15.969 --> 00:32:17.204 
我也可以這樣重寫

00:32:18.105 --> 00:32:21.041 
我可以指定
在視覺同意過程中顯示的概要

00:32:21.608 --> 00:32:23.610 
當用戶通過視覺同意
或在瀏覽整個文件時

00:32:23.677 --> 00:32:25.879 
點擊了“瞭解更多”的話

00:32:26.413 --> 00:32:30.250 
我也可以指定內容

00:32:33.320 --> 00:32:35.055 
此外您可以設置其他事項

00:32:35.389 --> 00:32:37.791 
可以設置定製圖像或者定製動畫

00:32:37.991 --> 00:32:40.060 
定製動畫只是一個視頻文件

00:32:40.127 --> 00:32:41.361 
您可以包含進您的App裏

00:32:42.296 --> 00:32:44.031 
如果設置步驟類型的話不管何種錯誤

00:32:44.097 --> 00:32:46.633 
您都可以覆蓋掉這個定製動畫
或者您也可以重新設置一個

00:32:48.235 --> 00:32:49.469 
一旦您有了同意部分

00:32:49.736 --> 00:32:53.874 
您就可以把您的文件附到
視覺同意步驟裏

00:32:53.941 --> 00:32:55.475 
來展示您的視覺同意序列

00:32:57.544 --> 00:33:01.215 
知情同意模塊的下一步是分享步驟

00:33:02.482 --> 00:33:06.987 
研究數據採集艱難因此在
可行的多方研究中重複使用是有意義的

00:33:07.521 --> 00:33:10.390 
所以獲取更廣泛的同意

00:33:10.724 --> 00:33:12.559 
可以讓您和其他研究者

00:33:13.026 --> 00:33:13.861 
共享數據

00:33:14.995 --> 00:33:16.864 
但是那對參與者會有問題

00:33:17.664 --> 00:33:21.068 
如果數據敏感他們可能只想
協助您的研究而非別人的

00:33:22.369 --> 00:33:24.538 
這個問題 在我們使用
Researchkit

00:33:24.605 --> 00:33:27.140 
研發最初的App時就存在

00:33:27.441 --> 00:33:29.376 
因此我們創建同意分享步驟

00:33:29.643 --> 00:33:32.246 
我們已經提前
本地化了所有iOS支持的語言

00:33:32.646 --> 00:33:35.816 
以便我們帶入您的機構名稱
和幾個其他細節

00:33:36.316 --> 00:33:38.151 
您就可以問參與者

00:33:38.552 --> 00:33:41.321 
他們是否同意更廣泛地分享數據

00:33:46.527 --> 00:33:50.664 
在初期調查中
超過80%的參與者對此表示同意

00:33:51.365 --> 00:33:53.100 
但我們仍然認爲這是件重要的事項

00:33:53.700 --> 00:33:55.802 
如果您的需求
包含這樣一個廣泛同意的話

00:33:57.171 --> 00:33:58.472 
以上是同意分享步驟

00:33:59.072 --> 00:34:02.176 
Researchkit知情同意
模塊的最後一步

00:34:02.709 --> 00:34:06.647 
是檢查步驟參與者在此檢查實際文件

00:34:07.347 --> 00:34:08.447 
可能輸入他們的名字

00:34:08.614 --> 00:34:09.983 
也可能是手指簽名

00:34:10.417 --> 00:34:12.319 
我們接下來看

00:34:12.886 --> 00:34:13.754 
這將如何編碼

00:34:13.987 --> 00:34:15.856 
現在您要開始您的同意文件

00:34:16.723 --> 00:34:18.592 
您需要加一個

00:34:19.092 --> 00:34:20.393 
您想採集的簽名

00:34:20.627 --> 00:34:22.029 
這是參與者簽名

00:34:22.362 --> 00:34:25.331 
您爲參與者在簽名線下方設置標題

00:34:25.399 --> 00:34:26.833 
如果您想生成PDF文件的話

00:34:27.467 --> 00:34:29.636 
我們就得到一個識別符

00:34:29.703 --> 00:34:32.739 
如果我們想在知情同意書中

00:34:32.806 --> 00:34:34.842 
找到一個特別的簽名的話
識別符就將進行識別

00:34:37.476 --> 00:34:42.516 
您可以關閉名字採集或者簽名圖像採集

00:34:43.382 --> 00:34:47.554 
我們通過設置命令簽名圖像來關閉

00:34:50.389 --> 00:34:52.525 
然後您可以在知情同意文件中添加簽名

00:34:53.193 --> 00:34:56.196 
當您指定了您想收集何種簽名時

00:34:57.030 --> 00:34:59.633 
您就可以把同意文件附到同意檢查步驟

00:35:00.634 --> 00:35:02.669 
您可以使用多個同意檢查步驟

00:35:02.736 --> 00:35:07.341 
如果您有多人在同一設備上
查看同一文件的話這是允許的

00:35:10.577 --> 00:35:13.614 
這些就是Researchkit中
組成知情同意模塊的步驟

00:35:13.947 --> 00:35:16.884 
但要真的理解
當您運行App時看起來的樣子

00:35:16.950 --> 00:35:18.619 
接下來我將做演示

00:35:28.061 --> 00:35:31.899 
開始編碼知情同意部分

00:35:32.232 --> 00:35:33.901 
我需要開始創建同意文件

00:35:34.768 --> 00:35:36.570 
我先做這個 這是我的同意文件

00:35:37.171 --> 00:35:40.607 
首先我需要在視覺同意中
來展示同意部分

00:35:41.642 --> 00:35:43.810 
在這裏我創建一個同意部分序列

00:35:44.077 --> 00:35:46.113 
在Type 
Overview上我設置了概要

00:35:46.313 --> 00:35:47.314 
來創建一個同意部分

00:35:47.848 --> 00:35:51.084 
由於已經本地化過語言了
我不需要設置標題

00:35:55.255 --> 00:35:58.292 
我來添加更多部分您可以看到這些動畫

00:35:58.559 --> 00:36:00.160 
我再來添加數據採集部分和隱私部分

00:36:00.360 --> 00:36:03.197 
每一部分都帶有
lorem ipsum文本

00:36:05.699 --> 00:36:10.737 
此外我想展示如何給
同意文件添加實質內容

00:36:10.804 --> 00:36:13.874 
內容將添加到同意檢查文件部分

00:36:14.408 --> 00:36:17.377 
或者添加到視覺同意部分
在點擊“瞭解更多”時

00:36:17.444 --> 00:36:19.813 
發現的內容中

00:36:20.414 --> 00:36:22.282 
您可以直接指定內容屬性

00:36:22.482 --> 00:36:25.485 
它只是文本或者您可以指定HTML

00:36:25.719 --> 00:36:27.921 
如果您想要HTML的話

00:36:28.989 --> 00:36:30.257 
這是我的同意部分

00:36:31.091 --> 00:36:33.694 
我需要一些同意檢查步驟的簽名

00:36:34.228 --> 00:36:35.696 
我將添加參與者簽名

00:36:36.597 --> 00:36:38.599 
就像之前幻燈片裏我展示的編碼

00:36:38.932 --> 00:36:41.935 
帶有不同標題和不同識別

00:36:42.069 --> 00:36:44.238 
符的帶有名字和預定

00:36:44.571 --> 00:36:46.673 
圖像的調查者簽名

00:36:47.274 --> 00:36:48.909 
我將把這些添加到同意書中

00:36:50.711 --> 00:36:52.212 
然後 我就有了同意文件

00:36:52.746 --> 00:36:55.883 
我需要創建任務來展示我的同意過程

00:36:56.350 --> 00:36:58.752 
這是帶有識別符同意書的同意任務

00:36:59.152 --> 00:37:00.921 
我選這個是因爲它與調查不同

00:37:01.488 --> 00:37:03.156 
它應當是我閱讀

00:37:03.857 --> 00:37:06.226 
是我能明白我有了
一個步驟序列它目前是空白的

00:37:06.393 --> 00:37:08.295 
首先我想要一個視覺同意步驟

00:37:08.896 --> 00:37:11.932 
我添加在這裏有識別符的視覺同意書

00:37:11.999 --> 00:37:14.168 
我從我的電腦屬性中傳遞文件

00:37:15.235 --> 00:37:18.105 
接下來我將展示同意分享步驟

00:37:19.139 --> 00:37:22.309 
它僅有幾個屬性我需要
設定順序來充分填充文本

00:37:25.979 --> 00:37:27.748 
最後我需要一個同意檢查步驟

00:37:28.148 --> 00:37:29.383 
從而讓參與者

00:37:29.449 --> 00:37:32.486 
有機會輸入他們的簽名並檢查整個文件

00:37:33.020 --> 00:37:35.856 
這樣我就從同意文件中
獲得了第一個簽名

00:37:35.923 --> 00:37:37.658 
我知道是參與者簽名

00:37:38.258 --> 00:37:41.261 
同意文件本身附着
帶有獨特任務識別符號的

00:37:41.662 --> 00:37:43.830 
同意檢查步驟

00:37:44.898 --> 00:37:47.734 
有幾項我可以在同意檢查步驟額外定製

00:37:48.001 --> 00:37:51.138 
就像用戶輸入他們的名字
和在確認對話中他們同意時

00:37:51.205 --> 00:37:52.773 
所展示的文本一樣

00:37:53.440 --> 00:37:55.409 
我已經把這些步驟添加到
我的步驟序列裏了

00:37:56.176 --> 00:37:59.913 
我只需要擴展表格視圖來展示任務

00:38:07.421 --> 00:38:10.524 
制定我想展示的實際任務

00:38:12.659 --> 00:38:14.962 
我來演示同意部分

00:38:20.834 --> 00:38:22.069 
我開始知情同意任務時

00:38:22.903 --> 00:38:25.305 
直接跳到視覺同意步驟

00:38:25.906 --> 00:38:27.741 
與一些我們看到的步驟相反

00:38:27.941 --> 00:38:31.411 
視覺同意步驟每一部分有多個界面

00:38:31.712 --> 00:38:34.147 
這與我的同意文件的開始部分對應

00:38:35.215 --> 00:38:36.216 
我導航到第二步

00:38:36.283 --> 00:38:40.087 
當我向下個界面過渡時
我們有美麗的動畫

00:38:42.222 --> 00:38:45.025 
我想說一下這是預定義好的動畫

00:38:46.393 --> 00:38:48.996 
您可以進一步定製屏幕

00:38:49.596 --> 00:38:50.998 
例如爲了使其適用您的App

00:38:51.331 --> 00:38:53.367 
如果您用UIAppearance
設置色調

00:38:53.600 --> 00:38:56.403 
那就會覆蓋掉屏幕上方的控制按鈕

00:38:56.603 --> 00:38:57.704 
和下方這裏的按鈕

00:38:57.838 --> 00:38:59.673 
並改變圖像的顏色

00:38:59.740 --> 00:39:03.143 
對應的動畫可以很好地適用於
您創建的App

00:39:04.511 --> 00:39:05.879 
當我進行下一部分

00:39:06.246 --> 00:39:07.648 
您將看到“瞭解更多”按鈕

00:39:07.981 --> 00:39:12.186 
當我點擊“瞭解更多”
我能看到特別同意文件中的實質同意

00:39:14.321 --> 00:39:18.258 
我繼續來到內容分享步驟
這只是一個問題步驟

00:39:18.458 --> 00:39:20.127 
我問是隻向您的機構

00:39:20.194 --> 00:39:22.529 
還是向世界各地的研究者分享數據

00:39:22.796 --> 00:39:26.433 
我想向所有您認爲
合格的研究者分享數據

00:39:27.267 --> 00:39:31.171 
那麼繼續我會看到
同意檢查步驟它概括了

00:39:31.772 --> 00:39:34.274 
文件每部分的標題和內容

00:39:34.341 --> 00:39:36.510 
我只設置一部分內容

00:39:36.743 --> 00:39:40.113 
但如果您想爲您的同意
書設置特別的同意所有內容的話

00:39:40.380 --> 00:39:44.218 
那就會是一份需要
用戶同意的完整的法律文件

00:39:46.420 --> 00:39:48.689 
現在有時您想在文件中顯示的部分

00:39:48.755 --> 00:39:51.625 
和您在視覺同意書中顯示的部分不同

00:39:52.059 --> 00:39:53.927 
您可以通過只使用文件內的部分

00:39:54.294 --> 00:39:56.697 
在調查元件中輕易地

00:39:56.763 --> 00:39:58.365 
讓它只出現在同意檢查步驟

00:39:58.799 --> 00:40:02.102 
或者通過使用完全不同的反對代表

00:40:02.369 --> 00:40:03.637 
或第三方選擇的同意文件

00:40:03.971 --> 00:40:05.839 
您可以設置HTML檢查內容

00:40:06.039 --> 00:40:09.576 
如果您需要完全定製
它完全支持在同意檢查中

00:40:10.444 --> 00:40:11.879 
顯示您自己的HTML

00:40:14.348 --> 00:40:17.050 
我一旦同意了您就會
看到我提供的自定義文本

00:40:17.684 --> 00:40:18.886 
我輸入我的名字

00:40:23.290 --> 00:40:25.893 
繼續我可以簽字這個我做不好

00:40:26.560 --> 00:40:28.462 
最後當我完成任務時

00:40:28.729 --> 00:40:30.898 
您就得到了一個結果就像
在Researchkit上的

00:40:30.964 --> 00:40:31.798 
其他任務一樣

00:40:32.199 --> 00:40:34.201 
這裏有一個與視覺同意相應的步驟結果

00:40:34.268 --> 00:40:37.471 
顯示我看視覺同意用了多長時間

00:40:38.739 --> 00:40:41.341 
因爲我回答了“是”

00:40:42.242 --> 00:40:44.411 
就分享了一個帶有
答案“是”的問題步驟

00:40:45.145 --> 00:40:49.249 
並且您會看到最終同意檢查步驟的結果

00:40:49.550 --> 00:40:52.219 
包括我輸入的簽名數據

00:40:52.286 --> 00:40:55.589 
那麼如果我在Swift的
實際目標中找我的名字

00:40:56.223 --> 00:40:59.826 
我就能拉出我簽名的具體的UI圖像

00:41:01.962 --> 00:41:04.264 
以上就是Researchkit中的
知情同意部分

00:41:05.299 --> 00:41:06.834 
在結束這個不值得的

00:41:06.900 --> 00:41:10.671 
已經學過的知情同意之前

00:41:10.737 --> 00:41:12.873 
還有其他事項

00:41:12.940 --> 00:41:14.608 
需要提一下

00:41:15.042 --> 00:41:16.443 
我將它們分爲兩類

00:41:16.944 --> 00:41:18.979 
第一類是知情部分

00:41:21.348 --> 00:41:23.317 
第一部分是個形式元素

00:41:24.351 --> 00:41:28.689 
我們已嘗試把視覺同意很好地適用於

00:41:28.989 --> 00:41:31.625 
小的iPhone
形式元素上的同意文件

00:41:33.427 --> 00:41:37.097 
但是對於您的App您需要
添加額外的定製內容

00:41:37.431 --> 00:41:40.234 
您需要試着讓內容正好適用於那些設備

00:41:41.902 --> 00:41:44.905 
接下來我鼓勵您使用定製部分

00:41:45.439 --> 00:41:47.674 
即我們在Researchkit的
建議風格部分

00:41:47.741 --> 00:41:48.942 
輸入的內容

00:41:49.376 --> 00:41:52.980 
您需要表達您實際

00:41:53.046 --> 00:41:57.084 
需要的代表您的倫理的
您的道德檢查過程

00:41:59.186 --> 00:42:03.690 
接下來您應該開始計劃參與者的問題
是否放在同意過程中？

00:42:03.757 --> 00:42:05.392 
就是說 在用戶完全同意之前

00:42:05.792 --> 00:42:08.161 
且在他們實質上加入了您的研究之後

00:42:08.328 --> 00:42:10.364 
也許他們開始參與後會有更多問題呈現

00:42:11.832 --> 00:42:14.468 
許多已經在使用
Researchkit中的App

00:42:14.635 --> 00:42:18.505 
最後整合進一個理解小測驗

00:42:19.673 --> 00:42:21.341 
這可能是有點多餘的工作

00:42:21.642 --> 00:42:23.510 
但是得知參與者會真正理解

00:42:23.577 --> 00:42:27.548 
您在視覺同意中要表達的
也會讓您很放心

00:42:28.949 --> 00:42:31.852 
爲達到這個目的

00:42:32.553 --> 00:42:35.222 
您可以使用與調查模塊同樣的步驟

00:42:35.455 --> 00:42:36.957 
然後整合進同意任務即可完成

00:42:38.926 --> 00:42:40.794 
另一方面 我們得到同意

00:42:41.695 --> 00:42:42.829 
這裏有幾個點

00:42:43.830 --> 00:42:45.399 
一個是身份驗證

00:42:45.999 --> 00:42:50.437 
Researchkit沒有驗證您的
參與者身份的功能

00:42:50.737 --> 00:42:54.408 
但是使用Research Kit的
初始App可以用郵件驗證

00:42:54.575 --> 00:42:56.543 
來確保參與者是一個人

00:42:57.644 --> 00:43:01.014 
但這個研究可能要來
自您的道德檢查過程

00:43:01.248 --> 00:43:03.050 
您也許不需要比它差太多

00:43:03.116 --> 00:43:04.952 
比如您也許需要用第三方服務

00:43:05.018 --> 00:43:06.620 
來更可靠地識別身份

00:43:07.754 --> 00:43:09.289 
一旦您有了身份的概念

00:43:09.723 --> 00:43:12.626 
您可能想要綁定身份和相關的同意記錄

00:43:13.026 --> 00:43:15.729 
這樣一來使用一些加密簽名就是合理的

00:43:17.464 --> 00:43:18.765 
以上就是知情同意

00:43:21.401 --> 00:43:24.271 
在Researchkit中的
第三個模塊是主動任務

00:43:28.775 --> 00:43:31.245 
一個主動任務是半控制的測試

00:43:31.979 --> 00:43:34.014 
測試中會給予參與者
執行任務的逐步指示

00:43:34.081 --> 00:43:36.984 
通過設備上傳感器
在收集數據的同時執行任務

00:43:37.718 --> 00:43:39.286 
這些任務的主要

00:43:39.720 --> 00:43:42.022 
特性是它們是交互的且時間很短

00:43:42.089 --> 00:43:43.490 
因此他們是分段的任務

00:43:44.825 --> 00:43:47.961 
在一個ResearchkitApp
中目前最長的任務大約是六分鐘

00:43:48.061 --> 00:43:50.230 
大多數都只有一兩分鐘

00:43:52.933 --> 00:43:56.069 
我們看一下Researchkit中
預定義好的任務

00:43:59.006 --> 00:44:02.075 
這些任務一般有一些指示步驟

00:44:02.142 --> 00:44:04.811 
用於給您介紹任務基本上就是告訴您

00:44:05.445 --> 00:44:07.147 
它是什麼還有您需要做什麼

00:44:07.948 --> 00:44:10.250 
然後給您某些類別的指示
讓您準備去執行

00:44:10.317 --> 00:44:14.488 
接着是一個主動的步驟
數據在此時被收集

00:44:15.088 --> 00:44:18.258 
最後當任務完成時我們感謝您的參與

00:44:20.627 --> 00:44:23.363 
激活步驟是其成爲主動任務的原因

00:44:24.064 --> 00:44:29.303 
在此激活步驟是一個在我們預定義好的
單獨主動任務中的基本類別

00:44:29.570 --> 00:44:33.807 
或是生成我們需要的
每個任務中特殊行爲的子類

00:44:34.575 --> 00:44:36.810 
現在當我們釋放
Researchkit時

00:44:37.277 --> 00:44:38.445 
有五個主動任務

00:44:39.546 --> 00:44:42.182 
前三個是用傳感器收集的數據打開設備

00:44:42.816 --> 00:44:44.585 
您被要求來回走因此我們就會有

00:44:44.918 --> 00:44:46.553 
加速計和陀螺儀收集的我們的步態

00:44:46.620 --> 00:44:48.422 
和平衡任務的數據

00:44:49.089 --> 00:44:51.892 
我們來設定健康任務
當我們收集心率數據時

00:44:52.059 --> 00:44:54.127 
被要求走六分鐘

00:44:54.995 --> 00:44:56.964 
然後設定聲音任務當我們使用麥克風時

00:44:57.264 --> 00:44:58.732 
來收集您的聲音信息

00:45:00.601 --> 00:45:04.805 
此外還有兩個任務更多認知測量任務

00:45:05.272 --> 00:45:09.009 
使用更多交互觸摸行爲

00:45:09.343 --> 00:45:11.778 
我們有空間記憶任務其中有序列

00:45:11.845 --> 00:45:14.281 
被要求重複還有點擊速度任務

00:45:14.348 --> 00:45:17.251 
其中您被要求在兩個
按鈕間快速轉換點擊

00:45:19.286 --> 00:45:21.321 
此外在我們釋放
Researchkit以後

00:45:21.388 --> 00:45:23.156 
還增加了兩個主動測試

00:45:23.524 --> 00:45:26.126 
我們有一個聽力測試
還有一個反應時間測試

00:45:26.193 --> 00:45:27.194 
您將收到一個刺激

00:45:27.327 --> 00:45:29.096 
您必須搖晃設備做出反應

00:45:30.998 --> 00:45:33.567 
爲了幫您樹立一個
有關主動任務如何工作的印象

00:45:34.134 --> 00:45:35.702 
我將給您做一次演示來作爲實踐

00:45:36.136 --> 00:45:36.970 
接下來

00:45:48.882 --> 00:45:50.584 
這是一個很短的演示

00:45:50.651 --> 00:45:54.721 
因爲我只需要給這些
簡單的預定義任務一個示例

00:45:55.689 --> 00:45:58.458 
我將創建這個主動任務計算特性

00:45:59.059 --> 00:46:01.628 
該任務是兩個指頭敲擊間隔

00:46:01.929 --> 00:46:03.597 
我只需要設定幾個參數

00:46:03.697 --> 00:46:06.600 
對每個我們提供的不同的
主動任務來說這幾個步驟基本相同

00:46:07.835 --> 00:46:09.269 
您指定一個識別符

00:46:09.403 --> 00:46:10.804 
在您的研究中它必須是唯一的

00:46:11.705 --> 00:46:13.307 
您指定一個擬使用說明

00:46:13.407 --> 00:46:16.710 
作爲一個本地化的字符串

00:46:17.244 --> 00:46:19.813 
它將被代入我們提供
給每個任務的事先預定的內容中

00:46:20.314 --> 00:46:23.016 
您指定一個時間段
及您需要用戶敲擊多長時間

00:46:23.750 --> 00:46:25.419 
還可以定義一些其他的選項

00:46:25.485 --> 00:46:28.522 
來控制我們是否在
任務開始和結束時包含實際指示步驟

00:46:29.289 --> 00:46:30.991 
如果我們提供的對您不合適的話

00:46:31.191 --> 00:46:34.528 
您也許會想提供您自己的指令

00:46:37.097 --> 00:46:39.733 
現在我們有了主動任務

00:46:39.933 --> 00:46:41.735 
並且想要把它增加到桌面視圖上

00:46:41.935 --> 00:46:43.704 
我只需要做幾個改動來支持它

00:46:44.705 --> 00:46:46.773 
我把它添加到我的任務列表

00:46:48.909 --> 00:46:51.512 
作爲一個代表任務
提及我的計算屬性

00:46:52.045 --> 00:46:54.848 
當我運行它時我應該有第三個任務

00:46:55.148 --> 00:46:56.750 
就是兩個指頭敲擊任務

00:46:59.520 --> 00:47:02.256 
擬使用說明填充在這裏

00:47:02.589 --> 00:47:05.726 
其餘內容本地化到
所有iOS支持的語言

00:47:05.792 --> 00:47:09.530 
我們保持這個到所有
我們添加的主動任務

00:47:11.164 --> 00:47:13.700 
這裏是我們的下一步指示

00:47:13.767 --> 00:47:14.968 
告訴我們該做什麼

00:47:15.035 --> 00:47:16.737 
我選擇按鈕來點擊

00:47:17.271 --> 00:47:20.407 
當我進入任務並開始點擊前並不計時

00:47:20.474 --> 00:47:21.542 
我現在開始點擊

00:47:22.576 --> 00:47:26.513 
現在我們看到計時器走得越來越快

00:47:27.114 --> 00:47:28.682 
任務結束了

00:47:29.449 --> 00:47:31.485 
當任務結束時我得到一些結果

00:47:31.718 --> 00:47:32.986 
我們看一下它是如何運作的

00:47:33.854 --> 00:47:39.059 
因爲這是其中一個
認知任務數據沒有被寫到文件中

00:47:39.493 --> 00:47:41.762 
數據被存放在內存裏

00:47:42.462 --> 00:47:44.431 
我已經在JSON連載我們看一下

00:47:44.898 --> 00:47:46.567 
這裏有了我們的任務

00:47:46.633 --> 00:47:48.569 
同樣我們有開始和結束日期
和其他各種屬性

00:47:49.369 --> 00:47:52.272 
我們有與介紹指示相對應的步驟結果

00:47:52.706 --> 00:47:55.542 
我們有與激活步驟相對應的步驟結果

00:47:56.276 --> 00:47:57.744 
它包含一個子結果

00:47:57.911 --> 00:48:00.981 
就是兩指敲擊間隔任務的敲擊間隔結果

00:48:02.249 --> 00:48:05.085 
反過來它包含着一列樣本

00:48:05.319 --> 00:48:07.788 
樣本包含着每次敲擊的時間

00:48:08.288 --> 00:48:13.760 
和屏幕上的座標位置及識別符
顯示我敲擊的那個按鈕

00:48:14.394 --> 00:48:16.663 
敲擊到按鈕外的也記錄在此

00:48:17.464 --> 00:48:22.402 
此外這個結果也有
一些其它屬性細節見屏幕

00:48:22.469 --> 00:48:25.539 
我想講的是這些位置
對於其它種類的主動任務

00:48:27.007 --> 00:48:28.242 
對應着什麼

00:48:28.575 --> 00:48:31.445 
您將看到基於文件的結果
那些是帶着指向磁盤特定位置的

00:48:31.745 --> 00:48:34.915 
文件URL的ORKFile結果

00:48:35.449 --> 00:48:38.819 
它們會出現在您設定
任務控制器時指定的輸出目錄中

00:48:41.321 --> 00:48:44.124 
以上就是我的
Researchkit主動任務演示

00:48:51.632 --> 00:48:54.101 
今天我們講了
Researchkit的三個模塊

00:48:54.168 --> 00:48:57.104 
調查、知情同意、主動任務

00:48:57.871 --> 00:48:59.840 
但我想還不能結束

00:49:00.541 --> 00:49:03.443 
我想Researchkit
隨着第三方

00:49:03.677 --> 00:49:06.480 
就是你們的貢獻將會持續擴充

00:49:07.147 --> 00:49:09.550 
我們持續增加附加功能

00:49:09.816 --> 00:49:12.619 
使它與我們最新版本的軟件同步

00:49:14.188 --> 00:49:16.757 
因此有你們的貢獻它將變得更好

00:49:17.090 --> 00:49:18.325 
讓我們談談您可以如何貢獻

00:49:25.199 --> 00:49:28.302 
Researchkit只是
GitHub上的一個開放源碼項目

00:49:28.836 --> 00:49:31.104 
那意味着您可以像
和其他開放源碼項目一樣

00:49:31.238 --> 00:49:33.106 
和它進行交互

00:49:34.408 --> 00:49:37.144 
首先您需要選一個現有議題
或者開始一個新的並且評論它

00:49:37.444 --> 00:49:39.513 
從中我們得知您正在繼續工作

00:49:40.981 --> 00:49:43.183 
然後您想和我們分享什麼事項時

00:49:43.550 --> 00:49:44.785 
您要交一個pull請求

00:49:44.852 --> 00:49:46.753 
此時Apple的評審

00:49:47.221 --> 00:49:50.490 
和我們外部活躍的貢獻者將評審

00:49:51.024 --> 00:49:53.927 
您貢獻的質量

00:49:53.994 --> 00:49:56.129 
它將如何與
Researchkit匹配

00:49:56.263 --> 00:49:57.397 
及如何融入該項目

00:49:59.499 --> 00:50:02.469 
迄今爲止我們收到的修改中

00:50:02.903 --> 00:50:05.472 
90%已經整合進代碼庫

00:50:05.939 --> 00:50:07.341 
我認爲這是個良好的起點

00:50:08.108 --> 00:50:10.143 
讓我們的項目可以向前發展

00:50:11.912 --> 00:50:13.680 
一旦您的修改被整合

00:50:13.747 --> 00:50:15.082 
儘管這不是結束

00:50:15.782 --> 00:50:16.850 
此後某個時刻

00:50:18.318 --> 00:50:20.220 
我們將啓動整合過程

00:50:20.287 --> 00:50:22.289 
從而把Researchkit
帶向一個更高版本

00:50:22.356 --> 00:50:25.359 
事實上我們昨天已經結束了第一個版本

00:50:25.626 --> 00:50:28.061 
用Researchkit 1

00:50:29.997 --> 00:50:31.999 
在這個過程中我們會再次

00:50:32.232 --> 00:50:34.134 
審覈您的修改比如可訪問性

00:50:34.201 --> 00:50:36.637 
也會本地化到iOS支持的所有語言

00:50:37.237 --> 00:50:39.473 
在此請您幫忙

00:50:40.307 --> 00:50:44.111 
希望工作聽起來不算多

00:50:44.278 --> 00:50:45.379 
您願意幫忙

00:50:45.646 --> 00:50:48.682 
讓我們再來看看您能貢獻的其它領域

00:50:51.852 --> 00:50:54.154 
我們之前提到其中一個領域

00:50:54.221 --> 00:51:00.194 
是主動任務我們已經有兩個新的
上半月公衆貢獻的主動任務

00:51:02.262 --> 00:51:04.298 
我們看到還有人貢獻了答案格式

00:51:04.364 --> 00:51:08.068 
有人添加了一個垂直滑塊答案表格

00:51:09.002 --> 00:51:13.340 
有人添加了新的圖像捕捉步驟

00:51:16.076 --> 00:51:18.946 
除此以外我們期望看到更多領域

00:51:19.012 --> 00:51:20.380 
比如設備支持領域的貢獻

00:51:21.048 --> 00:51:26.486 
所以如果您有硬件設備
您認爲可以用於醫療調查研究

00:51:26.720 --> 00:51:28.889 
您可以爲
Researchkit添加支持

00:51:29.323 --> 00:51:31.124 
來幫助更多研究者在App中使用它

00:51:32.292 --> 00:51:34.928 
我們也希望添加一些後臺集成

00:51:35.229 --> 00:51:36.864 
因此如果您有後臺服務

00:51:36.930 --> 00:51:38.932 
您認爲可以很好地整合進
Researchkit

00:51:38.999 --> 00:51:40.934 
並且它可以爲研究者提供數據存儲方案

00:51:41.335 --> 00:51:44.771 
那麼您給Researchkit添加
代碼來支持您的後臺將是很有意義的

00:51:45.372 --> 00:51:46.874 
我們知道有一些貢獻者

00:51:46.940 --> 00:51:48.242 
他們已經在做了

00:51:50.711 --> 00:51:53.780 
現在我們不談細節 我想多談一點

00:51:53.847 --> 00:51:58.485 
主動任務您已看到主動任務的結構

00:52:01.822 --> 00:52:06.760 
它有指示步驟 倒計時步驟

00:52:07.628 --> 00:52:09.296 
激活步驟和完成步驟

00:52:10.531 --> 00:52:15.869 
激活步驟當您實施您的
激活步驟時基礎分類中

00:52:16.303 --> 00:52:18.338 
已經有一些有用的行爲

00:52:19.840 --> 00:52:22.976 
因而激活步驟支持記錄配置

00:52:23.277 --> 00:52:24.811 
當您爲了從不同設備的傳感器中

00:52:25.045 --> 00:52:26.680 
自動採集數據

00:52:27.581 --> 00:52:31.251 
來配置您的激活步驟時
您不用寫很多代碼

00:52:32.019 --> 00:52:34.688 
我們仔細看一下這是如何運作的

00:52:37.791 --> 00:52:38.992 
當下我們有五個

00:52:39.059 --> 00:52:40.794 
內置於
Researchkit的記錄儀

00:52:40.861 --> 00:52:44.164 
有加速記錄 運動記錄

00:52:44.231 --> 00:52:46.934 
有從CoreMotion
採集數據的計步器

00:52:47.601 --> 00:52:49.303 
有從HealthKid採集數據的

00:52:49.369 --> 00:52:50.537 
健康質量記錄

00:52:50.771 --> 00:52:52.573 
例如 它可以用來採集心率

00:52:54.808 --> 00:52:56.143 
我們也有位置記錄

00:52:56.210 --> 00:52:58.378 
我們可以在您激活步驟的過程中

00:52:58.679 --> 00:53:00.781 
從Core Location
獲得信息

00:53:02.850 --> 00:53:05.919 
現在當您在iOS上使用這些時

00:53:05.986 --> 00:53:08.121 
您需要取得用戶的同意來進入數據

00:53:08.655 --> 00:53:10.724 
Researchkit
不是一個系統框架

00:53:10.791 --> 00:53:12.092 
它不允許您繞過這些控制

00:53:12.492 --> 00:53:15.095 
但是我們試着理順這個過程

00:53:15.162 --> 00:53:18.398 
如果您使用一個或多個步驟
任務視圖控制器會通知

00:53:18.699 --> 00:53:24.505 
並在指示之後步驟開始前詢問許可

00:53:27.040 --> 00:53:29.476 
所以我稍微講一下記錄器是如何使用的

00:53:29.743 --> 00:53:31.378 
以Researchkit中這個

00:53:31.545 --> 00:53:33.480 
六分鐘走路的健康步行爲例

00:53:34.515 --> 00:53:35.549 
這是健康步行

00:53:35.782 --> 00:53:37.584 
它是
ORKActiveStep的子類

00:53:38.452 --> 00:53:40.787 
當您對ORKActiveStep
做子分類時

00:53:40.854 --> 00:53:42.789 
您也對激活步驟視圖控制器做了子分類

00:53:43.357 --> 00:53:44.958 
您有一個激活步驟視圖控制器

00:53:45.292 --> 00:53:47.327 
它有個返回指針

00:53:49.296 --> 00:53:52.733 
現在給健康步行配置了記錄器配置

00:53:53.166 --> 00:53:55.636 
它將有一個帶有特定的唯一的

00:53:56.270 --> 00:53:58.205 
識別符的健康質量記錄器

00:53:58.272 --> 00:54:01.775 
它將與結果匹配您馬上就能看到

00:54:03.010 --> 00:54:05.479 
這個記錄器配置有幾個參數

00:54:05.812 --> 00:54:07.047 
有數量種類

00:54:07.281 --> 00:54:09.183 
在此就是心率數量種類

00:54:09.650 --> 00:54:13.954 
有單位 在此就是心率監
視器上的每分鐘心跳

00:54:15.455 --> 00:54:17.224 
您可以配置不止一個記錄器

00:54:17.324 --> 00:54:20.127 
這個例子中就配置了計步器

00:54:20.360 --> 00:54:21.728 
再次，有了不同的識別符

00:54:22.095 --> 00:54:24.398 
當您運行健康步行時

00:54:25.866 --> 00:54:27.034 
您可從記錄器中識別結果

00:54:28.235 --> 00:54:31.605 
當步行開始 您有兩個記錄器

00:54:32.005 --> 00:54:33.307 
一個是健康質量記錄

00:54:33.674 --> 00:54:34.675 
一個是計步器

00:54:35.209 --> 00:54:37.744 
每一個都將用到

00:54:37.911 --> 00:54:41.481 
健康步行所附加的配置目標模型

00:54:42.983 --> 00:54:45.485 
當任務完成時您會得到步驟結果

00:54:46.086 --> 00:54:47.454 
作爲您任務結果的一部分

00:54:47.521 --> 00:54:50.457 
步驟結果將包含兩個子文件結果

00:54:50.691 --> 00:54:56.463 
每一個都是帶識別符號的
與配置對應的記錄

00:54:56.897 --> 00:55:02.669 
如前所述文件URL將指向輸出
目錄的文件在此數據會被記錄

00:55:03.637 --> 00:55:05.572 
Researchkit中的
實際序列化格式

00:55:05.639 --> 00:55:07.341 
在這裏是JSON

00:55:07.407 --> 00:55:09.109 
但如果您需要不同的格式

00:55:09.176 --> 00:55:11.011 
可以直接增加一個不同格式

00:55:13.313 --> 00:55:14.248 
以上是記錄器

00:55:15.148 --> 00:55:19.019 
現在我已經提到做一個
客戶激活步驟時您需要的過程

00:55:19.620 --> 00:55:22.523 
但我們在結束前還是描述一下

00:55:23.724 --> 00:55:25.392 
當您要創建您的定製激活步驟時

00:55:26.193 --> 00:55:28.228 
您先將
ORKActiveStep做子分類

00:55:28.462 --> 00:55:30.163 
並將激活步驟視圖控制器做子分類

00:55:30.497 --> 00:55:32.733 
通常我們有配對的分類

00:55:33.867 --> 00:55:35.235 
然後您需要構建UI

00:55:35.936 --> 00:55:37.404 
如果您需要控制整個屏幕

00:55:37.471 --> 00:55:39.139 
那就意味着您將徹底覆蓋

00:55:39.206 --> 00:55:40.807 
您的激活步驟視圖控制器的UI

00:55:41.175 --> 00:55:43.277 
或者意味着您要定製視圖

00:55:43.510 --> 00:55:46.446 
使其適合Researchkit
內置的激活步驟模板

00:55:47.781 --> 00:55:52.653 
如果您需要使用我們已有的
記錄器來採集傳感器數據

00:55:53.353 --> 00:55:56.190 
您就得配置一些記錄器
並且添加新的結果類別

00:55:56.857 --> 00:56:02.162 
以認知遊戲爲例您看到
這裏我們有了點擊間隔任務

00:56:03.664 --> 00:56:07.134 
那是個我們特別創建的結果類別的例子

00:56:07.768 --> 00:56:09.703 
當您創建類似這個的激活類別時

00:56:09.770 --> 00:56:12.306 
您需要相應地創建您自己的類別結構

00:56:12.606 --> 00:56:17.611 
該類別結構必須可序列化

00:56:17.678 --> 00:56:19.746 
那將引出您要包括在結果中的一些限制

00:56:22.983 --> 00:56:24.251 
以上是結果步驟

00:56:24.585 --> 00:56:25.853 
我們談到

00:56:26.887 --> 00:56:29.022 
三個模塊和如何給
Researchkit貢獻

00:56:30.424 --> 00:56:31.825 
我想給你們一點想法

00:56:32.326 --> 00:56:36.163 
首先 Researchkit
是開放源碼的

00:56:36.496 --> 00:56:40.400 
我想讓您做一件事複製這個結果

00:56:40.467 --> 00:56:42.469 
看它如何適用於您的App

00:56:43.537 --> 00:56:45.639 
因爲它是開放源碼的您可以做出貢獻

00:56:45.906 --> 00:56:47.941 
可以對醫療研究的未來有所作爲

00:56:48.609 --> 00:56:49.710 
這是真正的要點

00:56:49.877 --> 00:56:52.312 
這是一個開放源碼項目
它會成爲您讓它成爲的樣子

00:56:54.147 --> 00:56:57.117 
還有幾個其他領域您可以得到
Researchkit的附加信息

00:56:59.052 --> 00:57:00.487 
我們的主頁

00:57:00.921 --> 00:57:03.257 
ResearchKit.org

00:57:03.891 --> 00:57:05.826 
我們有包含在
Researchkit中的

00:57:05.893 --> 00:57:08.529 
不同項目的鏈接既有使用
ResearchKit的App

00:57:08.662 --> 00:57:10.664 
也有我們再次鏈接的框架本身

00:57:12.232 --> 00:57:15.469 
舉例來說如果您是主調查人員

00:57:15.536 --> 00:57:19.373 
您想聯繫到能幫助您的項目的人們

00:57:19.840 --> 00:57:22.709 
您可以聯繫我們
ResearchKit@Apple.com

00:57:23.510 --> 00:57:25.712 
最後關於技術支持我有兩個郵箱列表

00:57:25.779 --> 00:57:28.015 
如果您需要聯繫正在使用該框架的用戶

00:57:28.849 --> 00:57:31.785 
或者諮詢如何使用可以聯繫
ResearchKit Users

00:57:32.186 --> 00:57:35.255 
如果是關於如何貢獻的問題可以聯繫
ResearchKit Dev

00:57:36.723 --> 00:57:39.693 
當您嘗試組建一個研究App時
這裏有一些相關部分可以幫您

00:57:40.127 --> 00:57:41.762 
昨天HealthKit有新消息

00:57:42.029 --> 00:57:45.365 
我們介紹了一些新的數據種類

00:57:45.432 --> 00:57:48.202 
您可以在線訪問

00:57:48.502 --> 00:57:51.705 
我們今天早上也有HealthKit
和ResearchKit研討會

00:57:51.772 --> 00:57:53.073 
明天上午11:00也有

00:57:53.841 --> 00:57:57.845 
最後有一個健康
和健身的研討會一共半小時

00:57:57.911 --> 00:57:58.912 
希望您參與

00:57:59.913 --> 00:58:02.583 
非常感謝 感謝聆聽