《Wallet—苹果付款与更多功能的所在地》
好的 大家早上好
欢迎来到第701讲座环节
我叫达文
我非常高兴在这里
跟大家谈谈"Wallet"
就是之前被称为"通行证"的app
有了新名字
我们也换了新logo
如果你安装了iOS 9你也许
已经见到我们的图标了
这就是我们的新图标
但是美丽不仅在于外表
过去几年我们一直在为Wallet
开发新的特性
今天我们会谈到几个那样的特性
让我们看看今天的安排
和今天要谈论的内容
首先 我们看一下我们一直在做的事情
之后简要回顾一下历史
关于Wallet所有特性的回顾
我们会讲到什么是通行证
我们会谈谈iOS内的PassKit框架
我们还要谈谈苹果支付
和...其他内容
所以别走开
今天要谈的内容非常丰富
那么我们一直在做些什么呢？
苹果支付就是我们一直在做的工作
苹果支付是去年秋天推出的
反应...
非常好！
消费者们喜欢它的简单易用
商户们喜欢它的高转化率
现在有了苹果支付就能完成无接触付款
无论是在我们的手机上还是在手表上
我们甚至发布了一个API
所以你可以在你的app中安装苹果支付
为了更好地理解Wallet的实质
理解我们为什么开发它
我们要回顾一下
回顾我们过去的足迹
了解我们如何来到这里
这...
是不是似曾相识？
是不是眼熟？
是不是谁有这样的Wallet？
我敢肯定观众中
有人的Wallet是像这样的！
这就是真正的问题所在
我们把礼品卡放在这里
借记卡和信用卡放这里
还有优惠券
然后当我们想要找东西时
我们却找不到
Wallet里塞的东西太多
这真的是个问题
我们在试图用Wallet解决这个问题
我们是用通行证实现的
在Wallet中有好看的通行证
我们有通行证
优惠券
有活动门票
有商家卡
甚至有登机牌
但所有这些通行证的共同点就是
它们让我们能够将其用于现实世界中
现在
有了苹果支付我们的信用卡
借记卡也都可以放在Wallet里
不仅如此
我们想要解决无法在合适的地点
合适的时间找到东西这一问题
所以我们在
所有通行证内部建立了关联性
看起来就是这样子
如果你到了机场
你的登机牌就在那里等你
我要做的就是把锁定的手机屏幕划开
然后我的登机牌...
就能...用了
太棒了！
这真的是带来了莫大的惊喜
让我们看看这些通行证
从根本上讲这些通行证包含信息
在左上角你会看到一个logo
清楚表明这个通行证属于哪个实体
现在我们专门来看一下
美国联合航空公司的登机牌
他们的logo...
就在上方的显著位置
在左上角
我们把重要的信息都放在标头栏
就像登机口信息就在这里
用户将会清楚地知道在他们的登机时间
他们该去哪个登机口
再往下的主要区域
是我们的其他重要信息
就这个例子而言我们的航班
从纽瓦克起飞
终点是斯德哥尔摩
还有辅助和次要区域
那里有我们最好知道的其他信息
比如说座位号
当然了我们有...
条形码
这就是那个链接
它所含的信息把用户链接到您的系统
以便在现实世界中完成操作在刚才的例子中
登机牌帮助我们的用户登机
我们把它翻到背面
通行证的背面
你马上会注意到
在最顶端 您可以把某个app与通行证关联
准确无误地
我们让联合航空公司的app
与这个登机牌进行关联
这里也有两个用户选项
能自动升级这个登机牌
这很重要
我们在稍后的讲解中会谈到这点
能够升级这些登机牌就是保持信息的更新
我们也能够在登机牌背面
开启关闭关联
这就是选项按钮"在锁屏上提示登机牌"
除此之外 在登机牌背面
还含有其他一些需要了解的信息
比如说条款之类的东西也可以出现在登机牌背面
那么是什么让通行证成为通行证？
让我们看看这个漂亮的美国职业棒球大联盟(MLB)赛事门票
这个通行证由一个pass.json file生成
它的内容和版面
由这个文件定义的
它就是您的标准JSON文件含有各种键和值
在本例中键和值决定通行证的
内容风格和版面
这个MLB通行证有些的确漂亮的图片
我们在左上角有个logo图片
我们有个横跨通行证左右两侧的长条形图片
它让整个通行证生动起来
当我们把所有这些打包
我们就得到了被称为PKPass的文件
文件的层次结构就是这样
你的PKPass文件包含pass.json
和刚才讲过的图片
以及另外几个我要讲到的文件
首先 这里包含本地化字符串
是的 通行证能被本地化
我建议你们这么做
你还会在底部注意到
清单文件和签名文件
我们的通行证签名加密的
这样它的真实性才能被验证
用户们也能知道通行证来自于一个已知实体
这很不错
所以现在有了PK通行证文件
到这里它只是个普通的通行证文件
我们如何把它变成独一无二？
成为你的通行证呢？
我们使用三个不同的值
确保你的通行证是独一无二的
第一个是团队标识符
这是有10个字母的字符串
在开发者门户网站里能够找到
我们用它来让app
通过PassKit即我们的架构获得访问授权
我们使用的第二值是passTypeIdentifier
现在它可以对通行证进行分类
确定它是哪类通行证
你也需在开发者门户网站进行注册
我们也用它对通行证进行归类
最后我们有通行证序列号
每个通行证的序列号都是唯一的
完全由你个人自行选择我们无法获晓
现在我们把这个值即序列号
和通行证类型标识结合起来
就能确保你的通行证在世界上是独一无二的
和所有这些值一道您也通过pass.json
声明您的通行证的关联性
我们现在就看看关联性
关联性...
有三个层面
你可以使用日期
可以用位置
还可以用信标
是三者的结合
使得通行证变得真真正正的强大
下面我们看一下我们如何在pass.json
实施关联性
我们有几个键
首先我们来看位置键
这需要...
字典阵列
字典内含一对经纬度坐标
和一个可选的关联性文本
当你的用户位于或接近那个位置时
这个关联性文本会出现
因此向用户声明...
能够向用户阐明
为何展示那个内容是有帮助的
我们还有关联日期
而那正是您使用的标准的W3C格式relevantDate
然后 我们有信标
信标键...
是一个阵列
在这个阵列中是字典
proximityUUID能确认你的信标的唯一性
这里又再次出现了关联文本
还有可选的姓名字段
再强调一遍当你把所有
这些关联分类组合在一起
你的通行证就能变得真真正正的强大
这些已经在发挥功效的特性
对您的用户也是莫大的惊喜
用户对通行证感兴趣的前提
是他们的信息是最新的
那么如何让我们的通行证保持最新状态？
现在我将从一个非常高的层面上来看一下
它是如何工作的
而且我将参考回顾一个
我们在2012年的WWDC上的讲座 
那个讲座深入探讨了这一话题
现在就让我们观看这段讲座
因此你的服务器将实施苹果推送服务
我们就是利用苹果推送服务
来启动通行证更新
我们向下传递通行证类型标识
刚刚前面几个幻灯片讲到过
有了通行证类型标识 我们就可以查看你的pass.json
寻找网络服务密钥
这个密钥中将包含一个URL
利用它我们就能
请求更新通行证
然后我们就能让带有所有更新内容的全新 pkpass文件
向下传递到我们的设备之后我们就更新用户通行证
那就是站在一个很高的层面上看它是如何工作的
我强烈推荐大家回去看看那个2012年的WWDC讲座
探究如何为通行证实施网络服务
非常好 现在让我们看看如何以编程方式
获取这些通行证
我们确实在iOS操作系统内内置了PassKit
我们看怎么用这个工具包
我们在PassKit中使用较多的类是
是工具包里的PK通行证库(PKPassLibrary)
这是为您提供的链接
你用它能够查询你用户的通行证
而对它的访问则需要授权
我们在前面一点讲到过
是通过使用你的通行证类型标识
下面来看一下PKPassLibrary的一些使用方法
首先我们有个函数它询问：
在这台设备上是否有通行证库可用
这是个很必要的问题
如果答案是有我们就能得到...
通行证
当你调用通行证时你会取回一个PK Pass阵列
这些是你被授权看到的所有通行证
你也会找到一个你正在寻找的
特别的 具体的通行证
方法是通过调用passWithPassTypeIdentifier
传递标识后加字符串
序列号后加字符串
这样你就能得到你想要找的通行证了
我们还有另一个passesOfType
用来传递PK通行证类型
你可能会想知道都有哪些不同类型的通行证？
它们分为...
条形码
支付
和任意类型
你也许还会问
达文为什么要获取通行证？
为什么要看用户的通行证？
作为开发者你应该知道
你用户系统上已安装的所有通行证
那样你就不用再重做一遍了
对于支付通行证我们前面讲到了
银行和其他商户要能够激活
你用户通行证库里的支付通行证
我们进到苹果支付部分内容后将对其进行深入探讨
现在我们把所有通行证汇集在一起
他们设计美观相互关联
实时更新我们如何能够
让它们进入我们的用户手中呢？
PKPass文件非常的便携
你可以从网址上下载
用电子邮件发送给你的用户
你甚至可以把它装进你的apps
我还要指出它的一个小功能 
让我们专门看一下
iOS apps里的PKPass文档 比如邮件
当我们用电子邮件接收了一个PKPass文档
Mail会对它进行特殊的处理
点击这个按钮你就能获悉在这封电子邮件里
是什么PKPass文档
如果你在某个网站上托管它或把它装进某个app
我们甚至为您提供一个横幅广告
你可以把它加入网站或装在你的app上
但你会告诉说：
达文你知道你是在讲Passbook吧
是的 我知道这是在说Passbook
这个是我正在谈的一个不错的小过渡
我们正处于过渡期
我们正要从Passbook过渡到Wallet
目前 在公共场合我们还叫Passbook
所以请记住这一点
但请随时关注随着离我们发布iOS 9的
时间越来越近
我们会让大家第一时间知晓
很高兴能谈到这些
但我们要说必须以编程方式添加这些通行证
你要怎么来做呢？
是的PKPassLibrary能够做到
我们有个函数叫addPasses
对了多个通行证
为什么要这样做？
设想一下...
就像一个航班分为几段
而你想要一次处理所有通行证
这是个很好的方法
所以addPasseswithCompletionHandler
会用非常简短巧妙的对话提醒用户
向库中添加这些通行证
有一点你要确定在调用前你已告知用户
他们正在添加通行证
当然我们还有另一种方式添加通行证入库
即使用PKAddPassesViewController
若你曾在Mail里加过通行证那么你可能见过这个命令
它看上去和这个类似
您点击一个通行证
它们会调用PKAddPassesViewController
就会出现一个已经过充分渲染的漂亮的视图控件
并在顶部提供了用户可以选择的动作
这是如何工作的？
PKAddPassesViewerController有个功能
它向你核实：你要添加通行证到此设备吗？
那么和以前一样你可添加一个
或多个通行证
因此你选择其中的一个
展示这个视图控件然后我们就负责
为您执行那个通行证
很棒
现在我们可以添加通行证
更新它们
我们可以保持它们的关联性
但是怎么能让这些通行证具有持续的吸引力呢？
我们希望用户不断地回访
关注我们的通行证
这儿有几个小窍门让您维持通行证的吸引力
就像我之前讲的关联是件大事
关联能在生活中带来巨大的惊喜
你要为用户着想
你应该让通行证实时升级
比如说这个登机通行证
如果没有最新的登机口信息它就毫无用处
用户们要不断回来查看你的通行证
图像很管用
看这个这个MLB通行证
这个长条形图片横跨整个通行证
感觉生动明了
让人一下子明白这个通行证的目的和用途
这是个长条形图片
你注意到这里并没有其他多余信息
就只是环境的信息
非常美观！
最后我要讲讲格式
格式有点棘手
但让我们帮你处理
现在我们知道有不同的设备
屏幕的尺寸不同
我建议...
你参考我们网站上的 《人机界面指南》
按照指示操作然后我们就能尽量
让您的通行证适用我们的所有设备
很棒这些通行证真的好用
它们真的让我们将其用于现实生活中
但真正用起来还是比不上
苹果支付那样顺手
我们如何大幅改进那种体验呢？
好了 现在我们就来谈谈从这里开始我们会走向何方
让我给您设想一个情景
有一天我来到我小区内的杂货店
拿上要买的东西
准备结账
太好了他们支持苹果支付
我走向款台
收银员扫描我买的商品
我准备好手机用苹果支付结账
好
他们扫描完了我的商品
我把我的手机靠近销售终端...
您有我们的会员通行证吗？
我想我是有的
收银员坚持要看会员卡
我想它是在我那个鼓鼓的钱包里面
但我现在就是找不到它
我觉得它应该是
是用我手机号注册的
我把手机号报给收银员
不对
不是用那个电话号码注册的
我泄气了 后面的队伍已经有二三米远了
我又报出我妈妈的手机号
因为我知道我妈妈会有这种会员通行证
好极了 行！
我终于能用苹果支付了
拿上我的东西出店门
不顺的事情一件又一件是吧
作为消费者我只求顺利支付
迅速结账走人
*对于商户
他们得到是完全错误的会员信息
他们掌握的是我妈妈的会员信息而不是我的
我们要对此加以改进
这就是为什么我们要推出
与苹果支付相匹配的通行证
通行证与苹果支付结合
传递你的会员信息
通过苹果支付完成无接触式付款
我们遵循增值业务协议
一直致力于与主要的收银机厂商合作
促进采用这种新的协议
现在再看一下刚才的场景
我来到好客的小区便利店Walgreens
他们支持苹果支付太好了
我使用苹果支付 我使用iOS新特性
双击主页按钮激活我的卡片
在我到款台前我的卡已经准备完毕
太棒了卡已备好
我马上就能支付
我把手机放到收银机上
我的Walgreen会员信息
被无接触式传输
还有支付信息
轻击即可完成
就这么简单！
我笑着对收银员说了声：谢谢！
然后出门
实在太棒了！
那让整个过程顺畅多了
这是怎么做到的？
我们怎么把这个特性加入到您的通行证？
我们有个新方法
就是pass.json
确切是说是nfc
Nfc是个接受信息的字典
有点像条形码这是将此用户身份
与您的系统连接的会员信息
或任何相关信息
我们有可选的encryptionPublicKey
这能确保这个通行证的真实性
这有点像您自己作为商户
和您的收银机...
进行握手
那么 这就是你如何...
把与苹果支付结合的通行证
整合到你的通行证中
如果你是商户或收银机厂商
对此感兴趣
请联系我们
我们的开发者关系团队本周都在这里
你可以和他们联系
讲座后我会给出联系方式
如果您感兴趣请告知他们
我们会着手为你进行苹果支付与通行证的整合工作
说到苹果支付
它真的非常棒
就像我刚刚说过的
我们现在已经实现了在手机上手表上的无接触式支付
甚至也支持API
所以你可以把苹果支付整合入您的app内
苹果支付确实很棒
因为它能为您的用户带来无缝支付体验
商户将全面获得更高的转化率
所以我们鼓励我们的用户
在他们的设备上添加苹果支付卡
具体做法呢？
我们将提供给你们所需的API来完成
有两种方式
第一种是直接将您的用户引导入我们的Wallet app
并且从那里开始安装
第二种是在您自己的app里
设置这些卡片
先看第一种
进入PKPassLibrary
操作非常简单
我们调用 openPaymentSetup
那将让用户直接进入Wallet
启动安装流程
而现在有了iOS 9的新特性
你的用户可以轻松地返回到你的app
我们给他们留了一点面包屑导航让他们点击
这样他们就会返回到你的app
并继续做他们之前在做的事情
希望是购物
如果你是一家银行或是推出了赊购卡
或自有品牌信用卡的商户
你当然希望这种事情在您自己的app里发生
我们也有相应的API
那其实是视图控件
就是PKAddPaymentPassViewController
当然你需要确定这个特定设备
是否能够添加支付通行证
如果能我们就设置这样的一个通行证
我们可以将其写入requestConfiguration
并将其传入委托语句
这个您在自己的app中执行的授权语句
将把那些信息片段组合在一起
如nonceSignature会组成
AddPaymentPassRequest
这个真的深究起来要讲很长时间
今天这节专题讲座上我没有时间
对此进行深入探讨
所以如果关于如何使用这个类你有任何问题
请大家自己查看文稿
这个类将是大家有权查看的
那么 如果您愿意在你的app中使用这个类
也请告诉我们
当把支付通行证加入苹果支付时
用户们可能还需执行的另外一个必要步骤是
需要进行支付通行证验证
或“第二因素验证”
有些人知道这个
在使用普通流量的同时
比如使用SMS或通过打电话
或电子邮件你还可以选择使用app
大家看Capital One如何利用他们的app
验证用户的身份
我们要如何做呢？
我们给你们几个API
帮助在您的app里完成验证
它也在PKPassLibrary中
先检查...
是否有支付通行证
是否可激活？
还记得当我们从用户库中
提取PKPasses时吗？
这就是激活的用处所在
你可以把PKPaymentPass
传递到这个调用命令中去
并向其中传入一些激活数据
然后你会得到一个表示已完成的反馈
告知您激活是否成功
那就是您如何在自己的app里执行验证程序
这也是我们的手机一直非常受欢迎的原因
除此之外我们还有特别棒
真的非常棒的辅助程序
还会衍生出一些功能
我们应该好好利用
这些辅助程序功能
我们现在宣布与iOS 9一起推出
一个无接触界面按压API
它会暂时使用户界面失效
这是你看到的通行证表单
这将需要征得用户允许
来看一下我们是如何做的
还是在那个PKPassLibrary中
PKPassLibrary有一个新函数 名为
requestAutomaticPassPresentationSuppressionWithResponseHandler
太绕嘴了
你能得到一个回复结果
关于用户是否同意
在你的app里允许按压
同时还有一个申请图标
用这个图标你就可以再一次调用
endAutomaticPassPresentation
传递进去这个requestToken
payment UI就会再次出现在你的app中
你也可以查看是否automaticPassPresentation
Suppression已经
通过使用这个函数而出现在这里
正如我刚刚讲到的这只是暂时的
如果你的app被停用
支付通行证 UI 会重新出现在用户面前
或者在你上一次请求24小时后
你需要再次申请征得你用户的允许
这些类和调用已被授权
所以如果你有意向使用它们请一定告诉我们
去年秋天
与苹果支付一起推出的还有Apple Watch
现在我非常高兴的宣布:
我们将在watchOS 2中
内置对Apple Watch的全面PassKit支持
这很了不起 因为现在
在Apple Watch上你可以添加
移除 查询通行证就像你原来
在手机上做的...
那样
所以Apple Watch和watchOS 2将获得全面PassKit支持 
我想说的还有一件事
是关于Apple Watch屏幕尺寸的
Apple Watch屏幕要小很多
我要指出的是正因如此
通行证的调用有些不同
在Apple Watch上
请看这个漂亮的界面
这是通行证在Apple Watch上的样子
如您所见 这是MLB通行证
前面的幻灯片出现过
你会马上发现...
它的些许不同
长条形图片没有了
而且通行证也没有反面
所以请看一下并且记住在不同的设备上
通行证看起来确实不一样尤其是在Apple Watch上
因此设计通行证并实施的时候
请考虑到那一点
当然了 如果你遵循《人机界面指南》
我们将承诺尽力让你的通行证看起来很棒
无论在我们的何种设备上
这就是PassKit和Apple Watch
还有一件事我要讲
一维条形码
我们一直在收到很多使用一维条形码的申请
我很高兴告诉大家在iOS 9中
我们将对Wallet提供一维条形码支持
很高兴大家喜欢
所以我们有个新的条形码格式
就是PKBarcodeFormatCode128
你也许要问:我那些仍用iOS 8或更低版本的用户
怎么办呢？他们能享用这些吗？
很遗憾不能这也是你们为何会有这条退路
我们还是有条形码密钥
那个条形码密钥是非常非常重要的
这里我们要做的是实施二维条形码
我们有新的多条形码密钥
它是一个阵列
包括一个由多个条形码组成的字典
所以你看在第一个字典里
我们有个新的条形码阵列
PKBarcodeFormatCode128的条形码
就是一维条形码
因此请大家在实施时
拜托大家
一定要核实你的系统支持一维条形码
我指的是光学扫描仪
请大家记住要退回到二维条形码
只有这样使用iOS 8或更低版本的用户
他们的通行证才有条形码
好了今早我已经讲了很多
如果一定要我说应该记住本讲座的哪些内容的话
那就是这些内容：
我们正在解决现实中钱包过满的问题
我们现在不需要那个实物钱包了
我们不想再查看钱夹子了
我们用通行证实现
通行证让我们在现实世界通行无阻
它们能被很容易被整合
融入你的app你的现金流
当通行证有了吸引力它们能让你的用户们
在你的系统里保持互动并持续关注您的系统
而我想要提醒大家的是
把苹果支付集成进您的app
并鼓励你的用户在他们的app里使用苹果支付
记住你要的是平稳无缝的支付流程
我们也想要为我们的商户
带来高的转换率
我甚至都没谈到把苹果支付
作为支付手段集成到app内
本讲座不包括那么大的话题
但紧接着的...
讲座主讲人是我的同事Nick和Rachel
将是非常非常棒的
他们会讲到我略过的话题
他们会帮大家将苹果支付集成到您的app中
请记住使用Wallet和苹果支付
去吧 去兑换优惠券！
去吧 去花钱消费吧！
我讲的过程中提到了很多资源
有几个我想要告诉大家
首先在我们的开发者网站上
有个Passbook for Developers专属站点
我们还有一个苹果支付专属站点
我还提到了往年WWDC的几次讲座
这是2012年的
名为"Passbook简介:第一和第二部分"
它将真正地深入探讨如何设计通行证
以及如何升级通行证
然后是2013WWDC讲座
“将Passbook融入您的生态系统”
这些是大家应该查看的真的很棒的资源
当然我们的开发者论坛
也供大家使用
一个真正了不起的技术传播者保羅随时帮助你们
这是他的电子邮件地址
再次感谢您拨冗出席感谢您的到来
并倾听关于Wallet和苹果支付的内容
希望大家过得愉快
非常感谢