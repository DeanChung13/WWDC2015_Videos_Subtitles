《Safari ViewController之簡介》
大家下午好
歡迎各位
在我們開始講座前我想對大家有一個瞭解
你們通過舉手方式回答
如果你們有蘋果公司
App商店正在上架的app請舉手
你們很多人都有
歡迎 你們來對了地方那就是WWDC
在你們中有多少人剛開始學習如何寫iOS Mac
或蘋果手錶app？
你們中有一些是
同樣也歡迎你們
在你們已經創建或
正考慮創建的所有app中
有多少是專用網絡瀏覽器
好的 你們有一些
人數不那麼多
你們中有多少人在你們的應用中
包含一個小型網絡瀏覽器
每當用戶點擊時就顯示
哦你們都舉手了
好了我是Ricky Mondello
Safari和WebKit團隊的一名工程師
我接下來半小時的目標是
讓你們中間所有以編寫小型網絡瀏覽器
爲業務的人破產
我將給你們展示如何使用Safari
或新的Safari視圖控件
使你們有更多時間關注
對你們的app有特殊意義的部分
併爲你們的用戶提供
已經喜歡的Safari特性
大家準備好我們開講了
這個話題的中心是網絡內容
網絡內容有很多分爲不同的形態和大小
但在今天的討論中
我將把它大致歸爲兩類
第一類內容是在你們的app中
用HTMLJavaScript和CSS書寫
你們擁有這些內容
或你們將特別介紹這些內容
重要的是
它看起來並不像傳統網絡瀏覽器上的內容
它不是用戶瀏覽網站時看到的內容
我們看第二種情況
當一個用戶點擊了你們app中的一個鏈接
你們想給他們展示一個類似Safari的視圖
這樣他們可以做一些短暫的瀏覽
這次講座主要關注第二種使用情況
我們將看到Safari和Safari視圖控件
如何爲你們的應用增加已經過多年驗證的功能
並改進你們的應用
但是在我們開始展示前
我想快速說明另一個使用情況
如果你們正在你們的app中
以一種不像傳統網絡瀏覽器的方式使用網絡內容
你們可能正在使用WKWebView
或UIWebView
但WKWebView是首選工具
它是你們的朋友
它是在iOS 8和OS X Yosemite中推出的
基本上它只是一個網絡內容周圍的矩形
你們把一個頁面加載到它裏面
你們可以評估JavaScript
並且在當前頁面上
得到一個JavaScript評估結果
你們可以修改導航或徹底阻止它們
是否增加你們自己的用戶界面
後退 前進按鈕
交流進展等等
取決於你們自己
在iOS 9和OS X El Capitan
我們收到了你們的最新反饋
我們已經包含了一些WKWebView
以前缺少的片段
首要的是
你們現在能夠安全地加載很多FileURL
你們同樣可以加載數據
例如你們過去想用這種方式加載的文本格式HTML字符串
你們不需要起轉服務器
你們可以選擇設置你們自己的自定義用戶代理字符串
我們已經增加了一個新的API用於處理網頁儲存的數據
如cookies緩存和其它數據
這就是WK網站數據存儲(WKWebsiteDataStore)
在您的網絡視圖中的WKWebViewConfiguration中
它具有可讀或寫屬性
使用這個數據存儲
你們可以根據類型刪除數據
或者你們可以刪除...
前一小時添加的所有的數據
這很棒
因爲這個屬性
你們配置中的存儲是可寫的
你們可以用一個非永久性配置替換它
你們也會在實現私密瀏覽方面
去這麼做
對於你們app中你們自己的
自己控制自定義的網絡內容
WKWebView是能勝任的工具
在iOS 9和OS X El Capitan中
我們給你們提供了更靈活的選擇
如果你們在想：
我不需要那樣靈活的選擇
我不想在頁面上評估JavaScript
我不需要修改導航
我不想接通我自己的後退和前進按鈕
那麼接下來的講座就是爲你們準備的
我們會談論你們怎樣使用Safari
或者Safari視圖控件
以便讓你們的用戶得到更好的體驗
你們寫的代碼也更少
你們第一個選擇是
索性把展示網絡內容的責任
交給Safari本身
這是極其容易做到的
只需調用UIApplicationsopenURL方法
iOS會從你們的app切換到Safari
iOS 9的一個新特性
你們昨天看到的是系統預設用途
就是回到上一個app的能力
使這它成爲比以往更好的選擇
它比iOS 8更輕便
把展示網頁內容的責任委派給Safari
確保了用戶在使用網頁內容時
得到一級體驗
那就是Safari所能做到的
如果你們想保持你們app目前的體驗
用戶甚至對您的app難捨難分
你們會對Safari視圖控件感興趣
讓我們我們看一下
這是來自於apple.com網頁的Safari視圖控件
網頁內容經過了灰色處理
你們可能最先注意到
Safari視圖控件很像Safari
卻又刻意有一些不同
Safari視圖控件的職責是
讓用戶能夠更輕鬆更愉悅地
在你們的app中點擊鏈接
瀏覽網頁
以及點擊“完成”並返回你們的app
Safari視圖控件消除了讓人分心的東西
你們在上方看到的
那個URL區域是隻讀的
你們不能更改它
而且只有這一頁
沒有其他選項卡來分散用戶的注意力
以Safari名義
Safari視圖控件帶來了
你們的用戶本已喜歡的Safari功能
但現在...
它們在你們的app中
讓我們開始
首先最重要的是...
Safari視圖控件與Safari和其它
網站數據分享cookies
這意味着如果你們的某個用戶
已經用Safari登錄到一個網站
若他們點擊您的app中的一個鏈接
這時Safari視圖控件出現
他們可能仍然處於登錄狀態
但如果他們還沒有登錄
那種情況我們也想到了
因爲Safari視圖控件允許你們使用密碼自動填充
填充用戶所有通過蘋果iCloud Keychain機制
在用戶的所有設備上同步的任何密碼
但是在我們繼續講座前很有必要指出
這對你們的用戶是完全安全的
安全的原因是
我們爲你們的用戶提供訪問他們的
證書 用戶名密碼的權限
但是沒有給宿主app訪問這些數據的權限
實際上 Safari視圖控件與你們的應用程序
運行在不同的進程中
這使你們絕對免受責任的約束
不必考慮這種重要而敏感的用戶數據
責任是我們的
好了讓我們回到特性的話題
如果用戶想讓貨品
發到他們的住所或他們的工作地址
他們將可以使用接觸卡自動填充
像使用Safari一樣填寫信息
在購物的時候
他們同樣能夠填寫他們的信用卡
如果你們的某位用戶
遇到一篇...
有趣...
引人入勝...
但難以讀懂的文章
她將可以使用Safari讀者按鈕
以獲得一個相關內容的簡化清晰版本
這太好了
當然Safari和Safari視圖控件中的iOS 9
共有的新特性是閱讀器可定製
提供很多可供選擇的主題和字體
網絡閱讀變得前所未有的容易
你們和客戶可以完全按照自己想要的方式閱讀
從分享按鈕那裏你們會找到自己期待的東西
你們會發現遍佈於系統內的
向社交網絡分享的選項
你們也將發現可以添加到個人閱讀清單
但是你們能發現的不止這些
因爲除了這些功能外你們的app
也專爲Safari視圖控件提供一些功能
如果你們的app是一個社交網絡
你們可以在分享頁設專用按鈕
以便將當前網頁分享到社交網絡
真是太酷了
Safari視圖控件在定製方面
會尊重你們的app設定的
自定義顏色
本例中幻燈片上的顏色
從Safari默認藍色變爲橙色
它是用戶使用Safari視圖控件時
瞭解使用的是何種app的給力方法
下一個特性很震撼它是iOS 9的全新特性
內容屏蔽功能
請繼續
內容屏蔽功能的大概思路是
這能夠通過拿走一些內容
以改進瀏覽網頁的體驗
在iOS 9中當用戶瀏覽網頁時
任何app都可以對Safari和Safari視圖控件
應該屏蔽的網頁內容進行描述
讓我們看一個示例
這兒有一個
有很酷內容的網頁
但是我不喜歡側邊欄內的
所有那些誘惑點擊的標題
如果你們設置了合適的內容屏蔽條件
你們將不會相信接下來發生的事情
你們會的
那些我不喜歡的內容消失了
但那還不是全部內容屏蔽的功能不止這些
內容屏蔽功能可以做的事情
遠不止隱藏網頁上的元素
你們可以徹底阻止加載
阻止你們實際並不感興趣的
來自於第三方域的...所有影像或腳本
用戶在設置中打開的所有內容屏蔽條件
將同時適用於Safari
和Safari視圖控件
這意味着你們
從使用小型網絡瀏覽器切換到使用
Safari視圖控件後
你們將不會收到任何關於用戶的廣告屏蔽器不起作用的投訴
這太酷了
那真是很多有用的功能
接下來我們講講安全
我剛纔提到Safari視圖控件
與你們的app運行在不同的進程中
這爲你們免去了很多責任束縛
不必爲重要的用戶數據承擔責任
但是在瀏覽網絡內容時
有一個能夠給用戶提供安全的
表達接口同樣重要
Safari視圖控件能在這方面
做與Safari同樣的工作
最重要的...
是安全網頁
Safari視圖控件像Safari一樣
把SSL的有效性告知用戶
假如用戶遇到糟糕的一天
他們碰到一個網絡仿冒網頁
Safari視圖控件會
跟Safari一樣警告他們
讓他們回頭
總的來說
Safari視圖控件具有Safari的所有給力特性
它具有你們用戶已經喜歡的特性
像密碼填充
具有cookies共享功能
用Safari Reader輕鬆閱讀文章
以及iOS 9中的
內容屏蔽功能
它還具有一些小功能
像當進程正在加載一個好看的進度條時
正確告知進度的功能
以及加載時如果出現錯誤
顯示錯誤頁面信息的功能
你們的小型網絡瀏覽器能或不能做到所有這些
但使用Safari視圖控件便不需要了
由於增加了...
經多年驗證多年的Safari特性
能夠做這些
並優化你們的app
爲你們的app做很多年的優化
我很高興的說使用Safari視圖控件確實很容易
讓我們看看API
在代碼方面Safari視圖控件
被稱爲SFSafariViewController
它是Safari服務框架的一部分
你們可能猜到它是
UIViewController控制器的一個子集
我馬上會講到它有一個Delegate變量
以及一個初始值(initializer)它需要一個URL
這是你們的用戶點擊的網頁URL	
你們想展示的網頁
讓我們快速地看一下delegate
在delegate方面的第一個方法是
當用戶點擊分享按鈕時如何把你們自己的自定義活動
提供給分享頁
delegate方法二是
在當用戶完成瀏覽點擊做“完成”按鈕時被調用的
當爲了擱置視圖控件時
你們會想執行這個方法
總的來說
這是一個非常簡單的API
爲展示這個簡單的API有多強大
以及它將爲你們的app省去多少行代碼
接下來我高興地請上我的同事Yongjun
到臺上爲大家做演示
你好Yongjun
謝謝你瑞奇
大家好我是Yongjun
我是Safari和WebKit工程師
歡迎來到這個環節
我不瞭解你們但今天我非常想吃些披薩
我在寫一個尋找我附近披薩店的app
這就是它
我稱它爲“披薩發現者”
我有一個披薩店列表
選擇第一個店鋪我得到電話號碼
地址和店鋪網站的鏈接
我的任務是使我的app顯示這個網站
使我可以瞭解店鋪的更多信息
像瑞奇提到的我們有三個選擇
第一個選擇
用openURL讓Safari爲我們打開網站
選擇二
是你們建立一個網絡視圖
建立我們自己的瀏覽app
選擇三
使用Safari視圖控件
我先爲大家演示選擇一
我轉到我的Xcode項目
在我的店鋪視圖控件裏我有個函數
是showStoreWebsite（展示店鋪網站）
我只需要拽一行代碼UIApplication openURL
這會使Safari打開這個URL
讓我們測試一下它
運行此app
選中第一家店鋪點擊鼠標左鍵
現在Safari爲我打開了這個網站
可以看到網頁上有一個閱讀器
如果我試圖訂披薩
我的用戶名密碼會自動填入
我以前應該來過這個網站
可能我訂過披薩
現在我使用Safari
我希望用戶始終黏在我的app上
不希望他們切換到Safari
只爲了訪問一兩個網站
這會使他們分心
而且或許以後也不會回到我的app了
因此我確實需要在我的app中有個瀏覽器
我將嘗試選擇二
製作自己的瀏覽器
首先我想回到我的app
衆所周知 如果我們在這個app有一些網頁內容
如果網頁內容碰巧是我的UI
或UI的一部分
WKWebView是最勝任的工具
當然 在本例中我想使用WKWebView加載網頁
加載網頁
但是我同樣想在這方面使用一些UI
譬如 爲展示這個URL
我想在頂端有一個URL欄條
爲做後退前進導航
我也想在底部有一個工具條
WKWebView是個非常豐富的API
它提供多種delegate功能我可以用它們
偵聽頁面加載事件或導航事件
我可以使用這個delegate驅動我的UI
爲給這次演示節約時間
我已經有一個單一瀏覽器
讓我們看一看下它
在Xcode項目中我切換到另一個標籤
把單一瀏覽器封裝成視圖控件
在中間我有WKWebView
在頂端我有一個導航欄
我用導航欄的標題顯示此URL
在底部我有一個來回按鈕
用來做後退和前進導航
這是一個簡單類
它大約有80行代碼
這花費我大約一小時
我相信我們可以做得更好
但是不管怎樣讓我們測試一下這個瀏覽器
我回到我的...
店鋪視圖控件
刪除剛添加的行
並把一些行拖拽到這裏
我將要做的是從storyboard加載我的視圖控件
給它分配一個URL並讓它顯示
現在讓我們看一下
我運行我的app
選中第一個店鋪
並點擊鏈接
這是我的瀏覽器
它在我的app運行
爲了訪問此網站我不必切換到Safari了
這很好
URL欄實際上變成了灰色
因此它不會變得使人分心
但是也請注意當我拖拽頁面時
沒有使用Safari UI的動力
並且這個頁面沒有閱讀器
這會因此現在對我來說閱讀比較困難
如果我嘗試訂購披薩
我的用戶名和密碼不會自動填充
尤其當我飢餓 不耐煩沒有密碼時
訂購披薩對我來說更困難
那麼...
我真正需要的
是某種簡單的
能從我的...
app展示網站的方法
我不想花費時間
執行缺失的特性如進度條功能
即使我想在這方面花時間
但有些特性我永遠都不會觸及
例如
密碼自動填充功能
我將永遠地不會得到這個網站用戶的密碼
幸運的是 在iOS 9中我們有一個Safari視圖控件
讓我們看一下
爲使用Safari視圖控件
首先我需要導入Safari服務框架
然後我需要使我的視圖控件遵從
SFSafariViewController
Delegate協議
在代碼裏面 我們回到showStoreWebsite
我不再需要我的瀏覽程序因此我刪除它
向這...
拖拽幾行代碼
現在我將要做的是我把我的...
SafariViewControler對象實例化
對其委託 顯示它
在測試它以前 我還需要執行
safariViewControllerDidFinish
這樣 當用戶點擊“完成”(Done)按鈕時
我們可以不再使用視圖控件
因爲這時我們
不再需要我們的瀏覽程序了
我們可以把它整個刪除到垃圾箱
是的
那麼代碼少了80行節約了一小時
讓我們再次運行
選擇第一個店鋪
看我的app中有Safari了
那麼 我找回了閱讀器
與Safari相同的動態感
而如果我現在嘗試訂披薩
我找回了自己的用戶名和密碼
如您所見 通過使用幾行代碼
我在自己的app中有了Safari
你們也可以在你們的app做這些
用戶對此將會非常興奮
謝謝你們
交給你 瑞奇
謝謝你 Yongjun
你的演示太棒了
Yongjun剛纔向你們展示了
雖然用WKWebView編寫app內的網絡瀏覽器中很簡單
但是讓所有細節都正確是有些困難的
他也向你們展示了通過改變七行代碼
他能使用Safari視圖控件
讓app全然改觀
你們看到Safari視圖控件具有
譬如密碼自動填充功能 閱讀器
功能以及你們在使用網頁向下滾動時的動態感
剛纔在講座開始時
我將網頁內容歸爲兩類
一類是您的app中自定義的內容
你們將用WKWebView處理此類內容
一類是當用戶在你們的app中點擊鏈接的時的實際網站
你們會將用Safari或Safari視圖控件處理此類內容
但是對於你們觀衆中的某些人
網頁內容使用還有第三種使用情況
我簡短談一談
這就是使用網頁內容
做以網頁爲基礎的驗證
你們很可能以前都見到過這個
譬如你們使用一個app
它需要使用一些第三方網站的賬戶
這個app出現一個網頁視圖
你們輸入你們的用戶名和密碼
登錄
然後你們選擇接受或拒絕
App爲第三方服務獲取資源的請求
你們很可能以前都做過這些個
但是這方面有個流程叫做OAuth
我會將大體講講具體它是怎樣工作的
在這個流程中...
有三個參與者
第一個參與者是一個app
我們假設它是你們的app
第二個參與者是一個用戶
我們假設這是你們的一個用戶
當然還有一個參與者是你們的app
將驗證的第三方網絡服務
在用戶使用這個app時這個流程中會發生什麼呢？
他們大概會點擊某處的登錄按鈕
這個app將集中把用戶信息打包
並用標記表明
它希望向網站請求什麼內容
然後
app會以某種方式顯示
一個可供登錄的網頁
用戶需要輸入他們的登錄憑證
然後登錄接受或拒絕網頁的請求
然後用戶回到app
這樣網站會記住這個標記
並瞭解它是否被同意使用
將來 當這個app想連接到這個第三方服務時
它會使用這個標記
這個方案的主要目標
是保護用戶的憑證
這樣app不用記住它們
App只得到一個標記
這種標記可以在以後用於請求
資源或者用戶可以在不更改
他們的密碼時撤銷這個標記
這對用戶來說很給力
如果你們今天正實施此方案你們大概
使用的是UIWebView或WKWebView
我很高興的告訴你們
Safari視圖控件在這方面很給力
它在以網絡爲基礎的驗證方面很棒
它在基於網絡的驗證方面很棒的一個原因是
它非常安全
它同Safari自身一樣安全
因爲它在進程之外運行
蘋果公司永遠不會在用戶登錄時
看到用戶的用戶名和密碼
在保護用戶數據方面
一個最好的方法就是
首先就不去訪問它
這是我們蘋果公司的做法不管何時 只要可能
這同樣是用戶歡迎的方法
因爲Safari視圖控件訪問用戶憑證
通過iCloud Keychain機制在他們的所有設備上同步
登錄將變得輕而易舉
他們可能不必使用自動填充功能
他們就可能已經登錄了第三方服務
簡單的說
用戶很想驗證第三方網絡服務
如果你們將使用Safari視圖控件
而不是你們自己寫的東西
我高興的告訴你們採用它是極其容易
這需要兩步
第一
是你們已經使用...你們自己的App內置瀏覽器
只需要提供一個SFSafariViewController實例
一旦用戶完成登錄
第三方網絡服務以您提供給它的自定義URL方案
有重定向回到你們的app
你們可以用你們的AppDelegate的
handleOpenURL方法中接受它
這時你們可以檢查應答 停用
SFSafariViewController實例
因爲您知道驗證已經完成
好了
兩步完成
你們已經用一個能夠自動
填寫用戶名和密碼的程序
替代了你們的app內置瀏覽器
用戶將會很滿意你們也會有更多
用戶登錄這個第三方網絡服務
好
我們總結今天講座內容
網頁內容無處不在
以各種形式和大小存在
如果您在自己的app中
以自定義方式使用它
如果你們有經驗能夠進行定製
WKWebView就是勝任的工具
你們或許仍在用較舊的UIWebView
但是WKWebView更現代
幷包含Safari自身使用的這種新式
JavaScript引擎
它的速度更快
在iOS 9
和OS X El Capitan中
現在也有更多適合你們的靈活的選擇
若你們想了解多關於採用WKWebView的更多內容
你們可以觀看去年的講座
《新式WebKit API簡介》
如果你們網頁內容...
任務不同
如果你們的任務是當用戶點擊鏈接時展示網站
你們的使用情況和需求會完全不同
過去 你們或許已經用UIWebView或WKWebView
建立自己app內置
網絡瀏覽器 但是那種方法一直有不利之處
它不曾有Safari所具有的
任何特性或狀態
而且更可能的是在並非出於您的自身錯誤情況下
你們的app的執行與用戶
安裝的其它app的執行不同
這有時會導致出現困惑的體驗
你們的第一選擇
出於情景的考慮
是將展示網頁內容的責任委託給
Safari自身完成
系統廣大的能力能夠
回到上一個app
使這比以前更好
如果你們想使你們現在用戶保持體驗
使用戶不離開你們的app
Safari視圖控件會增添大量特性
並且做長期優化
這樣你們會有更多時間用於
對你們的app特別重要的部分
你們很想把它們做好
對於你們的用戶這意味着有
Safari自動填寫功能
9Safari閱讀器功能
和內容屏蔽功能
趁你們還很專心聽時
我有一個小要求
你們在開放平臺上
如果遇到實際情況
與你們設想情況
有很大不同
請向我們發送bug和特性要求
Safari視圖控件存在的一個理由
是你們很多人說你們需要它
現在已經有了
既然你們將在未來幾個月使用它
就請告訴我們
我們怎樣做能使它對你們更有用
我們非常歡迎你們的反饋
你們能夠在常用地點獲得任何關於我們
今天涉及到的信息
或者你們可以點擊約翰·戴維斯和
SafariWebKit Evangelist
我們有一些相關講座你們會對它們感興趣
舉兩個例子
在《無縫連接到你們的App》
你們能學習Apple
解決app內部連接的方法
這包括使你們的URL通用
允許它們打開用戶
iOS設備上你們設計的app
這太棒了
在Safari擴展
你們會學習怎樣
寫我剛纔提到的內容屏蔽條件
這適用於在Safari和
Safari視圖控件加載的所有網頁
如果你們想得到我今天所講內容的幫助
你們可以使用Safari和WebKit實驗室
第一個在Media Lab A
時長大約半小時
好
謝大家
祝你們有一個愉快的WWDC之旅