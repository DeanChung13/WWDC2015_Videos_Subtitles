《Wallet—蘋果付款與更多功能的所在地》
好的 大家早上好
歡迎來到第701講座環節
我叫達文
我非常高興在這裏
跟大家談談"Wallet"
就是之前被稱爲"通行證"的app
有了新名字
我們也換了新logo
如果你安裝了iOS 9你也許
已經見到我們的圖標了
這就是我們的新圖標
但是美麗不僅在於外表
過去幾年我們一直在爲Wallet
開發新的特性
今天我們會談到幾個那樣的特性
讓我們看看今天的安排
和今天要談論的內容
首先 我們看一下我們一直在做的事情
之後簡要回顧一下歷史
關於Wallet所有特性的回顧
我們會講到什麼是通行證
我們會談談iOS內的PassKit框架
我們還要談談蘋果支付
和...其他內容
所以別走開
今天要談的內容非常豐富
那麼我們一直在做些什麼呢？
蘋果支付就是我們一直在做的工作
蘋果支付是去年秋天推出的
反應...
非常好！
消費者們喜歡它的簡單易用
商戶們喜歡它的高轉化率
現在有了蘋果支付就能完成無接觸付款
無論是在我們的手機上還是在手錶上
我們甚至發佈了一個API
所以你可以在你的app中安裝蘋果支付
爲了更好地理解Wallet的實質
理解我們爲什麼開發它
我們要回顧一下
回顧我們過去的足跡
瞭解我們如何來到這裏
這...
是不是似曾相識？
是不是眼熟？
是不是誰有這樣的Wallet？
我敢肯定觀衆中
有人的Wallet是像這樣的！
這就是真正的問題所在
我們把禮品卡放在這裏
借記卡和信用卡放這裏
還有優惠券
然後當我們想要找東西時
我們卻找不到
Wallet裏塞的東西太多
這真的是個問題
我們在試圖用Wallet解決這個問題
我們是用通行證實現的
在Wallet中有好看的通行證
我們有通行證
優惠券
有活動門票
有商家卡
甚至有登機牌
但所有這些通行證的共同點就是
它們讓我們能夠將其用於現實世界中
現在
有了蘋果支付我們的信用卡
借記卡也都可以放在Wallet裏
不僅如此
我們想要解決無法在合適的地點
合適的時間找到東西這一問題
所以我們在
所有通行證內部建立了關聯性
看起來就是這樣子
如果你到了機場
你的登機牌就在那裏等你
我要做的就是把鎖定的手機屏幕劃開
然後我的登機牌...
就能...用了
太棒了！
這真的是帶來了莫大的驚喜
讓我們看看這些通行證
從根本上講這些通行證包含信息
在左上角你會看到一個logo
清楚表明這個通行證屬於哪個實體
現在我們專門來看一下
美國聯合航空公司的登機牌
他們的logo...
就在上方的顯著位置
在左上角
我們把重要的信息都放在標頭欄
就像登機口信息就在這裏
用戶將會清楚地知道在他們的登機時間
他們該去哪個登機口
再往下的主要區域
是我們的其他重要信息
就這個例子而言我們的航班
從紐瓦克起飛
終點是斯德哥爾摩
還有輔助和次要區域
那裏有我們最好知道的其他信息
比如說座位號
當然了我們有...
條形碼
這就是那個鏈接
它所含的信息把用戶鏈接到您的系統
以便在現實世界中完成操作在剛纔的例子中
登機牌幫助我們的用戶登機
我們把它翻到背面
通行證的背面
你馬上會注意到
在最頂端 您可以把某個app與通行證關聯
準確無誤地
我們讓聯合航空公司的app
與這個登機牌進行關聯
這裏也有兩個用戶選項
能自動升級這個登機牌
這很重要
我們在稍後的講解中會談到這點
能夠升級這些登機牌就是保持信息的更新
我們也能夠在登機牌背面
開啓關閉關聯
這就是選項按鈕"在鎖屏上提示登機牌"
除此之外 在登機牌背面
還含有其他一些需要了解的信息
比如說條款之類的東西也可以出現在登機牌背面
那麼是什麼讓通行證成爲通行證？
讓我們看看這個漂亮的美國職業棒球大聯盟(MLB)賽事門票
這個通行證由一個pass.json file生成
它的內容和版面
由這個文件定義的
它就是您的標準JSON文件含有各種鍵和值
在本例中鍵和值決定通行證的
內容風格和版面
這個MLB通行證有些的確漂亮的圖片
我們在左上角有個logo圖片
我們有個橫跨通行證左右兩側的長條形圖片
它讓整個通行證生動起來
當我們把所有這些打包
我們就得到了被稱爲PKPass的文件
文件的層次結構就是這樣
你的PKPass文件包含pass.json
和剛纔講過的圖片
以及另外幾個我要講到的文件
首先 這裏包含本地化字符串
是的 通行證能被本地化
我建議你們這麼做
你還會在底部注意到
清單文件和簽名文件
我們的通行證簽名加密的
這樣它的真實性才能被驗證
用戶們也能知道通行證來自於一個已知實體
這很不錯
所以現在有了PK通行證文件
到這裏它只是個普通的通行證文件
我們如何把它變成獨一無二？
成爲你的通行證呢？
我們使用三個不同的值
確保你的通行證是獨一無二的
第一個是團隊標識符
這是有10個字母的字符串
在開發者門戶網站裏能夠找到
我們用它來讓app
通過PassKit即我們的架構獲得訪問授權
我們使用的第二值是passTypeIdentifier
現在它可以對通行證進行分類
確定它是哪類通行證
你也需在開發者門戶網站進行註冊
我們也用它對通行證進行歸類
最後我們有通行證序列號
每個通行證的序列號都是唯一的
完全由你個人自行選擇我們無法獲曉
現在我們把這個值即序列號
和通行證類型標識結合起來
就能確保你的通行證在世界上是獨一無二的
和所有這些值一道您也通過pass.json
聲明您的通行證的關聯性
我們現在就看看關聯性
關聯性...
有三個層面
你可以使用日期
可以用位置
還可以用信標
是三者的結合
使得通行證變得真真正正的強大
下面我們看一下我們如何在pass.json
實施關聯性
我們有幾個鍵
首先我們來看位置鍵
這需要...
字典陣列
字典內含一對經緯度座標
和一個可選的關聯性文本
當你的用戶位於或接近那個位置時
這個關聯性文本會出現
因此向用戶聲明...
能夠向用戶闡明
爲何展示那個內容是有幫助的
我們還有關聯日期
而那正是您使用的標準的W3C格式relevantDate
然後 我們有信標
信標鍵...
是一個陣列
在這個陣列中是字典
proximityUUID能確認你的信標的唯一性
這裏又再次出現了關聯文本
還有可選的姓名字段
再強調一遍當你把所有
這些關聯分類組合在一起
你的通行證就能變得真真正正的強大
這些已經在發揮功效的特性
對您的用戶也是莫大的驚喜
用戶對通行證感興趣的前提
是他們的信息是最新的
那麼如何讓我們的通行證保持最新狀態？
現在我將從一個非常高的層面上來看一下
它是如何工作的
而且我將參考回顧一個
我們在2012年的WWDC上的講座 
那個講座深入探討了這一話題
現在就讓我們觀看這段講座
因此你的服務器將實施蘋果推送服務
我們就是利用蘋果推送服務
來啓動通行證更新
我們向下傳遞通行證類型標識
剛剛前面幾個幻燈片講到過
有了通行證類型標識 我們就可以查看你的pass.json
尋找網絡服務密鑰
這個密鑰中將包含一個URL
利用它我們就能
請求更新通行證
然後我們就能讓帶有所有更新內容的全新 pkpass文件
向下傳遞到我們的設備之後我們就更新用戶通行證
那就是站在一個很高的層面上看它是如何工作的
我強烈推薦大家回去看看那個2012年的WWDC講座
探究如何爲通行證實施網絡服務
非常好 現在讓我們看看如何以編程方式
獲取這些通行證
我們確實在iOS操作系統內內置了PassKit
我們看怎麼用這個工具包
我們在PassKit中使用較多的類是
是工具包裏的PK通行證庫(PKPassLibrary)
這是爲您提供的鏈接
你用它能夠查詢你用戶的通行證
而對它的訪問則需要授權
我們在前面一點講到過
是通過使用你的通行證類型標識
下面來看一下PKPassLibrary的一些使用方法
首先我們有個函數它詢問：
在這臺設備上是否有通行證庫可用
這是個很必要的問題
如果答案是有我們就能得到...
通行證
當你調用通行證時你會取回一個PK Pass陣列
這些是你被授權看到的所有通行證
你也會找到一個你正在尋找的
特別的 具體的通行證
方法是通過調用passWithPassTypeIdentifier
傳遞標識後加字符串
序列號後加字符串
這樣你就能得到你想要找的通行證了
我們還有另一個passesOfType
用來傳遞PK通行證類型
你可能會想知道都有哪些不同類型的通行證？
它們分爲...
條形碼
支付
和任意類型
你也許還會問
達文爲什麼要獲取通行證？
爲什麼要看用戶的通行證？
作爲開發者你應該知道
你用戶系統上已安裝的所有通行證
那樣你就不用再重做一遍了
對於支付通行證我們前面講到了
銀行和其他商戶要能夠激活
你用戶通行證庫裏的支付通行證
我們進到蘋果支付部分內容後將對其進行深入探討
現在我們把所有通行證彙集在一起
他們設計美觀相互關聯
實時更新我們如何能夠
讓它們進入我們的用戶手中呢？
PKPass文件非常的便攜
你可以從網址上下載
用電子郵件發送給你的用戶
你甚至可以把它裝進你的apps
我還要指出它的一個小功能 
讓我們專門看一下
iOS apps裏的PKPass文檔 比如郵件
當我們用電子郵件接收了一個PKPass文檔
Mail會對它進行特殊的處理
點擊這個按鈕你就能獲悉在這封電子郵件裏
是什麼PKPass文檔
如果你在某個網站上託管它或把它裝進某個app
我們甚至爲您提供一個橫幅廣告
你可以把它加入網站或裝在你的app上
但你會告訴說：
達文你知道你是在講Passbook吧
是的 我知道這是在說Passbook
這個是我正在談的一個不錯的小過渡
我們正處於過渡期
我們正要從Passbook過渡到Wallet
目前 在公共場合我們還叫Passbook
所以請記住這一點
但請隨時關注隨着離我們發佈iOS 9的
時間越來越近
我們會讓大家第一時間知曉
很高興能談到這些
但我們要說必須以編程方式添加這些通行證
你要怎麼來做呢？
是的PKPassLibrary能夠做到
我們有個函數叫addPasses
對了多個通行證
爲什麼要這樣做？
設想一下...
就像一個航班分爲幾段
而你想要一次處理所有通行證
這是個很好的方法
所以addPasseswithCompletionHandler
會用非常簡短巧妙的對話提醒用戶
向庫中添加這些通行證
有一點你要確定在調用前你已告知用戶
他們正在添加通行證
當然我們還有另一種方式添加通行證入庫
即使用PKAddPassesViewController
若你曾在Mail里加過通行證那麼你可能見過這個命令
它看上去和這個類似
您點擊一個通行證
它們會調用PKAddPassesViewController
就會出現一個已經過充分渲染的漂亮的視圖控件
並在頂部提供了用戶可以選擇的動作
這是如何工作的？
PKAddPassesViewerController有個功能
它向你覈實：你要添加通行證到此設備嗎？
那麼和以前一樣你可添加一個
或多個通行證
因此你選擇其中的一個
展示這個視圖控件然後我們就負責
爲您執行那個通行證
很棒
現在我們可以添加通行證
更新它們
我們可以保持它們的關聯性
但是怎麼能讓這些通行證具有持續的吸引力呢？
我們希望用戶不斷地回訪
關注我們的通行證
這兒有幾個小竅門讓您維持通行證的吸引力
就像我之前講的關聯是件大事
關聯能在生活中帶來巨大的驚喜
你要爲用戶着想
你應該讓通行證實時升級
比如說這個登機通行證
如果沒有最新的登機口信息它就毫無用處
用戶們要不斷回來查看你的通行證
圖像很管用
看這個這個MLB通行證
這個長條形圖片橫跨整個通行證
感覺生動明瞭
讓人一下子明白這個通行證的目的和用途
這是個長條形圖片
你注意到這裏並沒有其他多餘信息
就只是環境的信息
非常美觀！
最後我要講講格式
格式有點棘手
但讓我們幫你處理
現在我們知道有不同的設備
屏幕的尺寸不同
我建議...
你參考我們網站上的 《人機界面指南》
按照指示操作然後我們就能儘量
讓您的通行證適用我們的所有設備
很棒這些通行證真的好用
它們真的讓我們將其用於現實生活中
但真正用起來還是比不上
蘋果支付那樣順手
我們如何大幅改進那種體驗呢？
好了 現在我們就來談談從這裏開始我們會走向何方
讓我給您設想一個情景
有一天我來到我小區內的雜貨店
拿上要買的東西
準備結賬
太好了他們支持蘋果支付
我走向款臺
收銀員掃描我買的商品
我準備好手機用蘋果支付結賬
好
他們掃描完了我的商品
我把我的手機靠近銷售終端...
您有我們的會員通行證嗎？
我想我是有的
收銀員堅持要看會員卡
我想它是在我那個鼓鼓的錢包裏面
但我現在就是找不到它
我覺得它應該是
是用我手機號註冊的
我把手機號報給收銀員
不對
不是用那個電話號碼註冊的
我泄氣了 後面的隊伍已經有二三米遠了
我又報出我媽媽的手機號
因爲我知道我媽媽會有這種會員通行證
好極了 行！
我終於能用蘋果支付了
拿上我的東西出店門
不順的事情一件又一件是吧
作爲消費者我只求順利支付
迅速結賬走人
*對於商戶
他們得到是完全錯誤的會員信息
他們掌握的是我媽媽的會員信息而不是我的
我們要對此加以改進
這就是爲什麼我們要推出
與蘋果支付相匹配的通行證
通行證與蘋果支付結合
傳遞你的會員信息
通過蘋果支付完成無接觸式付款
我們遵循增值業務協議
一直致力於與主要的收銀機廠商合作
促進採用這種新的協議
現在再看一下剛纔的場景
我來到好客的小區便利店Walgreens
他們支持蘋果支付太好了
我使用蘋果支付 我使用iOS新特性
雙擊主頁按鈕激活我的卡片
在我到款臺前我的卡已經準備完畢
太棒了卡已備好
我馬上就能支付
我把手機放到收銀機上
我的Walgreen會員信息
被無接觸式傳輸
還有支付信息
輕擊即可完成
就這麼簡單！
我笑着對收銀員說了聲：謝謝！
然後出門
實在太棒了！
那讓整個過程順暢多了
這是怎麼做到的？
我們怎麼把這個特性加入到您的通行證？
我們有個新方法
就是pass.json
確切是說是nfc
Nfc是個接受信息的字典
有點像條形碼這是將此用戶身份
與您的系統連接的會員信息
或任何相關信息
我們有可選的encryptionPublicKey
這能確保這個通行證的真實性
這有點像您自己作爲商戶
和您的收銀機...
進行握手
那麼 這就是你如何...
把與蘋果支付結合的通行證
整合到你的通行證中
如果你是商戶或收銀機廠商
對此感興趣
請聯繫我們
我們的開發者關係團隊本週都在這裏
你可以和他們聯繫
講座後我會給出聯繫方式
如果您感興趣請告知他們
我們會着手爲你進行蘋果支付與通行證的整合工作
說到蘋果支付
它真的非常棒
就像我剛剛說過的
我們現在已經實現了在手機上手錶上的無接觸式支付
甚至也支持API
所以你可以把蘋果支付整合入您的app內
蘋果支付確實很棒
因爲它能爲您的用戶帶來無縫支付體驗
商戶將全面獲得更高的轉化率
所以我們鼓勵我們的用戶
在他們的設備上添加蘋果支付卡
具體做法呢？
我們將提供給你們所需的API來完成
有兩種方式
第一種是直接將您的用戶引導入我們的Wallet app
並且從那裏開始安裝
第二種是在您自己的app裏
設置這些卡片
先看第一種
進入PKPassLibrary
操作非常簡單
我們調用 openPaymentSetup
那將讓用戶直接進入Wallet
啓動安裝流程
而現在有了iOS 9的新特性
你的用戶可以輕鬆地返回到你的app
我們給他們留了一點麪包屑導航讓他們點擊
這樣他們就會返回到你的app
並繼續做他們之前在做的事情
希望是購物
如果你是一家銀行或是推出了賒購卡
或自有品牌信用卡的商戶
你當然希望這種事情在您自己的app裏發生
我們也有相應的API
那其實是視圖控件
就是PKAddPaymentPassViewController
當然你需要確定這個特定設備
是否能夠添加支付通行證
如果能我們就設置這樣的一個通行證
我們可以將其寫入requestConfiguration
並將其傳入委託語句
這個您在自己的app中執行的授權語句
將把那些信息片段組合在一起
如nonceSignature會組成
AddPaymentPassRequest
這個真的深究起來要講很長時間
今天這節專題講座上我沒有時間
對此進行深入探討
所以如果關於如何使用這個類你有任何問題
請大家自己查看文稿
這個類將是大家有權查看的
那麼 如果您願意在你的app中使用這個類
也請告訴我們
當把支付通行證加入蘋果支付時
用戶們可能還需執行的另外一個必要步驟是
需要進行支付通行證驗證
或“第二因素驗證”
有些人知道這個
在使用普通流量的同時
比如使用SMS或通過打電話
或電子郵件你還可以選擇使用app
大家看Capital One如何利用他們的app
驗證用戶的身份
我們要如何做呢？
我們給你們幾個API
幫助在您的app裏完成驗證
它也在PKPassLibrary中
先檢查...
是否有支付通行證
是否可激活？
還記得當我們從用戶庫中
提取PKPasses時嗎？
這就是激活的用處所在
你可以把PKPaymentPass
傳遞到這個調用命令中去
並向其中傳入一些激活數據
然後你會得到一個表示已完成的反饋
告知您激活是否成功
那就是您如何在自己的app裏執行驗證程序
這也是我們的手機一直非常受歡迎的原因
除此之外我們還有特別棒
真的非常棒的輔助程序
還會衍生出一些功能
我們應該好好利用
這些輔助程序功能
我們現在宣佈與iOS 9一起推出
一個無接觸界面按壓API
它會暫時使用戶界面失效
這是你看到的通行證表單
這將需要徵得用戶允許
來看一下我們是如何做的
還是在那個PKPassLibrary中
PKPassLibrary有一個新函數 名爲
requestAutomaticPassPresentationSuppressionWithResponseHandler
太繞嘴了
你能得到一個回覆結果
關於用戶是否同意
在你的app裏允許按壓
同時還有一個申請圖標
用這個圖標你就可以再一次調用
endAutomaticPassPresentation
傳遞進去這個requestToken
payment UI就會再次出現在你的app中
你也可以查看是否automaticPassPresentation
Suppression已經
通過使用這個函數而出現在這裏
正如我剛剛講到的這只是暫時的
如果你的app被停用
支付通行證 UI 會重新出現在用戶面前
或者在你上一次請求24小時後
你需要再次申請徵得你用戶的允許
這些類和調用已被授權
所以如果你有意向使用它們請一定告訴我們
去年秋天
與蘋果支付一起推出的還有Apple Watch
現在我非常高興的宣佈:
我們將在watchOS 2中
內置對Apple Watch的全面PassKit支持
這很了不起 因爲現在
在Apple Watch上你可以添加
移除 查詢通行證就像你原來
在手機上做的...
那樣
所以Apple Watch和watchOS 2將獲得全面PassKit支持 
我想說的還有一件事
是關於Apple Watch屏幕尺寸的
Apple Watch屏幕要小很多
我要指出的是正因如此
通行證的調用有些不同
在Apple Watch上
請看這個漂亮的界面
這是通行證在Apple Watch上的樣子
如您所見 這是MLB通行證
前面的幻燈片出現過
你會馬上發現...
它的些許不同
長條形圖片沒有了
而且通行證也沒有反面
所以請看一下並且記住在不同的設備上
通行證看起來確實不一樣尤其是在Apple Watch上
因此設計通行證並實施的時候
請考慮到那一點
當然了 如果你遵循《人機界面指南》
我們將承諾盡力讓你的通行證看起來很棒
無論在我們的何種設備上
這就是PassKit和Apple Watch
還有一件事我要講
一維條形碼
我們一直在收到很多使用一維條形碼的申請
我很高興告訴大家在iOS 9中
我們將對Wallet提供一維條形碼支持
很高興大家喜歡
所以我們有個新的條形碼格式
就是PKBarcodeFormatCode128
你也許要問:我那些仍用iOS 8或更低版本的用戶
怎麼辦呢？他們能享用這些嗎？
很遺憾不能這也是你們爲何會有這條退路
我們還是有條形碼密鑰
那個條形碼密鑰是非常非常重要的
這裏我們要做的是實施二維條形碼
我們有新的多條形碼密鑰
它是一個陣列
包括一個由多個條形碼組成的字典
所以你看在第一個字典裏
我們有個新的條形碼陣列
PKBarcodeFormatCode128的條形碼
就是一維條形碼
因此請大家在實施時
拜託大家
一定要覈實你的系統支持一維條形碼
我指的是光學掃描儀
請大家記住要退回到二維條形碼
只有這樣使用iOS 8或更低版本的用戶
他們的通行證纔有條形碼
好了今早我已經講了很多
如果一定要我說應該記住本講座的哪些內容的話
那就是這些內容：
我們正在解決現實中錢包過滿的問題
我們現在不需要那個實物錢包了
我們不想再查看錢夾子了
我們用通行證實現
通行證讓我們在現實世界通行無阻
它們能被很容易被整合
融入你的app你的現金流
當通行證有了吸引力它們能讓你的用戶們
在你的系統裏保持互動並持續關注您的系統
而我想要提醒大家的是
把蘋果支付集成進您的app
並鼓勵你的用戶在他們的app裏使用蘋果支付
記住你要的是平穩無縫的支付流程
我們也想要爲我們的商戶
帶來高的轉換率
我甚至都沒談到把蘋果支付
作爲支付手段集成到app內
本講座不包括那麼大的話題
但緊接着的...
講座主講人是我的同事Nick和Rachel
將是非常非常棒的
他們會講到我略過的話題
他們會幫大家將蘋果支付集成到您的app中
請記住使用Wallet和蘋果支付
去吧 去兌換優惠券！
去吧 去花錢消費吧！
我講的過程中提到了很多資源
有幾個我想要告訴大家
首先在我們的開發者網站上
有個Passbook for Developers專屬站點
我們還有一個蘋果支付專屬站點
我還提到了往年WWDC的幾次講座
這是2012年的
名爲"Passbook簡介:第一和第二部分"
它將真正地深入探討如何設計通行證
以及如何升級通行證
然後是2013WWDC講座
“將Passbook融入您的生態系統”
這些是大家應該查看的真的很棒的資源
當然我們的開發者論壇
也供大家使用
一個真正了不起的技術傳播者保羅隨時幫助你們
這是他的電子郵件地址
再次感謝您撥冗出席感謝您的到來
並傾聽關於Wallet和蘋果支付的內容
希望大家過得愉快
非常感謝