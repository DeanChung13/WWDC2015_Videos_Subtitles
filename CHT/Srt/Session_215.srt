00:00:19.586 --> 00:00:24.625 
故事板中的新改進

00:00:31.565 --> 00:00:32.399 
早上好

00:00:33.267 --> 00:00:35.235 
大家週四快樂

00:00:35.736 --> 00:00:39.339 
恭喜
在這周這個時候的早上九點開會

00:00:40.541 --> 00:00:43.076 
去年我也坐在你們坐的位置上
我相當清楚是多麼艱難

00:00:46.980 --> 00:00:50.384 
今天我們來說一些進步
我們在故事板中所取得的

00:00:51.151 --> 00:00:54.354 
只是幫助大家熱身爲一整天做好準備

00:00:54.788 --> 00:00:56.623 
我要在這裏想問問大家

00:00:57.324 --> 00:00:59.026 
這裏有多少人安裝過

00:00:59.426 --> 00:01:00.661 
使用故事板的應用？

00:01:02.729 --> 00:01:03.964 
很多人

00:01:06.366 --> 00:01:08.936 
這裏多少人曾經可能試着使用故事板

00:01:09.002 --> 00:01:10.804 
或者想着使用故事板

00:01:10.871 --> 00:01:15.142 
但是團隊卻決定這不是理想的方式

00:01:15.642 --> 00:01:16.476 
至少現在不是

00:01:17.511 --> 00:01:18.345 
好

00:01:20.614 --> 00:01:23.750 
這裏多少人之前從來沒有
使用過故事板

00:01:25.719 --> 00:01:27.588 
哇 你們都是一羣老手了

00:01:28.956 --> 00:01:29.790 
好的

00:01:31.024 --> 00:01:33.961 
今天我們將集中在三個主要方面

00:01:34.361 --> 00:01:36.897 
首先我們要談論我們添加的新特性

00:01:36.964 --> 00:01:39.399 
來幫助大家組織大家的故事板
讓它們便於管理

00:01:40.167 --> 00:01:42.903 
接着我們會談談
自定義標準segueway的方法

00:01:43.003 --> 00:01:45.873 
Interface Builder爲大家提供的方法

00:01:46.507 --> 00:01:50.611 
最後是
可能會是稍微高端的特性

00:01:50.878 --> 00:01:54.848 
展開segueway的方法
以及我們怎樣取得進步

00:01:54.915 --> 00:01:58.452 
關於你們在IOS中使用的
自定義container視圖

00:02:00.754 --> 00:02:01.622 
接下來我們開始吧

00:02:03.991 --> 00:02:05.792 
這裏我們有一個很簡單的應用演示

00:02:05.859 --> 00:02:07.794 
就是一個視圖集展示一系列

00:02:07.861 --> 00:02:09.963 
導航控制器內部的圖片

00:02:10.497 --> 00:02:14.568 
如果點擊一張就會展示在屏幕上

00:02:15.602 --> 00:02:16.837 
再輕擊一下返回按鈕

00:02:16.904 --> 00:02:19.173 
在左上角就消失了

00:02:23.810 --> 00:02:28.148 
用戶界面的三個部分對應

00:02:28.215 --> 00:02:31.118 
三個運行期間的視圖控制器實例

00:02:32.319 --> 00:02:34.288 
如果我用圖解法表示這個應用

00:02:34.354 --> 00:02:36.490 
在一張紙上我可能這樣做

00:02:36.957 --> 00:02:39.993 
用盒子代表視圖控制器

00:02:40.661 --> 00:02:44.097 
然後在它們之間連線
來表示他們之間的流動

00:02:44.164 --> 00:02:45.199 
通過我的應用

00:02:47.067 --> 00:02:49.469 
這就是故事板捕捉到的信息

00:02:49.536 --> 00:02:51.171 
讓你在運行時刻使用

00:02:53.273 --> 00:02:54.975 
這裏有一些專業的術語

00:02:55.042 --> 00:02:56.376 
與故事板相關

00:02:56.543 --> 00:02:59.079 
這些盒子在這裏已經變成了圈圈

00:02:59.179 --> 00:03:02.282 
我們稱爲情景 它們作爲樣板

00:03:02.349 --> 00:03:04.051 
對視圖控制器而言

00:03:04.117 --> 00:03:05.752 
其實這就組成了運行時候的用戶界面

00:03:07.521 --> 00:03:09.723 
這些線我們稱爲segueway

00:03:10.390 --> 00:03:12.826 
這裏還有一些

00:03:13.527 --> 00:03:17.030 
不同類型的segueway
segueway和導航控制器

00:03:17.097 --> 00:03:18.866 
以及視圖集控制器之間的關係是

00:03:18.932 --> 00:03:21.034 
一種segueway
叫segueway關係

00:03:21.101 --> 00:03:24.838 
很明顯 集合視圖控制器

00:03:25.005 --> 00:03:27.574 
在navigation
stack的根文件

00:03:27.641 --> 00:03:29.142 
被導航控制器所控制

00:03:31.044 --> 00:03:33.614 
另一種segueway是
觸發segueway

00:03:33.680 --> 00:03:36.817 
這個主要當我輕擊

00:03:36.884 --> 00:03:38.519 
集合中某一單元時

00:03:38.585 --> 00:03:41.788 
展現的圖片視圖控制器
使用的是語義定義上的

00:03:41.855 --> 00:03:43.457 
展示視圖控制器的方法

00:03:47.261 --> 00:03:49.229 
實際上 我們把它們放在

00:03:49.296 --> 00:03:53.300 
故事板文件中時
我們可以給文件進行標識

00:03:54.568 --> 00:03:56.770 
然後在interface
Builder中設置

00:03:56.837 --> 00:03:59.573 
在Xcode中
就像程序中我們的主要界面文件一樣

00:04:00.174 --> 00:04:01.175 
接着我們運行應用

00:04:01.842 --> 00:04:03.177 
發生的第一件事

00:04:03.243 --> 00:04:05.913 
就是觸發在我們故事板最初情景中的

00:04:05.979 --> 00:04:08.682 
一個導航控制器

00:04:09.716 --> 00:04:12.085 
我們看到這裏有一種確定的關係

00:04:12.152 --> 00:04:13.487 
在導航控制器上

00:04:16.456 --> 00:04:19.326 
所以我們在segueway的另一端

00:04:19.927 --> 00:04:22.196 
觸發視圖控制器然後我們建立了聯繫

00:04:22.829 --> 00:04:24.598 
是通過segueway定義的

00:04:24.865 --> 00:04:26.867 
在navigation 
stack的根文件

00:04:28.402 --> 00:04:31.405 
接着 用戶使用應用 

00:04:31.705 --> 00:04:36.376 
他們輕擊某一集視圖單元
並執行segueway

00:04:36.443 --> 00:04:38.011 
在這裏我們已經標註過

00:04:38.245 --> 00:04:40.013 
這就是之前展示的segueway

00:04:41.882 --> 00:04:44.618 
我們例示視圖控制器
在segueway另一端建立起聯繫

00:04:45.419 --> 00:04:49.756 
我們展示segueway定義的動作

00:04:50.624 --> 00:04:52.893 
在設計應用時

00:04:52.960 --> 00:04:55.495 
和在執行應用時

00:04:55.562 --> 00:04:57.564 
你的界面變得更加複雜
你的故事板也是如此

00:04:58.165 --> 00:05:00.000 
最後爲了易於控制這些

00:05:00.067 --> 00:05:02.736 
就像你分解你源代碼到多個文件中一樣

00:05:03.237 --> 00:05:05.506 
你可以分解你的故事板到多個文件中

00:05:06.573 --> 00:05:09.510 
但是我們不能在文件之間
建立segueway

00:05:10.677 --> 00:05:13.547 
回到代碼層面

00:05:13.614 --> 00:05:15.282 
我們可以示範二級故事板

00:05:16.583 --> 00:05:20.454 
我們可以在該故事板的情景中

00:05:22.523 --> 00:05:24.658 
觸發視圖控制器

00:05:24.725 --> 00:05:27.461 
或者我們已經看不到情景之間的聯繫

00:05:28.629 --> 00:05:30.831 
我們真正想做的是讓箭頭反過來

00:05:33.033 --> 00:05:34.902 
這就是在Xcode 7中爲大家做的

00:05:34.968 --> 00:05:37.337 
這個新特性我們稱爲故事板的引用

00:05:44.178 --> 00:05:47.314 
所以正如你們所知大家都應該
爲託尼鼓掌因爲他幾乎做了

00:05:47.381 --> 00:05:48.949 
關於故事版的所有事情

00:05:50.150 --> 00:05:51.785 
一個故事板

00:05:51.852 --> 00:05:54.821 
可以與另一情景關聯
而且這個情景可以在

00:05:54.888 --> 00:05:57.658 
同一個故事板中存在
或者另一個故事板中存在

00:05:59.593 --> 00:06:01.862 
就像任何情景 它可以

00:06:02.296 --> 00:06:05.899 
是任何segueway的最後終點

00:06:07.968 --> 00:06:09.736 
這就是需要說的所有 所以我願意

00:06:09.937 --> 00:06:12.706 
請託尼上來
爲大家展示如何使用Xcode

00:06:12.773 --> 00:06:15.843 
輕鬆辦到在OS X10 11系統 
IOS9系統和watchOS

00:06:15.909 --> 00:06:18.979 
組織你的故事板

00:06:20.581 --> 00:06:21.715 
謝謝 凱爾

00:06:25.385 --> 00:06:28.488 
早上好 我是託尼 就職於
Intrface Builder

00:06:29.089 --> 00:06:30.991 
現在
我將向大家展示我們的新特性

00:06:31.058 --> 00:06:32.426 
故事板引用

00:06:32.860 --> 00:06:35.095 
開始之前
先讓我們看一下我們開發的應用

00:06:36.630 --> 00:06:38.732 
這是一款應用可以幫助你組織

00:06:38.832 --> 00:06:40.601 
和計劃自駕遊

00:06:41.368 --> 00:06:44.605 
我爲這款應用的UI 

00:06:44.671 --> 00:06:47.774 
使用一個自定義container
視圖控制器它可以管理四個標籤 

00:06:48.542 --> 00:06:52.346 
每一個標籤
使用各自UI導航控制器執行

00:06:52.746 --> 00:06:55.382 
你可以通過輕擊導航欄打開一個標籤

00:06:56.950 --> 00:07:00.120 
這第一個標籤是即將來臨事件列表

00:07:01.989 --> 00:07:04.258 
這個標籤是過往事件表

00:07:05.759 --> 00:07:07.661 
這裏我們有一張即將來臨的事件

00:07:08.395 --> 00:07:11.598 
我們在旅途中拍攝的圖片
最後是圖片集

00:07:12.666 --> 00:07:15.536 
你可以輕擊任何一個圖片單元放大圖片

00:07:16.069 --> 00:07:17.704 
你可以輕擊這個條框按鈕

00:07:17.838 --> 00:07:19.306 
就可以看到其他操作的菜單

00:07:21.141 --> 00:07:23.677 
讓我們看一下
我的app中的主要故事板

00:07:25.712 --> 00:07:29.716 
在左上角有我的自定義
container視圖控制器

00:07:30.484 --> 00:07:32.920 
這個container連接

00:07:32.986 --> 00:07:37.224 
四個使用嵌入式
segueway子導航控制器

00:07:37.791 --> 00:07:39.726 
這個嵌入式segueway讓你

00:07:39.793 --> 00:07:42.229 
可以在母控制器中嵌入子視圖控制器

00:07:44.331 --> 00:07:47.267 
正如你看到的故事板變得相當大

00:07:47.601 --> 00:07:49.036 
今天我想做的就是將其分解

00:07:49.102 --> 00:07:50.404 
成小碎片

00:07:51.905 --> 00:07:56.810 
如果看一下我的故事板上的按鈕
大家可以看到

00:07:56.877 --> 00:08:00.013 
在圖片標籤中我有三個視圖控制器

00:08:01.448 --> 00:08:04.184 
這些視圖控制器

00:08:04.251 --> 00:08:05.452 
獨立於故事板中的其它情景

00:08:05.819 --> 00:08:08.388 
所以這樣可以讓情景
將它們拖進自己的文件中

00:08:09.423 --> 00:08:12.593 
爲了這麼做 我要挑選這些視圖控制器

00:08:12.793 --> 00:08:16.063 
置頂在編輯菜單
然後選擇故事板中的重構

00:08:17.497 --> 00:08:20.100 
我訪問故事板中的新文件圖片

00:08:21.435 --> 00:08:24.805 
我做這些的時候
Xcode會產生一個新的故事板文件

00:08:24.905 --> 00:08:27.341 
將這些視圖控制器拖出我的主故事板

00:08:27.407 --> 00:08:28.709 
放進一個新的文件中

00:08:30.511 --> 00:08:32.279 
那主故事板中會發生什麼

00:08:32.346 --> 00:08:33.679 
讓我們按返回按鈕

00:08:34.748 --> 00:08:35.916 
就在下面

00:08:35.982 --> 00:08:38.385 
我們之前看到三個視圖控制器 

00:08:38.452 --> 00:08:39.753 
現在我們只有一個故事板引用

00:08:40.921 --> 00:08:43.323 
任何時候你在故事板中重構情景

00:08:43.390 --> 00:08:46.326 
這些情景都會有segueway

00:08:46.393 --> 00:08:49.930 
Xcode接受這些segueway
產生一個故事板引用 

00:08:49.997 --> 00:08:52.032 
並且在引用中
重新佈置這些segueway

00:08:52.833 --> 00:08:54.835 
運行過程中
當segueway執行時

00:08:54.902 --> 00:08:57.571 
在圖片故事板之外它將觸發

00:08:57.638 --> 00:09:00.374 
最初的視圖控制器作爲最終位置

00:09:02.376 --> 00:09:06.146 
如果雙擊這個引用

00:09:06.346 --> 00:09:09.516 
Xcode會帶我到故事板
向我展示引用中的視圖控制器

00:09:09.716 --> 00:09:11.652 
這種情況下 這是最初的導航

00:09:11.718 --> 00:09:13.153 
故事板中最初的視圖控制器

00:09:14.521 --> 00:09:15.789 
這是使用新特性的一種方法

00:09:16.089 --> 00:09:17.925 
你可以使用一個大的故事板文件

00:09:17.991 --> 00:09:19.760 
將其重構成小的碎片

00:09:20.694 --> 00:09:23.730 
使用新特性的另一種方法
是創建segueway

00:09:23.797 --> 00:09:26.266 
在各自文件中已存在的視圖控制器

00:09:27.568 --> 00:09:30.504 
現在我要創建一個新segueway

00:09:30.571 --> 00:09:32.539 
並且要讓它被journal按鈕觸發

00:09:33.507 --> 00:09:35.576 
我想讓它帶我返回到

00:09:35.642 --> 00:09:37.578 
主故事板文件的視圖控制器

00:09:37.644 --> 00:09:39.980 
這裏是管理UI並
創建一個新的journal入口

00:09:41.248 --> 00:09:45.118 
所以 我要將圖片操作視圖控制器

00:09:45.986 --> 00:09:48.088 
在這裏 我要從庫中

00:09:48.155 --> 00:09:49.957 
拖出一個故事板引用放置在旁邊

00:09:51.792 --> 00:09:54.461 
我們看一下故事板引用屬性檢查器

00:09:57.030 --> 00:09:58.565 
正如大家看到的有三個域

00:09:59.399 --> 00:10:01.034 
第一個域是

00:10:01.101 --> 00:10:02.469 
正在引用的故事板文件名稱

00:10:03.303 --> 00:10:06.473 
如果留空Xcode會使用相同故事板

00:10:06.540 --> 00:10:08.408 
這個故事板包含引用本身

00:10:08.742 --> 00:10:10.878 
這種情況下是圖片故事板

00:10:11.578 --> 00:10:14.081 
如果你的故事板很大 那麼這很有用

00:10:14.147 --> 00:10:16.183 
或者在視圖控制器
建一個segueway

00:10:16.250 --> 00:10:18.285 
並連接至另一個試圖控制器

00:10:18.986 --> 00:10:21.555 
着我的舉例中 我想引用到主故事板 

00:10:21.722 --> 00:10:23.390 
因此我要從菜單中選擇

00:10:25.526 --> 00:10:27.494 
下一個域是你正在引用着的

00:10:27.561 --> 00:10:28.862 
視圖控制器的標識符

00:10:29.596 --> 00:10:32.466 
如果留空
Xcode會使用引用的故事板

00:10:32.533 --> 00:10:34.034 
最初的視圖控制器

00:10:34.868 --> 00:10:37.704 
在我的示例中 
我要引用主故事板中

00:10:37.771 --> 00:10:39.473 
一個特定的控制器而且我已經假定

00:10:39.540 --> 00:10:42.776 
控制器的標識新入口

00:10:45.846 --> 00:10:47.881 
最後一個字段是標識符包

00:10:49.249 --> 00:10:50.717 
你在引用的故事板

00:10:50.784 --> 00:10:52.452 
可能是處於外部框架

00:10:52.619 --> 00:10:53.453 
這樣的話 

00:10:53.620 --> 00:10:55.889 
需要將框架標識符包放在這裏

00:10:56.890 --> 00:10:59.459 
我要留空 因爲我的主故事板

00:10:59.526 --> 00:11:01.762 
與圖片故事板在同一個包裏

00:11:05.532 --> 00:11:09.102 
再一次 既然我的故事板引用
已經設置好

00:11:09.169 --> 00:11:10.270 
如果雙擊它

00:11:10.671 --> 00:11:11.872 
Xcode就會帶我

00:11:12.039 --> 00:11:13.707 
到我的引用故事板文件

00:11:13.974 --> 00:11:15.642 
展示正在引用的視圖控制器

00:11:16.577 --> 00:11:18.912 
這種情況中
這就是一個導航控制器 

00:11:19.313 --> 00:11:21.515 
如果我們看一下標識檢查器

00:11:21.582 --> 00:11:25.352 
可以看到我剛剛在引用中
 輸入同樣的標識

00:11:27.521 --> 00:11:30.057 
這個導航控制器的根視圖控制器是

00:11:30.991 --> 00:11:34.394 
這個表格視圖控制器用於管理用戶界面
並創建新的入口

00:11:36.029 --> 00:11:37.998 
回到圖片故事板

00:11:38.265 --> 00:11:40.033 
爲引用創建一個segueway

00:11:42.102 --> 00:11:45.539 
之前我提到我要讓journal
按鈕可以觸發這個segueway

00:11:46.206 --> 00:11:47.541 
在圖片視圖控制器中

00:11:48.075 --> 00:11:49.443 
看不到journal按鈕

00:11:50.677 --> 00:11:54.214 
這是因爲菜單
在SceneDoc上的上面這裏

00:11:56.016 --> 00:11:59.987 
SceneDoc讓你可以
儲存頂層對象和視圖控制器

00:12:00.521 --> 00:12:02.155 
可在SceneDoc中放一個視圖

00:12:02.222 --> 00:12:04.458 
如果你想在運行過程中

00:12:04.525 --> 00:12:05.926 
那個視圖不是視圖層的一部分

00:12:06.860 --> 00:12:09.196 
在Xcode7中
SceneDoc中放一個視圖

00:12:09.263 --> 00:12:11.932 
你選中它
它就會在自己的編輯框中顯示

00:12:11.999 --> 00:12:14.034 
編輯框就在畫布中視圖控制器的正上方

00:12:21.675 --> 00:12:23.210 
<br/> 
現在 可見journal按鈕

00:12:23.277 --> 00:12:24.878 
讓我們創建這個segueway

00:12:25.579 --> 00:12:28.315 
我要控制拖至我的故事板引用中

00:12:28.815 --> 00:12:30.617 
我要在顯示視圖控制器的模態

00:12:30.684 --> 00:12:31.552 
所以我選擇它

00:12:34.188 --> 00:12:35.989 
好的
看一下活動中的segueway

00:12:42.596 --> 00:12:43.764 
我要強調的第一件事是

00:12:43.830 --> 00:12:46.667 
我的圖片標籤出現了就像之前一樣

00:12:46.733 --> 00:12:48.635 
雖然現在是從獨立文件中出現

00:12:49.703 --> 00:12:52.105 
如果輕擊一單元
在journal按鈕出現菜單和標籤

00:12:52.172 --> 00:12:56.076 
點擊我們執行segueway的按鈕

00:12:56.143 --> 00:12:58.078 
就能夠關聯到我們的主故事板文件

00:12:58.145 --> 00:13:01.648 
並且通過標識符顯示視圖控制器

00:13:01.715 --> 00:13:03.217 
就像它在同一個故事板中運行一樣

00:13:04.318 --> 00:13:06.086 
這就是我們的新故事板引用特性

00:13:06.153 --> 00:13:07.321 
希望大家發現他的好處

00:13:08.021 --> 00:13:09.489 
現在重新把舞臺交給凱爾

00:13:17.431 --> 00:13:18.498 
謝謝 託尼

00:13:19.933 --> 00:13:23.971 
好的 
所以我看到所有人對這個特性都很興奮

00:13:24.705 --> 00:13:26.740 
我們很高興能夠今年把它帶給大家

00:13:32.079 --> 00:13:33.213 
我們說一些別的事情

00:13:33.780 --> 00:13:35.816 
我們說一下如何自定義 

00:13:35.883 --> 00:13:37.351 
Interface
 Builder上提供的

00:13:37.417 --> 00:13:38.886 
標準segueway

00:13:40.754 --> 00:13:43.223 
看一下我們演示應用的不同方面

00:13:43.290 --> 00:13:46.960 
我們有一個journal執行時
使用表格視圖控制器

00:13:49.062 --> 00:13:51.932 
如果用戶點擊了頂部加號按鈕

00:13:53.100 --> 00:13:54.668 
進行模態展示

00:13:54.735 --> 00:13:56.637 
如託尼之前
用journal按鈕展示一樣

00:13:58.105 --> 00:14:00.007 
這就會彈出導航控制器

00:14:00.240 --> 00:14:02.509 
在其內部是一個表格視圖控制器

00:14:05.646 --> 00:14:08.682 
點擊取消按鈕導航控制器消失

00:14:08.782 --> 00:14:10.951 
這就是標準模態展示方式

00:14:11.018 --> 00:14:12.686 
通過屏幕底部出現

00:14:12.753 --> 00:14:14.821 
返回到屏幕底部
你可以在iPhone上看到

00:14:17.357 --> 00:14:18.559 
如果你想要有趣一點呢

00:14:21.595 --> 00:14:24.264 
用戶點擊加號按鈕
我們展示我們的segueway

00:14:24.731 --> 00:14:26.300 
我們要閃爍效果

00:14:28.802 --> 00:14:32.940 
如果我們要接下來是閃爍效果

00:14:33.207 --> 00:14:35.809 
我們真的很想閃爍退出

00:14:38.545 --> 00:14:39.613 
你可能很清楚

00:14:39.680 --> 00:14:43.183 
如果你經常使用故事板

00:14:43.684 --> 00:14:46.286 
選擇segueway時 你會有選項

00:14:46.353 --> 00:14:47.955 
看一下segueway檢查器

00:14:49.156 --> 00:14:51.959 
有一些標準轉換

00:14:52.025 --> 00:14:54.828 
是iOS中可以加載的模態展示

00:14:55.662 --> 00:14:58.832 
默認從底端彈出並垂直覆蓋

00:14:59.199 --> 00:15:02.035 
但我們可以選擇水平翻轉或者淡入淡出

00:15:02.469 --> 00:15:04.238 
而且可以選擇閃爍 

00:15:06.340 --> 00:15:09.142 
使用早期版本的Xcode

00:15:09.209 --> 00:15:12.379 
在iOS8可做的一件事是
可將其轉成自定義segueway

00:15:14.248 --> 00:15:16.149 
從這點來說

00:15:16.216 --> 00:15:18.452 
我們需要把UI
故事板Segueway子類化

00:15:18.785 --> 00:15:20.153 
並自己處理所有的工作

00:15:21.154 --> 00:15:24.958 
當我們提到真的展示視圖控制器時

00:15:25.025 --> 00:15:27.594 
那也並非真的是個麻煩事

00:15:28.161 --> 00:15:29.696 
但要是能不用做 當然是更好了

00:15:30.697 --> 00:15:34.434 
尤其是在我們需要做一堆的工作

00:15:34.501 --> 00:15:35.569 
來創建動畫的時候

00:15:39.173 --> 00:15:42.843 
在Xcode 7中當你的目標是
iOS 9或OS X 10.11時

00:15:43.243 --> 00:15:45.946 
你可以選擇標準
segueway類型中的任一種

00:15:46.013 --> 00:15:48.582 
且仍可以
指定一個故事板segueway 

00:15:48.649 --> 00:15:49.683 
進行自定義子類化

00:15:51.185 --> 00:15:55.389 
你完整自定義segueway一樣
也可以針對實施重新執行

00:15:55.822 --> 00:15:59.893 
這時候將調出管理員模態

00:16:00.060 --> 00:16:01.395 
並變成默認行爲

00:16:02.095 --> 00:16:05.532 
在管理員調出情況下
你可以執行任何你想要的自定義

00:16:08.068 --> 00:16:10.971 
在我們的模態演示案例中真正重要的是

00:16:11.672 --> 00:16:15.209 
我們
保留已建立的segueway對象

00:16:15.275 --> 00:16:17.644 
當用戶觸發segueway時會創建

00:16:18.779 --> 00:16:19.880 
在演示案例顯示過程中

00:16:19.947 --> 00:16:21.682 
你的演示器出現在屏幕上

00:16:22.883 --> 00:16:24.818 
通常segueway對象很短暫

00:16:25.352 --> 00:16:28.021 
執行segueway 
分配segueway併發送出去

00:16:28.288 --> 00:16:30.624 
執行  解除分配

00:16:30.958 --> 00:16:35.596 
並且當視圖控制顯示在屏幕上 

00:16:35.662 --> 00:16:37.998 
將在iOS上控制
和結束模態展示segueway 

00:16:38.065 --> 00:16:39.333 
只要調出管理員模態

00:16:40.300 --> 00:16:41.768 
我爲什麼要費如此費勁解釋呢

00:16:43.537 --> 00:16:45.739 
我們需要知道

00:16:45.806 --> 00:16:47.074 
你將如何實現自定義閃爍 

00:16:47.140 --> 00:16:49.142 
動畫或實現任何自定義模態展示動畫

00:16:50.477 --> 00:16:52.212 
我們的應用很小

00:16:53.747 --> 00:16:56.283 
用戶已點擊
這個按鈕觸發segueway

00:16:57.784 --> 00:17:00.721 
目標視圖控制器已存在

00:17:00.787 --> 00:17:02.789 
是從故事板裏調出但還未在屏幕上顯示

00:17:03.557 --> 00:17:05.025 
將發送執行到segueway

00:17:06.292 --> 00:17:07.528 
首先要做的是

00:17:07.594 --> 00:17:10.897 
分配一個轉換指派

00:17:10.964 --> 00:17:12.332 
到目標視覺控制器

00:17:14.867 --> 00:17:18.638 
隨後 它將調用管理員
開始普通模態展示

00:17:20.540 --> 00:17:22.009 
現在 目標視圖控制器

00:17:22.476 --> 00:17:24.278 
在通過管理員實現或執行

00:17:24.344 --> 00:17:26.847 
獲得present 
ViewController後

00:17:27.414 --> 00:17:29.449 
它將與轉換指派協商

00:17:29.783 --> 00:17:31.285 
提交對象

00:17:31.919 --> 00:17:34.054 
實際上是驅動自定義動畫

00:17:35.856 --> 00:17:38.792 
關於這系列協議 如何工作的更多細節

00:17:38.859 --> 00:17:40.994 
我建議你使用
WWDC 2013的視圖控制器

00:17:41.061 --> 00:17:43.497 
查看自定義傳送

00:17:45.666 --> 00:17:48.168 
另一方面用戶已完成視覺控制器

00:17:48.235 --> 00:17:50.571 
他們輕敲取消按鈕

00:17:52.206 --> 00:17:53.440 
目標視圖控制器

00:17:53.507 --> 00:17:57.277 
因爲退出後 仍有轉換指派分配給它

00:17:57.377 --> 00:17:58.745 
並請求轉換指派

00:17:58.812 --> 00:18:01.682 
提供動畫控制器以驅動解除

00:18:02.149 --> 00:18:05.385 
若我們
無法控制我們的segueway

00:18:05.452 --> 00:18:06.687 
反過來它將控制的轉換指派

00:18:07.054 --> 00:18:08.655 
這些已經全部發布

00:18:08.722 --> 00:18:10.858 
在iOS 8中或許會出現死機

00:18:10.924 --> 00:18:12.492 
在iOS 9中會出現屏幕卡頓

00:18:12.559 --> 00:18:14.595 
所以我們也無法獲得漂亮的自定義動畫

00:18:16.630 --> 00:18:19.533 
隨後動畫控制器收到驅動解除的要求

00:18:19.800 --> 00:18:21.301 
我們想象的視圖消失了

00:18:22.302 --> 00:18:24.238 
另一個重要的情況是

00:18:24.304 --> 00:18:26.306 
你處理自適應性的時候

00:18:26.607 --> 00:18:29.476 
比如說你正在在iPhone上運行

00:18:29.676 --> 00:18:31.979 
用戶旋轉設備可能是
一部iPhone 6 Plus

00:18:32.045 --> 00:18:35.215 
你想展示風景或者人物的不同界面

00:18:35.282 --> 00:18:38.352 
或在iPad Air 2上運行時

00:18:38.418 --> 00:18:41.255 
你已經充分利用iOS 9
新多重任務處理特性

00:18:41.321 --> 00:18:45.158 
用戶已經將你的app分成50/50

00:18:45.259 --> 00:18:48.629 
而你不想 也就是說

00:18:48.695 --> 00:18:50.664 
關閉一個比較小畫面

00:18:51.665 --> 00:18:54.902 
這個具體事例來自週二的演講

00:18:54.968 --> 00:18:58.038 
從iPad 中
iOS 9多重任務處理開始

00:18:58.405 --> 00:19:00.707 
這解釋了爲什麼 你想做類似這樣的事

00:19:00.774 --> 00:19:02.176 
在這個案例中 這種情況將出現

00:19:03.677 --> 00:19:05.579 
類似自定義動畫

00:19:05.646 --> 00:19:08.549 
我們需要
用delegate來自定義展示

00:19:10.751 --> 00:19:14.288 
不論segueway
提出什麼模態展示用戶都將觸發它們

00:19:15.689 --> 00:19:19.026 
重載執行將對目標視圖控制器的

00:19:19.660 --> 00:19:21.862 
顯示控制器

00:19:22.229 --> 00:19:23.297 
進行自適應指派

00:19:24.364 --> 00:19:25.465 
這只是指派屬性

00:19:25.532 --> 00:19:27.267 
事實上 協議叫做自適應指派

00:19:28.702 --> 00:19:29.736 
隨後我們調用管理員

00:19:29.803 --> 00:19:31.104 
以獲得標準模態展示

00:19:31.171 --> 00:19:33.440 
用來結束全屏

00:19:33.507 --> 00:19:35.442 
而它恰巧適合目前尺寸類

00:19:36.443 --> 00:19:39.379 
後來 用戶做了些什麼導致尺寸類變動

00:19:39.446 --> 00:19:41.748 
比如 
旋轉他們iPhone 6 Plus

00:19:42.149 --> 00:19:46.320 
將iPad air 2
視圖分成50/50

00:19:48.989 --> 00:19:50.991 
展示控制器將告知自適應指派

00:19:51.058 --> 00:19:53.660 
我們正在改變尺寸類

00:19:54.061 --> 00:19:56.096 
並反過來請求自適應指派

00:19:56.163 --> 00:19:57.831 
提供新的視圖控制器

00:19:58.765 --> 00:20:00.534 
暫時替換

00:20:00.601 --> 00:20:01.835 
目前的視圖控制器

00:20:03.136 --> 00:20:04.738 
關於它如何運作的更多信息

00:20:04.805 --> 00:20:06.373 
去年 我的老闆爲大家做展示

00:20:06.440 --> 00:20:08.208 
即關於iOS8視圖控制器的巨大改進

00:20:09.476 --> 00:20:11.478 
去年 不是兩年前

00:20:13.714 --> 00:20:15.582 
今天 關於它是如何運作的

00:20:15.649 --> 00:20:18.185 
託尼將用Xcode7
爲我們展示自定義動畫

00:20:24.858 --> 00:20:25.859 
謝謝你 凱爾

00:20:27.394 --> 00:20:30.330 
今天 我將爲大家展示幾種方法

00:20:30.697 --> 00:20:33.267 
如何使用代碼在你的
segueway中增加自定義邏輯

00:20:34.568 --> 00:20:36.570 
在執行一個segueway時
在寫代碼之前

00:20:36.637 --> 00:20:39.473 
若你已經使用故事板將源視圖控制器

00:20:39.540 --> 00:20:42.209 
傳到其目的地

00:20:43.243 --> 00:20:45.846 
你可能不知道
什麼時候segueway會觸發

00:20:45.946 --> 00:20:48.348 
或動畫如何展示

00:20:49.483 --> 00:20:53.387 
爲了向你展示
我將在這裏創建一個segueway

00:20:53.820 --> 00:20:55.355 
在用戶輕敲刪除按鈕時

00:20:55.656 --> 00:20:58.392 
若照片和journal入口有關

00:20:58.692 --> 00:21:01.295 
我將有條件的提出確認通知單

00:21:03.330 --> 00:21:07.000 
第一步 

00:21:07.067 --> 00:21:09.403 
從庫中拉出視圖控制器

00:21:09.469 --> 00:21:10.571 
它將用來代表確認通知單

00:21:11.772 --> 00:21:15.709 
我給這個視圖控制器一個自定義類
這點早已增加在項目中

00:21:17.144 --> 00:21:21.515 
這個類執行加載視圖
以從代碼中創建自己的視圖

00:21:22.015 --> 00:21:25.619 
這個視圖控制器
並不需要 它從庫裏帶出來的視圖

00:21:26.486 --> 00:21:28.956 
我將點擊視圖 移除它

00:21:30.524 --> 00:21:34.194 
現在 這個視圖控制器
不再獲取故事板裏的視圖

00:21:34.394 --> 00:21:38.999 
在運行過程中 架構將返回
我的視圖控制器實現加載視圖

00:21:41.502 --> 00:21:45.005 
現在我們有了視圖控制器確認通知單
接下來 爲它創建segueway

00:21:46.073 --> 00:21:48.509 
我想要
segueway通過代碼被觸動

00:21:48.575 --> 00:21:50.644 
而不是通過特別的按鈕

00:21:51.144 --> 00:21:53.480 
與其從視圖控制器層次裏的

00:21:53.547 --> 00:21:56.149 
子視圖裏將其拖出

00:21:56.450 --> 00:21:58.685 
不如直接從視圖控制器裏拖出

00:21:59.353 --> 00:22:03.590 
爲做到這個
從我的源視圖控制器SceneDoc

00:22:03.824 --> 00:22:05.259 
拖出圖標到目的地標進行控制

00:22:05.759 --> 00:22:08.295 
再一次 
我想展示一下這個視圖控制器

00:22:11.498 --> 00:22:14.701 
我想通過刪除按鈕

00:22:15.235 --> 00:22:17.371 
觸動執行segueway的代碼

00:22:17.971 --> 00:22:21.175 
我現在想做的是
從刪除按鈕中創建一個IB動作

00:22:22.709 --> 00:22:24.545 
我打開助理編輯器

00:22:24.845 --> 00:22:28.315 
它將我帶到照片視圖控制器的實現文件

00:22:29.716 --> 00:22:33.053 
我將控制從刪除按鈕拖出到源代碼過程

00:22:33.220 --> 00:22:36.557 
出現一個彈出窗

00:22:36.623 --> 00:22:39.393 
這樣我就可以設置我的連接了

00:22:40.694 --> 00:22:42.362 
我說過 我想讓這個變成一個動作

00:22:42.796 --> 00:22:44.665 
我將讓它刪除照片

00:22:49.770 --> 00:22:53.974 
Xcode生成一個IB動作方法

00:22:54.341 --> 00:22:56.376 
我將把它粘貼在這裏的代碼上

00:23:01.515 --> 00:23:06.954 
好了 在代碼中 它將檢查
是否有關聯的journal入口

00:23:07.621 --> 00:23:11.124 
若有 
它將調用帶標識符的segueway

00:23:14.161 --> 00:23:17.297 
標識符進入這裏

00:23:17.364 --> 00:23:19.566 
我們來看看
剛在故事板中創建的segueway

00:23:21.535 --> 00:23:24.037 
等一下 我將讓那個segueway
帶有相同的標識符

00:23:24.471 --> 00:23:27.641 
首先 我想引用

00:23:27.741 --> 00:23:29.710 
爲segueway
所準備的那個標識符

00:23:30.611 --> 00:23:34.448 
在這個方法中
我將關聯journal入口

00:23:34.515 --> 00:23:37.384 
傳送到目標視圖控制器

00:23:37.451 --> 00:23:39.620 
這將允許確認通知單

00:23:39.686 --> 00:23:41.088 
顯示journal入口的細節

00:23:43.524 --> 00:23:45.325 
現在來到故事板

00:23:45.392 --> 00:23:48.829 
選擇segueway 
然後來到屬性檢查這裏

00:23:50.364 --> 00:23:54.468 
我將在這裏打入同樣的標識符確認取消

00:23:56.470 --> 00:23:59.473 
你會看到 若你之前
使用過segueway屬性檢查

00:23:59.540 --> 00:24:01.909 
在標識符下面就會有個新域

00:24:02.276 --> 00:24:04.745 
可讓你
指定一個自定義segueway類

00:24:05.646 --> 00:24:08.715 
在Xcode 7 
你可爲segueway類型的

00:24:08.782 --> 00:24:10.450 
任何系統創建子類

00:24:10.918 --> 00:24:15.822 
這個在iOS9和Mac OS 
X 10 11中同樣適用

00:24:15.889 --> 00:24:18.225 
我的項目中有一個
我增加的自定義segueway

00:24:18.325 --> 00:24:19.459 
我將在這裏選擇它

00:24:20.060 --> 00:24:21.795 
它叫做縮放動畫segueway

00:24:22.863 --> 00:24:25.766 
我們來看看那個類的實現

00:24:26.433 --> 00:24:27.701 
我將關閉助理器

00:24:28.368 --> 00:24:29.803 
使用跳轉欄

00:24:29.870 --> 00:24:32.406 
到達縮放動畫segueway

00:24:35.576 --> 00:24:36.877 
首先 我想指出的是

00:24:36.944 --> 00:24:41.715 
這個segueway是從
UI故事板Segueway中導出的

00:24:41.782 --> 00:24:44.585 
並遵循UI視圖控制器轉換指派協議

00:24:45.452 --> 00:24:47.421 
這個協議允許你設定對象

00:24:47.688 --> 00:24:51.024 
對象即是用來控制以及解除

00:24:51.091 --> 00:24:53.060 
子模態動畫展示的方法

00:24:55.629 --> 00:24:57.331 
首先 加載執行方法

00:24:58.398 --> 00:25:00.767 
在這個方法中

00:25:01.001 --> 00:25:03.537 
我將segueway設置爲
目標視圖控制器的轉換指派

00:25:04.004 --> 00:25:05.138 
並調用管理員

00:25:05.205 --> 00:25:06.773 
它將開始模態展示

00:25:08.876 --> 00:25:10.377 
接下來

00:25:10.444 --> 00:25:12.145 
我從轉換指派協議中重載兩種方法

00:25:12.713 --> 00:25:14.948 
動畫控制器的展示控制器

00:25:15.015 --> 00:25:17.618 
和動畫控制器的解除控制器

00:25:19.786 --> 00:25:23.690 
從每個方法中返回的目標

00:25:23.924 --> 00:25:27.027 
均遵循UI視圖控制前動畫傳送協議

00:25:28.362 --> 00:25:29.997 
此協議包含

00:25:30.063 --> 00:25:31.798 
實際控制動畫的方法

00:25:33.600 --> 00:25:37.471 
在我展示的動畫設計下面
有一個非常簡單的動畫

00:25:37.538 --> 00:25:41.675 
可從屏幕中心
按比例放大目標視圖控制器

00:25:42.843 --> 00:25:44.378 
來看看運作中的segueway

00:25:48.815 --> 00:25:51.718 
好了
再一次 我將輕敲單元格顯示菜單

00:25:52.553 --> 00:25:54.154 
當我輕敲刪除按鈕

00:25:55.956 --> 00:25:59.126 
帶有自定義動畫的
自定義segueway開始執行

00:25:59.993 --> 00:26:01.662 
看到了確認通知單

00:26:02.396 --> 00:26:05.732 
取消時

00:26:06.133 --> 00:26:09.369 
通過使用解除動畫設計運行動畫解除

00:26:10.971 --> 00:26:15.008 
用不同的方式
對segueway進行自定義

00:26:15.876 --> 00:26:19.680 
我鼓勵你們在UI視圖控制器
和UI故事板Segueway上

00:26:19.746 --> 00:26:21.915 
查看我們其他的segueway

00:26:23.016 --> 00:26:25.319 
自定義
segueway展示到此圓滿結束

00:26:25.385 --> 00:26:28.288 
現場交給凱爾
讓凱爾帶我們進入下一部分

00:26:35.863 --> 00:26:36.830 
謝謝

00:26:39.700 --> 00:26:43.437 
在故事板方面有所研究
我知道在座的各位都走在技術前沿

00:26:43.804 --> 00:26:46.240 
有多少人
曾經用過展開segueway

00:26:48.208 --> 00:26:51.245 
事實上 極少有人曾經使用過故事板

00:26:51.478 --> 00:26:52.579 
有多少人

00:26:52.646 --> 00:26:55.182 
曾經在iOS上
實現過自定義集合視圖控制器

00:26:56.450 --> 00:26:57.551 
同樣很少

00:26:58.652 --> 00:27:00.020 
今年 讓我很激動的一件事是

00:27:00.087 --> 00:27:03.023 
我們是如何讓這兩個特性
更好的配合使用

00:27:04.057 --> 00:27:07.060 
對於不熟悉展開segueway
和它的作用的人來說

00:27:08.128 --> 00:27:11.098 
可以將它理解成地圖

00:27:12.833 --> 00:27:15.235 
想象一下
我經常去格雷斯大教堂

00:27:15.302 --> 00:27:17.971 
這座教堂位於諾布山上
是一座非常漂亮的幾何形教堂

00:27:18.038 --> 00:27:21.275 
你可以從這些位置 從市中心看到它

00:27:22.776 --> 00:27:24.144 
因爲它在山頂

00:27:24.211 --> 00:27:26.246 
可以計算出我們要走一段很長的下坡路

00:27:26.313 --> 00:27:27.214 
才能到達渡輪碼頭

00:27:29.816 --> 00:27:33.453 
在渡輪碼頭閒逛一夥買到有機甘藍

00:27:33.520 --> 00:27:37.057 
和用藍色瓶子裝的咖啡 
因爲我在內河碼頭

00:27:37.824 --> 00:27:41.528 
我可能需要走一段很長的路
才能到達漁人碼頭

00:27:43.463 --> 00:27:45.032 
我真的很累了

00:27:46.333 --> 00:27:47.334 
我想要回家

00:27:48.669 --> 00:27:49.937 
但我不想做的是

00:27:50.771 --> 00:27:52.573 
轉身原路返回

00:27:52.639 --> 00:27:57.244 
因爲一 我不是住在大教堂裏
二 那也不是回到大教堂最短的路

00:27:59.847 --> 00:28:03.217 
我想做的是  首先確定我想去哪

00:28:04.651 --> 00:28:07.187 
第二 找出那個位置

00:28:08.856 --> 00:28:12.693 
三 做計劃並按照路線前往目的地

00:28:13.560 --> 00:28:15.295 
這就是展開segueway所要做的

00:28:16.330 --> 00:28:19.299 
它們找出前往特定目的地的路徑

00:28:19.833 --> 00:28:21.735 
但是 並不需要

00:28:21.802 --> 00:28:22.736 
原路返回

00:28:25.539 --> 00:28:27.007 
再舉個具體例子

00:28:27.074 --> 00:28:28.475 
講講應用的實際使用情況

00:28:29.076 --> 00:28:32.579 
回到配合標籤欄控制器

00:28:32.646 --> 00:28:33.981 
正在使用中的展示應用

00:28:34.081 --> 00:28:37.351 
不好意思 
我們的自定義標籤控制器表視圖

00:28:38.085 --> 00:28:39.653 
和導航控制器都包含它

00:28:41.021 --> 00:28:42.956 
當用戶使用我們的應用時

00:28:43.023 --> 00:28:44.791 
視圖控制器層級發生變化

00:28:46.860 --> 00:28:52.666 
他們可輕敲圖像在導航控制器中
增加東西 那是選項卡的產物

00:28:55.702 --> 00:28:56.870 
這就是我們所在的位置了

00:28:58.672 --> 00:29:00.340 
此時 用戶說

00:29:00.407 --> 00:29:02.576 
我想回到
我剛看到的那個journal表格

00:29:08.448 --> 00:29:10.717 
當我們要求這麼做時

00:29:11.318 --> 00:29:12.920 
我們將在照片視圖控制器裏

00:29:13.520 --> 00:29:15.355 
執行一個segueway

00:29:16.757 --> 00:29:19.693 
這是一個帶返回至Journal
標識符的展開segueway

00:29:22.596 --> 00:29:23.897 
展開
segueway首先

00:29:23.964 --> 00:29:25.666 
確定目標

00:29:27.968 --> 00:29:32.439 
發現目標的方法
確定我們已找到所尋目標的方法

00:29:32.706 --> 00:29:33.874 
是利用一些代碼

00:29:34.608 --> 00:29:38.846 
這些代碼在UI
表格視圖控制器的子類中

00:29:39.446 --> 00:29:42.316 
這也是我用來調用
iAmTheJournal的方法

00:29:43.250 --> 00:29:44.551 
這個方法不起作用

00:29:44.618 --> 00:29:47.321 
它是一個ID功能
拿走UI故事板segueway

00:29:47.554 --> 00:29:50.090 
並單獨存在

00:29:50.157 --> 00:29:52.392 
這樣我們可以確定
我們已找到所要的視圖控制器

00:29:58.432 --> 00:30:00.701 
第二步 找目標

00:30:03.470 --> 00:30:06.673 
我們從尋找現有源的根源開始

00:30:07.741 --> 00:30:11.545 
在iOS 8中 
我詢問這個視圖控制器 不好意思

00:30:13.647 --> 00:30:15.849 
在iOS 8中 
我詢問這個視圖控制器

00:30:15.916 --> 00:30:18.151 
根據未展開
segueway動作查看控制器 

00:30:18.652 --> 00:30:21.154 
這個視圖控制器將瀏覽它的子集

00:30:21.221 --> 00:30:23.724 
試圖找到一個視圖控制器

00:30:23.891 --> 00:30:28.929 
能對我們在這裏指定的
iAmTheJournal選擇器

00:30:29.363 --> 00:30:31.231 
我們已在檢查中

00:30:31.298 --> 00:30:32.999 
爲展開segueway對其進行創建

00:30:35.269 --> 00:30:38.939 
對於小視圖控制器
層級來說這個方法很棒

00:30:39.006 --> 00:30:40.274 
但它並不適用於

00:30:40.340 --> 00:30:42.242 
這個應用中的視圖控制器層級

00:30:43.510 --> 00:30:46.713 
在iOS 9中 我們棄用那個方法

00:30:46.914 --> 00:30:48.482 
並用新方法取而代之

00:30:48.615 --> 00:30:51.585 
允許子視圖控制器
從源中展開而這個方法返回來的

00:30:52.486 --> 00:30:55.556 
取代單獨視圖控制器的

00:30:55.622 --> 00:30:59.860 
它返回了一批子接收器

00:30:59.927 --> 00:31:01.528 
我們需瀏覽
這些子接收器以找出目標

00:31:04.631 --> 00:31:07.434 
事實上 我們想返回一個子集

00:31:07.501 --> 00:31:12.406 
我們並不想找
來時路徑衍生出的展開目標

00:31:12.573 --> 00:31:14.141 
我們有其他新方法

00:31:14.241 --> 00:31:16.577 
包含一個允許子視圖控制器重載

00:31:16.844 --> 00:31:20.013 
segueway源的子視圖控制器

00:31:20.080 --> 00:31:21.448 
用來解決我們從哪來的問題

00:31:23.584 --> 00:31:26.253 
UI導航控制器上的實現調用

00:31:26.320 --> 00:31:28.388 
那個方法以解決我們從哪來的問題

00:31:28.622 --> 00:31:31.291 
也就是說 哦 
那個照片視圖控制器是源

00:31:31.491 --> 00:31:32.759 
因此 包含源

00:31:33.961 --> 00:31:37.731 
返回來的子視圖控制器列

00:31:37.798 --> 00:31:39.833 
忽略了視圖控制器 我們得到1的陣列

00:31:41.768 --> 00:31:44.204 
此時 故事板運行時

00:31:44.271 --> 00:31:46.573 
遞歸到陣列  從第一個
且是唯一一個的元素開始

00:31:48.108 --> 00:31:51.678 
我們詢問這個集合
視圖控制器最近的這個集合

00:31:52.746 --> 00:31:54.548 
控制器的子視圖控制器已被掩蓋

00:31:54.615 --> 00:31:57.384 
我們應該進一步搜索
以找到展開segueway的目標

00:31:58.385 --> 00:32:00.153 
它沒有任何子視圖控制器

00:32:01.088 --> 00:32:03.857 
我們有遞歸的基礎案例可以進行詢問

00:32:04.358 --> 00:32:07.828 
你是否可以執行
我們在找的展開segueway

00:32:09.062 --> 00:32:14.201 
它無法執行 我們也沒找到目標

00:32:15.269 --> 00:32:17.104 
我們重新搜索

00:32:17.171 --> 00:32:18.539 
將視圖控制器層級鏈提高一級

00:32:21.175 --> 00:32:23.644 
同先前的方法
新方法允許子視圖控制器

00:32:23.710 --> 00:32:26.013 
來自展開 來自源

00:32:28.549 --> 00:32:31.618 
它的實現 自定義視圖控制器

00:32:31.685 --> 00:32:32.986 
只想返回

00:32:33.053 --> 00:32:34.821 
垂直向上 通過堆棧

00:32:35.389 --> 00:32:39.526 
它詢問自己哪個子集包含展開源

00:32:41.662 --> 00:32:44.631 
照片導航控制器包含這個源

00:32:45.732 --> 00:32:47.935 
所以返回來的陣列
忽略了那個子陣列

00:32:48.769 --> 00:32:50.804 
又有一個子陣列

00:32:50.871 --> 00:32:54.508 
這個陣列是從這個方法
和運行前遞歸中返回的

00:32:56.276 --> 00:32:59.213 
我們應該瀏覽哪個子陣列
尋找展開源呢

00:33:00.214 --> 00:33:01.381 
不好意思 是展開目標

00:33:03.450 --> 00:33:07.921 
導航控制器沒有任何
沒有子源

00:33:08.422 --> 00:33:10.924 
暫時先略過  再一次遞歸

00:33:12.793 --> 00:33:16.330 
詢問表格視圖控制器
我們應該瀏覽哪個在哪裏尋找目標呢

00:33:16.697 --> 00:33:17.731 
它沒有任何子

00:33:18.298 --> 00:33:21.668 
我們詢問它能否執行
展開segueway功能呢

00:33:23.270 --> 00:33:28.442 
方法是我剛用過的
它的實現並沒有任何載體

00:33:29.042 --> 00:33:31.879 
這是我們的標記 
我們找到它了 找到目標了

00:33:39.353 --> 00:33:44.258 
此刻 在iOS中 我們要求目標根源

00:33:44.992 --> 00:33:46.593 
返還一個segueway

00:33:46.660 --> 00:33:49.429 
這樣我們就可以知道如何
恢復視圖控制器層級

00:33:49.630 --> 00:33:51.131 
讓我們的目標可見

00:33:52.132 --> 00:33:54.701 
對於更復雜的視圖控制器層級

00:33:54.801 --> 00:33:57.771 
這個問題真的很難回答

00:33:59.406 --> 00:34:00.574 
我們棄用那個方法

00:34:01.608 --> 00:34:04.244 
以一個命名爲增加展開的特性加以取代

00:34:06.013 --> 00:34:09.016 
這個特性讓每個從源到目標的

00:34:09.081 --> 00:34:11.585 
視圖控制器參與展開

00:34:12.186 --> 00:34:13.987 
因此我只需使用局部知識

00:34:15.789 --> 00:34:18.792 
執行期將使用

00:34:18.958 --> 00:34:20.793 
你在檢查和界面生成器上

00:34:20.860 --> 00:34:23.496 
指定的任何子集
構建UI故事板segueway目標

00:34:24.665 --> 00:34:25.966 
它要求它執行

00:34:29.503 --> 00:34:31.938 
這是第三步  按照路徑走

00:34:33.607 --> 00:34:34.908 
好了 我們已經找到

00:34:34.975 --> 00:34:36.710 
從源到目標的路徑

00:34:39.746 --> 00:34:42.815 
首先要做的是爲segueway

00:34:42.882 --> 00:34:44.384 
請求路徑上的第一個中繼段

00:34:44.451 --> 00:34:46.386 
朝視圖控制器展開

00:34:47.154 --> 00:34:48.822 
我們將請求源的根源

00:34:49.922 --> 00:34:51.725 
執行任何所需的行動

00:34:51.992 --> 00:34:54.194 
以讓我們進入鏈接中的第二步

00:34:55.996 --> 00:34:58.532 
子視圖控制器對其根源一無所知

00:34:58.599 --> 00:35:00.901 
這個方法並沒有用

00:35:01.235 --> 00:35:02.936 
它被告知向根源展開

00:35:03.270 --> 00:35:04.638 
但這並不是子的責任

00:35:06.306 --> 00:35:08.642 
接下來 我們來說說
自定義集合視圖控制器

00:35:09.610 --> 00:35:13.547 
我們發出請求 好了
朝journal導航控制器展開

00:35:15.182 --> 00:35:17.251 
這是自定義標籤控制器所需做的

00:35:17.317 --> 00:35:21.088 
它知道如何重新安排

00:35:21.955 --> 00:35:24.091 
以便讓journal導航控制器可見

00:35:27.494 --> 00:35:31.765 
下一步 我們要求導航控制器

00:35:31.832 --> 00:35:33.066 
對錶格視圖控制器展開

00:35:34.034 --> 00:35:35.936 
它已經在導航堆棧頂部

00:35:36.003 --> 00:35:37.437 
所以這裏就不需要再做什麼了

00:35:38.372 --> 00:35:40.541 
我們返回用戶想去的地方

00:35:42.176 --> 00:35:44.011 
這就是關於它們內部如何運作的

00:35:45.345 --> 00:35:47.614 
託尼將爲你展示
如何在你的應用中執行

00:35:52.286 --> 00:35:53.153 
謝謝你 凱爾

00:35:54.188 --> 00:35:57.257 
在接下的演示中 我將向大家展示

00:35:57.324 --> 00:36:00.294 
如何用自定義container 
視圖控制器segueways展開

00:36:00.360 --> 00:36:02.129 
你可能還記得在第一個演示中

00:36:02.362 --> 00:36:05.265 
我們通過Journal
按鈕創建了一個segueway

00:36:05.332 --> 00:36:07.601 
該模態表是
用於創建新的journal入口的

00:36:09.236 --> 00:36:12.973 
不過 我們還沒有爲該完成按鈕
附加任何功能

00:36:13.640 --> 00:36:16.210 
我現在需要做的是通過完成按鈕

00:36:16.276 --> 00:36:17.678 
創建一個展開segueway 

00:36:17.744 --> 00:36:19.680 
然後
使用展開segueway去做一些事

00:36:20.180 --> 00:36:22.783 
首先 我想要談談模態表

00:36:23.851 --> 00:36:26.954 
我想要從導航中

00:36:27.020 --> 00:36:28.055 
撤銷照片視圖管理器

00:36:29.122 --> 00:36:32.226 
我想要把標籤轉成journal標籤

00:36:33.093 --> 00:36:35.128 
我想要下移導航控制器 

00:36:35.195 --> 00:36:36.463 
回到該表格視圖控制器 

00:36:36.530 --> 00:36:38.031 
這裏我們會爲

00:36:38.365 --> 00:36:40.133 
journal入口

00:36:40.200 --> 00:36:41.268 
插入新的表格視圖單元

00:36:42.002 --> 00:36:44.638 
對於一個segueway來說要很多
首先從哪開始呢？

00:36:45.639 --> 00:36:49.476 
第一步
是創建一個展開segueway

00:36:49.710 --> 00:36:52.679 
先在想要展開的視圖控制器中

00:36:52.946 --> 00:36:54.781 
定義IB動作方法的特別類型

00:36:55.082 --> 00:36:57.551 
這種情況下
是journal表格視圖控制器

00:36:59.086 --> 00:37:00.687 
在這裏 控制器執行過程中

00:37:00.754 --> 00:37:03.624 
你可以看到這裏有IB動作方法

00:37:04.491 --> 00:37:06.126 
而且 是特別的IB動作方式

00:37:06.193 --> 00:37:08.595 
因爲它將
一個UI故事板Segueway  

00:37:08.662 --> 00:37:09.763 
作爲其唯一參數

00:37:11.565 --> 00:37:14.668 
任何時候Xcode看到
一個將UI故事板Segueway 

00:37:14.735 --> 00:37:17.771 
作爲其唯一參數
的IB動作方法時候 

00:37:17.838 --> 00:37:21.308 
都會允許你創建展開
segueway用於指向選擇器

00:37:23.777 --> 00:37:26.713 
使用這種方法 

00:37:26.780 --> 00:37:30.184 
我控制了
segueway的資源視圖控制器 

00:37:30.250 --> 00:37:32.553 
視圖控制器是用於創建
一條新的journal入口

00:37:33.620 --> 00:37:36.023 
我使用
該視圖控制器的journal入口 

00:37:36.089 --> 00:37:39.326 
然後添加到我們的模型中這裏刷新表格

00:37:39.593 --> 00:37:41.461 
然後插入新單元格
然後滾動到單元格位置

00:37:42.896 --> 00:37:45.732 
現在 
我們可以看到我們想要的展開動作 

00:37:46.099 --> 00:37:47.401 
讓我們現在回到故事板上 

00:37:47.467 --> 00:37:49.570 
然後創建一個
segueway指向該選擇器

00:37:51.705 --> 00:37:54.107 
這裏我們在視圖控制器 

00:37:54.174 --> 00:37:56.109 
這裏
可以創建一個新journal入口 

00:37:56.343 --> 00:37:59.713 
然後我們將通過完成按鈕
創建一個展開segueway

00:38:00.447 --> 00:38:02.816 
爲了這麼做 我們將從完成按鈕拖動到

00:38:03.383 --> 00:38:05.752 
SceneDoc的退出佔位符

00:38:06.920 --> 00:38:09.790 
退出佔位符可作爲佔位符

00:38:09.990 --> 00:38:11.758 
用於Xcode在工作區發現的

00:38:11.825 --> 00:38:13.760 
所有合法的
展開segueway動作中

00:38:14.361 --> 00:38:17.231 
根據UI故事板Segueway

00:38:17.431 --> 00:38:19.733 
通過IB動作方法再次確認

00:38:19.833 --> 00:38:21.201 
是否是合法的展開動作

00:38:22.102 --> 00:38:25.439 
這裏會發現我們看到的這種方法
 所以 我準備進行選擇

00:38:27.741 --> 00:38:30.377 
一般而言 這就是你要做的
當你創建一個展開segueway

00:38:30.577 --> 00:38:33.580 
你定義展開選擇器 
然後創建segueway指向它

00:38:34.281 --> 00:38:37.251 
在我例子中 
我想要執行一些自定義邏輯 

00:38:38.018 --> 00:38:40.687 
這樣可以允許我的自定義
container視圖控制器

00:38:40.754 --> 00:38:42.189 
在這些標籤之間轉換

00:38:43.190 --> 00:38:47.227 
這個邏輯在自定義container
視圖控制器文件 我們來看

00:38:51.832 --> 00:38:54.134 
正如你看到的 在這個視圖控制器中 

00:38:54.201 --> 00:38:56.870 
我已經展開
指向視圖控制器的segueway

00:38:57.971 --> 00:38:59.673 
在這種方法中 我做了兩件事

00:39:00.841 --> 00:39:03.443 
首先 我選取當前選擇的導航控制器 

00:39:03.510 --> 00:39:06.213 
然後我退出到根視圖控制器

00:39:07.514 --> 00:39:10.284 
然後 我設定選擇的導航控制器

00:39:10.617 --> 00:39:13.353 
作爲這個參數的後續視圖控制器

00:39:14.688 --> 00:39:17.991 
控制後續視圖前是展開鏈中的下一步

00:39:18.358 --> 00:39:20.327 
務須展示
 segueway最終目的地 

00:39:20.394 --> 00:39:23.030 
這裏是該展開指向的

00:39:23.096 --> 00:39:25.732 
自定義container的直接下代

00:39:27.801 --> 00:39:31.104 
這裏設置屬性觀察 

00:39:31.171 --> 00:39:33.974 
準備升級我們自動佈侷限制 

00:39:34.041 --> 00:39:35.809 
並執行我們之前看到的滑動動畫

00:39:37.311 --> 00:39:40.514 
看到我的自定義
container視圖控制器

00:39:40.581 --> 00:39:42.449 
執行遞增展開

00:39:42.916 --> 00:39:44.751 
然我們看看展開segueway動作

00:39:48.822 --> 00:39:50.891 
我會選擇一個單元 下拉菜單

00:39:51.458 --> 00:39:52.593 
選擇journal按鈕

00:39:53.527 --> 00:39:54.928 
現在 我點擊完成按鈕

00:39:55.696 --> 00:39:57.898 
你可以看到我們已經轉換了標籤

00:39:58.532 --> 00:40:00.167 
在journal視圖控制器這裏 

00:40:00.400 --> 00:40:03.170 
並插入journal
入口的新表格視圖單元

00:40:05.038 --> 00:40:07.674 
正如
你所看到的展開segueway 

00:40:07.741 --> 00:40:09.343 
在iOS 9系統上
更多的強大功能 

00:40:09.409 --> 00:40:11.645 
和自定義container
視圖控制器配合好

00:40:18.652 --> 00:40:21.188 
這樣 關於展開演示結束了

00:40:21.455 --> 00:40:24.124 
現在 
讓我們回到凱爾這裏看看他的演示

00:40:27.895 --> 00:40:30.831 
謝謝你 託尼
現在我們可以快速總結一下

00:40:30.898 --> 00:40:32.833 
用於剛介紹的展開的新API

00:40:33.433 --> 00:40:34.968 
我們已經放棄

00:40:35.035 --> 00:40:36.737 
展開segueway的視圖控制器 

00:40:36.803 --> 00:40:40.374 
取而代之
我們用許可展開資源的子視圖控制器

00:40:40.941 --> 00:40:42.342 
如果你不再使用舊方法

00:40:42.409 --> 00:40:44.077 
而且使用新的方法 

00:40:44.144 --> 00:40:46.813 
我們會在
iOS 9系統上保留舊方法 

00:40:46.880 --> 00:40:50.017 
這樣如果你的app是在
iOS 8上運行的代碼照常執行 

00:40:50.150 --> 00:40:51.652 
也可以在iOS9上運行

00:40:52.619 --> 00:40:56.390 
segueway定源法調用
新的允許子視圖包容控制器 

00:40:56.456 --> 00:41:00.694 
這樣可以過濾返回

00:41:00.761 --> 00:41:02.496 
子視圖控制器陣列

00:41:04.164 --> 00:41:06.667 
如果需要某些自定義校驗 

00:41:06.733 --> 00:41:08.836 
用於執行特定的展開 

00:41:08.902 --> 00:41:13.006 
你可以替換和執行
已有的展開seguew動作方法 

00:41:13.373 --> 00:41:15.142 
但是是預設情況
所能執行的動作是

00:41:15.209 --> 00:41:17.177 
查看接收器是否對選擇器做出反饋

00:41:17.811 --> 00:41:18.879 
一般而言 這些就足夠了

00:41:21.281 --> 00:41:23.483 
同樣的 我們已經放棄

00:41:23.550 --> 00:41:26.486 
查看視圖控制器
方法的展開segueway

00:41:27.020 --> 00:41:29.957 
並用展開segueway取代 

00:41:30.023 --> 00:41:31.592 
可以在執行遞增展開鏈條中

00:41:32.059 --> 00:41:33.393 
每個試圖控制器上調用

00:41:36.964 --> 00:41:37.798 
總之

00:41:38.498 --> 00:41:41.201 
今天我們瞭解瞭如何
使用組織故事板引用

00:41:42.669 --> 00:41:45.339 
我們瞭解到如何通過
重新分類自定義segueway

00:41:45.772 --> 00:41:47.574 
即使是我們使用的是標準指令

00:41:48.909 --> 00:41:51.645 
我們還詳細瞭解了
一下iOS和iOS 9系統 

00:41:52.312 --> 00:41:54.748 
通過形態展示視圖控制器 

00:41:55.449 --> 00:41:57.284 
通過展開segueway演示

00:41:57.684 --> 00:42:01.889 
而且指向segueway目標

00:42:02.155 --> 00:42:05.392 
彈出框展示segueway 

00:42:05.659 --> 00:42:09.229 
這樣可以對動畫
和自適應性執行委派動作

00:42:11.031 --> 00:42:13.066 
我們瞭解展開
segueway是如何工作

00:42:13.133 --> 00:42:15.202 
然我們可以後退到應用流中 

00:42:15.903 --> 00:42:18.805 
而且這樣我們可以在自定義
container中更容易使用 

00:42:19.439 --> 00:42:22.709 
以及如何在iOS 9系統上
移除禁用API

00:42:24.611 --> 00:42:26.146 
如果需要更多故事版的信息 

00:42:26.213 --> 00:42:28.415 
故事版助手
在Xcode 7中可以查看 

00:42:28.482 --> 00:42:30.150 
所以有問題先查看

00:42:30.517 --> 00:42:33.887 
我們還有一個簡單的項目
segueway catalog 

00:42:34.721 --> 00:42:36.723 
可以在開發者網站上下載

00:42:37.124 --> 00:42:39.226 
segueway這個
名字中間不應該有空格

00:42:39.293 --> 00:42:42.062 
如果在catalog中搜
segueway會找到其他東西

00:42:44.031 --> 00:42:46.934 
如果需要技術支持 請查看開發者論壇

00:42:47.000 --> 00:42:48.869 
上面有很多像你一樣的開發者 

00:42:48.936 --> 00:42:52.606 
面對你所遇到的相同的問題
上面都有解答 

00:42:52.673 --> 00:42:54.575 
這裏可以幫助你解決問題 

00:42:55.242 --> 00:42:57.211 
你可以聯繫開發者技術支持部 

00:42:57.277 --> 00:42:58.445 
或者如果你想進行諮詢 

00:42:58.512 --> 00:43:00.681 
可以聯繫我們的專員 卡特· 羅伯特

00:43:01.215 --> 00:43:02.983 
我們在Bash會議上見