有关通知的新内容
大家下午好 谢谢
美国的同仁们已经利用通知功能
完成了一些很不错的工作
今天我们将通过一个完整的系统
介绍其工作原理并且会看一些为你们创建的新功能
通知是一个由两个部分组成的系统
我们有iOS通知和APNS
我是Michele就职于iOS Notifications
我们首先介绍iOS通知
然后我们将介绍静默通知
和用户通知以及
二者之间的区别
我们将看一些通知操作和一项新功能
我希望你们喜欢这项功能
在本讲座的后半部分
我的同事Gokul
将会介绍Apple推送通知服务中的
一些新的功能 这些功能
将会让你的工作变得更轻松为你节省大量时间
让我们从静默通知开始
静默通知是静默的
它们不会向用户显示UI
不会触发手机提示音
因此你不会使用它们来通知用户
你应该使用它们来通知APP
它们是远程通知
因此它们来自于互联网
这是你的服务器和你的APP
你的服务器发送一个通知给你的APP
如果你发送可用内容标记给APP
你的APP就知道
有新的内容可供下载并且开始下载
默认情况下静默通知被启用
用户不需要批准你的...
不会为APP提供许可权限以使用它们
你可以直接开始使用它们
而无需请求用户批准
但是静默通知是后台APP刷新所使用的机制
在任何时候 用户都可以
进入设置并禁用它们
你不应该期望它们始终可用
你不知道用户是否已经关闭它们
也不知道你是否还会收到通知
另外 静默通知是是尽力发送的
这意味着当通知到达
用户设备时系统将会进行一些选择
它会根据设备和用户行为
来使用不同的信号例如根据电量情况和时间
来决定在合适的时间
发送通知，并启动你的APP
它会尝试节约电池电量
或尝试根据用户习惯在用户需要时
提供他们想要的内容
接下来我们介绍用户通知
顾名思义主要差别在于你使用这些通知来通知用户
当你想要向用户通知某些事项
当你想要向用户通知服务器最新状态
或APP的其他用户的操作时可以发送这些通知
它们显示在用户页面上如显示在信息条
锁屏和通知中心
由于这些通知面向用户
因此它们可能中断用户正在进行的操作
而且可能促发电话提示音
因此我们需要许可
你应该确定用户确实需要接收通知
而且他们知道将会收到通知
这还意味着用户可以在任何时间禁用通知，
而且用户可以更改设置
因此如果你将通知设置为横幅和徽章
用户可能会禁止一部分通知
他们可能接收徽章而不接收横幅
有两种不同类型的用户通知
第一种是远程通知
第二种是本地通知
让我们先来看远程通知
远程通知意味着它们来自于互联网
其来源地是你的服务器
服务器发送通知给用户设备
现在你看到你的APP还没显示出来
因为你的APP没有运行
只有当用户点击通知时你的APP才会启动
APP将会启动，
这时你能够处理
你刚才发送的通知
现在在用户远程通知中
可设置与静默通知中相同内容用于标记
这将让你的APP
有时间下载内容
或更新它想要显示的内容
这样当用户点击通知时
你的内容就可以使用了
用户将会看到响应过程
它通过这种方法在用户通知中实现静默通知
第二种是本地通知
本地通知是你自己的APP的安排
直接在用户设备上
没有服务器 也没有互联网
和前面一样你的APP安排通知
系统将它显示给用户当用户点击通知时
你的APP收到App委派中的
一个回调
这时你可以处理通知 而且你知道
用户点击了通知
并且想要处理通知
我说过你可以在APP中安排通知
那么应该怎么做呢？
你可以通过两种不同的方式
来安排通知
你可以按时间安排
这样在延迟一定的时间之后
将会发送通知
或者也可以在未来的特定日期和时间发送通知
另一种安排通知的方法
称为地理围栏
你可以规定当用户到达或离开
你设置的特定位置时发送通知
这是从用户角度来阐述的通知工作原理
通知就是这样实现的
在iOS 8，我们引入通知操作
通知操作使得
通知具有更好的可交互性
这样用户可以与你的APP进行交互
而不需启动APP这样可以提高效率
因为用户已经收到通知他们可以原地处理通知
而不需启动APP也不会中断他们正在做的事情
操作按类别进行分组
可以使用不同类别来分组你想要发送的
不同类型的通知
这样你就可以为不同类型的通知
设置不同的操作
比如说 你有一个照片APP用户可以使用它分享照片
你可以设置一组不同的操作当用户发布照片
或发布评论时将会执行这些操作
这里介绍的所有这些通知功能
已在Apple Watch中实现
当你戴着Apple Watch时你并不需要做任何事情
Apple Watch为自动为你进行处理
Apple Watch可与设备配对
你只需要正确设置你的通知
你就会获得基本和默认的处理操作
如果你想要自定义通知的外观
或通知的处理操作
我建议你观看WatchKit讲座
本周早些时候我们举行了这个讲座
介绍了很多有用的内容
如果你并不像我在讲座中所做的那样
只用emojis与你的朋友进行交流
我们在iOS 8中推出的新通知功能
即文本回复功能
当你收到一条文本消息时可以直接在下拉通知界面中
回复文字信息
我们收集了一些反馈意见
表明用户也喜欢与朋友进行文字交流
而不是仅使用emojis
在iOS 9我们推出了用户通知文本输入功能
这样你可以在相同的用户界面中
在你的APP中处理同一个交互式通知
让我们来看看
它看起来是这样的
你可以在你的APP中发送一个通知
用户可以下拉并输入文字
输入文字而不是emojis它看起来是这样的
让我们来看应该怎样操作了解它们是如何工作的
文本输入操作是一种新型操作
输入文本并进行与以往一样的文本操作
文本的显示位置
与所有其他操作的显示位置相同
在这些幻灯片中你会看到它们与其他操作配合工作
可以进行多项操作其中一项或多项操作
可以是文本输入操作
这是消息所不能企及的
如何创建它们呢？
我们说过它们仅仅是操作而已
与iOS 8之前的版本中的操作并没有什么区别
因此创建它们的方法
与创建通知的方法相同
唯一的差别在于应该将行为设置为文本输入行为
这样当设备接收通知
而且新设备具有文本输入行为时
可以显示文本字段
我们已经创建操作
然后创建自己的类别以注册这些操作
本例是一个简单的示例
我们只有一个回复操作但是可以添加更多的操作
它们将显示在信息条
提醒或锁屏之中
然后我们创建自己的设置
将它们注册到APP
这样 APP将会提示用户
询问是否允许使用用户通知
如果通知你的APP中的一个选项
当APP启动时并不需要将它们注册到APP
你可以在用户确定想要接收通知时
注册这些通知
将会设置一个按钮
你如何接收这些文本输入通知呢？
你的APP委派中有一个新的委派一个新方法
它类似于我们用于旧类型操作的委派
唯一的差别在于现在有一个新参数
向你告知用户反馈
这个参数来自于远程通知
这个参数来自于本地通知
它们之间只有细微的差异但是它们是两个不同的方法
你应该如何处理 用户反馈的数据呢？
我们使用委派方法 
当我们注册通知时
我们就在类别中设置了一个标识符 
我们获得反馈信息此信息包含一个字典
其内含有通知发回的信息
在这个例子中由于它是一个文本输入操作
它将含有用户输入的文本
这段代码检查标识符是否确实是
用于我创建的意见反馈操作的标识符
然后我从字典中提取文本
需要进行一些对话
在我获取字符串之后我就可以进行任何操作
在这个例子中我可以在视图控制器中将它添加到我的聊天APP
Apple Watch支持所有功能
其原理就是这样的
你创建一个通知
然后创建操作
你获得文本反馈用户通过标准Apple
Watch Quickboard回复通知
如前所述
如果你想自定义通知的外观或行为
可以自定义反馈列表
用户可以点击这时在
让我们来回顾本周早些时候举行的WatchKit讲座
我还有另外一件事情要讲
这件事件并不是像新iPod那么重要
也不会让人感到兴奋 
这个主题是iOS 8兼容性
虽然这是一件小事你是需要引起注意 因为
假设你的APP运行在iOS 8之中且含有操作
而且你有一个响应操作因为你设置了聊天功能
当用户收到通知时你希望...
如果他们点击回复按钮能够直接进入
他们正在进行的聊天
这样当你在聊天过程中打开APP时
他们可以立即开始输入文字
在这个例子中这是前台操作
当我们启动APP
当用户点击操作按钮时可以执行这个操作
如果你在iOS 9中实现这个功能
以使用文本输入操作你将需要使用后台操作
因为你不希望启动APP
你希望直接进行输入而且当用户输入和发送消息后
信息条消失
为了实现这一点你需要通过两种不同的方式
注册你的操作
这取决于你的APP运行在iOS 8上还是在iOS 9上
因此 当你注册你的操作时
你需要检查你的代码
将在哪个版本的iOS上运行
你可以检查API是否可用
并决定用不同的方法进行注册
我们介绍了文本输入操作
我们介绍了iOS通知以及它们如何在系统中工作
我们看到 你可以
使用静默通知来更新内容
使内容可供用户使用
我们介绍了用户通知和操作
还介绍了新的文本输入功能
我希望你们使用这些功能
你们应该了解如何将所有这些功能转移到Apple Watch
了解它们如何在Apple Watch上运行
现在 请我的同事colleague Gokul上台
他将介绍Apple推送通知服务
Push NotificationService的一些改进功能
谢谢
下午好 我是Gokul
我从事Apple推送通知服务或称APNS的开发工作
很高兴来到这里和大家分享
我们今年所取得的APNS开发新成果
我们开始吧
我们将介绍APNS的工作原理
可能对iOS远程通知或称APNS感到陌生
然后我们将讨论新的提供者API
它们是一些很不错的API我很高兴将它们介绍给你们
通过APNS发送的远程通知
由四个相似的部分组成
右下角是客户端APP运行在操作系统左下角和左上角是APNS
右上角是提供者提供者负责发送远程通知
这个流程启始于注册操作
结束于客户端APP
通过操作系统接收通知
当执行此流程时操作系统通过APAN
专门用于你的客户端APP的设备令牌
这个令牌被返回给你的客户端APP
然后你将它注册到提供者
也就是你的服务器
这个服务器负责发送远程通知
提供者负责发送远程通知
第一步工作是
Apple开发站门户中注册你的主题
并获得一个证书
使你能够与APNS安全地对话
在获得证书之后
可建立与APNS间客户端SSL连接
使用APNS提供者API发送远程通知
APNS提供的API是一种速度极快
性能很强的服务器API其开销非常低
你只需要使用一个连接
就可以发送大量的推送通知
要获得更高的吞吐量
你可以创建多个APNS连接
在完成通知发送之后 你可以保持连接
并且可以重新使用连接
APNS不会立即断开连接
这样 你就不需要在以后
花费资源重新建立连接
如果连接有错误
APNS将返回错误代码并关闭连接
我们来看一些现有的API
如果设备上卸载APP将会发生什么？
如何发现已经
已经停用的设备令牌？
这时就需要使用反馈服务
利用反馈服务
可发现APP已经不再使用的设备令牌
这样你就不会浪费资源
来发送将会被丢弃的通知
当你发送通知到设备令牌时
此服务将会启动APNS将会发现
不再使用的设备令牌
并将它存储在APNS反馈服务之中
提供者会定期调用APNS反馈服务
发现无效的令牌
并清理数据库
这是反馈服务概览
让我们来看未来的计划
明年将会有大字节令牌
现在的设备令牌是32字节
明年，也就是2016年它们将会增大到100字节
如果你在考虑在你的代码或你的服务器API中
设定合适的设备令牌
现在可以重新进行考虑
大字节设备令牌将于2016年引入
现在我们来看提供者API和明年的工作计划
先说说我们今年所做的工作
我们推出了全新的提供者API
你们肯定会喜欢
这个新提供者API基于四个主要功能
我们认为它会帮助你更可靠地发送通知
而不会降低
你的APP速度和效率
新提供者API的第一个功能是HTTP/2
新提供者API...
新提供者API基于
全新的HTTP/2工业标准
HTTP/2是广受欢迎的HTTP协议的最新升级版本
新提供者API以其为基础
我们为什么选择将HTTP/2作为新提供者API的基础呢？
这对你们开发者有什么好处呢？
我们认为HTTP/2有三个主要的特性
值得我们探讨
首先它是一个请求响应
这与HTTP一样
从提供者发送至APNS的每个通知
将会得到服务器的响应
这类似于你正在使用的HTTP语义
例如URI 标头
响应代码等你可以操作和处理它们
我们认为这将帮助你构建更可靠的提供者
以发送推送通知
因此它是一种请求响应机制
其次HTTP/2是一种多路复用协议
这一点很像
现有的提供者协议
因此速度不会降低
HTTP/2多路复用意味着
你可以通过单个连接
同时发送多个请求至服务器
因此你不会浪费资源
为每个请求或类似任务设置新的连接
每个多路复用请求响应被称为一个流
然后我们会讲解它
因此它是一种请求响应和多路复用机制
HTTP/2第二个优点是 二进制的
十分类似于我们现有的协议
采用新的HTTP/2提供者API
不会降低效率
利用二进制通过网络传输的HTTP数据帧不是HTTP文本而是二进制
你还可以使用其他一些有用的功能
例如HPACK标头压缩
这三个特性使得
HTTP/2成为新提供者API的理想选择
除此这外还有其他一些好处
例如已经成为工业标准等
你可以使用
HTTP/2的库和工具等资源
总体来说我们这是一项十分不错的功能
HTTP/2数据流提供者API
与现有的数据流相似
只是提供者与APNS之间的连接协议是HTTP/2
因此不需要修改客户端APP和APP与操作系统或
提供者之间的通信方式
就可以使用这个新API所有具有的好处
你可以使用这个API并且立即受益
让我们来探入这个流程
第一步是建立
提供者与APNS之间的连接
当你建立连接时
将会使用与你现有提供者API
相同的客户端证书
利用这个证书
可以建立与APNS之间的
客户端验证SSL连接建立连接之后
HTTP/2开始交换设置帧
设置帧含有一些详细信息
例如可以通过此连接发送的并发请求数量
或标头表参数大小等
当交换设置帧之后
当你从提供者发送设置帧之后
就可以开始发送通知数据
和你的通知请求
请我们来看看通知是如何工作的
你发送给APNS的每个通知请求
都是一个post请求
这个post请求被提交给URI
它包含设备令牌和
JSON正文类似于现在所使用的现有提供者API
JSON负载被原封不动地发送至设备
现在为了利用HTTP/2多路复用的优点
如果你想要发送多个请求 多个通知
可通过同一个连接 发送所有通知
这就是请求的工作原理
那么系统如何响应请求呢？
这个新提供者API响应请求
如果一切正常 没有问题
将会返回200状态
整个流程一切顺利
你可以继续发送通知
如果发生失败呢？
如果设备令牌错误APNS不能处理你的消息 将会发生什么？
系统将会返回400错误请求
此请求的响应正文
包含JSON内容和请求失败原因信息
它将提示设备令牌错误将会保持连接状态
你可以通过这个HTTP连接
继续向服务器发送更多请求其他一切正常
请求响应的原理就是这样的
现在我们可以通过一个例子
来了解使用这个新提供者API的请求响应是如何运作的
如果还没见过HTTP/2请求响应
你会发现它含有很多文本内容
但是我会为你进行解释
这是一个例子
请注意 这是一个HTTP/2请求
请求数据流中有两个帧
第一个帧是标头帧
第二个帧是数据帧
标头帧含有Post方法或URI
而URI含有APP指定的设备令牌
你希望将通知发送给该设备
标头帧还有可选参数
例如有效期、ID和优先级等
数据帧含有实际JSON有效内容
你想要将这些内容发送给设备
在本例中它是一个简单的文字提醒
它的内容是hello HTTP/2
这就是请求的工作原理
让我们来看本例的请求是如何工作的
在本例中响应一切正常你获得200正常状态
不需要做其他的事情 快速而又顺利
如果发生故障 比如说设备令牌错误
响应将会是这样的
同样地 两个帧一个标头帧和一个数据帧
请注意状态现在是400
正文是JSON有效内容
含有请求失败原因
在本例中失败原因是设备令牌错误
因此你可以对此响应采取措施
然后继续处理其它通知
让我们来快速了解一下
新HTTP/2请求响应提供者API
它是这个新提供者API的第一项功能
第二项功能是反馈
那么 反馈是什么呢？
利用新提供者API
我们引入即时反馈功能
利用即时反馈功能你不需要
与单独的反馈服务通信来获得你的APP
已不再使用的设备令牌
你可以通过响应消息
立即获得它们
让我们回到反馈服务数据流
不同于定时轮询APNS反馈服务
和轮询提供者
现在你可以从响应消息中获得反馈
对于反馈响应消息中的
HTTP状态代码是410410的含义是不再使用
即你的APP已经不再使用此设备令牌
除了表示设备令牌已停用
的状态代码之外
你可以还可以获得APNS最近一次知道
设备令牌被你的APP停用的时间标记
让我们来看一个例子
你发送一个通知
你发送一个请求
但发现设备令牌已经被你的APP停用
因此你可以清空它
不再向它发送通知
响应消息可能是这样的
注意这里有状态代码410和时间标记
这是APNS最近一次确认
设备令牌被你的APP停用
这就是HTTP/2提供者API和即时反馈的原理
这个新提供者API的第三个特性是简化了证书处理
我们知道 如果你想要开发具有丰富功能的APP
在开发和生产阶段
你需要创建许多证书
我们简化证书处理...
在介绍简化证书处理之前我们来看一下
你需要处理的证书例子
根据你的APP的性能
你可能需要一个证书来用于VOIP
一个证书用于手表附加信息如果你使用
开发和生产环境
这些功能可能各需要一个证书
利用简化的证书处理
你只需要为你的应用创建一个证书就可以了
这很不错
因此HTTP/2提供者API即时反馈
和简化证书处理
是新提供者API的新特性
去年我们将推送通知内容容量从256B
增大到2KB 受到广泛好评
今年我们会将它增大到4KB
4KBKB限制将适用于所有版本的iOS 和OS X
因此它并不是iOS 9或OS X El Capitan专用
它将成为新提供者API的一部分
这就是新提供者API的特性
总结来说现在我们有新的请求响应机制、HTTP/2接口
还有即时反馈功能
让你知道已经被停用的设备令牌
还有简化证书处理
让你的所有主题的推送通知只需要一个证书即可
还有新的4KB通知内容限制
今年夏天新提供者API
将可以在APNS部署环境中使用
今年晚些时候我们将会把它引入生产环境
与前一样新提供API
可用于发送通知到所有版本的iOS和OS X
你们不用创建任何专用逻辑
来确保版本兼容性
关于新提供者API就是这些
如果想更详细了解Michele关于
iOS通知和APNS的技术讲座
请参考APNS开发者文档
新提供者API文档将于今年晚些时候发布
你也可以访问技术支持和开发者论坛
请将你的咨询问题发送给我们的
主要技术讲师Paul
有一些相关的讲座 你可能会感兴趣
特别是关于ClockKit和Watch
connectivity还有Michel进行的一些演示
NSURL网络通信讲座更详细地讨论了HTTP/2
非常感谢 晚安