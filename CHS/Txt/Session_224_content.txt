<br/> 下午好
欢迎来到应用程序扩展最佳实践
我是索菲娅·多伊彻我是一名工程师
我在UIKit框架团队
稍后我的同事会加入本届会议
来自CoreOS的伊恩 拜特
在会议的第一部分
我想谈两个iOS的扩展主要类型
动作和共享的扩展
在稍后的会议上伊恩将加入我们
来谈今天的小工具的增强功能
在整个会议期间 我们将告诉您许多现实世界的例子
以帮助您最大限度地
利用这些类型的扩展
现在　应用程序扩展和分享
让我向您简单介绍一下这两种类型的扩展
有何不同
动作扩展都关于不断变化的内容
而共享扩展都关于移动内容
从当前主机应用程序
到应用程序或Web服务
现在
我要给您举更多的例子
正如我刚才提到的
动作扩展作用于当前的内容
正因为如此它们使用的内容
将作为主用户界面
稍后我将展示一个有关它的例子
但您也有机会
在执行该操作之前提出附加选项
此外
您的应用程序功能可以被分开
在不同的动作扩展
存在的容器应用程序中
现在让我举一个例子
我们在用Safari浏览器我点击右上方动作件
弹出共享表与两种类型的扩展
共享扩展在顶部
动作扩展在底部
我们做这个翻译扩展
当我们点击它
下面Safari浏览器
就会将网页转移到该扩展
在那里它会被翻译
然后翻译角会移回Safari浏览器原位
下面是同样的一个变化
当您点击翻译您带了这种形式的表
在这里用户可以选择一种语言
然后当您点击语言时我们的网页将传送到扩展
然后它会再次被翻译
并搬回到位于Safari中的
这么多的关于动作的扩展
那么共享扩展有何不同？
正如我刚才所说的共享扩展
是所有关于共享的内容从主机应用程序
到您的应用程序或Web服务
正因为如此这很重要
您所提供的用户验证和编辑之前的内容
将移出到您的Web服务
我们为您提供的是一个API
之后我会告诉您几个例子
此外您的共享扩展代表您的应用程序
在共享表中为了防止混乱
我们只允许您把一个共享扩展
包含在一个应用程序里
现在让我举一个共享扩展的例子
我们有底部共享
和顶端共享扩展
现在我们可选择四种照片而当我们
点击iCloud照片共享扩展
接下来
我们得到一个小预览表用户可以在其中添加评论
可能点击共享相册 并在右侧出现一个小预览
但是我们还没有转移任何数据
现在如果该信息是正确的用户可以决定
要么抵消要么点击发布实际执行操作
现在让我们来仔细看一下在中心的这个表
这实际上是我早先提到的API
这就是所谓的
SLComposeServiceViewController
这是它的外观平直框
有一个文本框 一个右侧的小预览
然而这是特别为我们定制的特色服务
例如我们喜欢自定义
使它看起来更像这一点
我们增加了一个占位符我们甚至还添加了
一个字符余留属性
我们甚至改变预览视图
在底部我们有一些选择
现在让我们通过一些例子来构建
首先
要设置一个占位符在该表上设置占位属性
开始了
而您的Web服务可能有一个最大字符限制
所以我们有一个小指示灯在左下角
要更新它只需设置一个属性
再次我们为您提供了d一个预览视图框
但您可以有您自己的一个
为了支持简单的构成控制器
并重写装入预览视图
然后返回您自定义视图控制器的预览
但有一点要记住
请确保该视图有
否则可能无法在纸张上显示出来
现在这些选项在底部
这些仅仅是单元格一个值在左边
一个值在右边点击他们
我们通过一个选项视图控制器
可以选择您的选项您的自定义选项
让我来告诉您如何设置它的代码
很简单
子类SL - 构成
然后重写 - 方法
每一行表示为一个SL构成表配置项目
（太拗口了）
左边是标题
右手边是值
现在如果用户点击一个单元格我们在这里调用点击处理
而且您应该
创建自定义视图控制器
为您的自定义选项
而推动它只需调用推送配置视图控制器就可以
这种工作方式与API相同
即您的导航控制器
然后最后返回项目区域
现在我们甚至能为您提供自动完成支持
在构成表上
要自动完成
您可以设置一个视图控制器
在这里更新按钮部分
在这种情况下它是一个表视图我们自动填充名称
但它可能是真的什么
要设置它只需设置自动完成视图属性就可以
我们为您做所有动画
当您做完自动完成
您将其设置回零
一切都非常简单
再次
我们的
SLComposeServiceViewController
提供了一致和熟悉的用户界面
这是完全可自定义的您可以在应用程序采用它
但是如果您有不同的需求
为您服务扩展
您可以随时通过您的视图
直接返回
现在
我只是告诉您如何让动作共享扩展
那么让我们改变齿轮一点点
并讨论
如何支持别人做扩展
在主机应用程序里
举例来说假设我们做了一个文本编辑应用程序
我们想与大家分享文本文档
以及纯文本
然而某些扩展可能不理解文字
他们可能只支持PDF文件
或者其他的扩展可能只支持HTML
现在您想支持尽可能多的扩展
所以好方法是提供所有这三个文件类型
但是您知道
这三个都不是真正的独立的文件
当您共享一个文本文档时
您真正拥有的是一个单一的文件
它支持不同的文件格式
而正因此我们有一个叫做
NSItemProvider的API
简单来说
NSItemProvider是单个条目
有多种表示方法
让我告诉您一个代码示例来更好地解释它
现在我们创建NSItemProvider
调用注册项目类型标识符
来添加新的表示
到该项目提供者
在这种情况下它是纯文本
现在如果扩展请求采用纯文本表示
该系统将在这里调用这种装载处理程序块
还有您应该动态创建文本文档
并调用完成处理程序
来将数据返回到扩展
PDF格式同样
只要扩展要求一个PDF 
表示我们调用加载处理程序您在动态创建PDF
并调用完成让其将数据
返回到该扩展
要显示共享表
简单地创建一个UI活动视图控制器
并提供了初始的项目来提供程序选项
现在
您看到的是构成表中的第一个例子
我们在右上角有这个小预览
该主机应该也提供预览
这些预览代表着什么将被共享 
而且它们需要被简单而有效的创建
它们不能过大
对于这点
我们有一个NSItemProvider API也是如此
这就是所谓的预览图像处理程序
并且一旦扩展要求一个预览
我们调用这个块在这里
您应该创建缩略图或预览
表示为动态的图像
并调用完成处理程序
来返回数据
现在我们需要再次改变我们的观点
我们首先谈到了实现扩展
然后我们谈到了支持扩展为主机应用程序
现在让我们来看看
再次成为扩展开发是什么感觉以及
如何声明您的支持用哪种数据
主机应用程序可以提供给您的扩展
例如
也许您想拥有完整的共享服务
并要声明您共享扩展
支持图像和视频
现在
在这种情况下让我们做三种扩展名
一个扩展支持图像
另一个支持处理电影
而第三个处理图像和短片
现在让我们看看会发生什么
如果主机应用程序共享单一的图像
在这种情况下 
第一和第三种扩展将出现在共享表
现在相同的方式在处理电影的情况下
如果主机应用程序
共享一个电影
第二和第三种扩展将出现在共享表这是有道理的
但是
如果主机的共享
支持图像和电影会发生什么？
您可能会认为所有的扩展将出现在工作表中
然而
目前的情况并非如此
因为在iOS 8中的实现需要
扩展可以处理所有两种类型的文件格式
有一点可惜
因为用户扩展开发人员可能会想支持尽可能多的扩展
而要做到这一点您应该
提供尽可能多的意见及其可能带来的结果
但是在这种情况下
您实际上会得到比刚才的共享
更少的扩展只能单一表示
比如电影或图像
所以我们在iOS 9中添加了新的功能
您也可以选择通过添加NSExtension 
激活词典版
把新的扩展名信息info和plistu
设置为两个之后
您的扩展就会出现即使
主机应用程序共享图像和电影
即使您只关心电影或图像
如今 这些都是高一级的激活规则
但是我们也支持激活只有谓词的规则
再次谓词可以是非常简单的
但也非常强大的 像这里这个一样
我就不赘述了现在
我们可以参考应用程序扩展开发者指南
去了解更多信息
接下来我们来谈一谈图标扩展
正如我前面提到的
分享扩展代表您的应用程序
它是一个共享表中的Web服务
因此 我们只需使用您的应用程序图标
或在共享表中的
包含应用程序图标的其他图标
所以不需要做额外的工作
对您来说
动作扩展相反地需要模板图像
我们需要两个尺寸
一个用于iPad一个用于iPhone
它们被存储在扩展套件里
现在 我来介绍一下模板是如何工作的
比如把它想像成一个模版
模板的图像是黑白的代表
具有透明的背景然后
系统把那模板与那黑与白的图像
一起来创建实际的图标用于共享表
再次
需要两种尺寸
60点的iPhone
和76点的iPad
不过我建议您在您的扩展中使用图像资源
并提供各种不同 - 所有不同的图标大小
这将用于应用程序图标
这样您的应用程序扩展将更适应未来的需要
这么多动作能共享扩展
让我们邀请伊恩上台说说
今天小插件的增强功能
谢谢索菲娅
您好我是伊恩·拜特CoreOS工程师
现在我准备向您介绍今天小插件的增强功能
首先快速回顾一下
您还记得去年
今天小插件让您对快捷信息一目了然
所以有了您的股票价格和您的体育成绩
它会告诉您下班后您需要花多久
才能到家
所以今天我要和您谈谈
如何提高您今天小插件
如何确保该模型的数据
始终是最新的并同步到
您包含的应用程序
我还要给大家介绍一下如何确保
您的视觉表现是最新的
并也反映了您的小插件的内容
然后我会介绍一些通用的最佳做法
您可以用于您所有的扩展
包括您的今天小插件
让我们开始吧
这是Notification Center的景色
它填充的是今天小插件
您可以通过滚动看到所有的小部件
如果您想了解更多信息
您可以在这里看到
您可以简单地
在部件上点击
它会带您到达应用程序了解更多信息
现在 我们应该如何促进
今天小插件及其所包含的应用程序之间的这种互动
我们可以使用URL schemes
现在我要告诉您一点点关于这些交互使用
这些URL方案
和一些开放URLAPI NSExtension环境
可以带用户进入应用程序
现在我们有一些很好的做法想与你们分享
是关于控制这些URL schemes的
首先我们非常希望您能使用
并且专注于您App的注册URL schemes上
太棒了
接下来您要使用的是
您可以使用系统URL schemes
例如HTTPS
那么接下来就会在Safari上打开一个网页
您也可以写信息、打电话
或进行其他交互并且在系统组件中
开始进行有趣的工作流
那么接下来告诉您应该怎样做
您可以注意到我正在展示一个表格
我选择了一排索引路径回调
因为许多小部件只是简单的表格
我们要做的第一件事
实际上是构建一个URL
我们接下来用我的AppURL scheme来做这件事
只是用来举例
这将会把我们带到我的主体App里
接下来我们想要做的事是
调用开放的URL API
这个您可以在扩展内容中找到
它可能与您的视力控制器相连
现在这跟在UI应用上的曝光有些不同
在UI应用中
它需要一个调回版块
但是这个调回版块有一个布尔参数
我接下来就讲讲这个布尔参数
需要将成功参数设为是
如果我们要把你们带进我的主体App
或者进入
已经注册了URL scheme的系统组件
如果我们不能够做到它将被设置为否
就像用户还没有解锁电话
和当电话还被锁住的时候下拉
Notification Center
有很多办法
可以跟容器应用互动和分享数据
今天我想讲述
如何使用默认值
和您的容器应用
或Keychain项目
和框架数据
框架数据将潦草地进入共享容器
系统框架会以您的名义
把所有这些整齐地分成应用程序组
首先用户默认
您可能知道用户默认是什么
如果您曾经开发过一段Cocoa或Cocoa Touch
那里有多个很小的设置数据
它们像小的字符串、数字、布尔值和其他
它们影响您应用程序的设置
您可以分享这些设置数据
在您的容器应用程序
和您的扩展之间
通过使用NSUser默认初始值的
套件名称的API
您将传递应用组的标识符去完成这个API
现在记住这件重要的事情
这个API不仅仅解锁您容器应用的默认值
即您的标准用户在您应用里的默认值
它还产生一个新的默认套件
您的容器应用也能有其访问权限
如果它也参与到应用组的话所以这个非常重要
当您用这个API时不但在您的扩展里
而且在您的容器应用里
当您想要改变这些设置项目的默认值时
我想讲述的下一件事情是
您能用到共享容器的内部
当容器应用和它的扩展都有其访问权限时
第一是您能保持的是模型数据
模型数据是比如SQLite文档 
甚至可能模型对象想要
持久地将核心数据持久保存为预设文档
您可以把所有这些保存在共享的容器里
您的容器应用和它的扩展
都有访问权限
您可以在那里存入文件
刚刚索菲娅讲述了一个文字处理应用
可能这个文字处理应用应该把它的文字文件
保存这个共享的容器里在那里
扩展能修改它们
接下来
您也能存您想存的媒体项目
例如图像、
录影片段、
音频文档
和其他
它们有访问您的容器应用
和它的扩展的权限
现在如果您把可以缓存的项目
缓存在共享的容器里可能不太好
我想您更愿意缓存在一个可以清除的地方
当您程序的运行空间变得很低的时候
现在来设置核心数据以使用共享的容器
我想给您演示一个小的样本代码
您可以把它应用于容器应用
和它的任何扩展
您可以简单地通过模板
修改Xcode已经为您产生的代码
因此您要做的第一件事是建立一个新的属性
或者改变一个现有的属性
在这种情况下 我们叫它
安全应用组展示存储URL
当然首先要做的是
拿到一个NS文档管理员的实例
然后作为文档管理员 我们将调用
容器URL对于安全应用组的标识符然后再一次传递
我们之前已经设置好的应用组标识符
在这之后 
我们将把存储文件名字附加到URL
那个URL指向共享的容器
容器应用程序和扩展程序都可以访问它
现在我们需要用到这个存储URL 因此
我们要设置我们的永久存储协调员
我们要用这些
首先产生一个存储协调员
用我们的管理对象模型
然后我们将拿到
我们刚刚建立的那个存储URL的实例
最后我们将这个永久存储
加入到存储协调员中用我们刚刚产生的URL
这将指向
后台支持这个的SQLite 文档
在共享的容器里
然后我们把它返回给调用者
最后我们实际想要设置管理对象语境
我们通过拿到永久存储的协调员
产生一个管理对象语境
然后我们将设置这个协调员
成为管理
对象语境的存储协调员
然后返回它
这就是所有您需要做的在您的容器应用和任何一个它的扩展里
设置核心数据
来使用共享的永久存储
在共享的容器里
因此核心数据有可能不是您的应用程序需要的
假设您正在用刚才提到的预设文档
来把您的模型对象
序列化到共享容器
在这一点上
您要考虑同步和访问权限这些事情
在共享容器里因为
潜在的您的扩展和您的应用
会企图同时改变这些文档
这对数据一致性不是件好事
所以
您实际上不得不使用排它锁
您需要真的特别小心地
在共享容器里的数据使用排它锁
因为一个扩展被清除和并被当天暂停的同时
拥有一个排它锁
对数据的一致性不是个好事情
那么您需要怎么做呢？
嗯关于任务断言
我最好多讲一些
任务断言是您的扩展统治操作系统的
非常好的方式嘿
我正在做一些事情
您最好不要打扰
如果您想要中断它
我喜欢拿某种回调函数
首先我能清理干净
记住扩展被暂停是非常具有侵略性的
当它们不再被应用
当用户下拉进入
Notification Center
然后上拉来取消
我们可以在那时暂停所有正在运行的扩展
所以那样可能需要非常快速
您要快速地
保护序列化和另一个清理任务
用这些后台断言
我会演示给您看如何去做
它用NSProcess 信息API
您要做的第一件事是
拿到NAPRocess 信息实例
通过调用进程信息工厂的方法
接下来您将调用API
去调用一个结束的活动
我将向您介绍如何设置此呼叫
第一个变量
您将通过这个方法得到
它是非常短的字符串
这个短字符串
是为您
而不是为操作系统的
它告诉您
要在被保护的任务内部做什么
下一件事是
通过这个API得到一个回调函数
回调函数能在两种方式之一中使用
我将和您走过第一种
第一它将被调用
如果我能以您的名义断言得到一个后台任务
并把过期设定为否
这意味着它对您是安全的
可以去执行一些序列化任务数据的
您不想被打断的任务
既然任务断言不能无限制地被拿到
当任务断言快要过期的时候
它的顶峰就过去了
操作系统会再一次调用您的回调函数
这一次将过期设定为是
这意味着您需要取消
无论什么任务
并准备被暂停
现在
当您退出版块时
我们将为您释放任务断言
您不需要做任何事
还有第二种可以工作的方式就是
我们完全不能为您获得任务断言
在这种情况下
我们将会立即调用您的版块
把它的过期设为是
您可能不希望使用排它锁
在这个点上在分享容器中
因为如果您被暂停了就没有保护您的东西了
这样一来
您将会被清理
并做好暂停的准备
您只有几秒钟的时间
来决定是否彻底清理
因此
那是一个复杂的话题
但是我认为有三件事
您需要搞明白通过今天讲的关于任务断言的内容
第一是它们会被释放
当您的代码退出调用时
一开始我们就执行一个任务断言如果一切顺利的话
我们把过期设为否然后
我们会为您保持这个任务断言
直到您的代码退出版块范围
第二个需要记住的是
您有可能需要
重新进入并执行您的调用
来通知您关于过期的信息
再次我们可以再一次调用您的版块
将其过期设为是来给您一个提醒
这个任务断言将要过期
您应该去清理
最后
您的扩展并不总是可以进行任务断言
有时您调用之后 
过期会立即被设成是您调用的版块将会按那种方式运行
而且您没有机会去执行一些关键操作
您需要做好准备去处理这些情况
因为它们确实会发生
接下来
这些任务断言
仅仅保护版块范围内的代码
因此它们一般被用于简单的事情
例如快速序列化
和一些同步的内容
如果您需要与另一个工作序列协同
您该怎么做？
因为您知道任务断言
是在那个调用版块范围内的
那么调用版块
必须与其他序列中受保护的工作同步
例如
如果在主线程中
您想保护一些东西那么您需要确定
调用版块没有退出原始保护范围
在这个工作完成之前
这里我用一个例子展示如何
在板块中通过调用异步到主线程上
执行将会从版块中退出
很可能在进行之前暂停就会生效
完成
太糟糕了
因此在这种情况下您的版块
需要通过发送同步或信号
或者无论哪个您在队列里选择的方法
来记住在您分配去另一个队列里时
它是工作的
它不是必须为主队列需要被取消
因为我们可能会同时赋值过期变量来回调您的模块
在这种时候
您需要清理您正在做的事情跳出回到程序模块 
退出释放断言任务
实际上您这样做是安全的
因为这个回调函数
正在私有系统队列里执行
您不会产生死锁定
因为我们不会往那里回调
现在这已经很多了
我明白
从这里继续
在我们新的多任务的世界里
我们现在碰到很多情况
在您的扩展和包含的应用程序
同时执行的时候
这意味着
如果什么事情在您所包含的应用程序里发生
这件事改变了您数据模型的状态
潜在的是您的扩展可能就
不会和模型的状态同步了这是不好的
因此有一种您可以用来保持
每个人在同一个状态的途径
就是进化Notificationcenter
API和
NSNotificationCenter非常相像
但它更加简单
它适用的用例数量更小
对于您的包含的应用和它的扩展来说
例如今天
我们将向您展示
如何用它去暗示您的扩展
去重新加载模型
以下是您要如何去做
第一在那个包含的应用里面
您要取得
一个进化
Notification Center 的实例
您将调用CF
NotificationCenter
拿到进化 notify Center
然后您将传递这个通知的实例
给CFNotificationCenter发布通知
下一件您要做的事是挑拣出一个字符串
这个字符串将用来代表您的通知
您会在您包含的应用里
用它和任何一个扩展去观察这个通知
然后您要传递是
在您的扩展里
您将再一次用它去得到一个
进化Notification Center 的实例
您将把这个
传递给
CFNotificationCenter的观察者
这个准许您去观察这个通知
下一件您想做的事
是传递一个回调模块
这是回调模块正在被执行的样子
当系统注意到
这个通知被发送了
您想要传递那个短字串
最后立刻交付
这能确定所有事情都始终保持最新
并让您的扩展内部的模型重新加载
在包含的应用传递这个暗示的时候
现在记得我叫它暗示因此您可能
不想用这个去协调
您的扩展和您包含的应用之间的锁
因为它不总是保证
您的扩展
能收到这些通知
这就是如何保持您的模型始终最新
如何保持
您的小工具的视觉展示最新？
下一步我将告诉您
我要用的这个叫做后台刷新
后台刷新是一个系统
它和您的小工具一起工作来保持它最新的途径
去保持视觉展示的最新状态
再一次
我们回到NotificationCenter
在这里您能看到我们的股票小工具
股票小工具显示的是最新的股价
在一天里苹果的股票变化了会发生什么呢？
嗯这个通知
可能将被发射到您的手机同时包含的应用程序
可能被希望做一些事情
您的小工具视觉上的表现
可能改换
不幸的是
我们会注意到
小工具现在和股价不一致了
它显示$130.12
而实际应该是$132.12
我们如何修补呢？
我们如何确定我们的视觉展示
总是最新的呢？
嗯对初学者 
系统将随机地刷新这个内容
它将和小工具对话
去看看是否需要更新
而不必去下拉
Notification Center
每一个今天小工具的视图控制器都符合
NC 小工具的提供
如果小工具的视图控制器
实现了授权方法更新
它将参与到这个系统里来
现在我将向您展示如何来完成
我们要做的第一件事
是在我们的今天小工具视图控制器加小工具
来处理程序执行更新
以符合NC小工具的提供
第一步我们将刷新模型
这能为我们做一件事
一件非常重要的事
它会告诉我们模型里是否有变化
而这个变化
将实质影响小工具的视觉展示
如果有变化
我们会告诉视图阶层
它需要重新画图
最后我们在里面
会拿到传递给我们的完成处理程序
如果有视觉上的变化
我们就会传递新的数据
如果没有实质性的变化
影响到我们小工具的视觉展示
那么没有数据将被传递
这会让我们的小工具在
Notification Center 里
是一个好公民
因为在这一点上我们暗示操作系统
它不需要扩展任何资源
去更新我们的今天小工具的
视觉展示
既然我们已经做了这个我们的小工具已经被更新了
您会注意到股价是正确的
下一个
网络扩展是短暂的目标
是真正的短暂的过程
它们来来去去
记住我谈的是用户下拉
然后迅速地向上划回
这对于一些花时间的事可能是场浩劫
例如网络会话
小工具可能会调用云服务
还有一些网上其他事情以便进行处理数据
那么我们如何处理这种情况呢？
嗯我建议您
尝试用NSURLsession
后台会话
这些是什么？
这些是任务被执行的网络任务
是以您的名义被系统执行的
更新和事件会被快递到您的扩展
只要它还保持活跃
但是如果您的扩展被暂停或清除了
或因为什么原因电话被挂掉了
用这个关键系统
或这个系统的部件包含的应用
来接管错误和处理事件以它的名义
我将展示如何在您的扩展里设置
首先
您要创建
一个NSURLSession配置后台会话
用标识符目标配置
哦对不起用方法
再一次跟随模式
您要创建一个标识符
它会被正在参与这个后台会话的
扩展应用和包含应用使用到
像我们这种情况我们在用
com.example.my 下载会话
下一件事
您要在会话的配置中
建立一个分享的容器标识符
不然的话您将有很大
您的所有会话都可能在我们调试的时候因为不合法而被退回
如果您是刚开始一个任务
至少我知道我就做过这样的事
下一步
您要创建一个NSURLSession
传递这个会话的配置
到初始器
现在您注意到我们正在和初始器用同一个授权表格
因为完成处理程序形式的初始器
和后台URL会话一起用
是不合法的
下一步为了举例
我们要下载Apple.com 网站
我们要产生一个任务并且消费它
现在我们的扩展
已经成功在后台创建了一个NSURLSession
并交给了系统
系统将用开始快递事件去扩展
下一步在我们的包含应用中正如我以前讲的
我们需要准备它对任何情况
例如扩展被暂停或清除了
或被挂断而不能处理
从系统和网络部件发来的事件
我们用加入应用程序对我们的UI应用授权
来处理后台URL会话事件的方法来做
第一步我要做的
举例来说
是确认一个标识符
就是一个我们期待的标识符
系统将导入和NSURLSession
有关联的标识符
对于您处理的应用授权事件
就像和扩展一样
我们将设置一个NSURLSession 配置项目
通过调用后台会话配置
和标识符工厂的方法
我们需要再次设置分享容器标识符
然后我们需要调用NSURLSession
传递这个分享的配置 
然后再次用授权形式的初始器
最后非常重要的
如果您不仔细看就会错过的
是我们将保存这个完成出来程式
我们将把它保存回我们的属性里
当我们完成的时候
当我们处理关于这个URL会话事件的时候
您也许会问
您如何知道什么时候事件处理完成了呢好我来演示给您看
在我们的NSURLSession授权里我们需要用这个方法
URL会话的确会完成后台URL会话事件
它将被调用到您的容器应用程序
或者在这个情况下
您的容器应用程序
会任命它去管理这些事件去解决所有的URL会话事件
从后台URL会话里
我们要做的第一件事
是拿到这个配置对象
然后我们将确认
会话配置的标识符
是否匹配我们期待的标识符
然后我们将调用完成处理程式
就是我们早前保存的
并发行我们对会话的引用
这时我们完成了
我们成功地处理了
到我们的容器应用程式的任何事件
从我们先前到扩展开始的系统组件
现在您能用这个技术
应对任何一种扩展类型不只是今天小工具
这真是个伟大的技术
但是有一个地方您不能用
那是对您的Watch OS 1 扩展
作为代替
我们建议您用后台任务断言
去保护这些小的任务您可以发现
更多关于WatchKit的技巧和窍门
明天早上10点在Presidio
由夹克 贝伦斯主讲
接下来在您网络交易时
您会不可避免地要挑战您的凭证
如何能安全可靠地保护您用户的隐私
从而秘密地分享这些信息
在您的容器应用程序和扩展中
我们建议您用Keychain访问组对于这个
就像这里演示的
您在您的扩展
和您的容器应用程序中设置
然后用这个您设置的标识符
就是您在您的容器应用程式中和它的扩展中设置的
您简单地传递这个标识符作为一个值
无论什么时候您在Keychain里加一个项目就可以
就像这里演示的一样
下一件事
告诉您这里有一个自动查询行为
对采用Keychain API的询问API
因此可靠项目的更新
可靠项目的删减
可靠项目的复制都自动做了正确的事情
就是通过寻找每一个关于您的Keychain
因此您不用传递Keychain 访问组标识符
到这些API里这就是个需要记住的技巧
您可以发现更多关于这些API的内容
通过观看安全录像和您的应用程式的录像
总结一下今天索菲娅讲述了所有关于
动作和分享的扩展
关于它们意味着什么
和如何才能更好地利用它们去分享数据
与您的应用程序和网络
她也演示了如何把NS项目提供器
使用到它的最大可能
这是她为您分享数据类型而努力的工作
她也演示了如何让您的主程序拥有伟大的环境
对动作和分享扩展来说您知道吗
这将提升您主程序的价值
然后我演示了如何加强您的今天小工具
通过确定您的模板和它的视觉展示
总是保持到最新状态
然后我们演示了一些
最佳的实践比如如何安全地分享秘密
和保护您客户的隐私
那里有一些相关的讲座我早些时候引用的
Watchkit的技巧和安全
以及您的应用程序
明天您能浏览关于更多的信息 
我建议您去读App延伸项目导航或者
去和我们的宣传员科特 罗斯特交谈
谢谢