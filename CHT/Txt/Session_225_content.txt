感謝您的蒞臨
歡迎進入第225章《NS集合視圖的應用更新》
我的名字是特洛伊斯特芬我是來自AppKit團隊的一名軟件工程師
我很高興今天可以爲你們解答這個問題
有什麼更新呢？
讓我們來看看
NS集合視圖在10.5版本的OS X裏
已經存在一段時間了
它提供了一個便捷的方法
來顯示格式的項目在用戶的界面上
例如
在屏保的偏好設置面板上
我們有着不同格式的項目來代表不同的屏保
集合視圖在這方面很擅長它能夠顯示相似尺寸的項目
假如您給集合視圖一個原型
帶有您圖樣樹狀的子目錄
和共同負責管理它的視圖控制器
集合視圖將複製項目的...
原型
以自我繁殖來代表模型物
集合視圖支持選擇拖動和放下該項目
動畫式重新全面佈局格式這是一項非常便利的功能
現在進入iOS的UI集合視圖
這和NS集合視圖有莫大的關係
而且擁有多功能
我們可以在iPad的時鐘App裏
看到世界時鐘的部分
UI集合視圖 顧名思義
它用於顯示項目集
其中包括每個項目
都會有一個完全是自己設計的樹狀子目錄爲代表
通常它運用UI集合視圖來加載nib文件
UI集合視圖支持混合種類的項目
您可以擁有不同的nib文件它們原型是不同的項目
所以您不是隻有一個選項
UI集合視圖支持
標頭及註腳的觀點
並把它們放在括號裏
如果您把它和將項目組和成績格式的能力一起用
會顯得更方便好用
每個區段都可以擁有一個標頭及註腳的觀點
佈局非常有柔性而且可以由客戶自己定製
它會有一個處理大概90%的內定流程佈局
來滿足您的需要而且可以按客戶的要求來定製
您可以把它的參數
調到您滿意爲止
UI集合視圖也可以開啓於
任意自定義開發的列印格式
UI集合視圖可以運用任何
您可以實施的演算法列印格式
來應用在所顯示的項目上
最重要的是UI集合視圖是可以被調整的
它的智能設計
讓它可以規劃大量有潛力的項目
而它的智能也能在視圖模型對象中讓項目實例化
以及回收並重新使用已滑出視線的項目
來呈現進入視線範圍的模型對象
這是很簡便的
像是在iOS的其他項目
UI集合視圖的設計讓所有的屏幕
都由一個底層的分層式系統來驅動
這也使整個高幀速率的動畫流程很流暢
在全方面地操作集合視圖時
這可以給您一個很優良的動畫般的效果
有了這些優良的特徵
和開發者都已經熟悉的API
還有對iOS Apps廣泛的應用和使用
我們覺得UI集合視圖將會形成一個
良好的基礎
於我們在ElCapitan所介紹的
全新且大大改良的NS集合視圖中
這個全新的NS集合視圖
承受了所有的UI集合視圖
可擴縮性的形態
它將知道如何在需要的時候啓動項目
以便只讓少數的項目進行着
以便讓它們可以重新使用或是再循環
而不是重新啓動它們
這可以省下一些附加操作您可以根據組別來規劃項目
您也可以爲那些組別標上標頭及註腳觀點
由您所好
爲它們標上任何您想要的
列印格式完全是個人化的
所以NS集合視圖不再只是硬佈線般認爲它只是網格
您可以插入任何您想要的佈局
我們可以處理不同大小的項目
項目可以以不同的種類出現
您也可以混合搭配流程式佈局
尤其是可以把它處理成恰當的
就像先前一樣外貌格式也是個人化的
您可以定義出您的子樹狀視圖
爲您想要的樣貌
集合視圖是您的空白畫板
它讓您可以規劃您想要的
當動畫在進行的時候
根據時間調製您將擁有絕對的控制權
我們來看看這是怎樣做到的
當然我們不會只是把
UI集合視圖的功能轉移到OS X
我們更想要讓全新的NS集合視圖更適合
在家裏的平臺使用
其中一個我們配備在平臺的科技是
NS集合視圖一直都支持的拖拽及放下功能
但作爲把UI集合視圖佈局API
輸送到平臺的一部分
我們在API上添加了幾個功能
我們在這場講座會結束之前會再提到這些功能
這些功能基本上能讓任何佈局
包括您自定義的佈局
去...
執行識別候選放置目標的命中測試
我們稍後會再談談如何做到這一點
任何您設計的自定義佈局都支持...
拖拽及放下的功能
就像是甲級佈局一樣
您運用Rubber Band拖拽選擇
來拖拽各種項目
然後大批量地選擇項目羣
此選項像之前一樣全面地支持這項功能
我們也修改了這個選項
並高亮了系統通知設備和傳遞設備
以便處理那些
大量...
高亮項目功能的準確性
因爲有時候
會有很多想象不到的事情在平臺上發生
您將使用全選功能或是取消全選功能
或是大批量選擇
我們希望可以有效地把它處理好
API上有些許的調整
就像之前一樣
項目還是在平臺上通過視圖控制器呈現
我們認爲這是很好的機會
它讓您能整齊地象限化
分割出您的代碼
好讓您的控制器代碼和視圖代碼分開
以獲得更好的代碼整理
我們所加入的最後一個小修飾就是
讓集合視圖
可以自動尋找適合的nibs文件來運用在項目上
如果您只是慣例式地命名
而您所選擇的nib文件名字與您所命名的
相似於您所要求的項目種類
從集合視圖的角度看來
您根本不需要去幫您的項目在集合視圖註冊了
這些小小的代碼可以爲您省下不少時間
所以我們今天的目標就是
我想真正地深入這個話題
我想讓你們準備好運用這個全新的集合視圖
我們來看看當我們開始使用新的...
API 10.5版本時
是怎麼裝置其中一些全新的
NS集合視圖
我們會學習關於
OS X和在iOS上有什麼不同
我想 我們將會有小小的驚喜
給在座的各位
無論您是不是一個有經驗的iOS開發者
把這個應用程式帶到OS X
您也許曾經用過UI集合視圖您對API很熟悉
您將會傳遞一些知識一些代碼
我們會...
給您實用的資料
也可能您是前OS X開發者
您曾經爲NS集合視圖工作
您想要學習一些新的API模式並學習怎麼運用它
在這之前我們將會給出足夠的介紹
讓您明白什麼是UI集合視圖API
可是就算您從來都沒有接觸過任何一個
我們會作充分介紹深入實用的瞭解
還有代碼樣本
在今天的話題會提到
您將能快速地學習和認知
以便迅速瞭解什麼是全新的集合視圖
在開始之前我們先對今天的概念做一個快速的講解
我們需要知道關於全新的API的基礎概念
然後我們會更深入地瞭解API是怎麼操作的
哪個模式比較重要怎麼啓動
之後我們會做個總結
現在說說大綱
在運用舊的集合視圖 OS X 10.10
NS集合視圖或更早的版本時
您會設置您的集合視圖的內容
以傳遞至陣列或是陣列控制部件
從而讓您可以參考
怎麼設定您的項目
和讓您的項目給予原型一個模範
這就是NS集合視圖的項目
那是視圖控制器的子類
您基本上擁有一個視圖控制器
和一個關聯視圖的子樹
這將增加到您的集合視圖
最後您的集合視圖也許會擁有一個委託
如果您需要拖拽及放下的功能
那就是這個委託的責任了
因此您需要裝置一個委託
在全新的API中將會有一些變動
您不像往常般給予內容排列
您現在需要做的
是在El Capitan安裝一個數據源
這個集合視圖數據源的規程其實很簡單
在iOS裏只需要兩個做法
它將會是又快又簡單的
就像是您在集合視圖裏裝置您的模型一樣
您還是需要一個委託就像之前一樣
但是現在的委託將有機會擁有
參與選項和高亮度選擇項目的功能
我們等下會詳細地討論這個話題
現在您需要的是給出一個
擁有的項目的nib文件
而不是隻有模範項目
和一個聯合視圖的子樹
您沒有侷限於一個項目像我所說過的
您可以混搭任何類型的項目
您可以擁有衆多的nib文件每種類型的項目裏
都可以選一個視圖子樹可以跟這個完全不同
最後一項最重要的是
我們採取佈局功能
並把它分解
好讓集合視圖不會再硬佈線
我們現在擁有像在iOS上的模組化的模型
所以您可以採取您原有的集合視圖
分開原本鏈接住的佈局
再把不同的佈局附上
然而您的項目
將以不同佈局和大小擺列算法
而這些佈局是可以被完全切換的
您還可以在佈局中
以動畫變遷的方式更換佈局十分簡單
就像我們的代碼樣本一樣
在自定式的佈局裏
您的佈局可以被委託於您的集合視圖
您可以實施幾個可以被調整的選項
讓您進行一對一的調整
如果您需要自定義改變您的佈局的話
您也沒有必要擁有子類型
讓我們快速地看看佈局的類別
在 iOS裏 它們很相似但並非一模一樣
在iOS裏的NS集合視圖佈局
它是一個可以定義所有
API平面佈局普遍形式的基本類別
NS集合視圖網格佈局
對OS X來說不但新穎且獨特
而且它的功能其實是囊括了NS集合視圖裏
本來的資料就像是那種被調整的網格算法
萬一您需要用到全新的API
它將被給予被調整的網格
不但可以讓所有的項目大小一致
但是因爲它們是有大小限制的
而且它們會將面積儘量填滿
有時候很有用處
但終究還是個傳統的佈局
它還沒有開始支持分區或標頭及註腳視圖的功能
然而和流式佈局相比還是比較有彈性
我們會建議您先運用流式佈局
在 iOS上NS集合視圖流式佈局其實和
UI集合視圖流式佈局...比較相似
它是一個強大的佈局算法
而這個算法更能讓
正文檔案或CSS框達到流暢
您可能有面對過這些問題
總體來說您可以有不同大小的項目
而佈局算法可以把它處理好
根據您所給的校準
它會把它們以橫豎分配排列好
當它被橫豎地分配好後
它將會被更新然後繼續下一個任務
流式佈局支持
有附加標題的分區和註腳視圖的功能
概括來說它是很有用的
而且是可自定義的如果您需要子類處理的話
通常您會在流式佈局開始
接着通過子類處理去得到您想要的
然而
您始終可以自地在NS集合視圖佈局裏做子類
去得到一個完全自定義的設計
我們今天的代碼例子將會做出演示
佈局屬性對象如果您是第一次看到它們
不是直接就能領會的
這是一個概念和iOS一樣的概念
一旦您明白了它是什麼一切就都非常簡單了
想象您可以用
視圖結構
還有其它各種各樣的屬性
然後它們從視圖中封裝開來
這就是佈局屬性的用處
這是一個直接的...結構例子
這個很直白 對嗎？
您需要知道一個項目的位置和大小
但是它還帶有其它附屬的性質例如Alpha值
透明度
即Zindex用於從後到前排列
不管視圖是否被隱藏
它可以稱爲佈局狀態
當您在使用狀態並且給它拍快照時
這會讓...
新的API導出那些還沒有
實例化的項目
記住我們只是依賴程序去實例化
最終我們創造並分享了
這些佈局屬性的實例
佈局API就負責把它們傳播開來
最後他們會被應用到項目中
或者在佈局時間的視圖中
應用是爲了
獲得一個動畫對象
然後過渡去一個新的境界
這就是它們的用途了
是非常簡單地去歸類項目
您現在可以試着去歸類
每個組可以有...
標題
在上面
和一個頁腳在下面
您也可以把它們放在旁邊
如果您從這個方向去做
標題頁腳和項目一起
組合成一個部分
第一個部分是部分0
這個部分裏面的項目被標記爲0, 1, 2...
這和iOS是一樣的
下一個部分有標題和頁腳
和項目放在一起這是部分1
在裏面的項目也是被標記爲
從0開始1, 2... 數字
很明顯我們需要幫項目改名
先開始修改項目就像在iOS裏一樣
我們不止是需要知道項目索引
還要知道部門索引
這將影響現存的API
您會看到很多API因此發生改變
以Item AtIndex方法爲例
它原來僅需要單個整數索引
但現在這麼做還不夠
我們還需要部分
我們還需要知道部分索引號
所以現在這樣的API隨我們喜好被修改
以便適應新的參數
NS索引路徑
只是一個現存的值形
它讓我們可以非常方便地
封裝一個部分索引號
以及一個項目索引號它們被一起封裝在一個值對象內
我們可以把它傳遞給一個集合或其它
很多您將遇到的API變化
都屬於這種情況
僅僅是爲了適應多個索引的變化
您仍可使用原來的API
如果您的集合視圖只有一個部分
這是默認的情況
但如果您應用多個部分
我們建議您使用新的API
顯然我們要開始進入細節內容了
我們將深入細節
並深入研讀我們的示例代碼
今天的示例是Cocoa幻燈片集合
它基本上是一個圖像瀏覽器
它用一個集合視圖
來展現一個圖像文件的文件夾
以便您瀏覽
對於文件夾裏的每個圖像
我們將展示它的縮略圖
和圖像的各種信息
在佈局上我們應用流水佈局
這是系統自帶的佈局
並且我們將使用個性化的佈局來展示如何應用它
我們認爲
我們的每個圖像都有一個關聯的標籤
我們將以此爲由
來展示如何實現具有頁眉和頁腳的部分
我們能夠根據每個項目的標籤來分組
我們還支持選擇
拖動和放下項目
我們將應用今天討論的API來實現這些功能
爲了把內容分成多個組成部分我們要把內容分爲六個部分
以便一步一步演示
首先我們當然要把項目顯示出來這總是好的
這是一個很大的障礙
只要您能顯示出東西
您就可以實現更高級的功能我們將快速實現
然後我們看看如何把項目分組放到各個部分裏
然後我們想看看如何處理它
當模型發生變化時圖像也會相應增加或減少
我們應如何更新集合視圖呢
我們看看如何正確實施
我們先看看如何處理部分並重點看看
如何處理拖放的程序代碼
最後非常有趣的是
我們將看看如何實現個性化的佈局
首先 爲了顯示項目
先要回到我們的這個模型
這又是一個新的API
我們還需要提供一個數據源
它將實現那兩個必須實現的功能
我們需要提供一個項目尖
這足夠簡單然後是一個集合視圖佈局
這兩個必需的方法
將賦予集合視圖瞭解此部分...
有多少個項目的能力默認條件下我們只有一個部分
我們將只傳遞一個0作爲部分的索引值
它將返回項目的數量
第二個方法的任務是
把項目
初始化
或者它將...
直接利用回收的項目
通過集合視圖幕後的支持
並把它們返回到集合視圖
在Cocoa幻燈片集合當中
我們需要理解的基本對象是圖像文件
一個圖像文件對象本質上是關聯一個圖像文件的URL
這個圖像文件存在於我們掃描的硬盤裏的文件夾中
它包含的信息有文件名顯示於幻燈片的頂端
文件的類型
我們將以用戶可閱讀的描述方式
來顯示原始圖像的尺寸
然後當然是縮略圖
您將在代碼中
看到它們
一個圖像集合擁有一個圖像文件數組
一個圖像集合還擁有一個標籤數組
每個標籤數組擁有一組圖像
這些圖像有同一個標籤
還有一個無標籤的圖像文件數組同時存在
我們先來看看如何顯示項目
我們到這臺演示機器這兒來看看
讓我們先運行它
讓我們先打開一個Xcode項目
正如您所知道的東西已經基本齊全了
但我們窗口還沒有集合視圖
這是一個問題
我們看看...如何獲得一個集合視圖
進入這個...
資源類型
我們有一個瀏覽器窗口nib它關聯着主窗口
讓我們看看這個
我們進入這個庫
然後查找集合視圖
我們把它拖出來
我們調整它的尺寸使填滿我們的窗口
對它運用約束
這將成爲窗口內的主體文件視圖
好
當我們拖出一個集合視圖的時候
我們實際得到了什麼呢
這很像是一個表視圖
或一個輪廓視圖
您實際上得到了一個集合視圖
它內嵌在一個滾動視圖裏不像在iOS裏
滾動視圖是一個分離的東西
它是一個可滾動的文件視圖的組成部分
您不能繼承滾動行爲
它通過組合來實現
我們有一個滾動視圖 我說過
新的集合視圖是用於底層運行的
我們將進入我們的檢視器
然後我們在滾動視圖上設置一曾的屬性
來確定圖層置底
現在我們深入看看集合視圖本身
它是滾動視圖的文件視圖
在Xcode 7裏有一個新的屬性檢視面板
它支持一些新的功能
我們選擇一個我們希望使用的佈局 例如流動
同時我們甚至可以設置它的屬性
在這個示例程序中
我們實際上將有規劃地在不同的佈局之間切換
因此我們不需要用我們從nib中反歸檔的那個
但我們仍可以設置它
您可以...
做一些簡單而有趣的東西例如設置背景顏色
一旦我找到了顏色面板
更有趣的事情是
您將關聯那個數據源是嗎
在此項目中我們的文件擁有者是一個對象實例
它是API瀏覽器窗口控制器的實例
我們通過一個窗口控制器來管理窗口
它也將成爲我們的數據源
和集合視圖的委託
我們從集合視圖
關聯到文件的擁有者
它將成爲集合視圖的數據源
它也是它的委託這樣我們就可以實現拖放
我們把文件擁有者關聯回集合視圖
我們已定義了一個圖像集合視圖的出口
以便更容易找到集合視圖
這就是我們基本上要對尖端做的事情
我們還創建了一個滑動尖端
它擁有一個容器視圖
這個容器被一個滑塊引用
我們的滑塊類是集合的一個子類
NS集合視圖項目類
通過這個子類我們可以添加功能
爲我們自己的個性化控制器增加功能
根視圖只是一個容器
這個容器的尺寸由集合視圖的佈局規則決定
然後 我們有控制器
文字字段...
有自動佈局約束來設置它們
這與它們的容器相關
此佈局將設置項目的框架
及此項目的根視圖
餘下的將由內置的自動佈局來完成
我還使用了綁定
來...
連接...
一些數值
它們由這些文字域顯示
他們通過滑塊對象...
來顯示
請記住一個滑塊是一個集合視圖項目
因此它也是一個視圖控制器
視圖控制器有一個可顯示的對象
這裏是我們連接項目的地方
連接它所顯示的模型對象
對圖像文件實例而言
我們可以讀到這個實例的屬性
我們只需要把我們的項目
關聯到顯示的對象
即它的圖像文件隨即所有的
這些控制器將自動顯示
包括圖像視圖
因爲我們將爲新的API
使用一個獨立的nib文件
爲了使用集合視圖我們要刪除一些東西
這些東西是Xcode默認放進來的
我們的圖像集合視圖仍然有一個項目樣品
我們需要清除它
讓我們分離它
否則這將幹擾我們正在做的事情
我們要刪除項目樣品
我們還要刪除與之關聯的視圖
我們不需要這些
我們可以編譯了差不多好了
如果我們看看這個警告我們發現一個提示
我們沒有應用必需的數據源方法
只有兩個我們很快地完成
我們進入瀏覽器窗口控制器
看這裏就是數據源方法所在的地方
幸虧我提前標註了
我們把它拖進來
對於非部分的集合視圖這非常簡單
我們實施集合視圖
定義這個部分裏的項目數量
集合視圖默認只有一個部分
我們返回圖像文件的數量
它們在我們的圖像集合內
我們還需要做的事情是
按需求定義這些東西
集合視圖將傳遞集合視圖項目
對於代表對象和索引路徑
一個需要澄清的重要事情是
當我們使用集合視圖時
也試圖根據標示符號來構造項目
這令人費解實際上我們只是想
構造或循環使用現存的索引路徑
我們只是把得到的索引路徑傳入
但它標識了這個項目
正如我所說的我們想關聯代表對象的項目
以便找到相應的屬性
針對這個項目實例
我們這裏有...一個小方法
可以分解出索引目錄和圖像文件
使我們得以非常容易地
深入我們的數據模型
並找出相應的...
那個圖像文件實例
這就是我們需要做的只需要返回該項目
到集合視圖
如果我們足夠勇敢我們可以試試編譯並運行
看看它是否可以運行了
然後 我們將看到就是這個
默認條件下我們有一個窗口
指向並掃描庫桌面 圖片裏的文件
它查找圖像文件
並把通過集合視圖項目來呈現它們
當我們滾動時那些移出視圖範圍以外的項目
實際上將按需要被初始化
甚至從那些從頂端移開的項目處回收重用
您可以改變大小使佈局重構
然後我們可以免費獲得很多東西
在此我把它稱爲包圍佈局
這是流式佈局的一個簡單的子類
我們還有一些已經實現了的個性化佈局
我們可以設置佈局...這些已經實現
通過導入一個不同的佈局對象
到集合視圖
我們可以通過標籤來分類
但這還沒有真正做什麼
讓我們回到幻燈片
看看需要做些什麼來實現它
謝謝
開場的最佳辦法是運行第一個示例
現在我們希望按照標籤給圖像文件分類
而不僅僅滿足於在一個部分中顯示它們
我們希望看到哪個圖與哪個標籤有關係
我們將要做的是每個標籤
都有一組圖像文件
它們按照某種規則排序
我們希望按照這個順序顯示它們
一個圖像文件可以有多個標籤這意味着
我們將在多個部分顯示一個圖像文件
這完全沒有問題
也可能有些圖像文件不會在任何部分顯示
因此我們會創建一個無標籤的圖像部分
作爲最後一個額外的部分
在此我們顯示所有沒有標籤的圖像文件
我們爲每個部分添加了頁頭和頁腳視圖
因爲我們想演示我們可以這麼做
爲您演示如何做到這一步
與項目類型相似
實例化頁頭視圖和頁腳視圖
您會發現這非常容易
一般而言 一個頁頭或頁腳實際是由一個集合視圖
調用一個補充視圖它不代表一個項目
但它是一種擴增
或一種把項目括入括號的方式
例如 標題和頁腳
我們要把數據源設爲可選集合視圖
補充元素的視圖種類
這是一種與衆不同的方式
通過索引路徑來...
調用頁頭和頁腳
我們將回到演示機器那裏
我們將把它們很快地關聯起來
我們調用現成的數據源方法
並用更成熟的方法來代替它們
這些方法更適用於處理部分
它們就在這兒
我們將簡要地解釋一遍
現在我們需要告訴集合視圖
有多少部分在它裏面
如果標籤分組選項
被選中這個屬性將被設爲開啓
我們返回標籤的數量
在圖像集合裏
這裏加1因爲我們想要一個
額外的無標籤圖像文件集合部分
對不起排在最後
非常簡單
報告一個部分裏面有多少個項目
以下兩種情況有些不同如果我們以標籤分組
基本上我們想說
如果某個部分與集合內的某個標籤有關係
我們將返回這個數值
即屬於這個標籤...
的圖像文件的數量
它與該部分相關
如果我們在無標籤圖像文件部分
最後我們會返回無標籤圖和其它圖的數量
這非常直白
讓我們看看它們
對於對象索引路徑
這是同樣的應用與以前一樣它之所以好用
是因爲我提取了
圖像文件索引路徑... 方法
這只是我個人使用的
實際上這並不適用
原因是它只看項目索引
而不是部分索引
讓我們替換一個更聰明的版本
它知道我們有時需要通過標籤來分類
如果我們以標籤分組
假設此部分與我們的其中一個標籤相同
我們就能在表裏找到屬於這個標籤的圖像文件
根據項目索引和部分索引
它們告訴我們哪個標籤是我們正在處理的
讓我們試着...建造並使之運行
我們可以根據標籤來分組
現在我們已經根據標籤來分組了
我擁有跟以前一樣的...
佈局
如果我們放大能看到
這是...
我們在一個nib裏定義的頁首視圖
它基本上是一個容器
它有淺灰色的背景
並有一個可以讓您輸入任何東西的文本框
按照您的需要...
在這裏
這是我們的頁腳視圖這是一種更深的灰色
告訴我們
我們已經創建了一個文本框
以告訴我們一個組裏面有多少個文件
這就是所有應用部分所需要的東西
這與iOS基本相同
我省去的一方面啊 我省去了兩個方面
就是創建附屬視圖頁頭和頁腳
這裏有一點代碼
但這是平行的
最重要的是我們是否能調用
makeSupplementaryElementView...
makeSupplementaryViewOfKind
流式佈局的種類定義的是
部分頁頭
和部分頁腳
它將是其中之一
我們知道它是部分頁頭
我們將參考頁頭nib
我們將尋找頁腳nib如果這是頁腳
我們傳入這個值作爲標識
一旦我們擁有了視圖我們就有了一個視圖
而不是一個視圖控制器
我們已找到並建立文本框的值
做我們想做的任何事情並把它返回給集合視圖
最後我們需要做的是實現這些委託方法
佈局可以定
最適合的尺寸
基本是頁頭顯示的高度
以及頁腳顯示的高度
我們在每個案例中都有NSI
因爲我們有一個垂直滾動的流式佈局
只有高度很重要寬度會被自動裁切爲
滾動視圖的寬度
爲了頁頭和頁腳可以顯示
我們必須這麼做
就是這樣
現在我們可以開始學習當我們的模型改變瞭如何更新
圖像文件在文件夾裏進進出出
我們需要告訴集合視圖
何時我們的模型改變了
以便更新對用戶所顯示的東西
這與OS X的輪廓視圖
被處理的方式很相似
基本上有四種運行模式
項目可以被插入
刪除
和移動
從一個地方到另一個地方
或者項目可以被重載
這意味着項目還在那裏
但屬性被改變了您需要重新顯示它
您需要重新收集...
屬性信息
這些運行模式可以應用於部分和項目
對於熟悉iOS的人來說這是一樣的
也可以插入 刪除移動和重載部分
就像我所說的與基於視圖的輪廓視圖很相似
這意味着任何時候當模型發生改變
您的數據源或您代碼的其它部分
凡是與模型有關的
必須去通知集合視圖
並準確表述所發生的變化
我在這些索引路徑裏插入了項目
我把這些項目移除
以使它可以與模型同步
只要您做對了這非常簡單
默認條件下任何您通知集合視圖的變化
將馬上顯示 但您可以很容易顯示一個動畫化的改變
通過集合視圖的動畫設計
這是視圖所擁有的一個通用代理對象
您可以通過它來實現一個動畫化的更新
通常情況下當您要設置一個參數
當它通知佈局動畫那個項目已經被插入
這就我們在示範中所做的也正因爲這樣我們可以看見
項目動來動去的畫面項目被插入 其他項目被遷出
以一種栩栩如生的方式
在我們Cocoa幻燈片集合的示範裏
我們將看到影像文件夾的變化
每當出現變化 我們都會通知...
首先 我們立即更新模型然後在我們改變模型後
通知集合視圖我們對模型所做的改變
圖片檔案可能會來來去去
它們可能被我們改變了
這些都是我們要處理的更新類型
我們要使用一個小的特性裝置
一個基礎的特性裝置叫鍵值對觀察
基本上就是提供一個方法去觀察其它物件的特性
然後自動給予通知
這樣您就可以知道自己該用什麼方法來應對
我們的示範從頭到尾都是鍵值對觀察
讓我們馬上回到我們的示範機器
我已經讓它開始運作
我們先運作我們的範例看看它可以做些什麼
我現在準備開啓桌面上度假圖片的文件夾
而不是看桌面的圖片文件夾
讓我們假設我在度假時拍了些照片
去了些很棒的地方
在底下我有一個尋撿器窗口
指向我的桌面照片
我現在要從桌面照片中複製些材料
假裝我去過這些地方
我會拖拽一些項目
到文件夾中
Cocoa幻燈片集合正在監督這些檔案
它會發現當中的變化
並在它的模型中加入
項目和圖片檔案的例子
最後它會通知集合視圖
現在圖片檔案已經添加讓我們顯示更多的項目
這種情況每次都會在動畫方式中同步發生
我們可以拉出一個項目
取出檔案
然後當它消失的時候
做一個更新的文件系統掃描時要注意變化
更新我們的模型和相應的更新
集合視圖
這裏的鍵值對觀察技術已經相當不錯了
使用運行軋機
最有趣的地方是您如何和集合視圖對話
那麼我們省略早前的只看最近的
您想看看這些在窗口控制器類底層的方法
處理插入的圖片檔案
在指數的路徑這只是一些我們定義給自己用的
還有這裏是我們和圖片集合視圖對話的地方
並用這些插入項目
在指數路徑 API上我們基本上要做的就是弄清楚
好的到底什麼項目的指數路徑
會受到這個的影響？
哪裏我們可以插入項目？
我們傳遞消息給集合視圖
由於我們透過動畫製作者通訊我們會收到動畫的變化
其中重新佈局是需要發生的
它會以平滑的方式出現並非一瞬間
如果您想 也可以讓它即時發生可以省略這裏
如果您想
要一個動畫的迴應和動畫製作者的通訊
您甚至可以控制持續的時間
只要設定動畫內容的持續時間便可
設定成和圖片檔案運轉速度差不多
deleteItemsAtIndexPaths
這樣就會有分類檔案有插入部分 刪除的部分
還有其他關於API的
爲了要處理各個分類檔案的來來去去
我們甚至有能力去
處理新添加的標籤
還有被移除的標籤
這大概就是這麼一回事
所以分類和高亮顯示在要與用戶交流時是重要的
我們現在來更加仔細地分析它們
基本上分類和高亮顯示都是
可以在視覺上有指示標準的
特別是高亮顯示其實是一種過渡的狀態
在途中令項目有可能成爲被選擇的或不被選擇的
或用作放置目標
在這裏有一個圖示我們有一個項目
那裏短暫地顯示橙色當我不斷拉過它們
它們就是分類的候選人
當它們確定被選擇而不是高亮顯示
我們可以從橙色邊框來判斷
但是之後它們會變成藍色
就是說 OS X 是有高亮顯示的項目的
這裏和iOS是有點分別的
這裏只有布爾數學的高亮顯示功能
在桌面上我們需要更多的靈活性
從而能夠形容不同的狀態
高亮顯示
有四種可能存在的價值
沒有系統默認值意思就是不要高亮突出這些項目
您會想知道這些項目被選擇了沒
然後決定如何呈現它們
如果它沒有被選擇或突出
您會正常地顯示它
如果項目是被高亮顯示的
這意味它現在並沒有被選擇
但是我們在考慮要不要選擇它
這要看使用者想要有什麼用途比如 拉過項目
然後您想把它透過
高亮指示來呈現這完全是根據
您想怎樣來設計您的UI
我們用橙色門框
圍繞邊邊來顯示
將被選擇可還沒有被選擇
項目可以爲了被取消選擇而被高亮顯示出來
這可以以shift拉拖動作來實現
和在搜尋器圖標上的概觀一樣
基本上 這裏的竅門是項目被選中
但您要壓制展示通常選擇的狀態
您想要顯示一些不一樣的
爲了要告知使用者
這個項目被選擇了但我們在看怎能取消選擇它
您想用平常的方法顯示
這其實完全是看您想怎樣
根據您的新iDesign
最後 一個項目可以被突出顯示
並暗示它將是有可能被棄置的目標
雖然以我們今天的例子來說是不合理的
因爲一個圖像就是一個葉節點
我們真的沒有理由
去將圖像拉動到另外一個圖像上
但是如果我們有一些東西更像是容器
就會合理很多我們會想指明那個容器
就是我要放置東西的容器
如果用戶讓鼠標指向當前點
這些都是在不同的亮點狀態
正如我所說要記住的一樣事情
現在所有的都有階層備份
以全新的集合視圖的成就
因此
它給您機會去利用階層備份功能
一個更簡單的方法去改變項目的外貌
無需做重繪
所以
CN階層功能例如背景顏色 邊框顏色
邊框寬度 圓角半徑您以前應該計算過這些
有了這個會很方便
因此 我們可以設置
一個項目的根源來觀察階層的背景顏色
對一些顏色
然後給它一個圓角半徑激增成兩行代碼
我們已經有了一個快速的亮點指示
或選擇指示
又簡單又好
您不是必須用這個方法
這只是隨意的要記着
我們現在在階層備份的世界
什麼時候要使用亮顯？
很簡單
任何時候您的亮點狀態有所改變
在Swift您能做到這點
一個DidSetObserver條例
同樣您也會看到
當選項被選中後布爾計算變爲是或者否
您會綜合考慮高亮顯示狀態和選中狀態
然後決定如何在視覺上顯示選項
根據您的用戶界面風格
選中當然是我們要做的
我們希望用戶能選中選項
這樣他們才能通過拖放操作
或者用命令操作
在集合視圖中
選項是組成選擇的東西
它們可以被選中
Ns集合視圖支持單次或者多次選中
就像以前一樣
關鍵的問題是它是否可以被選中
如果您讓它可被選中
您可以允許多次選中
或者強制只能選中一次
您還可以拒絕空選
這樣集合視圖就可以
始終保持至少有一個選項被選中
這些是比較標準的
它們也是在其它的AppleKitCollection
視圖控制裏常見的
例如表格視圖或大綱視圖
選中是由新的選擇索引路徑屬性來追蹤
在視圖集合裏
這是權威 表示在集合視圖中的選中
而我們使用索引路徑而不是項目 對吧？
因爲項目來來去去
但該指數路徑固定不變
一個項目如果它恰好被實例化
不知道是否是在選擇的一部分
就像我提到過的
項目來來去去
集合視圖是永遠不變的
所以您總是要看項目索引路徑看集合視圖
來進行操作並且可以在索引路徑選中選項
還可以取消選中或可以使用這些方法
您也可以直接設定選擇索引路徑
當您在iOS索引路徑中選擇項目時
您也可以讓集合視圖
以特定的對齊方式滾動顯示選項
如果您想的話
我們經常要處理的是用戶的選擇
在iOS裏委託代表有機會
來批准選中與取消選中
我們讓API有點不同
再次因爲我們希望
能夠在處理大量操作時更有效率
現在我們有集合視圖應該可以選中項目在索引路徑
並且集合視圖應該可以在索引路徑取消選中
每一步都要使用一套索引路徑作爲參數
這些是計劃的索引路徑
就是我們要選中和取消選中
注意到這點是它們返回一套索引路徑
而不是一個布爾
所以如果您想說隨便做什麼
集合視圖會只發回我們已給您的一套索引路徑
但是您在這裏也有機會
返回一套不同的索引路徑
您也可以做一條線如果您想的話
您也可以根據您想要的標準
您可以把細顆粒控制用於您選中的
或者某些情況下取消選中的選項
也有DidSelect和DeDeselect
選中委託方法
這樣您就在對選擇做過改變之後 找出事實
同樣 對亮顯委託有辦法
批准並對這些改變作出反映
所以在索引路徑對突出顯示的狀態做出改變
您可以返回一套索引路徑
您可以控制細顆粒程度
用在委託的突出強調上
我們再來快速看一邊演示機
幸運的是 時間關係
我已經寫好了所有的代碼並運行
我們現在只要到nib文件裏去看
然後仔細來看集合視圖
我們將確保它被標記爲...
可選擇的
我們將讓空選擇
而且我們會允許多重性選擇
實施的其餘部分是相當直接簡單的
基於我們現在的理解
我們將停止構建和運行
現在我們可以點擊項目和選擇它們
我們因爲想去展示說明的用途而選擇
它們是可被選擇的候選人
它們在被選擇前以橙色去突出顯示
當我鬆開觸控板時
它變成藍色就代表已被選擇
而不再被突出
我們可以點擊背景
清除選擇
我可以單擊並拖動整個項目
再來我們展示項目作爲突出顯示而成爲被選擇的
它們還沒有被選擇
但當我鬆開觸控板時
它們已不再被突出
現在它們已被選定
正如我提到的在搜尋器的圖案
如果您按住Shift鍵然後拖動選擇
那便會變成反轉的選擇
這裏是一個項目中選定的一個例子
然後這成爲突出的取消選擇
所以 儘管它們是被選擇的
我們仍在亮點狀態覆蓋它
及我們如何在視覺上呈現出來
以及我們只是...
把它們以一般形式地呈現出來
與它們無邊框
然後 當我鬆手該選擇已被待發
現在 因爲我可以選擇我可以拖放東西
重新排序
這個很棒
一旦您有選中
就有很多...
整潔的事情可以做
由於這是所有實施一個非常普遍的方式
所以是不可知的不同的佈局
大家可以去看看我們的自定義佈局
因爲它們執行所需的方法
我們也可以在我們的自定義佈局裏拖選整個項目
單擊選擇
並自動發生
因爲它們符合在標準
NS系列視圖佈局API
這是一種很好的免費東西
甚至當我們在此節模式
流式佈局讓我們跨節地...
拖選
如此類推
這還挺整潔
這個可行
還有兩樣事情
我們將快速談論拖拉及放置
這是很重要的支持點
由於老而被棄用的API
它並沒有從根本上改變
但也有一些新的東西要了解
現在我們可以拖動選擇的項目
然後如果您有一個集羣項的選擇或只是一個單一的項
您可以拖動它並移動它
集合視圖因爲您在拖動
計算候選目標在哪裏放下
在此種情況下我們不允許放置在物品上
因爲它們不代表容器
但我們允許項目之間的放置
這是我們要關注的新的東西
在OS X而不是在iOS上
所以拖放和放置和以前一樣
由NS集合視圖委託處理
它負責爲您拖放和放置反應
該模型是很明顯地類似NS大綱視圖的API
它並沒有基本原因讓它變得很不一樣
如果您看過拖放及放置大綱視圖的例子
您會看到很多的實現有相同的概念
它基本與NSCollectionView的概念是一樣的
如果您希望您的集合視圖成爲拖動源
這意味着項目可以被拖出來
您的基本職責是項目放在粘貼板上時
能請求集合視圖
如果您想做一個拖放的終點
如果您想接受拖放您需要能夠
估量所計劃的拖放集合視圖會呼叫您
說：我想... 我打算在這裏
放置這些東西從粘貼板到目標位置
這是一個索引路徑暗示一個空白
這個空白在選項之間在已命名的選項
前或者一個位置這個位置在已有的選項之上
如果您允許它作爲一個容器
有一種操作
它們是標準的拖放操作
例如拷貝 移動等
您可以看這個計劃您可以選擇重寫
這些參數比如我自己計劃的
您其實打算用這個位置來放置
或者拒絕放置
您需要能夠安排接受放置
這很相似但是用戶已經執行了放置
而您需要完成
並且來相應地更改您的模型
並且來相應地更新集合視圖
這個運作方式
歸結於這些API您需要
像其他NS視圖一樣
您想註冊
您渴望能被接受的拖放類型
因爲集合視圖一般不能分辨
您處理類型的對象
就您的模組而言
集合視圖擁有拖放原始動作掩飾
對於本地和非本地拖放
這僅僅是基本的讓您預先設定的
我支援複製和移動但不包括化名或類似的東西
您想預先設置
我們會在範例裏示範
然後所需要的授權方法對應於
我在上一個幻燈片提到的責任
同樣 您需要能夠在紙板上編寫物件
在現代的API上您能提供一個紙板編輯器
給在索引路徑的物件
這允許您更得體地
處理多項目拖放
某些數據類型是紙板作者
在這個例子中
NS路徑如果是絕對路徑
您只需要退回路徑作爲紙板作者
它會自已在紙板上編輯
您或者可以在索引路徑
實行編寫項目
向紙板二選一
您也能完成目標
現在 再次選擇拖放目的地
這裏有一個驗證授權放置方法
和接受...
授權放置方法來進一步簡化它們
您會在代碼示例看到那些被實踐的
我們沒有時間詳細地去介紹那些代碼示例
因爲拖放在這是相當地涉及了
它的設計是.̆..
使您可以拖動項目
從一個應用程式到另一個有很多需要再做的
但有很多需要明白的基本技巧一旦您明白了這些概念
剩下的只是運作方式
您就可以明白今天的例子的全部
被多次討論的編碼內容
需要記住的一個重要的事情是
我們要弄清楚
並且處理好 
要在哪裏進行拖放使用您的集合視圖
當您開始得到
拖放目的地的委託信息時
值得說的是 嘿
我知道這是我自己發起的拖放
我知道哪個選項哪個索引路徑會被拖放
這樣我就可以更容易地處理相對於一般的情況
這個拖放可能來自這個系統任何地方的情況
我必須從粘貼板取出東西諸如此類
使用集合視圖這讓您可以告訴集合視圖
您只是在從索引路徑挪動東西
到這些新的索引路徑中並且給您一個很好的動畫
作爲附加的好處
這樣更好 更精緻
相比與挪動那些選項然後 哦
我還得到別處重新插入一樣的東西
然後重建這些東西
在集合視圖中一個好用之處
就是拖放期開始於項目
在指引路徑委託方法時
這是個可選的方法但是個好的地方
來獲取那些索引路徑隱藏它們到私立的屬性
在您的... 數據源中
這樣您將來可以找到它們並且說 哈
我可以更簡單地處理這個並且您會發現
示例程序在那裏也這麼做
我想花點時間
向你們展示自定製界面這個改變更加有趣
我們來看一下
這是我們最後的任務
我們會考慮您需要做什麼去調整現有的佈局
比方說流式幾乎滿足了您所有的需求
但您想稍微調整一下讓一切看起來都很完美
我之前就聽過這種做法
或者
您想採用一個全新的自定義佈局類型
就像我們現在
通過不同的
幻燈片佈局一樣
我們來看看要完成這個任務需要什麼條件
調整現有的佈局相對比較輕鬆
我們先看看這個變化
比方說您想列入流程佈局級別
將項目的位置
稍微調整一下
把東西從這裏拉到那裏
您通過一個指令就可以做到但我們假設
您希望做一些您在現有的API基礎上
做不到的事
這就是主要的方法
需要大家去了解
目前爲止它跟iOS是一樣的
矩形元素佈局屬性是非常普遍的API
集合視圖的到來
爲您提供一個矩形那是個矩形
在集合視圖的內部座標系統中
從基本上來說
這個矩形裏面是什麼
您必須返回
佈局屬性對象的排列
記住那是我們的
項目描述的包裝
不依賴於真正的實例化項目
您可以返回項目的信息
如果您有... 頁眉和頁腳視圖
或者其他附屬視圖適用於該領域
您必須瞭解那是什麼
並返回那些描述
這顯然
高度獨立於您的佈局算法
它可以是任何東西 對吧？
所以您穿梭於您自己的內部數據結構中
您想要發現如何真正高效地做到這個佈局
那就是這種方法的責任所在
返回矩形中所有數據的描述
當集合視圖第一次列出您定義的所有項目時
那就是核心部分
那就是它的來由
會出現這個說明項目的佈局屬性
在索引路徑中似乎有些多餘
但集合視圖需要詢問某一項目時
比方說向我描述該項目
那就是需要您做的地方
如果那個索引路徑中沒有項目您就沒有返回
通常都會有如果它詢問的話
這個功能會啓動在您把東西從一個地方
移到另一個地方時
所以您也想要實現那個目標
結果需要跟第一種方法保持一致
然後會出現上下文的無效佈局這是一種
普通的無效方法是由集合視圖在上下文中觸發的
如果您查看它的屬性
檢查它它跟iOS的情況一樣
它描述改變了的項目
插入或刪除的項目
可能集合視圖在調整大小任何一種情況都可能發生
檢查上下文屬性讓您有機會
嘗試變得聰明和高效
這是一種先進的優化
正如您希望的
您把佈局按照自己的想法
設置好以後使用
這是您的機會清除在佈局記錄的
內部狀態中的無效數據
以及有調整時
您自己對它的描述
所以我們剛剛看到了流式佈局
接下來我們一起實施
前面兩種方法
佈局屬性返回方法
使用先進的方法
看看NS集合視圖流式佈局的提議
我們可以檢查佈局屬性成品的狀態
或者它們的排列
然後進行任何一種我們希望的改變
返回一組新的佈局屬性排列
或者單一的佈局屬性排列
那就是關於這個東西的介紹
只要您做出的改變不改變佈局需要的空間
要是您想進行全新的自定義佈局
就像我們所做的那樣？
您可以直接將NS集合視圖佈局歸爲子集
將所有東西重新開始
比方說 如果您的類型和流式相似
您採用同樣的方法就像我們剛
在上一張幻燈片中提到的那樣
此外 您要能夠
回答一下基本的問題比如
您需要的大小 寬度和高度去排列項目
是不是集合視圖能夠提供的？
基本上您只需要告訴集合視圖
我的文件視圖大小
這決定了您的滾動區域
要是邊界改變的無效佈局返回一個布爾值
在調整大小的過程中
集合視圖將會觸發這個功能
通常您會觀察我的佈局算法是什麼？
我的佈局是否受到重新調整大小的影響？
如果您是流式佈局比方說 垂直界面
將所有東西排成行
或許您並不是非常在意
如果集合視圖的高度發生改變 對吧？
那只是爲您提供了空間而已
但是如果寬度發生改變您必須重新排列
比方說您可能在那種情況下返回是對的
這就是那種方法的作用
如果您修改流式佈局
來獲得您需要修改的空間
您真正需要進行那兩項修改
即使是細微的自定義排列
然而這些方法在OS X上是全新的
我剛剛提到我們有能力去進行測試
擁有一個...
抽象的佈局
去進行...
目標放置的測試
這是個很強大的新特性
您可以在任何一種自定義佈局中進行設置
點擊目標放置的佈局屬性是第一種方法
如果目標是一個項目那就非常直接
您將會返回一個屬性佈局屬性實例
其代表的元素類型是項目
您在對一個項目進行放置
您插入所發現的
需要放置的項目的索引路徑
然後您想
返回該項目的邊界框
作爲佈局屬性的框架
那非常簡單
現在更有趣的情況是我們無需去處理
iOS中項目之間的間隙
如果您決定這個點應該進行測試
但它卻在項目之間可您以通過
項目的序列號碼去辨別間隙的位置 好的
這個介於索引6和索引7
您想返回項目間隙
那樣用戶可以在佈局中在項目之間放置目標
您返回的元素類型是項目間隙
屬性的索引路徑是
間隙後的項目所在的索引路徑
如果您還是在6和7之間您返回的索引路徑是
該部分項目7的位置
其次 您返回的屬性框架
間隙的邊界框
集合視圖將使用該邊界框
去定義如何在那個矩形中規劃
標準的指標
接下來的一種方法叫做索引路徑前
項目間隙的佈局屬性
集合視圖有時也需要這種方法
它也會詢問特定的位置
要求您描述該間隙
所以這裏我們返回一種
元素類型的屬性項目間隙
它代表的元素類型是項目間隙指標
所以我們利用這個建立一個補充視圖
那就是項目間隙指標的應用
您只需插入您所給予的索引路徑
返回的是屬性框架
作爲該間隙的矩形
綜合這兩種方法
集合視圖支持...
項目之間目標放置的指示
即使是任意的自定義佈局
您自己的設計也可以做到相當整齊
我們簡單看一下我們的自定義佈局
以及它們如何實施
請看我們最後一個短片
請看這裏左側邊欄
我們將代碼進行分類
我們有一個代碼組您可能想看一下
今天我們看一個例子
圓形佈局
它很簡單
我們在索引路徑採用項目佈局屬性
在這裏我們會詢問某一特定的項目
這些是我們理論上能做的事我們將項目索引
從索引路徑提取出來
那將定義我們距離圓圈有多遠
我們利用那個想法去計算

那樣我們計算出一個幻燈片理應的走向框架
那麼最重要的一部分是這裏
API是一個敏感的部分
您如何舉例說明佈局屬性對象
獲得一個與索引路徑相關的
正確索引
您想小心用這種方式進行
我們會談及...
佈局的層次
獲得相應的佈局屬性層次
基本上擁有這個API
可以讓佈局屬性
NS集合視圖佈局屬性層次
得以歸類和延伸
或許您有一些真正的在iOS的自定義佈局
需要與其它屬性一起使用
或者記住其它信息關於已經陳列的項目內容
您可以通過歸類增加那些屬性
您推翻佈局屬性層次
返回您自己的分類
通過這個方法去確定舉例說明這個分類
如果有需要的話
適合的那一個
我們啓動這個出廠模式
有索引路徑的項目的
佈局模式我們往那個路徑傳輸獲得的東西
一旦我們獲得一個佈局屬性對象
我們按照自己的想法設置我們設置框架
前後顛倒的Z索引層中的序號
然後我們返回那個特性對象至集合視圖
我們擁有一個超級層
所有的自定義佈局我們都採用
矩形方法
矩形元素佈局屬性
我們可以做到那一點因爲在這種情況下
特別的是這些所有的佈局
在這種情況下不單單是可以滾動的佈局還能擴大至
它們需要的大小
去展示它們的項目
這些都選擇在可視化區域
展示集合視圖的所有項目
所以採用這種方法
基本上是一樣的
我們看到一個矩形我們會看到
我們所有的項目
我們返回這些描述至集合視圖
所以我們實際上利用了索引路徑項目的
佈局屬性方法
我們在分類中採用這個方法
集合視圖內容大小是一樣的
這些幻燈片的佈局我們看到
省略視圖的大小
我們擁有的內容
是否讓用戶可見呢？
我們計劃陳列出所有的東西
因爲我們在做那一點
我們努力在邊界改變時讓佈局失效
無論如何改變我們想重新佈局
這樣才能合理地使用可用的空間
在iOS準備佈局這只是個輕而易舉的事
當佈局參數發生改變時您就處於
新佈局週期的開端
您可以做任何提前計算您可以做任何事情
觸發功能在週期的開端
我們可以看一下這裏活動的佈局
在調整大小中遇到的圓形佈局
佈局每次都會失效
因爲我們想
獲得最大的圓形
在可用空間內預留邊界
通過採用那些相對要求少的方法
我們獲得一個完全自定義的佈局
另外 跟以往一樣
它支持交叉篩選
在這裏點擊篩選
它很通用
所以無需太多就可以定義佈局
在NS集合視圖內的使用佈局
事實上佈局層次以及您找到的API
除了特殊情況
我們增加了這些功能去支持放置目標測試
API基本上跟iOS一樣
所以如果您有在iOS使用的佈局
您會發現遷移到OS X其實很簡單
今天我們講了許多話題
我們現在推出測試版
您可以獲得完整的源代碼
我鼓勵您去研究它
它應該能幫助您開始
在El Capitan使用全新的NS集合視圖
最後 我們擁有極大提升了的
NS集合視圖我希望您會喜歡El Capitan
它現已在市場推出能夠處理大量的項目
能靈活進行隨意佈局
所有您希望看的最艱難的項目
我們鼓勵您這樣做
讓我們知道細節讓我們知道您碰到的難處
如果您需要任何的幫助或指導
我們有一個專門的集合視圖實驗室專注於未來發明
叫做Foundation實驗室BFrameworks實驗室B不好意思
在這棟建築的底層
明早9:00我到時會和團隊中的其他工程師一起
他們都很瞭解集合視圖
不要只看文件還要看應用套裝發佈筆記
我會以個人名義將關於集合視圖的使用筆記放到那裏
裏面關於如何建立的信息
而且您能看到關於在10.11的AppKit中的
所有其它偉大發明的信息
如果您錯過了Cocoa有什麼新內容
這是找尋其他新添的特性的好地方
信息量很大一個演講無法涵蓋所有內容
我鼓勵您去看一看會議視頻
最後我們有兩大自動佈局會議在今天早些時候
如果您正在使用自動佈侷限制
來在項目中定位您的控制
對自動佈局的仔細瞭解是很有幫助的
謝謝你們的出席我很期待看到你們會創造出什麼
享受WWDC的衝擊吧！我們明天實驗室見