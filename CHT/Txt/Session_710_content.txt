《CloudKitJS與網絡服務》
大家下午好我是克里斯
是蘋果公司ICloud網絡服務部經理
今天我很榮幸能夠在此告訴你們
去年我們收到的關於CloudKit的第一大特性需求
就是網絡服務
那麼本節講座需要對CloudKit話題有點熟悉
我將給你們簡要概括CloudKit的架構
但是如果你們想更深入瞭解它
我們去年有一系列講座
你們可以回去查看那些講座的具體內容
在CloudKit中
你們的所有數據都儲存在一個容器中
在這個容器中我們有一個公用數據庫
用於儲存你們的app數據
另外還有一個專用數據庫
用於儲存你們的用戶數據
在公用數據庫中你們有默認區
這裏有記錄
而在專用數據庫內
你們同樣有一個默認區
你們同樣可以創建自定義區域
它們增加的同步語義
使你們能夠回答關於從某個時間點開始
發生了什麼改變變化的問題
當然 你們可以在這兩個區域都建立記錄
從API的角度
我們有CloudKit服務器
而在本地我們有CloudKit框架
通過此框架你們的App程序與服務器連接
我們今天將會介紹CloudKit網絡服務
我們已經使用這種服務建立Notes Web app
今天你們可以用它來建立你們的網絡app
那麼CloudKit網絡服務具體是什麼呢?
這包括三方面內容
第一 這是一個連接到CloudKit的JSON接口
第二
這是一個使用Apple ID進行的網絡登錄
第三
它是個JavaScript庫
讓我們看一下JSON API的特性
有了對公用和專用數據庫的完全訪問權限
你們當然就可以創建
讀取 更新和刪除記錄
你們可以上傳和下載資源
你們可以查詢你們的數據
你們可以創建訂閱可以接收回調
當你們的數據發生變化時
可發現這些用戶數據變化
你們可以發現用戶的真實姓名
你們可以進行同步
我們提供身份驗證
因此這是一個很長的清單事實上這意味着
我們在本地API和JavaScript API 之間
存在特性上的對等關係
每件你能夠在本地API上做的事情
你都能夠通過JSON API完成
我們已經做出付出極大努力
確保例如字段名稱和參數等
在JavaScript中有同樣的名稱
並且我們用JavaScriptPromises進行補全
這是效仿Blocks和Swift
最終你的代碼
看起來在JavaScript和Swift之間很類似
我知道你們觀衆中的很多人
或許已經有過對CloudKit的應用
如果你們不瞭解讓我們迅速看一下
如何開始進行一個新的CloudKit應用
你們應該做的第一件事是建立一個容器
你們可以通過WWDR門戶
或Xcode建立容器
一旦你們有了容器就需要建立一個架構
你們可以通過iCloud控制面板
或者你們的本地app
按需要建立這個框架
那麼這時你們的CloudKit應用就開始啓動並運行了
讓我們開啓網絡接入
這有三個步驟
第一 你們需要生成一個網絡服務API令牌
第二
你們需要設置你們的登錄回調機制
第三
你們需要設定你們的域限制
讓我們更進一步瞭解這三個步驟
這是CloudKit控制面板
如你們所見 我們增加了一個被稱爲API令牌的新的窗格
我已經在這兒建立了我的第一個令牌
在頂部是令牌的ID
這是當你們在進行網絡服務調用時
傳入的東西
在那下方我選擇了postMessage
作爲我的登錄回調
對於JavaScript應用我會在用戶登錄時
取得一個JavaScript回調
或者我可以選擇使用...
URL重定向
在這下方 我可以設置允許通過網絡服務
訪問我的CloudKit...數據的來源
我已經選擇任何域都可以訪問我的數據
爲了增加安全性我完全可以限定爲查看者域
那麼現在我們啓動了網絡服務
我們讓一些用戶登錄
因此身份驗證的...
處理是透明的
我的意思是說
當一個用戶調用一個
需要身份驗證的API時
我們會返回一個特別形成的有效荷載
它帶有一個你們可以發送給
你們的用戶的URL重定向網址
然後他們與已經存在的Apple ID進行驗證
或者他們可以在登錄環節建立一個新的Apple ID
爲了保護用戶的隱私
我們不向你們的app提供用戶的姓名
或者登錄密碼
但我們提供一個穩定且匿名的
用戶標識符
讓我們把所有這些事情連起來
並且讓我們快速建立一個示例app
那麼我們將要建立一個任務app
它把任務存儲在...
com.example.tasks容器內存儲任務
它有一個記錄類型：Tasks
記錄有兩個字段
分別是任務的名稱...和優先級
那麼讓我們建立第一個任務
那麼我將做的是調用記錄修改API
並傳入一個JSON實體
這個JSON實體表示要創建一個新的任務
該任務有個唯一的標識符task-1
任務的值爲"Buy Milk"
我們把它發送到服務器
我們沒有一位已經過驗證的用戶
作爲迴應...
我們得到一個URL重定向網址
我們可以把這個網址發給用戶進行驗證
讓我們跟隨這個網址
這兒是用戶登錄界面
你們應該注意到它有app名稱和app圖標
能夠在這兒建立一個新的Apple ID
我們已經有一個Apple ID我們讓我們直接登錄
用戶登錄後
通過您早些時候規定的回調機制
你們的應用會被
返回一個會話ID
我們可以繼續把這個會話ID
附加到URL上
並重新發送相同的請求
好多了
現在我們收到了創建成功的消息
你們可以看到記錄名
改變標籤...各個字段都在
以及關於記錄更多的一些元數據
這涉及到大量的JSON解析
你們或許會擔心錯誤處理...
和限速
我們希望讓這個API儘可能容易使用
因此
我們自豪向你們介紹CloudKit JS
它是在JSON之上的封裝器
談到這方面我會邀請歐那爾·維克斯塔德到臺上
謝謝克里斯
我是歐那爾·維克斯塔德iCloud部門的工程經理
我將向大家介紹CloudKit JS
CloudKit JS讓你們能夠
從JavaScript連接到CloudKit
它是一個小型性能完備的庫
它能夠與你們已經在網絡上使用的任何框架或庫兼容
注意這是一個低水平的傳輸API
這意味着它不會真正成爲一個數據存儲
它不允許在JSON API上有很多抽象化
因此如果你們已經使用一個數據存儲
請繼續使用這個數據存儲
你們應能夠直接把CloudKit JS
插入這個數據存儲
它同樣支持輕易地從CloudKit框架過渡
那麼你們或許已經在iOS或OS X上
使用CloudKit框架
術語 概念
方法名稱和類的名稱都相同
因此這是一個容易的過渡
即便如此仍然有一些不同
畢竟這是網絡是JavaScript
因此會有一些不同
例如我們將把JavaScript Promises
用於所有異步行爲
我們稍後會查看相關示例
在瀏覽器...
支持方面
我們支持所有主要的瀏覽器
例如SafariFireFox Chrome
IE和新的Microsoft Edge
如果你們想代表用戶進行服務器到服務器連接
我們支持JavaScript環境
如Note JS
因此在我們開始瞭解更多的API方面的內容前
讓我給你們一個快速的演示
那麼我們正在查看的是CloudKit目錄
示例代碼項目
這既可以作爲一個可下載壓縮文件
你們也可以在開發者站點上獲得
我們在這兒將看到的是託管版本
這個同樣可以提供
那麼它正在提供實時代碼示例
你們可以在任何瀏覽器內執行它們
你們可以在左側看到一個特性列表
我們正在看的是自述文件
它給向你們介紹一些
如何開始在CloudKit Js上的工作的介紹
我們來到叫做"驗證"的第一步
你們會注意到每個部分都在頂端有一個描述
這個示例告訴你們如何...
使用驗證
在這下方你們有一個代碼示例
這個代碼片段專門校驗...
用戶的驗證狀態
如果用戶沒有登錄
就會出現一個登錄按鈕
而你們可以在上面這裏實際運行這個代碼
因此 如果我點擊這個"運行代碼"按鈕
它會執行這個代碼
你們會看到它向下滾動一段
它告訴我們此時我們是未經過驗證的用戶
我們看登錄按鈕
我可以繼續點擊登錄按鈕
我輸入...
隨便一個Apple ID
和密碼
你們會注意到窗口關閉了
那就是蘋果公司的託管驗證頁
這時你們完成了網絡應用登錄
這是示例app
你們看到我們有用戶名
包括名和姓兩部分
而且"退出"按鈕取代了"登錄"按鈕
這是CloudKit的另一個特性
可發現性
如果用戶選擇進入
用戶可以選擇與開發者分享他的姓名	
以及能夠在容器內被發現
以便其他用戶找到他們
現在既然我們有了姓名
我們將用它們填充到...右上角
好 現在我們登錄了
我們可以進行一些操作我們到記錄部分
這將向您演示怎樣在專用數據庫內
保存到一條記錄
那麼我們在頂部看到有一些字段
我們有記錄的名稱
這個名稱是記錄的獨特標識符
我們有一個區域名 這是默認區
它可以是你們建立的任意自定義區域
你們有三個在CloudKit架構中
確定的自定義字段名
在這個示例中我們有一個名稱字段
字符串值
我們有一個位置字段地理位置值
然後我們有一個資源字段它可以讓您上傳一個文件
那麼我將繼續往下進行
並選擇一個文件
我選擇這張綠地景觀...
Jpeg圖片
而且我將返回到頂部
給圖片命名爲...
"景觀1"
這是記錄名稱是一個獨特的標識符
我這裏將更改圖片名稱稱其爲"綠地"
那麼在填完了這個字段後我可以運行代碼
它將把記錄也保存到數據庫
作爲上傳資源保存到資源存儲器
你們可以看到完成之後我們得到一個結果
而這實際上是服務器做出的應答
以我們在桌面這裏表示的
JSON文件做出的應答
除了三個自定義區域
我們還有一些元數據字段綠地
位置以及下載這些資源的鏈接
爲向您展示它實際是如何被存儲的
我們可以去提取記錄
我輸入...
景觀...
1
運行這個代碼
我們再次得到了同樣的記錄
那就說明瞭在CloudKit內
使用CloudKitJS保存記錄是多麼簡單
我們繼續查看另一個特性名爲"查詢"
爲此 我將首先讓用戶退出
通過查詢 你們能夠從數據庫得到數據子集
在這個代碼示例中
我們給你們展示怎樣查詢公用數據庫
如果你們在架構上合理設置了安全角色
你們實際上能夠容易地
在公用數據庫中查詢數據
即我們在這裏展示的東西
即使用戶沒有經過驗證
我繼續運行這個代碼
這個示例的基本原理是使用
當前在Monscone中心的位置
發送一個查詢請求
並根據離我們現在所在位置的遠近
對結果進行排序
我現在...
運行這個代碼
我得到兩個返回的記錄
第一個是冰島第二個是意大利
冰島距離我們現在的位置與意大利相比更近
結果是合理的
我將...
不會繼續查看所有額外的特性
但我們非常鼓勵你們查看一下它
你們可以訪問developer@Apple.com/CloudKit
點擊CloudKitCatalog的鏈接
你們可以自己在任意瀏覽器上運行
CloudKit是我們蘋果公司很多新業務的基礎
包括iCloud DriveiCloud Photo Library
今年我們也已經爲iOS和OS X推出了...
一個備忘錄應用
此應用也將出現在iCloudKit平臺
除了本地備忘錄應用之外
我們在iCloud.com有一個備忘錄網絡應用
這個備忘錄應用是在使用CloudKit JS
事實上它使用的方式與你們
作爲開發者目前可以使用它的方式相同
這兒沒有額外的"蘋果魔法"
因此希望你們和我們一樣對CloudKit JS感到激動
在這兒看到很多新的可能
並想了解怎樣開始
那麼讓我們看這兒
首先 我們需要確保...
你們要在自己的網頁上
嵌入一個腳本標籤
你們通過將其指向CloudKitJS的 非託管CD版本完成
這將讓CloudKit JS加入到網頁中
其次你們需要配置CloudKit實例
你們需要使CloudKit命名空間可用
你們可以調用CloudKit配置方法
並向它賦予一個你們的應用
即將使用的容器標識符
你們的目標環境生產環境或開發環境
然後你們指定API令牌你們剛纔看到
克里斯通過CloudKit控制面板生成了API令牌
這就是需要的全部
此時你們已準備好調用CloudKit API了
接下來
你們很可能希望驗證你們的用戶
正如我們在示例app中看到的一樣
在iOS和OS X上可以通過CloudKit直接操作
因爲大多數用戶已經登錄設備上的iCloud
你們只需要在容器上調用取用戶方法
你們得到一個用戶記錄
這個用戶記錄將有一個穩定的標識符
那麼這就是你們爲了通過本地設備上的CloudKit
驗證用戶所需要做的全部工作
不使用顯式登錄沒有用戶界面
這些都是無縫操作的
然而在網絡上操作會稍有不同
這些瀏覽器上不能直接登錄
因此 你們必須爲登錄按鈕提供一個地址
如同我們在示例app上看到的
點擊它會打開新窗口
這兒有一個蘋果託管驗證頁
你們注意到在這個網頁上
我們有應用的iCon和應用的名稱
這來自ITunes Connect
併發佈於蘋果公司App商店
用戶輸入他們的用戶名和憑證
這顯然將回到Apple網站
同樣有一個分爲兩步的驗證過程
如果賬戶是那麼設置的話
這個過程完成後窗口將關閉
它會發回一條POST信息
給已打開的窗口這條信息將包括CloudKit會話
那麼這時你們的CloudKit JS
你們的網絡應用將能夠
開始對CloudKit進行已驗證的調用
爲了在你們的頁面上進行驗證
你們首先必須爲登錄按鈕提供一個位置
進行設置給它一個“apple-sign-in-button”ID
第二 你們必須調用名爲setUpAuth的方法
這將覈對用戶的驗證狀態
如果用戶已經登錄
一個userinfo對象將會被返回
那就是你們需要尋找的全部信息
除了user info對象它將會有一條記錄名稱
這是我們剛看到的
穩定標識符
現在這個在網絡上的穩定標識符
將與在iOS和OS X上的一樣
所以 你們有辦法在所有平臺
引用相同的用戶
除了覈對驗證狀態外
你們需要處理用戶
登錄或退出時發生的事情
你們在容器上調用whenUserSignsIn
你們得到一個promise
用戶一旦登錄會便會解決
用戶退出登錄時的情況也完全相同
除了CloudKit JS中的那些
關於驗證的默認功能外
我們也提供切換以及
你們自定義處理驗證的方式
下一個示例將向您展示怎樣在會話之間
保持驗證狀態這樣CloudKit就不會
在你們的域上寫cookies
如果你們想讓cookie被寫下
以便存儲AUTH會話
你們必須在配置階段
將persist屬性設置爲true
現在
不用cookies你們或許想
用其它方法存儲會話
這個示例將給你們展示配置中...
的幾個手法
我們有一個putToken方法和一個getToken方法
以便讓putToken不管在何時CloudKit JS從服務器收到任何令牌
和getToken不管在何時CloudKit JS試圖讓令牌
與服務器對話時都能被調用
這個示例是您可能想把會話存儲到
本地存儲器或希望將其存儲在
你們自己的服務器上
以便你們可以代表用戶
進行服務器到服務器的調用
接下來我們將談一下記錄操作
正像早些時候克里斯用JSON展示給你們的一樣
CloudKit Js中的記錄基本像這樣
我們有一個名稱爲task-1的記錄
它的recordType是tasks
我們創建和修改了一些元數據字段被
包括創建和修改記錄的
用戶數據以及時間戳
recordChangeTag是該條記錄的版本
目的爲了解決衝
突然後下面出現的是
你們已經在框架中定義的
所有自定義字段
這個示例中我們只有一個任務名
類型是字符串值爲"買牛奶"
顯然你們可能想存儲
字符串以外其它類型的字段
這會給你們一個
與iOS和OS X的比較
在CloudKit框架中我們有一個字符串
但是在CloudKit JS中我們只使用
JavaScript字符串數字方面也一樣
對於NS數據 我們使用基本64位代碼和二進制編碼
對於NS數據我們有JavaScript數字
使用UNIX時間以毫秒爲時間單位
對於更復雜的對象如CL位置
我們有一個定位對象
和一個參考對象
和一個資源對象
請你們查看文稿
以瞭解每一個對象是如何定義的
在建立記錄方面
你們可以繼續
定義其中一個對象字面量
這個示例只是表明了記錄類型是tasks的情況
而且只有一個字段即taskName
它的值爲"買牛奶"
你們可以繼續進行下去在數據庫對象上
調用saveRecord方法
不過你們注意到在以上示例中
我們沒有賦給它recordName
記錄名是一個記錄的獨特標識符
那麼在未指定情況下
服務器將徑直爲我們生成一個記錄名
我們也沒有爲這個特定字段指定字符串類型
因此CloudKit JS會做一些類型推斷
它會弄清這個值是一個字符串
你們應該對我們的所有基本類型都進行這種指定
接下來我們想談談查詢	
它在網絡上通過JavaScript API
的操作有一點不同
在Foundation框架中的iOS和OS X上
我們有NSPredicate
NSPredicate...
很棒
但它對網絡不是很自然
不是很符合...
我們將通過網絡服務展示的JSON API
我們這裏有些東西看起來與Java用於記錄的字面量很像
你們只須定義一個這樣的查詢
這本例中我們表明記錄類型是tasks
我們在數據庫上調用performQuery
我們將取回類型爲"tasks"的任務的所有記錄
現在你們可以做一更復雜的操作
下一個示例中我們提供一些performQuer y
方法的選擇
我們表明這個硬鍵是任務名
我們將只是從每個記錄
取回任務名字段
我們將把結果限額限制爲十個
我們也將把所有記錄限定爲
在"allTask"這個自定義區內
查詢同樣允許你們
指定一個篩選條件
在接下來的這個示例中我們將表明
希望查找任務的記錄類型
但是我們只想取回符合"優先條件1"的任務
我們將調用performQuery方法
我們取回所有符合"優先條件1"的任務
你們注意到我們在這兒使用"等於"作爲比較條件
並且我們有更多的比較條件
這取決於你們查詢的字段類型
因此請查閱字段相關文稿
以便了解在什麼地方對每種類型進行定義
你們在早些時候已經看到我們限制了結果集合
問題是你們怎樣在結果上標註頁碼
這是一個相關的例子
結果的數量限制爲10
當這個promise解決時我們將取回前10個記錄
但是在response對象上
還有moreComing屬性
這告訴我們除了我們剛取得的
10個記錄之外還有更多記錄
我們把response對象傳回給performQuery
CloudKit JS會爲我們完成所有工作
繼續爲我們獲取的下10條記錄
本例中我們展示如何能夠
把這些promises很好地連接起來
那麼接下來是資源
與其他字段類型相比
資源在CloudKit的操作有一些不同
資源沒有和記錄一起被存儲
資源被存儲在外面的我們所謂的資源存儲器中
記錄只是簡單引用了
資源和資源存儲器
好消息是CloudKit JS完美的爲你們處理這些事務
這個例子中我們有一個帶有輸入元素的網頁
讓用戶在CloudKit目錄app中
選擇一個這樣的文件
那麼當某個文件被選定時
handleFileSelect函數將被調用
我們只需要爲這個文件找到一個參考
我們可以將其作爲我們
即將保存的資源字段的值
因此在這裏CloudKit JS會爲我們把資源
上傳到資源存儲器然後在數據庫中保存記錄
同時在數據庫內創建對該資源的參考
下載資源更容易
當您請求一個帶有資源的字段時
你們將取回一個下載URL
這個例子中我們將獲取一個用戶記錄
你們注意到這裏的值有一個downloadURL屬性
你們可以繼續獲取相關信息
或把這個作爲你們
圖像等要素的一個來源
CloudKit的另一個重要特性
是訂閱和推送通知
所有推送到Apple設備上的通知
都通過Apple通知推送服務
爲了使推送順利進行傳統上你們必須
設定你們自己的第三方服務器
你們必須有自己的服務器
帶有你們自己的證書
有你們自己的服務器邏輯
你們必須通過那種方式
發出推送通知
然而使用CloudKit
不再需要這樣了
你們可以設置CloudKit訂閱
它們就像數據庫中的觸發器
它們會尋找數據中的變化
並且根據變化發生的時間發出推送通知
現在有了CloudKit JS
網絡將成爲另一個客戶端
我們將能夠通過網絡收到
與使用iOS和OS X相同的推送
爲了收到推送你們必須設置訂閱
這裏的第一個例子向你們展示一個區域訂閱
我們將聲明subscriptionType是zone
subscriptionID是changeTasks
我們爲zoneID的賦值爲allTasks
我繼續用數據庫保存訂閱
那麼這將開始尋找變化
一旦allTasks自定義區內發生任何變化
它會向連接到相同賬戶
的所有客戶端推送信息
訂閱同樣允許你們把它們建立在查詢基礎上
這裏的下一個例子中我們建立一個查詢訂閱
它將觸發allTasks自定義區內創建 
更新或刪除的任何信息
然後我們指定一個查詢這個特定查詢
就像我們爲記錄取信息一樣
任何時候一個優先權爲1的任務
被創建 更新或刪除時
將會有一個推送通知被髮出
而那就是我們需要做的全部
那麼在網站上 你們必須完成兩件事
首先 們必須爲通知註冊
這會從服務器獲得一個令牌
我們可以將其用於Apple推送通知服務
並且暫停
與Apple推送連接服務的連接
其次
你們需要調用addNotificationListener
每當網頁上收到通知的時候
它都會被調用
最後 讓我講一下一些使用CloudKit JS的最佳實踐
如我們剛纔所見
你們應該動態鏈接到
CDN託管版本的CloudKit JS
你們應該跟隨我們升級到最新版本
並修復安全漏洞
它同樣確保這個資源
通過我們龐大而完善的分發網絡實現低延遲交付
而且它是完全免費的這一點好極了
其次 你們應該考慮在你們的網頁上
異步加載CloudKit JS
對於任何你們可能在網頁加載的第三方庫
這是一個好建議
它會避免任何網絡阻塞以及用戶體驗的衝擊
最後 你們必須確保對請求響應進行處理
所以CloudKit的
新自由限制設置
包括對請求的限制
確實是極爲寬宏大量的
你們在檢索時可能遇到網站阻塞
所以你們需要確定
你們的客戶端將提供適當的備份支持
它是否在有大量響應的同時仍能正常檢索請求
那麼你們也可以研究它怎樣對單一請求進行批量操作
我們確實有一個CloudKit JS批
處理API
如果你們真的對這個話題感興趣的話
你們確實應該參加
明天的CloudKit小竅門講座
他們會談到更多關於整個CloudKit請求被限流的問題
而且不限於網絡方面
就這麼多
那就是CloudKit JS
我們非常期待看到你們
用它構建的東西
你們如有任何問題敬請順便訪問各個實驗室
現在我將把舞臺交給克里斯
感謝歐那爾
總而言之
CloudKit 網絡服務提供了一個完全
與你們在網絡上的CloudKit數據對等的接口
它們通常以容器爲基礎的
我們處理驗證
元數據存儲
以及資源上傳和下載
你們處理託管你們的靜態資源
和你們的JavaScript應用代碼
最後我們爲你們帶來CloudKit JS
以使這些變得儘可能的容易
你們可以在網上訪問我們
地址是developer.Apple.com/cloudKit
如果有任何問題你們可以訪問
蘋果開發者論壇
或Apple開發者技術支持
如果仍然有問題
可以給我們發郵件
地址爲<u>CloudKit@Apple .com</u>
有一些相關的講座
你們可以在網上觀看我們昨天的
《CloudKit中的新特性》講座
明天有題爲《CloudKit小竅門》的講座
我希望在那裏見到你們
非常感謝你們