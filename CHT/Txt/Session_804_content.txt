嗨 大家好
我叫安東尼奧安東尼奧·卡瑞多尼
我是San Francisco字體設計小組的一名成員
很榮幸在此爲大家介紹這種字體
在今天的介紹中我們將會瞭解到San Francisco字體
它們的設計過程及這些字體對我們的平臺具有哪些意義
我們將會看到若干新功能
並學習如何利用這些功能讓你所設計的app應用變得更出色
這種變化將體現在代碼和設計兩個層面上
最後我們會講到在app應用中
加入這些新字體時可能會遇到的 API 隱患
現在開始進入正題
文字隨處可見
而文字存在的前提則是字體
其實字體本身也具有表現力
好字體能讓你的app應用內容和用戶界面更加美觀
它們看起來會更順眼
你無時無刻不在閱讀字體
在不同的屏幕上在不同的設備上
閱讀不同磅值的字體
另外你在閱讀時的視覺環境也不盡相同
有時是明亮環境有時是遠距離環境
還有各種屏幕尺寸和分辨率
因此我們有必要改善平臺上的字體樣式
於是全新字體San Francisco便應運而生了
San Francisco是加州Apple公司設計的一款全新字體樣式
外觀風格簡單而優美
San Francisco以其連續流暢的字形表現力和易讀性
實現了整個平臺的高度統一
這是它的外觀
San Francisco在字體樣式中屬於grotesque
Grotesque也稱爲sans serif
請看字體分類圖
San Francisco設計包含兩個子類別
其中SF用於iOS和OS X
SF Compact用於蘋果的手錶系統
這兩個類別又各自包含兩種字體“文字”類和“顯示”類
兩者都屬於視覺尺寸
稍後我會具體介紹
其中文字類字體共有6種字重
顯示類字體共有9種字重
剛纔我說過SF用於iOS和OS X
而SF Compact是用在蘋果的手錶系統
現在我們瞭解一下兩者的不同之處
SF和SF Compact在設計上採用了孿生理念
也就是說它們相似而不相同
二者的主要區別在於對圓形部分的處理方式
SF字體是完全圓滑的SF Compact則略帶扁平效果
這樣的設計能達到雙重目的
前者實現了風格化而更重要的是後者具備了功能性
這些扁平的側面提供了更大的字母間距在文字較小時更容易閱讀
當這個看似不起眼的功能在文字中一遍又一遍地重複時
就能帶來明顯的效果
現在我們來看比例問題
SF和SF Compact的比例區別並不明顯
所以我就以SF爲例解釋一下
我會提到一些字體方面的專業的詞彙大家可能對這些詞彙已經很熟悉了
拉丁文的設計以基準線作爲標準
小寫字母的對齊標準叫做x height
即小寫x的高度
大寫字母以大寫X作爲對齊標準
此外還有一個概念叫“下伸部分”它是基準線以下小寫字母的對齊位置
在比例問題上
SF字族可以兼容我們之前發佈的所有UI字體量度
因此你的app應用不會出現明顯的垂直迴流問題
實際上垂直迴流問題根本不會出現
在這些所兼容的垂直量度中我們進行了比例上的細微改動
比方說我們把大寫字母變得短了一些
這樣做是爲了改善大小寫混合設置的顯示效果
與此同時我們還把x height的高度增加了一些
從而使小寫字母和大寫字母更接近
這樣不但大小寫混合設置的效果更好
還能讓小寫字母看起來更大一些
這就是大家平時看到的更加清晰易讀的效果
最後一點數字是與大寫字母對齊的
SF屬於一種泛歐洲字體它包含了拉丁文
而拉丁文又包含着波蘭語 冰島語 匈牙利文語
甚至像越南語那樣需要疊加音的語言
另外它還包含俄語裏所使用的西里爾文以及希臘文
這就是San Francisco
這就是我們在加州Apple公司設計的一款全新字體
iOS和OS X採用的字體類別叫做 SF
蘋果手錶系統採用的是SF Compact
這兩種字體類別有着不同的比例對不起 是相似的比例
但它們在設計上卻有所不同
今天大家就可以下載到這兩種字體
其實現在就可以
在Apple網站的字體頁面上developer.apple.com/fonts
請注意這些字體目前還只是預覽版
等到OS系統最終確定以後纔會發佈最終版本
在繼續講解
San Francisco字體的優秀創意 “視覺尺寸”之前
我想先爲大家介紹一些設計領域的基本原理
視覺感知基本上屬於錯覺
在理解這句話的時候
請設想在你眼前有兩個形狀一個方形和一個圓形
爲了讓兩個形狀看起來高度相等
需要把它們並列排放上下準確對齊
但實際上圓形看起來很短
爲了彌補這一缺陷就要使用一點迷惑性的手段
也就是說要讓圓形更大些
在字體領域裏我們會說用圓形“衝越”方形
換句話說 想讓兩個形狀看起來相似通常要讓它們相異
這個原理不僅適用於形狀本身
還適用於形狀周圍的空間
我用刻度標記的方式讓大家看得更清楚些
大家會看到在屏幕中間插入文字時
文字的位置看起來會很低
正如剛纔所講到的
想要形狀看起來相似需要進行差異化處理
順便普及一個小知識你們知道這個字符是什麼嗎？
它叫什麼？
英鎊符號還是井號？
意大利語叫cancelletto意思是“小門”
當然它屬於數字符號
由四條線相交組成的數字符號
而這四條線的交匯處
中間的這部分區域當字體尺寸較小的時候
該區域會變得很暗甚至是一團黑
所以當字體較小時你很難看到它
這時還是需要調整一下
不必去動四條線的交匯處只要讓中間的方塊變大一點
這就是San Francisco字體的重磅值井字符
以上是我們在字體設計中經常採用方法
這就是剛纔所說的視覺感知即與錯覺相關
明白了這個道理我們再來講視覺尺寸
在剛纔看到的分類圖中它在這個分支上
假設有一小段文字用兩種不同的字體尺寸顯示出來
順便說一下這個單詞沒有任何實際意義
它只是字體設計人員用來查看字體及其組合樣態
因爲其中包含着一些扁形和圓形
當你看着它的時候你會發現這段文字在小字號狀態下清晰度不好
這是因爲對於grotesque這種字體樣式
它的字母顯示正常並且字母間距很小
如果我用模糊處理來模擬低清晰度效果的話
較小的字體...
在較小的這部分字母開始變得混淆不清了 對嗎？
這種情況下我們想要的效果應該是這樣的
也就是說要微調一下以便讓小字體也能清晰顯示
大家可能覺得我只不過是讓它動了起來並稍微增加了一些寬度
其實我是在變換字體所呈現給你的整體印象
在解釋“顯示”和“文字”這兩種字體的區別之前
請記住此處的“顯示”並非指顯示器屏幕
它在字形領域代表字體大小而“文字”是指文本的大小
所以“顯示”字體用於較大的字號“文字”字體用於較小的字號
在解釋兩者區別之前我首先介紹負空間的概念
負空間是指字母內側 周圍
和輪廓內部的空間
負空間是分辨形狀和閱讀形狀的關鍵之處
在剛纔的示例下方區域中
對於文字來說 其周邊空間的面積幾乎是字體顯示面積的兩倍
因此包括San Francisco在內的grotesque字體樣式
都面臨着同一個問題
它們的形狀在足夠大時看起來確實漂亮
但在結構上卻過於相似所以很容易造成混淆
如果將兩者疊加起來
你會發現它們的整體形態是完全相同的
在頂部和底部都有彎曲部分
它們都含有兩個這樣的區域我們稱之爲反向對稱區
反向對稱區的位置基本大小基本一致
另外在中間位置還有這樣的半橫區
半橫區的形狀實際上是由這些圓圈所界定的
如果空氣能夠進入到字母裏面的話那麼氣流就是從這些圓圈進去的
在改變顯示字體時
文字字體和顯示字體具體處理過程是這樣的
我們舉例說明
以小寫字母a爲例
其實要改變的是衝越部分
因爲當字體尺寸較小時
我們要讓圓邊部分能夠從x height上突顯出來
同時還要打開此處的圓圈
對小寫g的底部區域也採取同樣的處理方式
小寫s也是打開這裏的圓圈
處理字母r時我們把它右上角的彎轉部分加大
小寫f和小寫t也有類似的形狀區域
因此處理方法相同但這兩個字母更大 更高一些
小寫i就比較有趣了
因爲當字號很小時i頭頂上的圓點看起來
好像和下半部分的豎線頂撞在一起
所以我們就把它調大 調高一些
SF和SF Compact有兩種截然不同的字族
分別叫做“顯示”和“字體”它們用於不同的字體磅值
系統能夠在這兩個字族之間自動轉換所以不需要用戶自己選擇
這就是視覺尺寸
謝謝
San Francisco有兩種視覺尺寸 文字和顯示
系統會在20磅時自動切換文字和顯示字體
這一點對平臺的代碼編寫不會產生任何影響
不過對於app設計而言還是很有必要了解這一點
因爲Photoshop Sketch或其他類似的軟件程序
不會自動執行字體切換
這種情況下你就要自己更改字體
講完了視覺尺寸
我想介紹一下和文字尺寸有關的另一個概念 字間距
字間距在字母的負空間裏起到調節作用
看屏幕上的動畫演示 大家可能會認爲哦 原來是字符串的偶距變了
沒錯 基本上就是這樣字間距和字偶距的區別很小
字間距是
正向或反向調節所有字符
而字偶距只是調節兩字母之間的距離也就是相鄰字母的距離
這就是兩者的區別所在
字間距是普遍調整字偶距是局部調整
San Francisco的每種字體都內置一個字間距表
該字間距錶帶有具體的字符尺寸並且定義了磅值和字間距值
就是這種效果 對吧？
它能讓較小的文字更寬鬆也能讓較大的文字更緊湊
就像剛纔我說的那樣
若使用新San Francisco字體進行編碼 可以不用瞭解上述原理
如果使用Photoshop繪製app應用的話
再次記住軟件本身不會自動切換字體
這時就可以下載這樣一份帶有系統字體的字間距表
下載地址和我剛纔給出的頁面地址一樣
以上是關於字間距的內容
接下來我要講的是字重
字重這一概念用來描述字母筆畫的粗細程度
在San Francisco和SF Compact字族裏
兩者的文字字體都有6種字重
另外再加上斜體就構成了9種顯示字體
大家可能會問爲什麼顯示字體字重比文字字體重更多
這是因爲極粗字體其實只是爲了標題而設計的
所以在20磅以下使用就沒有多大意義可言了
有些字重是新增加到平臺上的
以前幾乎找不到它們
即便原有的字重也很難獲取
現在我們提供了新的API大家可以從中獲取所有字重和系統字體
它們都包含在UIKit和AppKit裏
且已是systemFontOfSize裏面的一個新參數
這些是它們使用的引數
有了這些字重接下來的問題的就是如何使用它們
我指的不是在編碼方面而是在設計方面
通過使用字重可以實現三個主要目標
首先是差異化
你可以讓一段文字產生差別並製作層級效果
第二個目標是相似性
第三個是實現風格化效果
這樣文字就具備了表現力
請看屏幕
假設有一段文字
現在要將其中的某個單詞突出顯示
把它設成動態 鏈接或強調效果
這時字重就能派上用場了
另外 它還可以爲列表製作層級效果
比如我想把第一行文字做成列表的標題而下面的部分是列表的具體內容
字重還有一個巧妙的功能製作相似效果
請看這個示例
Apple手錶系統的Glances模擬界面
上面是一個較大的數字下面是幾個較小的文字
如果把它們設成相同字重看起來會有頭重腳輕的感覺
如果要製作相似效果讓其產生平衡感
就需要使用不同的字重以此來達到相似的目的
所以我們下面的字體從light變成regular 效果就好多了
記住這個方法
字號大時 字重調重一些字號小時 字重調輕一些
這樣一來就能達到相似而協調的理想效果
最後 字重還能幫助提高文字的表現力
爲了解釋這個問題我製作了一款新式app應用
叫做“蜜蜂天氣預報”
一款蜜蜂風格的小軟件
我想讓它看起來簡單粗獷一些
但我想說的是如果保持界面佈局不變
在佈局不變的情況下只改動字重
整個界面在風格上將會截然不同表現力完全不一樣
如果你覺得哦 肯定是顏色的問題
沒關係我還做了一個斑馬版的
這個就完全能證明我是對的
雖然字重能改變風格和效果
但別忘了
文字是有字體的易讀性最重要
你可以製作層級效果清晰連貫的層級效果
如果不喜歡自己做的話
可以使用iOS準備的一套現成系統
裏面已經設置了層級以及字體尺寸和字重
它們就是文字樣式API
主要用於功能很多的Dynamic Type
用戶可以進入它的偏好設置
改變字體大小然後app應用就會做出相應改變
在使用字重時請記住
iOS和watchOS系統中都有一個設定選項
用於改變用戶設備上的字重
如果你使用的字體很粗
那很可能已經達到了極限
相反 如果你使用的字體很細那麼文字的易讀性就會好一些
字重的使用沒有固定的標準方法
但這些基本原理還是能起到一些拋磚引玉的作用
以上講的是San Francisco字族的字重
還有更多的字重和包含字重的API供大家使用
剛纔介紹的易讀性層級和精細質量效果
等基本原理同樣適用於這些字重和API
下面是San Francisco字族的另一個功能 字形功能
功能賦予字體生命力因爲它們是嵌入字體內部的行爲片段
其主要作用是用來表達複雜文字
同時也可以通過它們來獲得字體的外延形狀
對獲取外延形狀來說有時字形功能是唯一途徑
有時字形功能是更加便捷的途徑
我們通過示例來瞭解它們功能的實際作用
首先看分數的顯示
比如在設計過程中需要把它加到app應用裏
這時你會想
肯定可以在Unicode找到該符號
但不知道San Francisco裏面有沒有
於是你找了一下還真找到了直接把它打出來
很好
不過要是這種情況的話又該怎麼辦呢？
字體裏面沒有Unicode裏也沒有
你可以用迭代法用這個字符串來寫代碼
然後複製成其它形狀
再把這些形狀逐個排好位置
必要時調整一下字重讓整體效果看起來更加相似 勻稱
也許你會想到字體裏面是有分號線的
那就到San Francisco裏面去找一找找到了
直接放進去
就這樣你寫了一大堆代碼其實根本不用這麼麻煩
因爲分數功能會自動執行這一操作
該功能適用於任意分數
就像這個數字
我不可能設計出一個65/324這麼大的連字符
實際上它是由小號數字和分號線組成的系統能夠根據實際字體
將數字和分號線組合在一起
這樣做的好處在於它們都是獨立的形狀 可以調整字間距
功能的種類還有很多
大家可以在Typography面板裏啓用這些功能
該面板是OS X字體面板中的一個用戶界面
另外也可以通過代碼來啓用功能畢竟在座各位使用代碼的時候比較多
我用新的systemFontOfSize字重API實現了輕字重效果
這是字體描述符
找到以後就可以爲它添加各種屬性
某些屬性本身就是字形功能
每次可以打開一個功能或者關閉一個功能
也可以批量處理多個功能
有了字體描述符就可以用它創建另一個UIFont
或者NSFont
此外還有其他功能供大家使用
比如高體字和上角標或者矮體字和下角表
或在數字和大寫字母之間輸入數學符號
或其它符號時所使用的大寫形式
San Francisco字體的某些功能在設計上確實非常特殊
我來具體解釋一下
首先是垂直居中冒號
默認狀態下它是與小寫字母對齊的所以頂靠在基準線上
但在對時間顯示進行排版設計時我們希望它能垂直居中於數字之間
因此我們在iOS的錶盤設計中全部採用了這種居中垂直法
既用在OS X的標題欄也用在啊Apple手錶系統
還用在秒錶程序上
後來我們決定把該功能設成自動生效這樣能爲UI設計的時間顯示帶來便利
當然必要時你也可以退出該功能
退出的功能代碼和和啓用代碼基本是一樣的
另外一個功能是6和9的替代形狀
這兩個形狀當字體較大時看起來很漂亮採用的是grotesque字體
但是它們卻存在視覺混淆問題
當它們以小字體並列顯示或者與8並列示時就會變得混淆不清
因此我們在San Francisco字體中設計了6和9的替代形狀
看起來更加平直化
這種設計被應用在Apple手錶系統的小錶盤上
以及Apple手錶背面的序列號上
其實在任何序列號不易分辨的情況下你都可以使用這一功能
讓6和9顯示地更加清晰
因爲使用時要取決其它數字的實際大小
所以我們沒有把該功能設爲自動開啓
如果需要的話可以使用這段功能代碼來啓動它
接下來我要把兩種理念結合起來
第一種是我們剛剛看到的字形功能
第二種是我們先前講過的視覺尺寸
顯示字體和文字字體在設計上的區別很大
因此我們不得不將磅值納入到考慮範圍內
在設計過程中如果用顯示字體來表達分數
那麼使用捲曲形的6不會有任何問題
但如果是文字字體的話最好能換成另一種形狀
因爲如果將磅值設爲12
那麼分數部分的磅值就應該是6對吧？
所以我們採取了不同的設計方式
並且讓它們間隔更遠一些
我們在 San Francisco字體中專門進行了很多這樣形狀的處理
目的就是將文本和顯示區別開來從而讓文字更加美觀或者更加易讀
這些就是字形功能
它們是被嵌入文字內部的行爲作用
有些功能是由系統字體默認開啓的
而其它功能則需要大家自己啓用
接下來我們談談數字
不是app裏面的數字而是字體裏面的數字
字體設計人員花費大量時間去研究數字的形狀
想讓數字更加美觀 實用更加完善
不過我想談談數字的間距
它們的寬度問題
默認狀態下對於我們的平臺而言
數字採用的是等寬式設計就是說它們的寬度完全相同
對於編排表格之類的設計非常適用
等寬數字簡單方便因爲它們很容易對齊
而且還可以用來製作多行樣式
但它並非San Francisco字體中唯一的數字形式
我們還設計了一種比例數字
使每個數字都有其“自然”寬度
某些情況下我們的確需要等寬數字
比如像這樣有小數的時候
會有擺動效果等寬數字能保持靜止不動
當然有時也需要在靜態標籤裏使用數字
比如說一條數據 一個電話號碼
收件箱閱讀提示或者Email地址以及URL網址
這時最好使用比例數字
現在我們用數字內容比較多的日曆程序來做個演示
請看我們在這款應用中所使用的數字以及我們的編排設計方式
它們沒有任何對齊標準只與文字保持一致
也就是說 我們可以使用應該使用 也確實使用了比例數字
瞭解這一點我們就能實現質的飛躍
就能改變我們的平臺默認樣式
爲大家提供默認狀態下的比例數字並將等寬數字設爲可選功能
Apple手錶已經率先採用了這種設計方式
系統默認使用比例數字
但這畢竟是一次重大變更可能會對佈局產生影響
有鑑於此我們制定了一些規則
如果app應用未鏈接到iOS 10.11
對不起是OS X 10.11和iOS 9
默認使用的仍是等寬數字系統會自動啓用等寬數字
但如果是重新編譯則會使用比例數字
在AppKit中有款新的快捷API它提取了這一功能代碼
就是剛纔給大家看的那段代碼所以用起來會更方便
最後我們來瞭解一下潛在隱患的問題
我們的字體API同時包含了新舊字體
細心的人可能會留意到
在預覽版的OS X和iOS系統中
SF字體的名稱前面有一個小點
這個小點是用來告訴大家該字體是Apple的獨家字體
所以不要過於相信它的穩定性
我們曾經見過一些框架開發人員
使用他們自己的字體加載代碼
比如遊戲框架的開發人員就是這樣
之所以這樣做是因爲
他們覺得字體就存放在文件系統中的某個具體位置上
這種想法是很危險的
我們希望大家在字體路徑的處理方式上能寬泛一些
就是說可以通過Core text訪問字體文件
而不必到文件系統裏面查找
另外如果要通過名稱來獲取字體文件的話
可以使用fontWithName API裏面全都是用戶字體
如果你有自己的字體可以這樣寫出來完全沒問題
但如果你對某個系統字體執行了實例化
然後再提取它的名稱並嘗試建立另外一個字體
這時會導致所有的系統自動設置完全退出
自動功能 字體大小行爲自動間距等等都會退出
所以建議大家不要這樣操作
其實我們可以調用字體描述符
用它來實現某個字體功能
這是使用字體對象的推薦方案
最後在視覺尺寸問題上
我們仍然在挑戰一些字體顯示方面的舊觀念
比如在設計過程中把一個單詞的磅值設爲15
將其比例放大後再重新使用相同的字體對象
這時你可能在用比如說120磅來顯示15磅的字體
那麼就要對120磅的字體重新執行實例化
這樣才能得到正確的字體行爲
希望大家能把字體當作一種寬泛的對象並使用系統API來獲取字體
具備了視覺屬性字體便能夠打破舊有觀念
基於系統字體的API將會一直提供正確的字體行爲
所以大家儘管放心使用
以上就是今天的全部內容
我們介紹了新的San Francisco字體
及San Francisco的優秀創意 視覺尺寸還有其它一些概念
介紹了自動字符間距和字體字重及San Francisco的各種功能
還有即將在平臺上普及的數字顯示方面的重大變更
這將使用比例數字作爲默認顯示
最後我們介紹了API的潛在隱患
如果您有任何問題可以聯繫 邁克 或 柯特
或者訪問我們的開發者網站
稍後的演講是手錶設計的要訣和技巧
之後是文字與字體實驗室屆時會有答疑環節
謝謝大家