Code Audio新特性
謝謝 大家下午好 
歡迎參加Code Audio新特性說明會議
我是阿克廈沙·納格什本會議第一個發言者
我將談談AV音頻引擎
及其今年發行的iOS and OS X的新功能
之後我的同事託裏會講
我們所售產品其他令人興奮的新功能
像今年的跨設備音頻功能
以及AV AudioEngine的新特點
明天早上我們有另一場Core Audio說明
又稱爲Audio Unit Extensions是一套新API
我相信你會覺得很有意思
所以請不要錯過那個說明會
好吧
我們首先回顧一下AV Audio Engine
如果你知道Core Audio 你可能會注意到
我們提供了各種各樣的API
來增強音頻功能
去年在iOS 8和OS X Yosemite系統上
我們引入了一套新的
基於C語言的API 即AV Audio Engine
是AVFoundation框架的組成部分
如果您不是很熟悉AV Audio Engine
我強烈建議你看看
我們去年的WWDC上關於Audio Engine實操的視頻
咱們來看看這項成果背後要達成的一些目標
有三個重要目標
首先 提供一個強大的且功能豐富的API組
AV Audio Engine建立在C語言框架之上 因此
它支持我們的C語言框架大多數的強大的功能
第二個目標 您在直接使用
C語言框架編寫代碼時只需少量代碼
就能運行簡單或複雜的任務
這個任務可以是播放一個音頻文件
也可以是運行
整個音頻引擎遊戲
第三個重要的目標是簡化實時音頻
AV Audio Engine是一個實時的音頻系統
但同時有一個非實時的交互接口
可在後臺處理
實時音頻的複雜文件
這再次凸顯了AV Audio Engine可用
談談它的一些特性吧
它是個C語言API組 因此
也可以通過Swift運行
它支持低延遲實時音頻
使用AV Audio Engine能夠運行各種音頻任務
如播放和記錄音頻
關聯音頻處理模塊
並形成獨有的處理鏈
你可隨時捕捉音頻處理鏈
進行分析或調試
而且 你可以安裝3D音頻遊戲
那麼 該引擎是由什麼構成的呢？
引擎的基本構建塊是節點
引擎本身控制一系列
連接在一起的節點
節點有三種類型
源節點提供數據輸入
過程節點處理這些數據 
目標節點通常處理終端節點圖
並關聯輸出硬件
和輸出節點
現在咱們看一個引擎設置示例
這是一個簡單的自動伴奏錄音應用
你可以通過隱式連接
輸入節點的麥克風捕捉用戶的聲音
通過有效節點處理
可能是簡單的延遲
你也可以通過一個節點塊
分析用戶聲音
確定用戶是如何表演的 在此基礎上
你可以通過播放器節點增添音效
也可以在你的應用程序中
用另一個播放器點在此播放
所有這些信號可以
使用混合節點混合在一起
最後通過揚聲器連接到輸出節點
在此設置中您的輸入
和播放器形成了源節點
混頻器是你處理輸入節點
輸出節點的目標節點
現在讓我們來仔細看看混合節點
引擎中有兩類混合節點
第一類是我們前面例子中的
AV音頻混合器節點
這類節點主要用於採樣率轉換和聲道混合
它支持單聲道 立體聲和多通道輸入
第二類混合器節點被稱爲環境節點
它主要用於遊戲應用程序
通過使用專業隱形偵聽器
模擬與資源與環境節點相關
3D環境音效
環境節點支持單聲道 立體聲輸入
和空間化單聲道輸入
現在 同時使用混頻器節點和源節點的
是一種叫做AV Audio Mixing協議
此協議定義了一組屬性
適用於混合節點的輸入總線
源節點遵守這個協議
進而控制所連接的
混合器屬性
如果你在連接
源節點與混合器節點之前設置這些屬性
則屬性會緩存到源節點
當你實際連接源節點與混合器節點
該屬性會對混合器產生影響
我們看看這些屬性的例子
主要有三種類型
常見的混合屬性適用於
所有混合節點
這個例子是音量
立體混合屬性如全景
只適用於AV音頻混合器節點
3D混合屬性如位置 幹擾
遮擋主要用於遊戲
以及適用環境節點
現在 我們再一個設置示範
現在來看看設置的示例
假設您的引擎上有一個播放器節點
混頻器節點和環境節點
你在播放器節點上設置了一堆混合屬性
現在玩家並沒有
連接混頻器
這些屬性仍緩存在播放器裏
現在假設你連接到了混合器節點
現在的屬性如音量和全景
對混合器節點產生影響
而3D混合屬性如位置不會影響混合器節點
如果你現在斷開混頻器
並連接到環境節點
音量和位置對環境節點有影響
而全景則無影響
這樣你可以在播放器中設置一堆混合屬性
然後在你的應用程序中將播放器
從一個混頻器無損地轉移到
其他混頻器中
接下來的幾分鐘我們討論
今年產品的新特性
將再次訪問AV Audio Mixing協議
我現在想看看另一方面
如何使用AV Audio Engine處理
多通道音頻
這裏的設置涉及兩部分
首先是配置硬件
能夠接收多通道音頻
現在的硬件可以是HDMI設備
或USB設備等等
第二部分實際上是設置
引擎本身能夠渲染
多通道音頻
我們一個一個來看
首先 OSX中的硬件設置
在OS X中 有款內置系統工具叫音頻MIDI設置
用戶可使用這個設置
安裝多通道硬件
這個工具可用於
設置揚聲器配置
頻道佈局 等等
隨後 app可通過設置AVAudioEngine
使用這個硬件進行多通道渲染
但是在iOS中爲了使用硬件多通道
app需要設置AVAudioSession
假設我們要播放一個音頻
來看看會涉及哪些步驟
首先是激活音頻會話
接下來需要查看
適合此會話的通道最大數
隨後設置通道的優選數字
最後一步
詢問返回輸出通道的實際數字
以覈實你剛做的請求是否通過
現在 請注意
不管你何時請求爲通道提供某一數字
請求並不一定會被接受
因此 最後一步
有必要覈實通道實際輸出數字
代碼看起來是這樣的
假設有一個音頻播放案例
假設使用的是5.1渲染
首先要做的是
獲得一個音頻會話的共享事例設置類別
激活會話
接下來 檢查適合會話的
輸出通道的最大數
在此基礎上
在會話中設置通道的優選數字
最後一步 
詢問輸出通道的實際數字
使之適應於對應通道計數
好了 以上就是關於硬件設置的所有內容
現在來看看如何設置引擎
使之能夠渲染多通道音頻
再舉兩個使用事例
首先 假設你有適用的多通道音頻內容
且它需要通過多通道硬件
進行重播
在這個案例中你會用到一個AV混音器節點
第二個事例
有一個遊戲場景你想讓其中的內容空間渲染
然後通過多通道硬件播放
這裏 你用到一個環境節點
事例一 你有一個多通道音頻內容
一個多通道硬件
這個硬件是按照數分鐘前我們所討論的那樣創建的
現在 請注意儘管顯示的是內容格式和硬件格式一樣
但他們可能彼此截然不同
這裏的混合器節點
將注意到內容格式和硬件格式間的通道映射
所以 首先你要做的是
傳遞硬件格式
連接混合器和輸出節點
代碼層面是這樣的
你詢問輸出節點的輸出格式
即硬件格式
然後用那格式
連接混音器節點和輸出節點
接下來的內容方面很相似
將內容格式
傳播並連接播放器和混音器節點
假設你有一個文件格式的
多通道音頻內容
可以打開文件閱讀
也可以用它的處理格式
連接播放器和混音器節點
隨後將文件安排到播放器中
打開引擎 打開播放器
內容將通過處理鏈
事例二 這是典型的遊戲場景
你想讓渲染內容空間
並通過多通道硬件播放
處理步驟極其相似
除了部分細微差別
首先拿到硬件格式
在環境節點和輸出節點之間
設置連接
因爲環境節點只支持特別通道佈局
所以你需要將硬件格式
映射到一個環境節點支持的格式
這是第一個不同點
假設我們有一個5.1硬件
我們可以選擇由音頻節點支持的
音頻單位5.0佈局包
我們可以用這個佈局標籤
創建一個AV音頻通道佈局
然後一個AV音頻格式使用這個佈局
然後你用這個格式
連接環境節點和輸出節點
第二步完全相同
傳遞內容格式
並連接播放器和環境節點
打開並閱讀文件用它的處理格式
連接播放器和環境
下一步 在支持多通道渲染的播放器上
設置渲染算法
渲染算法是一種
3D混合協議屬性
數分鐘前 我們剛看過
它將告訴環境節點
對應的源請求一個
多通道渲染
接下來就是常規的東西了
將文件放到到播放器裏
啓動引擎 啓動播放器
環境節點將對內容進行空間渲染
好了 這就是iOS 8和OS X Yosemite系統
AV音頻引擎
接下來講講 讓人更興奮的東西
今年有什麼新東西呢
我們有三個主要的新特性
第一個是拆分支持
等下就會講到
第二是音頻格式轉換支持
這裏有不少的新類
最主要的一個是AVAudioConverter
最後 另一個新類叫做
AVAudioSequencer 支持MIDI文件的播放
來講講拆分支持
讓我們考慮一下這個設置示例
我猜你們應該都很熟悉了
在上週推出的API中
引擎只支持一對一連接
任何節點的輸出
只能與引擎中另一個節點連接
現在 我們增加了對這個的支持
它可讓你在處理鏈中
將節點輸出分成多個路徑
在這個事例中
播放器的輸出被分成三個不同路徑
最後連接到混音器節點上
拆分在類似下面的用例中很有用
如混頻 需增加一些效果聲信號的混頻
或者用同一個源驅動的原始信號對信號進行處理
在這個事例中
播放器和混音器節點的連接形成了原始信號路徑
而經過效果節點的其他兩個路徑形成了效果聲信號路徑
這三個信號通過混音器節點
混合在一起形成混合
現在 請注意當你拆分節點的輸出時
事實上 整個輸出通過多路徑進行渲染
這其中並未涉及到通道的拆分
現在來看看節點如何設置這些連接
你可以看到
播放器連接到三個不同的節點上
我們將它們叫做連接點
由一個非常簡單的新類
叫做AV音頻連接點作爲其代表
首先要做的是
創建一些連接點
以連接播放器節點
在這個事例中連接是 輸入總線
兩個效果的0和輸入總線混音器節點的1
然後使用新連接API
我們必須連接播放器和這些連接點
就這樣 你爲拆分連接做好準備了
接着  連接引擎中其他所需要的節點
現在再次訪問
剛纔提到過的AVAudioMixing協議
看看它如何影響拆分使用事例
假設我們有一個播放器節點
這個播放器節點的輸出被拆分成兩個不同路徑
通過效果節點到達混音器節點
現在假設在播放器節點上設置了個屬性
在這個事例中假設你設置了音量
此刻 屬性將在所有現有的混音器連接上起作用
在這個事例中輸入總線 混音器節點的0輸入總線
混音器節點的1得到的音量都是5
如果你想在特別混音器連接數
改變任何屬性
這也是可以做到的
方法就是
使用我們的新類名爲AVAudioMixing目標
詢問播放器節點
這裏提供你想要的與混音器對應的
目標對象
然後 你就可以在對象上設置屬性了
這個事例中
我在混音器輸入總線0到8中改變音量
好了 同樣的
你也可以在其他混音器連接中改變屬性
我們來看看 連接斷開會發生什麼
假設你將效果
從混音器輸入總線1連接中斷開
請注意 
你在特別混音器連接上改變的設置
將不會被保存
因此 混頻設置的狀態看起來是這樣的
播放器的混頻設置仍舊完整
另一個活躍的連接
同樣也有完整的混頻設置
現在 假設你結束創建連接
重新回到混音器輸入總線1因爲先前的設置並未保存
重設播放器節點的基礎設置
將在新連接上起作用
因此 根據播放器的混頻設置
輸入總線音量1將再次被設置成5
總結一下
當一個源節點被連接到多個混音器上時
你在源節點上設置的屬性
將適用於所有現存的混音器連接
同時它也適用於任何新創建的混音器連接
若有需要
也可以改變寫個別混音器連接
但是請記住
無法保存在斷開時候保存
最後是關於拆分支持
如果你設置限制條件
引擎就可以支持處理表中
任何節點的拆分
現在 從輸出被拆分的節點開始
到所有部分終點的混音器
你無法擁有任何時間效果節點
也就是說 你無法設定速度和時間階
你也無法進行速度變化
換句話說
基礎節點上的所有拆分部分
應用同樣的速度加以渲染直至它們到達通用混音器
倘若你設定限制條件
那麼你就可以將引擎上
任何節點的輸出拆分成不同部分
好了  現在來說說
今年的第二個新特徵音頻格式轉換支持
這裏 我們有一些新類
AVAudioCompressedBuffer和AV Audio Converter
在上週提到的API中
我們有一個AVAudioBuffer
和它的一個子類叫做AVAudioPCMBuffer
從它的名字就可以看出
PCM緩衝器保存未壓縮音頻數據
而且通過引擎的數據流
是PCM緩衝器格式
今年開始
AVAudioBuffer有另一個子類叫做AVAudioCompressedBuffer
它保存壓縮音頻數據
這個可以與新類AVAudioConverter用
接下來將會講到AVAudioConverter
AVAudioConverter是一個新工具類
它是音頻工具箱架構中的
音頻轉換器升級版本
它支持所有音頻格式轉化
在你改變 即整合到浮動位深 抽樣率等等時
你可以將PCM轉化成PCM格式
或者可以在PCM和壓縮格式間轉換
就是說 你可以用它來編碼和解碼
在下面的事例中 你可以看到
AVAudioConverter與AVAudioEngine配合使用
好了  假設你設置引擎進行播放
因此我們有一個播放器節點 
它連接一個效果節點和一個輸出節點
假設有一個壓縮音頻流
進入到其中
現在 我們知道通過引擎的
數據流的格式是PCM 緩衝器
現在可以使用AVAudioConverter
將輸入壓縮流轉換成PCM 緩衝器
然後你可以用這些緩衝器
安排播放器節點
因此 通過引擎 就可以播放了
現在來想想代碼事例
用AVAudioConverter如何進行編碼
這裏 我們想把
一個PCM轉換成ASC壓縮格式
首先要做的事情是
定義輸入格式和輸出格式
這裏 我有一個PCM格式的輸入格式
和一個
壓縮ASC格式的輸出格式
下一步 創建一個AVAudioConverter
並將它從輸入格式轉換成輸出格式
然後 創建你的音頻緩衝器
此事例中 輸入緩衝器是一個PCM緩衝器
輸出緩衝器是新的AVAudioCompressedBuffer
格式是ASC格式
接下來要做的是
定義輸入塊AVAudioConverter
在這個塊中
轉換器將在需要的是調用輸入數據
所以這裏你需要做一些事情
首先 你需要告知
轉換器輸入的狀態
假設塊被調用時
你並沒有任何適用的輸入數據
這種情況下 你可以說現在沒有數據
並將0緩衝器返回到轉化器
假設你到達流的末端
你可以告知轉換器 這是流的末端了
再一次返回一個0緩衝器
另外的 在正常情況下
你可以看到數據
進入輸入緩衝器 然後返回到轉換器
這是主要的轉換迴路
每次操作迴路時 我們都要求轉換
以生成一個數據的輸出緩衝器
我們也爲轉換器提供了剛纔所定義的輸入塊
這樣 不管它需要輸入多少次
它都可以被轉換器調用
轉換器也將返回你的狀態
這樣你就可以查看轉換的狀態了
這樣一來 倘若轉換器說這是流的末端了
或倘若說有錯誤
你就可以進行相應地處理
另外 在正常情況下
每次迭代都將爲你提供一個數據的輸出緩衝器
好的  接下來說說
今年的最後一個新類AVAudioSequencer
它支持MIDI文件的重播
在例示時
AVAudioSequencer與AVAudioEngine有關係
定序器負責將MIDI事件
發送到已附在引擎中的工具節點上
工具節點 音頻採樣器
MIDI事件等等的事例
現在來看看樣本設置
假設你有AVAudioEngine
是用連接到混音器節點
和輸出節點的工具節點創建的
現在你可以設置一個AVAudioSequencer
使它與這個引擎相關聯
然後 啓動定序器和引擎
定序器將自動發現引擎裏的第一個工具節點
然後開始往那個工具節點
發送MIDI事件
代碼看起來像這樣
因此 第一部分是引擎設置
它位於定序器外面
這裏我們有一個工具節點這是個採樣器
你在引擎中創建所需的連接
然後啓動引擎
此刻 並沒有播放音頻
因爲並沒有東西
在驅動工具節點
下一步 創建定序器
並與你剛配置的引擎相關聯
將MIDI文件加載到定序器中
然後就可以啓動定序器了
此時 定序器將後臺
發現你已附在引擎中的採樣器節點
並開始往採樣器節點發送MIDI事件
因此 你的音頻播放將啓動
假設你的MIDI文件中有多重軌道
現在定序器的默認行爲是
將所有的軌道發送到
引擎中的第一個工具節點
倘若你想將軌道放到
個別工具節點上
這隻需數行代碼就可以做到
定序器中引擎的創建和設置
和先前提到的一樣
唯一多的步驟是
從定序器上獲得軌道
爲每個軌道設立目標
到你想要的工具節點上
最後再說說定序器
定序器有自己的傳送控制集用來控制MIDI事件
和引擎上的傳送控制不同
它控制音頻流
這裏 你可以爲重播準備定序器
這個定序器基本上是預先運作的
你可以開始 停止MIDI事件
你可以根據秒或節奏
設置MIDI事件的重播位置
當然 你也可以設置
MIDI事件的重播率	
好的 所以我們瞭解到了
今年IOS和OSX發佈的AVAudioEngine的新特性
現在我想通過一個快速的演示
向你展示如何使用新特性
在此過程
我想邀請託裏上臺來幫助我演示
好的 在這個演示中 我們將AVAudioEngine
和AVAudioSequencer通過引擎相關聯
在這個引擎中 最上面有一個工具節點
被分爲三種不同路徑輸出
其中一條路徑直接連接到引擎的主混頻器節點
另外兩條連接兩種不同的特效 
然後纔是主混頻器
現在 通過使用我AVAudioMixing協議屬性
在每一條混頻器輸入總線中
進行音量控制
所以 即使是最微小的音量失真
直接音量以及混響都可進行控制
且都是通過混頻器協議來控制的
現在 在頂部 這個淺灰色的方框
可以看到定序器的傳輸控制
你可以看見在定序器上設有播放和停止鍵
與此同時還有一個滑動欄
用來設置MIDI的播放位置和速度
在主混頻器上還有一個音效開關
用來控制你混音的音量
現在 讓我們繼續 開啓定序器
這個時候 MIDI開始被傳送到
引擎中的工具節點
你可以非常靈活地
改變MIDI播放的位置及速度
以及回放鍵的節奏
通過使用音量控制
你可以將不同的效果加入到混音中
你可以增加失真音量
或是混響音量
所以 你可以通過這些音量
非常方便地打造自己的混音
最後 通過使用混頻器節點上的主音量控制
可以控制整個混頻器的音量
好的 這個演示就是
我們剛剛討論過的新功能
這個演示的演示代碼會在
今年年底前推出
現在就AVAudioEngine 總結一下
我們回顧瞭如何通過AVAudioEngine
處理多通道的音頻 然後我們看了今年推出的三個新功能
第一 拆分支持
第二 音頻格式轉換支持
最主要是AVAudioConverter
最後是一個新的AVAudioSequencer
用來支持MIDI文件播放
我希望在你們的應用中
使用這些新功能並給予我們反饋 謝謝
現場交給託裏 謝謝 託裏
謝謝 阿卡夏莎
大家下午好
我是託裏 讓我們繼續看
IOS系統的跨設備音頻模式
毫無疑問iPad是
這個星球上最多功能的音樂工具
這主要要感謝各位
數字音頻工作站應用 混音器軟件
擊鼓軟件 聲音玩具
用同一個設備你可以
將無數的音頻內容混到一起
那麼如何把IOS設備中的音頻內容
放進MAC上的項目呢
你可以將插入耳機
然後通過音頻越獄盒子連接到MAC上
不過是先轉換到模擬信號
然後再轉爲數字信號
我想這並非最完美的方案
所以 爲了從iOS設備上錄製數字音頻
我們加入閃速USB適配器
我們加入USB音頻類兼容接口
使得它能夠處理數字音頻輸出
一個數字音頻線
還有一個處理數字音頻輸入的接口
我們將這些都加入到MAC
非常有效不過有很多的硬件
還有些第三方軟件也試圖解決這個問題
如果你的應用或你最喜歡的應用
使用這些讓軟件 也很好
但是 如果你不想使用額外的硬件
或是安裝額外的軟件
僅通過補丁就能錄製音頻
這樣不是很棒嘛
那麼 請擊鼓歡慶吧
噢 很低調嘛
介紹下跨設備音頻模式
或者我們直接稱之爲IDAM
IDAM允許你通過USB快速連接到設備
並錄製數字音頻
通過USB 2.0兼容接口
支持雙通道24位 
48千赫抽樣率硬件
全盤錄製音頻流格式
MAC系統上又如何呢
如果你使用MAC USB音頻驅動
也可以獲得同樣效果
以及同樣的USB音頻設備兼容性
不僅如此 iOS系統上
使用的是USBISOCHRONOUS音頻
意味着更省網絡了
如果想在MAC上備份120G的數據
你可以邊玩音樂邊錄製
而且大可放心
音頻上不會有任何瑕疵
而且 我們無需降低
也不需要額外的硬件
也不需要其他的軟件
你不需要更改你的OSX應用
就能享有這功能帶來的便捷
如果你的iOS應用已經採用
雙通道24位48千赫音頻流格式
你無需更改iOS應用
並且 在你製作過程中
突然跳出一個日程警告
警告也通過USB接口傳輸
而是從揚聲器傳出
好了 所以跨設備音頻模式
你的設備可以在此模式下充電和同步
照片輸入數據連線QuickTime屏幕抓拍將暫時無法使用
如果想要使用這些功能
只需按下按鈕 或拔掉設備插頭
託裏 你也許會問 我該怎麼用呢
我們直接支持音頻MIDI設置
在下面的窗口菜單 你會發現新的選項
展示iOS設備瀏覽器 如果你點擊它
你會進入到這個高級的界面
它可以展示你所有連接的iOS設備
你想進入或退出IDAM模式
你可以按這個鍵
你可將這個界面嵌入你的OSX應用了
如果你選擇這樣做的話 我將向你展示執行代碼
但在那之前
你已經猜到了 演示時間到
我拿了一個iPad 好的
在這個IPad上 我運行一個合成器應用
叫做Nave
我喜歡這個應用是因爲有一些補丁
能使你獲得更好的
觸摸界面
讓你在點擊後
系統自動進行操作
很多市面上的MIDI控制器做不到這點
這正式iPad能成爲優秀的音樂處理器的原因
所以我在這選了一個補丁 聽起來就是這樣 
我喜歡那些聲音 所以我想錄制到
MAC的嘻哈音樂項目裏去
所以 讓我們轉移到Mac 
在Mac上MIDI音頻軟件在運行了
找到窗口菜單 打開了iOS瀏覽器 
然後看到我目前沒有連接IOS設備
然後 我插上我的iPad 
它立刻就出現了
瞬間又不見了 然而只要單擊Enable 
現在多一個音頻設備了
是的 馬上就搞定了
你可以看到這裏有一個雙通道輸入音頻設備
已經添加到這裏
所以我想用到我的Logic項目上 
所以我會繼續前進 然後說 用吧
讓我們回到Logic這裏
好吧 這就是我處理好的節奏
我想錄制到音軌 所以我要
製作一個新的音軌
啓動錄音監控程序和錄音鍵
把音量調小一點
現在我能聽到這聲音直接錄製到音軌裏
讓我們錄上一首吧
如果重新播放
那麼就會按我所希望的進行音頻捕捉
戰鬥吧 老兄
現在 簡單總結一下我的演示
請在家裏試試
現在Beta版已經有了
如果你發現有錯誤 直接登陸
bugreport.apple.com 然後提交你的錯誤給我們
好了 最後講講IDAM吧
要求是OS X El Capitan系統和iOS9系統
閃存接口就能在iPhone上用了
也可以在iPads上使用
通過閃存接口 但是早期的iPad mini無法用
如果你有家用iPhone 工作用iPhone 家用iPad 
工作用iPad和小孩用的iPad並且有充電器
你可以同時插入使用
然後集合成10通道的輸入設備
只要你想 就可以開始錄製
如果還有USB端口 
那麼請打開Safari瀏覽器進入蘋果商城網址
好了 我之前說過我會告訴你
如何在OS X應用裏嵌入視圖控制器 
如果你要這樣做 
我會現在給你展示代碼
這個代碼是樣本的 
我想強調這個部分 
如果你看到黃色文本部分 
你可以看到CA跨設備音頻視圖控制器
創建一個 然後把這個子視圖添加
到你的視圖容器裏面
我想談CoreAudioKit中 
新的視圖控制器
可能有你感興趣的
我們也添加了CABTLEMIDI窗口控制器
這是用於配置藍牙低功率MIDI設備的UI
去年這可是個亮點
是NS窗口控制器的子類 
它的視圖像這樣 所以如果你也想的話
你可以直接把它嵌入OS X應用裏 
另外
我們還有CA網絡瀏覽器窗口控制器
這是配置音頻視頻橋
音頻設備的UI
還有一個NS窗口控制器子類
它的視圖看起來像這樣
好的 讓我們啓動轉換裝置
然後繼續討論  AVAudio有什麼新玩意兒
你們中會有多少人聽播客和有聲讀物 
很好 有許多人
你們中又有多少人用你的iPhone 
作爲私人導航設備
同樣也是許多人
好的 你之前可能已經見過這個問題
讓我們假設你將去一個你從未去過的
靈魂料理餐廳
你正在導航
然後你正在聽一則播客
這則播客由播客名人X主持
他們正在採訪你最喜歡的時下
名人Y在採訪的中途
對話真的是妙趣橫生
這個時候你的導航跳出
告訴你500尺後靠右
在那之後你聽見刺耳的笑聲
播客講了很棒的笑話而你正好錯過了
因此你返回到音頻界面 開始再播放
正當要播到笑話時“靠右行駛” 
握起拳頭說 我的用戶體驗很糟糕
好的 對此 我們應當有一個解決方法
我對此深感不自由
我們在iOS 9中提供一個解決方法
現在播客和有聲讀物應用程序可以用一種新的
AVAudioSession模式叫模式口語音頻
用於導航應用和類似的應用
中斷其中一個
就會發出發聲提示
新的AVAudioSession種類選項
叫做混合模式中斷口音頻
現在 地圖已經使用 
混合模式中斷口音頻以及
而播客和電子讀物
已使用AVAudioSession模式口語音頻
你如何在你的應用中使用呢
好的 讓我們來看一些代碼
我將逐行查看這些代碼
以便你能瞭解我們正在做什麼
首先我們將從設置你的音頻會話開始
你會得到音頻會話的共享實例
設置你的類別爲錄音在選項中
你選擇一項則其他失效
現在我們將用Swift 2的新特性
這個是新的特性
允許你將早些時候iOS的代碼
部署到現在使用的iOS系統中
因此只有在iOS 9或者之後的系統裏
你纔可以看到這個多出的選項
混合模式中斷口語音頻
然後設置音頻會話種類
好的 讓我們來實際看一下導航提示
現在播放導航提示
就像這樣
首先獲取音頻會話的共享實例
接着使用功能原型中的URL
創建一個AV音頻播放器
你設置播放器指派給自己
這樣做是 當你的音頻提示播放完成
它將自動爲你
調用指派方法
將音頻會話設置爲激活
然後運行播放器
現在我們繼續
現在 音頻已經播放完
因此 指派方法將被調用
音頻播放器完成播放
代碼是這樣的
獲取音頻會話共享實例
設置音頻會話爲閒置
使用選項選擇通知其他反激活
這意味着任何其它正在播放的其它音頻
在中斷當前音頻之前
會實現進行通知
現在讓我們來看看另一方面
讓我們到播客或者音頻應用
這裏是音頻會話設置
獲取音頻會話的共享實例
設置你的種類爲錄音
當前設置模式爲默認
如果是iOS 9或者之後的版本你可以用這種新的模式
AVAudioSession模式口語音頻
然後設置種類和模式
接下來要做的是
添加中斷處理器
我們將添加一個中斷處理器名爲處理中斷
在響應AVAudioSession中斷通知
後被調用
現在也可以設置好其他的通知
例如 如果媒體服務器停止運行
而你想要被通知你就可以重設你的音頻狀態
好的 讓我們來看看中斷處理器
要做的第一件事情
從功能原型中的NS 通知對象中
獲取用戶信息字典
從中我們可以看到
關鍵AVAudioSession的中斷類型密匙
現在我們將選擇那種類型
第一部分是當你的音頻會話
開始被中斷時將會發生什麼
然後第二部分將在下一張幻燈片上這是結束
如果這是開始中斷
你想做的第一件事是更新UI 
從而用以提示錄音已經被停止
然後如果你的內部狀態強制規定播放
然後你可設置爲播放
它稍後將告訴你這個中斷什麼時候完成
你可以重放音頻
如果合適 更新你的內部狀態
因此 現在這是結束中斷
因此 如果這是結束中斷
你將從AVAudioSession
中斷選項密匙
用戶信息字典中獲取標誌旗
假如這標誌旗是重新開始的選項
稍微回放一下音頻
因爲你的音頻在結束之前已經被暫停
然後你可以在此啓動播放器
更新你的內部狀態然後更新UI 
從而顯示已經重新開始播放
這就是我爲你準備的所有代碼
快速回顧
今天我已經告訴過你
關於AVAudioEngine裏一些令人興奮的新增強特性
我們介紹了跨設備音頻模式
關於新的CoreAudioKit視圖控制器
你可以將跨設備音頻模式
藍牙 低功率MIDI以及視音頻橋
嵌入你的OS X應用
也介紹AVAudioSession模式口語音頻
以及新的AVAudioSession選項
混合模式終端口語音頻
但這不是全部
明天早上11點我們會有另外一個環節
是關於音頻單元擴展的的新變化
所以我們希望明天再見到你們所有人
同樣還有與今天早些時候討論的相關環節
如果你想再次回顧
尤其是遊戲音頻方面
如果我們不能在實驗室裏回答你們的所有問題
這裏有非常實用的網站
也可以直接諮詢克雷格·吉士利
他的聯繫方式就在下方 結束了