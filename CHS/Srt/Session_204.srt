00:00:19.520 --> 00:00:24.358 
Watch用户友好

00:00:32.598 --> 00:00:34.868 
大家好我是加西德·萨迪克

00:00:34.935 --> 00:00:36.570 
在苹果
用户友好团队工作

00:00:37.104 --> 00:00:39.506 
欢迎参加
《Watch用户友好》讲座

00:00:41.108 --> 00:00:41.942 
开始正题之前

00:00:42.676 --> 00:00:45.479 
我们先聊聊
用户友好是什么

00:00:47.648 --> 00:00:51.351 
要知道
有许多不同用户

00:00:51.952 --> 00:00:53.086 
可以想见

00:00:53.720 --> 00:00:56.657 
这些用户有着
与世界互动的不同方式

00:00:57.858 --> 00:00:59.126 
不过针对本次讲座

00:00:59.193 --> 00:01:01.461 
我们主要关注
这些用户的部分子集

00:01:02.396 --> 00:01:06.200 
例如存在视觉受损
或听力障碍的用户

00:01:09.570 --> 00:01:10.671 
作为开发人员

00:01:11.205 --> 00:01:13.607 
这些用户为我们
带来特别的机遇

00:01:14.408 --> 00:01:15.676 
这对我们而言
非常特殊

00:01:16.877 --> 00:01:20.414 
这个机遇不仅伴随着
这些个别的小组

00:01:20.881 --> 00:01:24.117 
而且还促使他们
完成了

00:01:24.751 --> 00:01:27.321 
原本不可能
完成的任务

00:01:28.922 --> 00:01:32.259 
现在 你们在这里
是因为大家创造出

00:01:32.659 --> 00:01:35.462 
可以实现神奇功能的应用

00:01:36.363 --> 00:01:38.565 
那么 我们来让所有人
都来实现这些神奇的功能

00:01:38.765 --> 00:01:39.933 
无论他们是谁

00:01:40.534 --> 00:01:42.169 
也不论他们是怎样
与世界发生互动

00:01:44.271 --> 00:01:46.807 
现在Apple正致力于这一理念

00:01:47.508 --> 00:01:51.645 
例如通过 iOS和OS X的
用户友好功能

00:01:52.479 --> 00:01:55.115 
如VoiceOver
Switch Control

00:01:55.182 --> 00:01:57.251 
Assistive Touch
Zoom

00:01:57.718 --> 00:02:00.387 
Guided Access
等等 不胜枚举

00:02:01.121 --> 00:02:02.623 
Apple Watch也是如此

00:02:03.390 --> 00:02:05.626 
我们尽最大努力
让设备对尽可能

00:02:05.692 --> 00:02:07.327 
多的用户都能用户友好

00:02:08.328 --> 00:02:09.196 
现在我们开始正题

00:02:09.930 --> 00:02:13.367 
首先 我们来谈谈
Apple Watch的

00:02:13.433 --> 00:02:15.636 
用户友好 具体是怎样
以及如何发挥作用

00:02:16.970 --> 00:02:18.805 
接下来 我会告诉大家
作为开发人员

00:02:18.872 --> 00:02:21.375 
怎样让自己的WatchKit
app也具有用户友好性

00:02:21.441 --> 00:02:23.877 
大家也将会看到这些
API是怎样运行

00:02:25.479 --> 00:02:27.347 
最后我们会总结
几个诀窍和

00:02:27.414 --> 00:02:28.348 
技巧 以供大家

00:02:28.415 --> 00:02:30.584 
在设计自己的
用户友好体验时进行参考

00:02:32.653 --> 00:02:34.721 
我们来谈谈
用户友好功能

00:02:34.788 --> 00:02:37.391 
先从VoiceOver开始

00:02:39.593 --> 00:02:42.796 
首先 VoiceOver是针对
盲人用户的替代界面

00:02:43.463 --> 00:02:44.731 
其背后的理念很简单

00:02:45.632 --> 00:02:48.535 
VoiceOver就是将用户手指触
碰的任何内容都读出来

00:02:49.303 --> 00:02:52.272 
例如 如果我的手指
放在Clock图标上

00:02:52.873 --> 00:02:55.108 
VoiceOver就会读出
“钟表”二字

00:02:56.176 --> 00:02:58.579 
此外 我们还提供了
一系列手势

00:02:58.645 --> 00:03:00.147 
便于VoiceOver用户

00:03:00.214 --> 00:03:01.915 
安全有效地在
在界面导航

00:03:01.982 --> 00:03:03.717 
稍后我会
具体演示

00:03:05.886 --> 00:03:08.155 
对于低视力用户
我们有Zoom功能

00:03:08.555 --> 00:03:10.390 
正如大家所想
Zoom可以将

00:03:10.457 --> 00:03:11.692 
界面放大

00:03:12.659 --> 00:03:15.395 
此外 我们还有
两手指手势

00:03:15.462 --> 00:03:17.798 
这是受到iOS放大手势的启发
并运用了Crown

00:03:18.332 --> 00:03:20.467 
真正实现无缝对接
便于轻松

00:03:20.534 --> 00:03:21.768 
在放大界面导航

00:03:21.835 --> 00:03:23.537 
稍后我会
进行演示

00:03:27.074 --> 00:03:30.677 
与Zoom类似
还有X-Large表盘

00:03:31.111 --> 00:03:34.848 
这可以大声简单流畅
读出时间

00:03:35.449 --> 00:03:37.217 
因此用户可以轻松
抬起手腕

00:03:37.284 --> 00:03:38.986 
确定此刻的时间

00:03:41.255 --> 00:03:45.192 
现在Apple Watch
有着简约的屏幕

00:03:45.292 --> 00:03:48.262 
虽然字体在很大程度上
会影响到可读性

00:03:48.729 --> 00:03:50.731 
部分用户可能会需要
加大字体

00:03:51.064 --> 00:03:54.268 
针对这些用户
我们有字体大小滑块和设置

00:03:57.271 --> 00:03:59.806 
对于对具体光感
或颜色敏感的用户

00:03:59.873 --> 00:04:02.609 
还有Grayscale开关
可以过滤整个Watch的UI

00:04:02.676 --> 00:04:04.745 
使之成为
完全黑白色调

00:04:05.379 --> 00:04:08.182 
对于这些特殊用户而言
这就会更便于阅读

00:04:08.248 --> 00:04:09.449 
不会受到界面干扰

00:04:11.885 --> 00:04:14.855 
部分用户会感觉
界面模糊

00:04:14.922 --> 00:04:15.889 
不便于阅读

00:04:15.956 --> 00:04:18.358 
可能是因为
对比度不够

00:04:18.425 --> 00:04:20.494 
或是存在模糊
或失真干扰

00:04:20.726 --> 00:04:23.830 
针对这些用户我们有Reduce
Transparency开关

00:04:25.065 --> 00:04:27.067 
可以降低
Notification Center

00:04:27.134 --> 00:04:28.902 
和Siri等屏幕的透明度

00:04:29.436 --> 00:04:32.539 
便于用户
读取屏幕内容

00:04:36.109 --> 00:04:38.178 
接着还有Reduce Motion
功能

00:04:38.612 --> 00:04:40.614 
这可以降低
屏幕周围的运动效果

00:04:40.681 --> 00:04:42.416 
运动本身
是绝对必要的

00:04:42.482 --> 00:04:45.485 
这与用户的动作
直接关联

00:04:46.286 --> 00:04:49.656 
举例来说
从表盘到

00:04:49.790 --> 00:04:52.392 
Home屏幕的过渡
并非是要放大图标

00:04:52.459 --> 00:04:53.727 
我们是让它直接显示

00:04:56.296 --> 00:04:59.800 
这对部分用户而言
是创建了更具方向性的体验

00:05:02.836 --> 00:05:03.670 
最后

00:05:06.740 --> 00:05:10.944 
存在听力问题的用户
可以调节左右平衡

00:05:11.011 --> 00:05:15.215 
并通过蓝牙配套耳机设置Apple
Watch的单声道音频

00:05:16.450 --> 00:05:18.151 
我们来看这些怎样发挥作用

00:05:40.040 --> 00:05:43.844 
好了我们先从
VoiceOver开始

00:05:44.144 --> 00:05:46.246 
可以用三种方式打开
VoiceOver

00:05:46.413 --> 00:05:48.949 
可以在iPhone上使用
Apple Watch app

00:05:49.016 --> 00:05:51.418 
在Apple Watch上使用
Setting app

00:05:51.485 --> 00:05:53.587 
如果在Apple Watch
app做了设置

00:05:53.654 --> 00:05:55.789 
还可以用
Accessibility快捷方式

00:05:55.856 --> 00:05:57.591 
只需三次点击Crown
就可以启动VoiceOver...

00:05:58.559 --> 00:06:00.561 
VoiceOver启动 天气

00:06:01.628 --> 00:06:04.765 
为了演示
VoiceOver如何工作

00:06:04.831 --> 00:06:06.600 
我们先用VoiceOver
做点什么

00:06:06.667 --> 00:06:08.035 
来看纽约
现在几点

00:06:08.101 --> 00:06:10.904 
在此之前 我们先了解
一下屏幕是什么样子

00:06:10.971 --> 00:06:13.340 
要想这么做
最好是把

00:06:13.407 --> 00:06:16.310 
手指放在屏幕上
让VoiceOver读出

00:06:16.376 --> 00:06:17.511 
手指所指的
内容

00:06:17.578 --> 00:06:19.479 
那我继续
这么做

00:06:22.749 --> 00:06:23.584 
日历

00:06:24.117 --> 00:06:27.154 
音乐 地图
闹钟

00:06:29.456 --> 00:06:30.958 
那么现在
我实际上了解

00:06:31.024 --> 00:06:32.159 
自己在屏幕的什么位置

00:06:32.326 --> 00:06:35.529 
我想通过这些元素来到 World
Clock app

00:06:35.596 --> 00:06:37.030 
图标 以便
打开这个应用

00:06:37.097 --> 00:06:40.667 
现在 VoiceOver用户通过
这些元素的方式

00:06:40.734 --> 00:06:43.804 
是右滑到下一个元素
或左滑到

00:06:43.871 --> 00:06:44.938 
上一个元素

00:06:45.005 --> 00:06:46.974 
那我继续
右滑

00:06:47.074 --> 00:06:49.543 
直到VoiceOver说出
World Clock

00:06:49.610 --> 00:06:52.479 
表示它聚焦在World Clock
app图标上

00:06:53.447 --> 00:06:55.115 
世界时钟

00:06:55.682 --> 00:06:56.783 
世界时钟

00:06:56.850 --> 00:06:58.452 
停下来-世界时钟

00:07:00.053 --> 00:07:02.055 
现在VoiceOver讲到
"World Clock"

00:07:02.122 --> 00:07:04.091 
这是指我聚焦在
World Clock

00:07:04.391 --> 00:07:07.261 
现在实际上打开app
我需要激活元素

00:07:07.327 --> 00:07:08.295 
要激活元素

00:07:08.362 --> 00:07:10.330 
双击屏幕上的
任何位置即可

00:07:12.766 --> 00:07:17.337 
稍等 需要加载一会儿

00:07:18.305 --> 00:07:19.406 
World Clock

00:07:21.642 --> 00:07:23.710 
World Clock

00:07:23.777 --> 00:07:25.345 
返回库柏蒂诺

00:07:25.479 --> 00:07:27.848 
今天下午1:37

00:07:28.582 --> 00:07:31.752 
现在我想确定
纽约此刻的时间

00:07:31.919 --> 00:07:33.420 
因为这是我的Watch

00:07:33.754 --> 00:07:35.656 
我知道纽约是在
名单的最下方

00:07:35.722 --> 00:07:37.291 
所以只要滚到
底部即可

00:07:37.958 --> 00:07:41.328 
VoiceOver用户可以把
两个手指放在屏幕上

00:07:41.395 --> 00:07:43.397 
再朝着那个
方向滚动

00:07:43.463 --> 00:07:44.731 
或者轻击滚动轮
的那个方向

00:07:44.798 --> 00:07:47.301 
那么我要继续这么做
直到到达底部

00:07:48.335 --> 00:07:50.170 
第4到7行

00:07:50.437 --> 00:07:52.339 
第6行到第7行

00:07:54.308 --> 00:07:57.611 
纽约今天下午4:38

00:07:57.978 --> 00:07:58.879 
加上3小时

00:08:00.180 --> 00:08:02.049 
我知道纽约
现在几点了

00:08:02.249 --> 00:08:03.550 
这就是VoiceOver

00:08:04.451 --> 00:08:05.819 
我们继续来看Zoom

00:08:05.886 --> 00:08:08.088 
首先
要把VoiceOver关掉

00:08:08.155 --> 00:08:10.324 
可以使用Accessibility
快捷方式来关掉

00:08:10.390 --> 00:08:11.592 
点击Crown三次即可

00:08:12.860 --> 00:08:14.161 
VoiceOver关掉了

00:08:14.528 --> 00:08:17.030 
所有的Accessibility
设置都在Setting里

00:08:17.097 --> 00:08:18.098 
Accessibility

00:08:19.533 --> 00:08:20.367 
Zoom

00:08:23.303 --> 00:08:24.605 
现在我想
读出文字内容

00:08:24.671 --> 00:08:25.639 
实际上 文字太小

00:08:25.706 --> 00:08:27.407 
这里看似可以
放大一些

00:08:28.141 --> 00:08:29.576 
那就用Zoom来放大

00:08:29.643 --> 00:08:31.879 
只需用两个手指
双击屏幕即可

00:08:36.850 --> 00:08:38.284 
现在就可以放大了
实际上需要

00:08:38.352 --> 00:08:39.653 
稍稍调整放大尺度

00:08:40.187 --> 00:08:41.221 
要想调整放大尺度

00:08:41.522 --> 00:08:43.789 
只需用两个手指
双击并滚动即可

00:08:49.963 --> 00:08:52.065 
非常棒

00:08:53.967 --> 00:08:56.904 
现在还得调整焦距
这样就可以读出文字内容了

00:08:57.371 --> 00:09:00.440 
现在可以用两个手指
做拖拽手势 和iOS

00:09:00.507 --> 00:09:02.609 
Zoom拖拽手势非常相似
在这里比划

00:09:03.410 --> 00:09:05.179 
不过还有个问题

00:09:05.612 --> 00:09:06.446 
这样有点慢

00:09:06.513 --> 00:09:08.749 
而且手指会
挡住我要读的内容

00:09:09.383 --> 00:09:10.350 
针对这个问题

00:09:10.417 --> 00:09:14.021 
我们实际上运用了Crown
来调整焦距

00:09:14.655 --> 00:09:16.356 
如果将Crown向前旋转

00:09:16.557 --> 00:09:18.525 
就可以从左到右

00:09:19.793 --> 00:09:20.627 
就像这样

00:09:21.995 --> 00:09:23.096 
一旦触及线条底部

00:09:23.564 --> 00:09:25.399 
就可以移到下一条线

00:09:27.167 --> 00:09:29.903 
同理 如果我反向旋转
就会是相反的效果

00:09:35.209 --> 00:09:36.043 
好了

00:09:36.476 --> 00:09:37.311 
这就是Zoom

00:09:49.923 --> 00:09:53.026 
正如大家所见
Apple Watch是个

00:09:53.093 --> 00:09:54.494 
相当用户友好的设备

00:09:54.995 --> 00:09:56.630 
但是在实现完全
用户友好之前

00:09:57.130 --> 00:09:58.866 
还需要具备
用户友好应用

00:09:58.932 --> 00:10:00.601 
大家就是为此而来的

00:10:01.635 --> 00:10:03.670 
大家也是为通过把
自己的应用变得用户友好

00:10:03.737 --> 00:10:06.807 
成为用户友好的顶尖高手
也是要成为

00:10:06.874 --> 00:10:08.609 
VoiceOver用户中的
顶尖高手

00:10:08.675 --> 00:10:11.545 
可以通过WatchKitAcces
sibility API

00:10:11.612 --> 00:10:13.580 
把自己的应用
变得用户友好

00:10:15.182 --> 00:10:17.584 
大部分情况下
这实际上

00:10:17.651 --> 00:10:18.752 
都相当简单

00:10:18.819 --> 00:10:20.787 
这会涉及到
在几个界面项中

00:10:20.854 --> 00:10:22.122 
设置两个属性

00:10:23.390 --> 00:10:27.728 
每个界面项都是WKInterfac
e Object的分类

00:10:28.195 --> 00:10:31.532 
就是在这里需要对
用户友好信息进行注释

00:10:31.598 --> 00:10:33.800 
这样 界面项就会
具备用户友好性

00:10:34.801 --> 00:10:36.937 
只需这两个核心功能
来将应用

00:10:37.004 --> 00:10:39.206 
变得用户友好
我们继续介绍

00:10:39.273 --> 00:10:41.275 
这些内容
先从Existence讲起

00:10:42.476 --> 00:10:45.412 
在开始之前
VoiceOver需要了解

00:10:45.679 --> 00:10:47.281 
什么才是 什么不是这样的元素

00:10:48.782 --> 00:10:51.018 
用户友好元素是
在演示中

00:10:51.084 --> 00:10:52.719 
我滑过的和触碰过的那些内容

00:10:53.287 --> 00:10:55.722 
在默认情况下 我们的框架
可以提供许多这样的内容

00:10:56.123 --> 00:10:57.791 
比如 按钮 标签

00:10:57.858 --> 00:10:59.560 
开关 这些都是用户友好
元素

00:10:59.626 --> 00:11:01.828 
但有时 你可能会用到
默认设置之外的情况

00:11:02.563 --> 00:11:06.433 
例如 如果希望
看到不是用户友好元素的图像

00:11:06.500 --> 00:11:09.770 
但是它可以向用户提供
有价值的信息

00:11:10.871 --> 00:11:13.707 
或者如果想
将若干可用性元素集合起来

00:11:13.774 --> 00:11:16.443 
便于VoiceOver
用户在屏幕中导航

00:11:16.743 --> 00:11:19.279 
就像我们在Conversation
组做的那样

00:11:19.513 --> 00:11:21.148 
我们把三个图标
集成一组

00:11:21.281 --> 00:11:24.518 
这样VoiceOver用户就不必
滑过三次

00:11:24.585 --> 00:11:26.587 
来进入一个Conversation

00:11:26.653 --> 00:11:28.956 
可以通过
在界面项把

00:11:29.022 --> 00:11:33.694 
Accessibility
Element放入功能设置

00:11:37.297 --> 00:11:40.767 
VoiceOver用户看
屏幕显示的方式

00:11:40.834 --> 00:11:43.237 
是通过对这个元素
的简短描述实现

00:11:45.172 --> 00:11:48.208 
这个简短描述
就是用户友好标签

00:11:49.710 --> 00:11:52.145 
正如Accessibility
Element

00:11:52.212 --> 00:11:53.680 
这里很多内容
是取决于你

00:11:55.582 --> 00:11:59.720 
用户友好是指
通过查看

00:11:59.820 --> 00:12:03.557 
界面项所包括的文本内容
的标签 但是有时

00:12:03.790 --> 00:12:07.160 
所指得标签
可能存在误导或不存在

00:12:07.227 --> 00:12:09.429 
Home屏幕就是
这样的例子

00:12:09.663 --> 00:12:11.365 
这些app图标
没有和

00:12:11.431 --> 00:12:12.666 
任何文本内容关联

00:12:12.833 --> 00:12:14.168 
在这些特殊情况下

00:12:14.768 --> 00:12:16.937 
需要自行设置
Aaccessibility标签

00:12:17.004 --> 00:12:19.506 
可以通过
将字符串

00:12:19.573 --> 00:12:21.475 
加入功能中

00:12:21.542 --> 00:12:24.278 
在界面项的Accessibilit
y Label

00:12:25.512 --> 00:12:28.849 
现在这些app可以
实现这些应用

00:12:28.916 --> 00:12:30.484 
或者是功能的
90%的用户友好

00:12:30.551 --> 00:12:31.552 
不好意思

00:12:32.953 --> 00:12:35.822 
但是要真正实现
用户友好体验

00:12:37.558 --> 00:12:39.326 
还应该尝试
这三个功能

00:12:39.626 --> 00:12:40.460 
我们来具体谈谈

00:12:41.929 --> 00:12:44.498 
现在你可能还记得
VoiceOver说过一些

00:12:44.565 --> 00:12:47.467 
诸如“按钮”或
“可调整”或“未开启”

00:12:48.268 --> 00:12:50.637 
这里真实发生的
情况是

00:12:51.438 --> 00:12:53.974 
每个用户友好
元素都与

00:12:54.041 --> 00:12:55.375 
一系列特性相连接

00:12:56.210 --> 00:12:57.811 
这些特性
让VoiceOver知道

00:12:57.878 --> 00:12:59.446 
如何将元素
呈现给用户

00:13:00.848 --> 00:13:04.484 
在Conversation组
具体怎么用

00:13:05.252 --> 00:13:08.722 
举个例子来说明
我们把按钮特性加入其中

00:13:08.789 --> 00:13:10.891 
让VoiceOver了解
可以双击

00:13:10.958 --> 00:13:12.626 
并激活这个元素

00:13:12.726 --> 00:13:14.461 
这样就可以
在界面项的

00:13:14.528 --> 00:13:17.764 
SetAccessibility
Traits功能中加入遮罩效果

00:13:20.601 --> 00:13:24.671 
现在有时 标签和特性
不足以向用户表示

00:13:24.738 --> 00:13:27.107 
这个元素
是做什么用的

00:13:27.174 --> 00:13:29.743 
在这些具体情况下
使用用户友好

00:13:29.810 --> 00:13:32.980 
提示可能会起作用
在标签被读出后

00:13:33.046 --> 00:13:34.481 
字符串也会被读出

00:13:34.948 --> 00:13:36.717 
这样用户就会了解
当聚焦于一个元素时

00:13:36.783 --> 00:13:37.918 
他们可以
做些什么

00:13:37.985 --> 00:13:41.255 
可以通过在SetAccessibi
lity Traits功能设置中

00:13:41.321 --> 00:13:43.023 
加入字符串
设置用户

00:13:43.223 --> 00:13:44.291 
友好提示

00:13:46.660 --> 00:13:49.196 
现在部分元素与
一个值相关联

00:13:49.263 --> 00:13:52.032 
在该元素的生命周期中
这个值常会发生改变

00:13:52.766 --> 00:13:56.136 
以Timer app中的
Minute Picker为例

00:13:56.203 --> 00:13:58.172 
其中的数值代表着

00:13:58.238 --> 00:13:59.940 
当前所选的
分钟数

00:14:00.707 --> 00:14:02.609 
在这一特殊情况下

00:14:02.676 --> 00:14:05.245 
我们有一个Accessibilit
y Value

00:14:05.679 --> 00:14:07.781 
在标签被读出后
或数值改变后

00:14:07.848 --> 00:14:09.349 
可以读出的数值

00:14:09.950 --> 00:14:12.419 
可以通过将字符串
加入界面项的...

00:14:12.486 --> 00:14:13.787 
Set Accessibility
Value

00:14:13.854 --> 00:14:14.888 
来设置这个值

00:14:16.690 --> 00:14:18.825 
因此这些是核心的
用户友好功能

00:14:19.293 --> 00:14:21.061 
我们再来谈谈
一些更复杂的内容

00:14:21.562 --> 00:14:22.496 
图像区

00:14:23.297 --> 00:14:26.633 
现在 这是Watch中的
常用模式 将一系列

00:14:26.700 --> 00:14:29.136 
信息 放入图像中
再呈现给

00:14:29.203 --> 00:14:30.771 
用户

00:14:30.871 --> 00:14:34.875 
以Weather app中的
刻度天气为例

00:14:39.379 --> 00:14:41.782 
我们可以为其中加入
用户友好注释标签

00:14:41.849 --> 00:14:44.618 
可是要想用简洁的几个字说明
图像中发生了什么

00:14:44.685 --> 00:14:45.953 
很有难度

00:14:46.520 --> 00:14:49.523 
如大家所见
有11个条件

00:14:49.590 --> 00:14:51.625 
每个都与一个时间关联
还有当前的温度

00:14:51.725 --> 00:14:54.161 
我们所真正需要的是
找到相关的区

00:14:54.228 --> 00:14:56.330 
把它们

00:14:57.264 --> 00:14:58.732 
分到不同的
区之中

00:14:59.032 --> 00:15:00.601 
再关联上
相关信息

00:15:01.602 --> 00:15:05.305 
例如 关联了一个
Condition图标

00:15:05.372 --> 00:15:07.007 
是凌晨1点 多云

00:15:08.775 --> 00:15:12.713 
可以通过WK用户友好图像区的对象
实现这个功能

00:15:13.046 --> 00:15:15.282 
这个区是CGRect框架

00:15:16.250 --> 00:15:18.619 
信息为字符串标签

00:15:19.620 --> 00:15:22.089 
可以运用这些对象数组
将之加入界面项的

00:15:22.155 --> 00:15:25.125 
Set Accessibility
Image Regions功能

00:15:25.192 --> 00:15:28.462 
向用户呈现
一系列用户友好元素

00:15:28.529 --> 00:15:30.330 
他们可以滑动或触碰
这些元素

00:15:33.433 --> 00:15:34.268 
最后

00:15:35.802 --> 00:15:37.104 
在你设计

00:15:37.704 --> 00:15:39.907 
自己的用户友好应用
用户体验时

00:15:40.307 --> 00:15:41.441 
可能会碰到的情况

00:15:41.508 --> 00:15:44.678 
是有时需要为VoiceOver
用户稍稍调整UI

00:15:45.279 --> 00:15:47.214 
为此 你的应用
需要了解

00:15:47.481 --> 00:15:49.049 
VoiceOver是否在运行

00:15:50.417 --> 00:15:52.686 
为此 我们添加了新的API

00:15:53.921 --> 00:15:56.723 
WK Accessibility
中VoiceOver在运行

00:16:00.160 --> 00:16:01.395 
我们来看这些怎样发挥作用

00:16:03.764 --> 00:16:07.334 
那么 我创建一个应用
可以在手腕上预订三明治

00:16:07.401 --> 00:16:08.769 
而且这相当简单

00:16:09.536 --> 00:16:11.471 
首先需要
选择用什么材料

00:16:11.872 --> 00:16:14.041 
夹放 三明治

00:16:14.408 --> 00:16:16.577 
我选的是面包

00:16:17.110 --> 00:16:18.812 
再加些烤牛肉

00:16:19.713 --> 00:16:21.515 
也许还要点
生菜

00:16:21.582 --> 00:16:24.751 
最后再放上面包

00:16:24.818 --> 00:16:30.290 
我返回的时候
会看见三明治的视觉呈现

00:16:30.791 --> 00:16:34.561 
接着继续
可以下单

00:16:35.729 --> 00:16:38.232 
我们希望看看
这个应用是否对

00:16:38.298 --> 00:16:41.435 
所有用户都友好
特别是VoiceOver用户

00:16:41.869 --> 00:16:43.871 
有一个很好的方式
可以实现这一点

00:16:43.937 --> 00:16:46.240 
就是打开
VoiceOver

00:16:46.306 --> 00:16:47.541 
尝试应用的效果

00:16:47.608 --> 00:16:51.144 
我们先用Accessibility
快捷方式打开VoiceOver

00:16:51.745 --> 00:16:54.381 
VoiceOver启动制作三明治

00:16:54.648 --> 00:16:55.482 
按钮

00:16:55.682 --> 00:16:56.517 
好了

00:16:56.783 --> 00:16:58.318 
那么我们立刻会有个问题

00:16:58.819 --> 00:17:02.089 
我们可以看到
三明治的图像显示

00:17:02.256 --> 00:17:04.156 
这可以为我们提供
三明治

00:17:04.223 --> 00:17:06.393 
具体成分的
有用信息

00:17:06.760 --> 00:17:08.127 
但是完全不具有用户友好性

00:17:08.194 --> 00:17:10.797 
因此我们应该为
VoiceOver用户实现这一功能

00:17:11.431 --> 00:17:12.799 
制作三明治

00:17:12.965 --> 00:17:15.269 
下单按钮
我按钮

00:17:16.569 --> 00:17:18.438 
现在
虽然这对我们而言很明显

00:17:18.505 --> 00:17:21.040 
因为我们可以根据
信息按钮提示看到

00:17:21.108 --> 00:17:24.243 
这是信息按钮
VoiceOver用户只能听到

00:17:24.310 --> 00:17:28.015 
字母i 因此会很困惑
不知道这是在做什么

00:17:28.080 --> 00:17:30.150 
我们应该添加
用户友好标签

00:17:30.217 --> 00:17:32.553 
以便读出信息

00:17:33.220 --> 00:17:34.488 
而且 这个按钮
看上去有些小

00:17:34.555 --> 00:17:36.590 
可以想见
对于VoiceOver用户而言

00:17:36.657 --> 00:17:37.925 
要感知
并发现这个

00:17:37.991 --> 00:17:39.760 
信息按钮
可能有些难度

00:17:41.094 --> 00:17:43.630 
因此 在VoiceOver
运行时 把这个

00:17:43.697 --> 00:17:44.731 
弄得大一些

00:17:44.798 --> 00:17:46.767 
我们继续讲

00:17:47.034 --> 00:17:48.135 
制作三明治

00:17:48.602 --> 00:17:49.703 
制作三明治

00:17:49.937 --> 00:17:51.738 
在三明治中
点击自己想要的食材

00:17:52.206 --> 00:17:56.877 
一层烤牛肉 210c

00:17:56.944 --> 00:17:58.312 
两层

00:17:58.378 --> 00:17:59.546 
按钮

00:18:00.113 --> 00:18:05.085 
第一个问题
VoiceOver读出210c

00:18:05.519 --> 00:18:07.521 
VoiceOver读出的内容
不一定限制在

00:18:07.588 --> 00:18:10.691 
界面的
屏幕空间内

00:18:11.225 --> 00:18:13.694 
我们应该使之讲出
210卡路里

00:18:14.361 --> 00:18:16.196 
还要注意
我们滑过了三次

00:18:16.263 --> 00:18:17.297 
来加入每一层的内容

00:18:17.364 --> 00:18:19.733 
假设 我当真
非常饥饿

00:18:19.800 --> 00:18:23.203 
立刻就想拿到三明治
不想要滑过

00:18:23.270 --> 00:18:25.005 
三次才加入
来加入每一层的内容

00:18:25.105 --> 00:18:27.140 
我有个大三明治

00:18:27.674 --> 00:18:31.178 
我们这么解决问题
把每一层都分组到一起

00:18:32.179 --> 00:18:33.914 
我们继续来解决这个问题

00:18:41.755 --> 00:18:44.424 
那么你其实可以通过
Storyboard解决很多

00:18:44.491 --> 00:18:46.126 
这样的用户友好问题

00:18:46.193 --> 00:18:49.429 
我们来继续
先在Make Sandwich屏幕

00:18:49.496 --> 00:18:52.099 
解决在Make Sandwich
屏幕中的元素

00:18:52.165 --> 00:18:54.268 
分组问题
因此VoiceOver用户

00:18:54.334 --> 00:18:55.536 
每层只需滑动一下

00:18:56.436 --> 00:18:58.105 
首先 我们要
发现包括

00:18:58.172 --> 00:19:02.376 
这三个
标签的组

00:19:03.243 --> 00:19:04.411 
就在这里

00:19:06.180 --> 00:19:10.184 
我们可以到侧边栏设置"Access
ibility Enabled"

00:19:11.084 --> 00:19:13.020 
这就把它变为
用户友好元素

00:19:13.086 --> 00:19:14.955 
此外 我们还加上一个
按钮特性

00:19:15.022 --> 00:19:16.323 
这样用户就会知道
可以双击

00:19:16.390 --> 00:19:17.524 
并激活这个元素

00:19:18.692 --> 00:19:21.728 
在屏幕上还有一个问题
是卡路里标签

00:19:21.795 --> 00:19:25.265 
被读成“210 c”而不是
“210卡路里”

00:19:26.033 --> 00:19:28.836 
我们来看
卡路里数字

00:19:28.902 --> 00:19:30.871 
读出的位置
就在这里

00:19:30.938 --> 00:19:32.306 
在Calories标签上

00:19:32.372 --> 00:19:37.077 
把文本内容设置成
卡路里数和c

00:19:37.511 --> 00:19:40.147 
在SetAccessibility
Label再加一行

00:19:48.055 --> 00:19:50.123 
我们在这里
加上卡路里标签

00:19:50.190 --> 00:19:52.993 
调用功能设置Accessibili
ty Label

00:19:53.393 --> 00:19:57.164 
再加上所用
卡路里数的字符串

00:19:57.231 --> 00:19:58.498 
后面是
字符串Calories

00:19:58.999 --> 00:20:02.636 
这样用户会听到“210
卡路里”而不是“210 c”

00:20:03.036 --> 00:20:06.139 
我们再来解决Make
Sandwich屏幕的用户友好问题

00:20:06.206 --> 00:20:07.341 
我们希望测试自己的改变

00:20:07.808 --> 00:20:10.043 
可以在Watch上构建
但是为每个重复的改变

00:20:10.110 --> 00:20:12.446 
都在Watch上构建
则会花费时间

00:20:12.613 --> 00:20:14.481 
相反 我们可以使用
Simulator

00:20:14.915 --> 00:20:16.683 
那我继续在
Simulator上运行

00:20:26.226 --> 00:20:29.830 
现在来测试
Simulator上的用户友好改变

00:20:29.897 --> 00:20:32.633 
必须要用到Accessibilit
yInspector

00:20:32.699 --> 00:20:34.134 
可以通过Setting打开

00:20:34.201 --> 00:20:36.470 
Accessibility
Inspector

00:20:36.537 --> 00:20:38.805 
General
Accessibility

00:20:38.872 --> 00:20:41.074 
Accessibility
Inspector

00:20:41.141 --> 00:20:43.310 
这是只适用于
Simulator的工具

00:20:43.510 --> 00:20:45.913 
可以通过点击
检测元素的

00:20:46.079 --> 00:20:51.118 
用户友好性
会把红框中所包含的

00:20:51.185 --> 00:20:55.622 
所有内容都显示出来
并会看到该元素的

00:20:55.689 --> 00:20:57.925 
具体说明
如标签 提示 值

00:20:57.991 --> 00:20:59.226 
相关特性等

00:20:59.293 --> 00:21:01.228 
因此当你要实现
元素用户友好时

00:21:01.295 --> 00:21:02.763 
这一点相当有用

00:21:03.997 --> 00:21:07.167 
我们继续来看
这些改变是否会发生

00:21:09.236 --> 00:21:11.905 
有了Accessibility
Inspector

00:21:12.072 --> 00:21:13.340 
点击只能选中
一个元素

00:21:13.440 --> 00:21:15.075 
激活元素
需要双击

00:21:18.445 --> 00:21:20.080 
我们来点击这里

00:21:20.647 --> 00:21:21.982 
有几个问题
需要注意

00:21:22.850 --> 00:21:26.954 
首先 整个层
怎样成为一个元素

00:21:27.721 --> 00:21:30.858 
因此 现在VoiceOver用户
只需每层滑动一次

00:21:31.124 --> 00:21:33.060 
这样制作三明治可以
更快更方便

00:21:33.627 --> 00:21:37.598 
注意Calories标签
现在可以读作是"210卡路里"

00:21:37.664 --> 00:21:38.765 
这样用户会更明确

00:21:38.832 --> 00:21:40.767 
这具体代表
什么意思

00:21:41.335 --> 00:21:44.104 
最后是个按钮特性
我们的用户现在了解

00:21:44.171 --> 00:21:46.073 
可以双击
并激活这个元素

00:21:47.140 --> 00:21:48.075 
屏幕问题解决了

00:21:48.542 --> 00:21:51.545 
我们继续来解决
开始屏幕的问题

00:21:51.612 --> 00:21:53.780 
实际上这是
界面控制器的位置

00:21:54.948 --> 00:21:56.750 
首先是三明治
图像显示

00:21:56.917 --> 00:21:59.186 
根本就
无法

00:21:59.253 --> 00:22:00.120 
看到

00:22:00.687 --> 00:22:03.023 
这个三明治的图像显示
实际上

00:22:03.090 --> 00:22:04.491 
可以为用户
提供许多信息

00:22:05.292 --> 00:22:07.794 
因此 若只是
在图像上

00:22:07.861 --> 00:22:10.097 
增加用户
可用性标签很有难度

00:22:10.330 --> 00:22:12.900 
因为我们想表示的是
每层的内容是什么

00:22:12.966 --> 00:22:14.101 
各层的顺序如何

00:22:15.135 --> 00:22:18.338 
因此似乎是用户友好图像区
可以实现这个功能

00:22:19.306 --> 00:22:22.776 
我们先来看
在哪里设置三明治图像

00:22:22.943 --> 00:22:26.413 
是在这里设置
这里生成图像

00:22:26.480 --> 00:22:28.148 
我们来生成图像区

00:22:32.286 --> 00:22:34.588 
那我加上功能
生成图像区

00:22:35.022 --> 00:22:37.925 
这个功能会
在列出每层内容

00:22:38.759 --> 00:22:40.627 
创建用户友好图像区

00:22:41.361 --> 00:22:44.264 
设置图像区的标签
使之成为该层或

00:22:44.631 --> 00:22:45.666 
三明治层的名称

00:22:46.033 --> 00:22:49.803 
在设置框架使之成为
生成原始图像所用框架

00:22:50.604 --> 00:22:53.006 
最后我们把它加到数组
再返回

00:22:53.907 --> 00:22:55.275 
我们继续
把这个加到标题上

00:22:55.342 --> 00:22:57.177 
这样可以从界面控制器上调用

00:23:02.349 --> 00:23:04.818 
然后让我继续
从界面控制器上调用

00:23:11.425 --> 00:23:12.926 
我们这样就得到了
三明治的图像

00:23:13.560 --> 00:23:15.829 
我们调用Set Accessibility
Image Regions

00:23:15.896 --> 00:23:17.231 
或是生成图像区

00:23:18.932 --> 00:23:21.668 
现在 第二个问题是
信息按钮

00:23:21.735 --> 00:23:24.638 
只读出了
“i”

00:23:25.138 --> 00:23:27.374 
因为标签在
信息按钮的整个生命周期

00:23:27.441 --> 00:23:28.275 
无法改变

00:23:28.342 --> 00:23:30.377 
我们可以只通过
Storyboard设置

00:23:31.545 --> 00:23:33.247 
我们来选择
信息按钮

00:23:34.748 --> 00:23:37.985 
我们继续 将标签
设置为“信息”

00:23:44.024 --> 00:23:46.894 
像这样好了
现在标签问题解决了

00:23:46.960 --> 00:23:49.162 
但是信息按钮
还有一个问题

00:23:49.229 --> 00:23:51.265 
就是对VoiceOver用户而言
不够大

00:23:51.331 --> 00:23:52.866 
在屏幕上不容易感知

00:23:53.300 --> 00:23:55.836 
我们需要根据VoiceOver是否
运行重新调整大小

00:23:55.903 --> 00:23:57.905 
因此我加上一个功能
来实现

00:24:01.775 --> 00:24:04.178 
现在做的是要检查
VoiceOver是否和

00:24:04.244 --> 00:24:06.079 
WK Accessibility
VoiceOver Running

00:24:06.146 --> 00:24:06.980 
调用一起运行

00:24:07.447 --> 00:24:09.883 
如果是 则要把
高度和宽度设置为40

00:24:09.950 --> 00:24:11.185 
否则就设成20

00:24:11.885 --> 00:24:15.856 
现在我们来调用
Will Activate

00:24:32.840 --> 00:24:35.609 
以防万一有人打开了
VoiceOver

00:24:35.676 --> 00:24:37.611 
在这个屏幕上 我们应该
继续并注册通知

00:24:37.678 --> 00:24:42.716 
并要使之
调用这个功能

00:24:43.450 --> 00:24:46.920 
通知具有WK用户友好性
VoiceOver状态改变

00:24:48.188 --> 00:24:52.793 
现在我们来修复
运行中的应用

00:24:54.494 --> 00:24:55.329 
进食

00:24:56.063 --> 00:24:56.897 
进食修复

00:25:02.569 --> 00:25:04.171 
进食修复

00:25:04.505 --> 00:25:05.906 
制作三明治

00:25:06.406 --> 00:25:07.741 
- 按钮
- 刚才

00:25:07.808 --> 00:25:10.143 
我们可以看到
信息按钮已经变大

00:25:10.210 --> 00:25:12.012 
信息
按钮

00:25:12.412 --> 00:25:14.047 
标签读出方式
也正确

00:25:14.681 --> 00:25:16.149 
我们继续
来制作三明治

00:25:16.216 --> 00:25:17.284 
制作三明治

00:25:20.087 --> 00:25:23.390 
按钮点击想要的
三明治

00:25:24.157 --> 00:25:26.593 
烤牛肉 210卡路里

00:25:27.160 --> 00:25:30.531 
按钮一层烤牛肉

00:25:30.731 --> 00:25:32.799 
面包 130卡路里

00:25:33.033 --> 00:25:34.401 
一层面包

00:25:34.701 --> 00:25:38.138 
一层烤牛肉
210卡路里

00:25:38.205 --> 00:25:39.306 
按钮

00:25:39.740 --> 00:25:42.943 
好了 刚才你也看到
卡路里标签的读出方式

00:25:43.010 --> 00:25:45.445 
正确
这对用户更为清晰

00:25:46.046 --> 00:25:48.215 
每一层都是
单独元素

00:25:48.282 --> 00:25:49.983 
使得导航
更为方便

00:25:51.351 --> 00:25:53.153 
我们来继续
看看三明治的图像显示

00:25:53.220 --> 00:25:54.655 
来看看
现在用户友好性如何

00:25:54.721 --> 00:25:55.722 
制作三明治

00:25:56.423 --> 00:25:57.958 
烤牛肉

00:25:58.592 --> 00:25:59.426 
图像

00:26:00.294 --> 00:26:01.628 
面包 图像

00:26:02.329 --> 00:26:05.666 
现在 VoiceOver用户
可以在滑过三明治

00:26:08.902 --> 00:26:09.736 
没问题

00:26:11.271 --> 00:26:12.105 
Home

00:26:22.282 --> 00:26:25.986 
如大家所知
作为开发人员

00:26:26.053 --> 00:26:29.990 
现在可以制作自定义的
表盘complication

00:26:30.624 --> 00:26:33.660 
和你的应用一样
这些也需要具有用户友好性

00:26:34.962 --> 00:26:38.131 
我们的框架可以决定
大部分表盘组件的

00:26:38.198 --> 00:26:40.934 
用户友好标签
还有两种情况

00:26:41.001 --> 00:26:43.704 
用户友好标签
可能表达不准确

00:26:43.770 --> 00:26:45.506 
或是不存在

00:26:46.373 --> 00:26:49.109 
来看 每个表盘
Complication

00:26:49.176 --> 00:26:53.013 
都包括一组图像和文本
供应方

00:26:53.080 --> 00:26:56.450 
虽然大部分供应方
都有着明显的

00:26:56.517 --> 00:26:59.286 
相关客户友好标签
有两个却没有

00:27:00.220 --> 00:27:02.823 
图像供应方和
Simple Text供应方

00:27:03.490 --> 00:27:05.626 
对于这两个
特殊的供应方

00:27:05.692 --> 00:27:09.096 
我们加上了属性Accessibil
ity Label

00:27:10.397 --> 00:27:13.066 
其功能类似于
用户友好标签

00:27:13.133 --> 00:27:15.102 
在普通WatchKit
应用中的作用

00:27:15.402 --> 00:27:17.571 
实际上 这非常容易

00:27:22.009 --> 00:27:25.779 
我制作了表盘组件
让预订三明治

00:27:25.846 --> 00:27:27.581 
更为简便
以防你此刻当真

00:27:27.648 --> 00:27:29.449 
饿得发慌
没空打开应用

00:27:29.516 --> 00:27:31.285 
只需要
抬起手腕

00:27:31.485 --> 00:27:32.819 
即可就能拿到三明治

00:27:32.886 --> 00:27:35.322 
这里就是Complication
就在这儿

00:27:35.389 --> 00:27:36.456 
因为这是个图像

00:27:36.523 --> 00:27:39.293 
并没有相关的
用户友好性

00:27:39.660 --> 00:27:43.297 
那我们继续
在上面设置用户友好标签

00:27:47.100 --> 00:27:53.307 
进入Complication
生成的位置

00:27:54.508 --> 00:27:55.642 
或者是供应方生成的位置

00:27:56.777 --> 00:27:58.445 
我们来设置
用户友好标签

00:28:04.985 --> 00:28:06.486 
没问题

00:28:06.954 --> 00:28:07.988 
非常简单

00:28:08.589 --> 00:28:11.325 
来看VoiceOver
用户会听到什么

00:28:23.470 --> 00:28:24.571 
现在就拿到三明治

00:28:25.906 --> 00:28:27.474 
那么 如果没听到

00:28:27.541 --> 00:28:29.710 
标签会读出
“现在就拿到三明治”

00:28:29.776 --> 00:28:31.545 
现在VoiceOver
用户就可以

00:28:31.879 --> 00:28:33.981 
双击预订
三明治了

00:28:35.949 --> 00:28:38.685 
正如大家所见
非常简单就可以

00:28:38.752 --> 00:28:41.421 
让自己的应用和Complication
具有用户友好性

00:28:41.555 --> 00:28:43.624 
来讲讲大家
需要牢记的几点

00:28:43.690 --> 00:28:45.893 
以供设计自己的
用户友好体验时作参考

00:28:46.326 --> 00:28:49.229 
首先 要让图像
具有用户友好性

00:28:49.830 --> 00:28:51.665 
特别是如果它们
可以为用户提供

00:28:51.732 --> 00:28:52.699 
重要信息时

00:28:52.966 --> 00:28:54.635 
应该在上面
设置用户友好标签

00:28:55.002 --> 00:28:57.671 
或者当它们提供
非常复杂的信息时

00:28:57.871 --> 00:29:00.040 
使用用户友好
图像区API

00:29:03.644 --> 00:29:04.645 
当设计自己的
应用时

00:29:04.711 --> 00:29:07.614 
考虑一下VoiceOver用户将
在屏幕上怎样导航

00:29:08.148 --> 00:29:09.516 
如果不这么做
VoiceOver用户

00:29:09.583 --> 00:29:12.452 
就不得不多次滑过
才能加入逻辑项

00:29:12.786 --> 00:29:15.289 
因此通过
Set As Accessibility Element

00:29:15.355 --> 00:29:16.890 
对用户友好元素进行分组

00:29:19.026 --> 00:29:21.328 
可能对非VoiceOver用户
也是如此

00:29:21.395 --> 00:29:23.363 
但是应该避免使用
过于小的界面项

00:29:23.964 --> 00:29:27.367 
这样VoiceOver用户会
很难感知

00:29:27.434 --> 00:29:29.570 
在屏幕上
很难找到太小的界面项

00:29:31.572 --> 00:29:33.273 
最后 也是最重要的一点

00:29:33.841 --> 00:29:35.676 
在自己的应用中
尝试用户友好的效果

00:29:36.109 --> 00:29:38.579 
来看自己的应用
字体变大的效果

00:29:38.979 --> 00:29:42.049 
或是看看应用在VoiceOver
打开时的效果

00:29:42.482 --> 00:29:43.917 
你可能会被自己
所见吓一跳

00:29:46.687 --> 00:29:50.924 
总之 Apple Watch
是非常用户友好的设备

00:29:52.626 --> 00:29:54.494 
但是在实现完全
用户友好之前

00:29:54.895 --> 00:29:56.363 
还需要具备
用户友好app

00:29:57.030 --> 00:29:59.366 
这也是大家
准备为VoiceOver用户

00:29:59.433 --> 00:30:00.868 
实现的这一功能

00:30:02.703 --> 00:30:05.305 
正如大家所见
这其实非常容易

00:30:07.508 --> 00:30:09.843 
让我们为所有用户

00:30:10.077 --> 00:30:12.646 
都实现这些神奇的功能
让应用物尽其用

00:30:13.847 --> 00:30:15.115 
无论他们是谁

00:30:15.182 --> 00:30:17.317 
也不论他们是怎样
与世界发生互动

00:30:19.520 --> 00:30:20.354 
感谢大家

00:30:21.288 --> 00:30:23.290 
在《WatchKit编程指南》
讲座中

00:30:23.357 --> 00:30:24.558 
大家还可以
了解更多内容

00:30:24.925 --> 00:30:27.194 
大家还可以在
开发人员论坛中提问

00:30:27.261 --> 00:30:29.162 
或者与开发顾问
保罗·马科斯联系

00:30:29.730 --> 00:30:30.631 
感谢大家

00:30:30.697 --> 00:30:31.532 
非常感谢