00:00:20.454 --> 00:00:23.056 
應用內蘋果支付

00:00:23.690 --> 00:00:25.492 
大家好

00:00:26.260 --> 00:00:31.098 
歡迎來到WWDC歡迎來學習
應用內蘋果支付

00:00:31.598 --> 00:00:36.003 
我叫尼克我是iOS應用
和框架團隊的軟件工程師

00:00:36.403 --> 00:00:42.543 
我將邀請理查我們將一起談談蘋果支付

00:00:43.277 --> 00:00:46.680 
現在 希望你們
已經非常熟悉蘋果支付了

00:00:46.980 --> 00:00:50.784 
或許你已經使用過或許你已經使用
蘋果支付到商店進行購物了

00:00:51.318 --> 00:00:55.022 
但你同樣可以在你的
應用內使用蘋果支付

00:00:55.455 --> 00:00:57.925 
這就是我們將在
今天的環節裏討論的內容

00:00:58.192 --> 00:01:01.628 
這是一個會超過一個小時的環節

00:01:01.695 --> 00:01:03.297 
請把你的手錶設置爲靜音

00:01:03.530 --> 00:01:04.565 
你不必站起來

00:01:05.032 --> 00:01:08.468 
我們今天將說及四個主要的部分

00:01:09.002 --> 00:01:12.239 
因此我們首先要談的是
蘋果支付到底是什麼

00:01:12.573 --> 00:01:14.875 
我們將談談
你如何在你的應用中使用蘋果支付

00:01:15.142 --> 00:01:17.778 
還有更重要的是
爲什麼要在你的應用中使用

00:01:18.912 --> 00:01:20.714 
然後我們將說說結構

00:01:21.114 --> 00:01:26.486 
技術的角度而言蘋果支付是如何完成
支付的在那裏發生了什麼接下來呢

00:01:27.487 --> 00:01:32.492 
緊接着我的同事理查將
出來與大家談談關於設計問題

00:01:32.893 --> 00:01:34.695 
如何讓你的應用爲蘋果支付做好準備

00:01:34.761 --> 00:01:36.964 
以及如何讓應用
在視覺和感覺上給人帶來好的體驗

00:01:37.898 --> 00:01:41.001 
在那之後我想我們
將深究一下Xcode

00:01:41.702 --> 00:01:45.606 
然後我們將看看我們如何
在簡短的幾行代碼中迅速

00:01:45.672 --> 00:01:48.942 
且輕鬆地在我們的應用中
設置好蘋果支付

00:01:49.543 --> 00:01:51.144 
我想會很有趣

00:01:52.012 --> 00:01:52.846 
現在讓我們開始吧

00:01:54.348 --> 00:01:55.215 
什麼是蘋果支付呢

00:01:55.782 --> 00:01:57.985 
如何在你的應用中使用呢

00:01:59.753 --> 00:02:05.158 
蘋果支付是一種在應用內運行的

00:02:05.492 --> 00:02:09.496 
具有隱私性和安全性
非接觸式的支付方式

00:02:09.562 --> 00:02:14.201 
它允許觸摸付款你可以
用來購買實體商品和服務

00:02:14.735 --> 00:02:16.770 
這是一個來自Groupon的例子

00:02:18.572 --> 00:02:25.245 
蘋果支付有許多好處
無論是對開發者還是用戶

00:02:26.246 --> 00:02:28.615 
對於用戶來說蘋果支付是容易使用

00:02:29.082 --> 00:02:32.186 
你不需要重新輸入任何付款或聯繫信息

00:02:32.753 --> 00:02:36.557 
你不需要記住幾個月前
在網站上創建的密碼

00:02:36.990 --> 00:02:39.159 
它們已經在那裏準備就緒了

00:02:39.593 --> 00:02:40.794 
而且很安全

00:02:41.762 --> 00:02:43.230 
我使用Touch ID支付

00:02:44.198 --> 00:02:46.967 
這真的很好用而且最重要的是很私密

00:02:47.768 --> 00:02:50.304 
卡號不會告知商家

00:02:50.704 --> 00:02:52.906 
相反 你發送一個帶有驗證碼的設備號

00:02:53.140 --> 00:02:56.476 
它只對當次購買有效

00:02:56.743 --> 00:02:59.213 
因此它是絕對安全絕對私密的

00:03:00.280 --> 00:03:05.152 
所有這些綜合在一起不僅讓你受益
也讓開發者受益

00:03:05.586 --> 00:03:07.688 
因爲由於你沒有獲取真正的卡號

00:03:07.955 --> 00:03:09.156 
你也無需處理它們

00:03:09.489 --> 00:03:12.059 
如果你以前從事過
電子商務我確定你知道

00:03:12.125 --> 00:03:15.395 
所有你要處理的問題例如實卡信息

00:03:16.163 --> 00:03:18.398 
因爲蘋果支付是如此易於使用

00:03:18.465 --> 00:03:22.469 
你將會看到更高的轉換率
和更快結賬速度

00:03:23.103 --> 00:03:25.672 
它是如此容易你甚至不需要用戶註冊

00:03:26.039 --> 00:03:28.709 
他們僅需打開應用就可以立即開始購買

00:03:28.775 --> 00:03:30.444 
而不需要一個現有賬號 

00:03:31.645 --> 00:03:36.149 
而且最重要的是
用戶非常喜歡蘋果支付 

00:03:36.283 --> 00:03:37.818 
它們也喜歡應用使用蘋果支付 

00:03:37.985 --> 00:03:39.386 
他們會充分利用蘋果支付

00:03:40.220 --> 00:03:43.023 
你真的不需要我來打包票

00:03:43.090 --> 00:03:46.460 
我們繼續說說
成百上千中應用裏的僅有幾種 

00:03:46.527 --> 00:03:48.595 
已經在商店內使用蘋果支付

00:03:49.162 --> 00:03:51.198 
並且它們已經取得了一些驚人的成功

00:03:52.165 --> 00:03:53.901 
首先 我想要說說StubHub

00:03:54.501 --> 00:03:55.802 
它是一個很棒的蘋果應用

00:03:56.270 --> 00:03:58.305 
你可以在手機上直接購買入場券

00:03:59.072 --> 00:04:01.008 
它們與蘋果支付相結合並且它們發現 

00:04:01.074 --> 00:04:04.244 
使用蘋果支付用戶交易比普通客戶

00:04:04.611 --> 00:04:05.812 
交易頻率高出20%

00:04:06.146 --> 00:04:07.047 
這是一個很棒的結果

00:04:07.981 --> 00:04:12.452 
另一個很棒的蘋果支付
應用是OpenTable

00:04:12.953 --> 00:04:14.388 
這周你就應該使用這個應用

00:04:14.454 --> 00:04:16.656 
你不僅可以預約也可以到飯店

00:04:16.723 --> 00:04:20.827 
在餐桌上用手機直接支付你的餐費

00:04:21.595 --> 00:04:23.630 
當他們把產品與蘋果支付相結合

00:04:23.697 --> 00:04:26.533 
他們會看到交易量增漲了50%

00:04:27.901 --> 00:04:29.303 
還有更好的 

00:04:29.770 --> 00:04:31.505 
我們說說Staples

00:04:32.239 --> 00:04:34.208 
他們有一個非常棒的應用 

00:04:34.274 --> 00:04:36.710 
你可以通過手機直接購買
所有你需要的辦公專業用品 

00:04:36.977 --> 00:04:39.179 
他們會看到總體轉化率增漲 

00:04:39.246 --> 00:04:42.382 
那就是109%的用戶使用蘋果支付 

00:04:42.749 --> 00:04:45.652 
併成功支付

00:04:46.353 --> 00:04:48.922 
這是一個令人驚訝的數字

00:04:49.189 --> 00:04:51.525 
應用開發者都非常喜歡蘋果支付

00:04:51.992 --> 00:04:54.862 
我們說說Fancy的CEO
喬伊·愛因霍恩

00:04:55.295 --> 00:04:59.900 
他說蘋果支付不僅促成了更多的交易

00:05:00.501 --> 00:05:03.570 
而且激活了我們最大的消費羣

00:05:04.137 --> 00:05:08.976 
我還可以告訴你
Fancy的iOS用戶

00:05:09.376 --> 00:05:13.547 
在所有移動平臺的消費
將兩個因素合併爲一

00:05:14.248 --> 00:05:17.784 
這些客戶非常喜歡用蘋果支付

00:05:17.851 --> 00:05:20.454 
來買東西 而且他們想買許多東西

00:05:21.021 --> 00:05:22.523 
這對你的應用來說是非常好的事情

00:05:23.123 --> 00:05:26.326 
現在 你們當中一些人可能會想 嗯 

00:05:26.460 --> 00:05:29.329 
蘋果公司已經有一種允許應用在應用內

00:05:29.396 --> 00:05:32.866 
購買東西的機制它就是程序內購買

00:05:33.700 --> 00:05:36.537 
關於程序內購買 蘋果支付的位置何在

00:05:37.471 --> 00:05:40.007 
它們有一些不同之處 
現在我想讓你弄清楚它們 

00:05:41.275 --> 00:05:43.210 
一個最主要的不同是

00:05:43.277 --> 00:05:45.979 
它們實際上位於SDK

00:05:46.046 --> 00:05:47.948 
蘋果支付存在於PassKit框架

00:05:48.015 --> 00:05:52.019 
而程序內購買存在於StoreKit

00:05:52.419 --> 00:05:53.687 
它們有不同的代碼基 

00:05:54.121 --> 00:05:55.756 
你可以用它們來處理不同的東西

00:05:56.924 --> 00:06:00.827 
對於蘋果支付
你將它用於實體商品和服務

00:06:01.228 --> 00:06:03.697 
我的意思是諸如健身館會員 

00:06:03.997 --> 00:06:08.635 
合乘 雜貨派送以及在實體店購買東西

00:06:09.136 --> 00:06:09.970 
包括實體物品

00:06:10.170 --> 00:06:13.040 
程序內購買適用於程序內的內容

00:06:13.106 --> 00:06:17.644 
和功能性 程序內貨幣
服務 數碼訂閱

00:06:18.979 --> 00:06:22.382 
另一個很大的不同是誰負責處理付款

00:06:22.749 --> 00:06:25.619 
當你用蘋果支付你將通過

00:06:26.019 --> 00:06:27.421 
你自己的支付平臺來處理付款

00:06:28.222 --> 00:06:29.790 
而當你使用程序內支付的時候 

00:06:30.090 --> 00:06:31.992 
蘋果公司代替你處理付款

00:06:32.292 --> 00:06:34.127 
並按月將你的餘額

00:06:34.194 --> 00:06:36.396 
和剩餘應用交易發送給你

00:06:37.197 --> 00:06:38.398 
因此這裏有一點點不同之處

00:06:38.799 --> 00:06:41.101 
它們在應用商店指南中也有略微不同

00:06:41.635 --> 00:06:44.505 
如果你對此感興趣
第29節是關於蘋果支付

00:06:44.938 --> 00:06:46.440 
第11節是關於程序內購買

00:06:46.707 --> 00:06:50.110 
獲取這些指南 
看看什麼你可以做 什麼你不可以做

00:06:51.879 --> 00:06:55.115 
現在我們所有有安全元件芯片的設備

00:06:55.182 --> 00:06:58.418 
都可以使用蘋果支付

00:06:59.086 --> 00:07:02.856 
因此安全元件是用來安全儲存

00:07:02.923 --> 00:07:05.092 
你的卡片信息的硬件芯片

00:07:05.959 --> 00:07:09.162 
這在iPhone 6
iPhone 6 Plus

00:07:09.696 --> 00:07:12.699 
iPad Air 2 和 
iPad mini 3上已經實現

00:07:13.333 --> 00:07:15.202 
所有這些設備都支持蘋果支付

00:07:16.003 --> 00:07:19.306 
直到最近蘋果支付在美國可用了

00:07:19.806 --> 00:07:23.911 
我們昨天宣佈它也即將在英國可用

00:07:24.578 --> 00:07:26.480 
對於蘋果支付我們還有長期目標

00:07:26.547 --> 00:07:28.415 
因此如果你是一個開發者但不是來自

00:07:28.482 --> 00:07:30.551 
其中任何一個國家 
那麼仍然值得好好想想

00:07:30.617 --> 00:07:32.386 
在將來如何將蘋果支付

00:07:32.653 --> 00:07:34.922 
整合到你的應用中

00:07:37.391 --> 00:07:40.394 
這就是一個關於蘋果支付的大體情況

00:07:41.061 --> 00:07:43.063 
希望我已經成功地說服你 

00:07:43.297 --> 00:07:45.599 
蘋果支付是非常值得你在應用中使用的

00:07:46.433 --> 00:07:48.235 
現在我想回答一些關於

00:07:48.302 --> 00:07:52.206 
蘋果支付的結構問題 
從技術的角度上講 

00:07:52.773 --> 00:07:54.107 
支付是如何實現的

00:07:55.742 --> 00:08:00.614 
關於蘋果支付你要做的第一件事情
是創建一個商家識別符

00:08:01.448 --> 00:08:04.918 
我們需要這個 
它是唯一能識別你商家身份的東西

00:08:05.452 --> 00:08:07.588 
現在 你可以在開發者網站

00:08:07.654 --> 00:08:08.989 
或者通過Xcode屬性窗口

00:08:09.189 --> 00:08:11.124 
設置商家識別符

00:08:11.792 --> 00:08:14.127 
而且識別符由私人祕鑰證書保護

00:08:14.494 --> 00:08:17.064 
這類似於其他在iOS上的識別符

00:08:17.130 --> 00:08:19.333 
諸如推送令牌識別符 

00:08:19.633 --> 00:08:21.635 
或者Wallet App
Pass識別符

00:08:22.503 --> 00:08:24.004 
現在我們運用此證書

00:08:24.404 --> 00:08:27.341 
對生成的支付信息進行安全加密 

00:08:27.741 --> 00:08:29.643 
作爲商家來說這是唯一的

00:08:30.043 --> 00:08:32.880 
沒有人可以破解支付信息 

00:08:32.946 --> 00:08:35.616 
這是蘋果支付的另一個很棒的安全優勢

00:08:36.350 --> 00:08:38.519 
我們推薦你把它設計成

00:08:38.585 --> 00:08:40.520 
標準反向域名解析格式

00:08:40.921 --> 00:08:42.422 
就像其它 許多識別符一樣

00:08:42.688 --> 00:08:43.590 
從商家開始

00:08:43.957 --> 00:08:46.927 
這是一個我們稍後在
樣板應用中將用到的例子

00:08:47.394 --> 00:08:50.197 
這是你使用蘋果支付要做的第一件事

00:08:50.931 --> 00:08:53.066 
一旦我們有了一個商家識別符 
我們就準備就緒

00:08:53.700 --> 00:08:55.002 
可以在應用內啓動蘋果支付了

00:08:56.236 --> 00:09:00.374 
你要做的第一件事是調用支付表 

00:09:01.275 --> 00:09:02.409 
它由我們提供 

00:09:02.543 --> 00:09:05.145 
它總結了你的應用
需要支付的所有費用

00:09:06.280 --> 00:09:08.849 
然後用戶使用Touch ID授權

00:09:10.350 --> 00:09:12.653 
並且你的應用將收到一條支付口令

00:09:12.853 --> 00:09:16.590 
支付口令包含所有你需要
支付費用的信息

00:09:17.758 --> 00:09:20.561 
它將被加密通過使用你的商家ID證書

00:09:21.061 --> 00:09:23.931 
那是獨一無二的 
只有作爲開發者的你可以解密它

00:09:25.532 --> 00:09:27.801 
然後你可以驗證生效並啓動處理程序

00:09:28.001 --> 00:09:30.304 
在你的應用裏顯示一份
成功支付情況清單

00:09:31.572 --> 00:09:34.241 
那裏有許多信息讓我們來詳細瞭解

00:09:35.242 --> 00:09:37.377 
流程很少

00:09:37.945 --> 00:09:40.380 
我將系統分解爲兩個部分

00:09:40.447 --> 00:09:42.049 
iOS和安全元件

00:09:42.149 --> 00:09:45.152 
記住安全元件是唯一

00:09:46.086 --> 00:09:47.788 
安全儲存你卡片信息的硬件芯片

00:09:48.789 --> 00:09:51.325 
第一你的應用將會展示
你的日程驗證流 

00:09:51.491 --> 00:09:55.395 
你將詢問iOS用戶是否有任何
可用的蘋果支付卡片

00:09:56.163 --> 00:09:59.032 
因爲如果用戶沒有任何
可用的蘋果支付卡片

00:09:59.166 --> 00:10:02.769 
或者設備不支持你需要
使用傳統的驗證流

00:10:04.471 --> 00:10:08.008 
現在假設它們可以然後
你將展示蘋果支付表

00:10:08.509 --> 00:10:12.813 
然後你或者iOS將會驗證
Touch ID是否有效

00:10:14.248 --> 00:10:15.382 
現在假設是有效的

00:10:15.449 --> 00:10:16.717 
你將傳輸一些信息到 

00:10:16.783 --> 00:10:19.186 
專用安全原件它將安全打包 

00:10:19.253 --> 00:10:21.722 
所有支付信息

00:10:22.022 --> 00:10:27.160 
這包括密碼文件即付款需要的加密數據

00:10:28.128 --> 00:10:29.563 
然後會將它們發送至服務器

00:10:29.630 --> 00:10:32.032 
現在服務器將使用商家識別符

00:10:32.566 --> 00:10:35.068 
進行重新打包
這就是我們所做的全部事情

00:10:35.135 --> 00:10:36.170 
這是因爲我們不想

00:10:36.703 --> 00:10:38.872 
在應用裏推送你的證書

00:10:38.939 --> 00:10:41.074 
因此我們的服務器按新的路線發送支付

00:10:41.408 --> 00:10:43.477 
對它進行獨一無二的加密 
然後返回到系統 

00:10:43.610 --> 00:10:47.147 
從而你可以將它發送以便處理

00:10:48.582 --> 00:10:50.684 
現在假設處理成功 

00:10:50.751 --> 00:10:52.286 
你可以刪除支付表

00:10:52.553 --> 00:10:54.855 
並回到自己的確認屏

00:10:57.057 --> 00:10:58.692 
我想你們當中的許多人會有疑問  

00:10:58.926 --> 00:11:00.394 
所有這些都很好尼克 

00:11:00.460 --> 00:11:02.396 
但是我如何處理支付 

00:11:03.030 --> 00:11:04.097 
那是如何運行的 

00:11:04.431 --> 00:11:06.433 
讓我們來談談你如何獲取你的錢

00:11:06.900 --> 00:11:08.402 
這可能是一個你內心更關心的話題

00:11:09.303 --> 00:11:11.939 
這裏有兩個方法處理蘋果支付

00:11:12.739 --> 00:11:14.875 
第一個這個是我們最想向你推薦的 

00:11:14.942 --> 00:11:16.176 
就是使用一個支付平臺

00:11:17.010 --> 00:11:19.379 
支付平臺可以處理

00:11:19.613 --> 00:11:22.649 
解密並代替你理解密碼文件

00:11:23.483 --> 00:11:26.820 
當你簽名後你提供
商家ID和證書到平臺

00:11:26.987 --> 00:11:29.690 
平臺將爲你解密你只需發送
一個支付令牌給平臺

00:11:30.457 --> 00:11:33.193 
一些支付平臺實際上

00:11:33.260 --> 00:11:35.963 
在Swift或者C語言上
提供一些本地iOS發展配套原件

00:11:36.129 --> 00:11:38.532 
因此你可以很容易地啓動並運行

00:11:39.433 --> 00:11:41.768 
由於這原因我們認爲支付平臺對於

00:11:42.302 --> 00:11:43.570 
大多數開發者來說是首選

00:11:45.405 --> 00:11:48.375 
許多許多的支付平臺已經支持蘋果支付

00:11:48.942 --> 00:11:51.545 
這只是其中的一小部分還有許多
其它的我們把她們列成了

00:11:51.612 --> 00:11:52.913 
清單放在了我們的網站上

00:11:54.081 --> 00:11:55.115 
這些是在美國的

00:11:55.549 --> 00:11:57.718 
很有可能你已經
使用了這些當中的其中一個

00:11:58.619 --> 00:12:01.154 
許多英國支付程序已經

00:12:01.221 --> 00:12:02.389 
可以支持蘋果支付

00:12:02.789 --> 00:12:04.391 
如果你在英國你現在就可以回公司

00:12:04.458 --> 00:12:05.659 
商量如何使用支付程序

00:12:08.195 --> 00:12:10.430 
現在 正如我說的還有其它一種方法 

00:12:11.298 --> 00:12:12.833 
那就是你自行處理支付

00:12:14.134 --> 00:12:16.737 
現在我們推薦這種方法給你

00:12:16.803 --> 00:12:20.207 
如果你很擅長處理支付問題
並且你有一些現有支付基礎構架 

00:12:20.707 --> 00:12:21.575 
如果你需要這樣做 

00:12:22.042 --> 00:12:25.078 
你可以在自己的服務
器上解密支付令牌 

00:12:25.646 --> 00:12:28.015 
然後發送底層密碼文件 

00:12:28.148 --> 00:12:29.550 
那就是爲商家收單者

00:12:30.350 --> 00:12:32.753 
即收單銀行生成的安全原件

00:12:34.021 --> 00:12:36.790 
如果你覺得不合理再次說明

00:12:37.090 --> 00:12:39.459 
我們只在你有現有支付
基礎構架的前提下

00:12:39.526 --> 00:12:40.894 
向你推薦這種方法 

00:12:40.961 --> 00:12:43.297 
今天我們不會涉及到解密令牌

00:12:43.931 --> 00:12:45.499 
但是如果你想了解更多

00:12:45.566 --> 00:12:47.968 
關於該部分的內容
我們已經將一些文檔放在網站上 

00:12:48.235 --> 00:12:49.937 
你可以在網站上查找
支付令牌相關文件 

00:12:50.070 --> 00:12:52.573 
同樣今天和明天
我們將有工作人員在實驗室裏 

00:12:52.639 --> 00:12:55.843 
他們可以回答你們
關於自行處理支付的問題

00:12:58.846 --> 00:13:01.081 
好的 這是對如何使用蘋果支付 

00:13:01.682 --> 00:13:04.184 
它如何完成付款的一點簡單介紹

00:13:04.251 --> 00:13:08.555 
我想我們現在可以看看iOS這邊了 

00:13:09.423 --> 00:13:11.525 
第一步就是要查看設計 

00:13:12.059 --> 00:13:14.428 
非常重要的是當你
使用蘋果支付的時候 

00:13:14.494 --> 00:13:16.530 
要確保你的應用
充分利用了我們提供的功能

00:13:16.730 --> 00:13:18.365 
以及我們提供的設計

00:13:18.866 --> 00:13:21.602 
關於這方面更多的東西我將請理查

00:13:22.269 --> 00:13:24.805 
來爲你講講如何獲得蘋果支付
的最佳用戶體驗

00:13:25.239 --> 00:13:26.073 
理查

00:13:31.578 --> 00:13:35.649 
大家好 我是理查·勞斯
我是蘋果公司的

00:13:35.716 --> 00:13:38.485 
一個用戶體驗專員今天我在這裏講講

00:13:38.552 --> 00:13:40.220 
如何在你的應用裏使用蘋果支付

00:13:40.721 --> 00:13:42.456 
得到最佳的體驗

00:13:43.657 --> 00:13:46.660 
嗯 正如尼克說的用戶喜歡蘋果支付 

00:13:46.727 --> 00:13:48.495 
因爲它使購物變的容易

00:13:48.896 --> 00:13:51.131 
作爲一個商家這對你來說是非常好的 

00:13:51.198 --> 00:13:53.567 
因爲購物越容易

00:13:54.067 --> 00:13:55.903 
交易就越容易達成

00:13:56.904 --> 00:14:00.274 
現在人們的購買慾可以是很短暫的

00:14:00.741 --> 00:14:06.013 
因此任何影響交易流的障礙
都可能使交易終止

00:14:07.014 --> 00:14:10.551 
好消息是蘋果支付會提供所有

00:14:10.617 --> 00:14:13.520 
你完成交易所需要的東西 
因此你可以消除

00:14:13.587 --> 00:14:16.123 
現如今阻礙交易達成的許多障礙

00:14:17.257 --> 00:14:19.493 
沒有必要讓人們在

00:14:19.593 --> 00:14:21.862 
購物之前註冊一個賬號

00:14:23.330 --> 00:14:27.668 
我想不會有人喜歡繁瑣的形式填寫表格

00:14:29.303 --> 00:14:32.039 
你不必擔心過時的賬單

00:14:32.105 --> 00:14:35.642 
配送信息幹擾
或者瞭解誰購買了什麼東西

00:14:36.710 --> 00:14:40.214 
最近我提出任何時候我要購物

00:14:40.747 --> 00:14:42.482 
如果應用不使用蘋果支付

00:14:42.950 --> 00:14:47.921 
我就必須經歷
更新賬單及麻煩的配送信息

00:14:48.689 --> 00:14:51.758 
如果我時間緊迫或者沒有心情

00:14:51.825 --> 00:14:54.528 
填一堆表格我會選擇

00:14:54.595 --> 00:14:57.097 
走開而不是把表格填好

00:14:58.165 --> 00:14:59.066 
讓我給你舉一個例子

00:14:59.132 --> 00:15:01.168 
關於如果沒有蘋果支付
情況會是什麼樣子的

00:15:02.469 --> 00:15:04.972 
假設我的狗需要一個新的項圈

00:15:05.506 --> 00:15:07.174 
我的朋友告訴我這家店

00:15:07.241 --> 00:15:08.942 
生產很棒的寵物物品

00:15:09.209 --> 00:15:11.612 
我會下載他們的應用開始找商品

00:15:13.046 --> 00:15:15.349 
哦 我要做的第一件事竟然是註冊

00:15:16.383 --> 00:15:20.521 
嗯 我的朋友告訴我
這邊的寵物物品很棒

00:15:20.587 --> 00:15:23.724 
這對我的狗來說是一件很棒的事

00:15:23.790 --> 00:15:24.992 
因此我繼續並註冊

00:15:25.559 --> 00:15:28.929 
即使是我很有可能
收到一些我現在不想要的郵件簡訊

00:15:30.864 --> 00:15:33.200 
啊 下一步竟然是創建一個賬號

00:15:34.101 --> 00:15:37.504 
我還沒買任何東西
我也不確定是否會買東西

00:15:38.071 --> 00:15:42.376 
正常情況下到這個點
我就會徹底關閉這個應用 

00:15:42.643 --> 00:15:46.013 
但是因爲你們大家都在這裏我將繼續

00:15:46.079 --> 00:15:47.147 
我將完成這些

00:15:48.215 --> 00:15:50.884 
最後 我找到了狗項圈這太好了

00:15:50.951 --> 00:15:52.553 
我的狗戴上它一定很棒

00:15:52.953 --> 00:15:55.289 
我開始交易過程

00:15:56.723 --> 00:15:58.792 
好的 首先是賬單信息

00:15:59.226 --> 00:16:02.996 
有許多類型需要區分我住在公寓裏 

00:16:03.063 --> 00:16:06.633 
所以我要從鍵盤上輸入
對應我公寓號的號碼

00:16:08.202 --> 00:16:11.205 
我想要它運輸到
我上班的地方而不是家裏 

00:16:11.271 --> 00:16:13.874 
所以我也要輸入這些信息

00:16:15.142 --> 00:16:17.044 
好的 配送選項

00:16:17.110 --> 00:16:18.979 
好的 好的 我將選擇其中之一

00:16:19.913 --> 00:16:22.416 
最後 這裏就是我將從我的口袋裏

00:16:22.482 --> 00:16:25.619 
拿出信用卡並輸入所有信息的地方

00:16:26.720 --> 00:16:29.823 
需要六次輸入以及一大堆的打字

00:16:30.591 --> 00:16:34.461 
讓我分心的時間太多了

00:16:34.695 --> 00:16:38.265 
容易被打斷 感到沮喪 甚至離開

00:16:39.833 --> 00:16:41.902 
如果我在我的上下班路上

00:16:41.969 --> 00:16:45.439 
搜尋這個狗項圈 嗯 當我站在

00:16:45.506 --> 00:16:47.641 
擁擠的月臺上讓我掏出我的信用卡

00:16:47.708 --> 00:16:49.243 
我真的高興不起來

00:16:49.510 --> 00:16:50.677 
真的不想這樣的情況

00:16:51.979 --> 00:16:54.515 
蘋果支付可以更加快速地完成這些

00:16:55.616 --> 00:16:56.450 
啓動應用

00:16:57.384 --> 00:17:00.020 
找到一個產品 無需註冊賬號

00:17:00.821 --> 00:17:02.256 
點擊蘋果支付按鈕

00:17:03.257 --> 00:17:05.291 
把我的大拇指
放到Touch ID 完成 

00:17:06.126 --> 00:17:08.127 
兩次點擊 不需要任何打字

00:17:08.829 --> 00:17:09.997 
這快多了

00:17:12.266 --> 00:17:15.669 
因爲蘋果支付
你省去了一大堆麻煩

00:17:16.236 --> 00:17:18.338 
更少次數的點擊意味着更多的銷售

00:17:19.873 --> 00:17:24.478 
接下來 讓我們討論
如何使蘋果支付整合到你的交易流

00:17:25.444 --> 00:17:29.416 
第一件要考慮的事是
讓人們可以快捷地購買物品

00:17:30.150 --> 00:17:32.686 
你不需要爲了開始交易過程

00:17:32.753 --> 00:17:35.155 
而把所有東西都放入購物車

00:17:36.523 --> 00:17:38.859 
這是Chairish 我正找尋
一些適合我家裏的

00:17:38.926 --> 00:17:40.994 
有趣的東西這些玻璃看起來很有趣

00:17:41.628 --> 00:17:43.130 
蘋果支付按鈕就在這裏

00:17:43.830 --> 00:17:46.500 
我不需要把它們放入購物車

00:17:46.567 --> 00:17:49.269 
然後點擊購物車 
然後說我準備好要結賬了

00:17:49.870 --> 00:17:52.306 
這種方法減少了完成交易

00:17:52.372 --> 00:17:53.774 
需要敲擊的次數

00:17:55.909 --> 00:17:58.011 
Groupon採取了一種
非常類似的方法

00:17:58.745 --> 00:18:01.014 
我即將在芝加哥度過幾個星期

00:18:01.181 --> 00:18:02.816 
我正找尋一些有趣的事來做

00:18:02.883 --> 00:18:04.084 
這看起來很有趣

00:18:04.852 --> 00:18:06.520 
因此當我點擊更多的信息

00:18:06.587 --> 00:18:09.089 
蘋果支付按鈕就在旁邊

00:18:09.656 --> 00:18:13.026 
這讓我很容易就可以快速購買

00:18:14.995 --> 00:18:19.066 
因此考慮一下添加蘋果支付按鈕
放在產品詳情旁邊

00:18:19.166 --> 00:18:22.102 
讓人們可以快捷地開始交易

00:18:23.904 --> 00:18:26.440 
嗯 如尼克說的用戶們喜歡蘋果支付

00:18:26.907 --> 00:18:29.576 
因此如果安裝到一臺支持的設備上

00:18:30.277 --> 00:18:32.279 
並別激活一張你接受的銀行卡 

00:18:32.646 --> 00:18:36.416 
很有可能他們將使用蘋果支付因此你
應當將蘋果支付設爲默認設置

00:18:37.484 --> 00:18:38.719 
現在尼克將向你展示

00:18:38.785 --> 00:18:39.953 
如何在幾分鐘內進行設置

00:18:40.554 --> 00:18:42.422 
如果他們沒有支持的設備

00:18:42.956 --> 00:18:45.359 
並且他們沒有激活的卡你也不接受 

00:18:45.492 --> 00:18:48.962 
那就沒有必要
展示蘋果支付按鈕或者信息 

00:18:49.530 --> 00:18:52.432 
僅需像今天那樣完成交易即可

00:18:53.267 --> 00:18:56.904 
但如果他們有 
默認蘋果支付爲支付方式 

00:18:57.004 --> 00:18:59.273 
然後突出展示這些按鈕

00:19:00.774 --> 00:19:05.279 
現在iOS 8.3蘋果支付按鈕
可以通過API使用

00:19:05.879 --> 00:19:08.348 
所以你無需擔心要調整圖形的大小

00:19:08.415 --> 00:19:10.083 
以及如何嵌入到你的應用

00:19:10.384 --> 00:19:11.418 
這是非常容易的

00:19:12.419 --> 00:19:15.122 
當你正考慮你要
你要將它們放置在哪裏 

00:19:15.722 --> 00:19:17.925 
他們應該至少與

00:19:18.325 --> 00:19:20.027 
其他付款方式按鈕一樣大

00:19:21.061 --> 00:19:22.896 
更大一點當然更好

00:19:24.965 --> 00:19:26.400 
這就是Fancy的做法

00:19:26.466 --> 00:19:28.802 
他們將蘋果支付按鈕放於添加

00:19:28.869 --> 00:19:32.706 
到購物車按鈕旁邊 
Shoptiques將它並排着放置

00:19:32.873 --> 00:19:34.842 
這些都是很好的實現方法

00:19:36.977 --> 00:19:39.813 
現在一旦你的用戶輕敲蘋果支付按鈕

00:19:40.147 --> 00:19:41.615 
下一個他們將看到的是付款單 

00:19:41.682 --> 00:19:45.953 
因此他們可以快速地
放下他們的大拇指並完成交易

00:19:46.753 --> 00:19:50.390 
你不會因爲被詢問其他任何信息
而打斷這個過程

00:19:50.991 --> 00:19:53.393 
只有當你將要銷售

00:19:53.460 --> 00:19:54.862 
即將達成的時候它纔會被打斷

00:19:57.097 --> 00:19:59.666 
蘋果支付將提供給你

00:19:59.733 --> 00:20:01.602 
所有完成交易需要的核心信息

00:20:02.035 --> 00:20:05.439 
有一件你可能需要提前做的是促銷代碼

00:20:05.506 --> 00:20:07.174 
或者其他打折代碼

00:20:08.108 --> 00:20:10.377 
在你的應用裏找到一個位置

00:20:10.444 --> 00:20:12.980 
像在家裏的地方在那裏當某人點擊

00:20:13.046 --> 00:20:15.048 
蘋果支付按鈕之後
它不會打斷出現的付款單

00:20:16.717 --> 00:20:18.886 
好的 我們說了很多關於付款單 

00:20:18.952 --> 00:20:20.320 
讓我給你一些提示 

00:20:20.420 --> 00:20:22.422 
關於自定義你所需要的東西

00:20:23.757 --> 00:20:25.826 
當然 你需要付款方式

00:20:25.893 --> 00:20:28.729 
但你還需要賬單 配送

00:20:28.795 --> 00:20:30.998 
和聯繫信息如果你使用蘋果支付 

00:20:32.766 --> 00:20:35.903 
正如尼克說的蘋果支付是相當安全的

00:20:36.036 --> 00:20:38.939 
我們希望你不需要

00:20:39.039 --> 00:20:40.874 
只是驗證而收到賬單信息

00:20:41.375 --> 00:20:44.278 
如果系統如果請求的
用戶仍然可以獲得賬單

00:20:45.746 --> 00:20:48.282 
如果你銷售實體產品你需要

00:20:48.515 --> 00:20:50.651 
將它發送給某人你需要一個配送地址

00:20:51.552 --> 00:20:54.721 
在付款單裏更改這些對於用戶來說

00:20:54.788 --> 00:20:55.856 
是很容易的

00:20:55.923 --> 00:20:59.026 
他們只需輕敲它付款單裏就會展示

00:20:59.092 --> 00:21:01.195 
最近用過的地址列表

00:21:01.695 --> 00:21:04.698 
並且可以快速添加一個新地址

00:21:05.666 --> 00:21:09.169 
你之前可能收集了

00:21:09.236 --> 00:21:11.405 
用戶已有的配送信息 

00:21:11.572 --> 00:21:14.875 
但正如我之前說的 
很有可能蘋果支付信息

00:21:14.942 --> 00:21:19.313 
是當前最新的因此我們推薦 ̨你相信它

00:21:21.381 --> 00:21:24.651 
你可以要求一封聯繫郵件和電話號碼

00:21:25.085 --> 00:21:27.421 
因此如果你想要通過確認郵件

00:21:27.487 --> 00:21:30.624 
跟蹤交易或者防止任何配送問題 
你可能需要一個電話號碼 

00:21:30.691 --> 00:21:33.360 
這些都是可以獲取的

00:21:34.194 --> 00:21:37.998 
在iOS 9你同樣可以
要求一個聯繫人名字

00:21:38.932 --> 00:21:41.702 
讓我們假設某人要訂一些食物

00:21:41.835 --> 00:21:43.170 
然後到餐廳裏選擇

00:21:43.370 --> 00:21:45.572 
你可能需要一個聯繫人名字 

00:21:45.639 --> 00:21:48.575 
當他們到達櫃檯的時候 
你可以告訴職員訂單是給哪個人的

00:21:50.677 --> 00:21:52.446 
現在 如果你不需要

00:21:52.513 --> 00:21:54.681 
所有這些信息不要提出請求

00:21:55.315 --> 00:21:58.652 
尊重你客戶的隱私只問他們需要什麼

00:21:59.319 --> 00:22:01.722 
Uber只要求郵件和電話號碼

00:22:01.855 --> 00:22:03.390 
他們不要求填配送地址

00:22:03.457 --> 00:22:04.391 
因爲他們不需要它

00:22:08.161 --> 00:22:10.664 
現在你可以具體說明配送方法

00:22:10.731 --> 00:22:12.733 
或在付款單中挑選出正確的方法

00:22:13.800 --> 00:22:16.403 
蘋果商店中提供
多種多樣的配送選擇

00:22:16.470 --> 00:22:18.238 
因此客戶可以點擊選擇

00:22:18.639 --> 00:22:20.607 
然後可以看見其它可行的選擇

00:22:21.241 --> 00:22:23.177 
那裏還有交付預測的位置 

00:22:23.644 --> 00:22:26.780 
因此你可以幫助你的客戶
選擇合適他們的選項

00:22:29.550 --> 00:22:33.453 
同樣還可以列出配送花費 稅收

00:22:33.654 --> 00:22:35.189 
甚至是負價值物品

00:22:35.255 --> 00:22:37.324 
如小計後的折扣

00:22:38.125 --> 00:22:42.296 
現在 這不是一行一行的

00:22:42.529 --> 00:22:43.897 
某人購買的所有產品清單 

00:22:44.464 --> 00:22:47.701 
而是加入小計的商品清單

00:22:49.336 --> 00:22:52.906 
因此在這裏你可以看到Keep 
是如何列出配送清單

00:22:52.973 --> 00:22:56.543 
稅收和商品小計處理

00:22:57.811 --> 00:23:00.781 
現在 如果你沒有任何這些產品 

00:23:00.848 --> 00:23:03.817 
你甚至不需要列出小計 
你可以只列出總計

00:23:04.418 --> 00:23:07.354 
這使得付款單簡潔 

00:23:07.487 --> 00:23:11.225 
這樣客戶就不用花太多時間在審覈上 
這就意味着更快速的交易時間

00:23:12.860 --> 00:23:14.528 
如果你增加產品你可以列出它們 

00:23:14.595 --> 00:23:17.464 
如果你沒有隻需展示總數

00:23:18.999 --> 00:23:20.667 
可能會出現一些總數

00:23:20.734 --> 00:23:22.769 
不清楚的例子

00:23:23.604 --> 00:23:26.440 
在這些情況下很重要的是

00:23:26.540 --> 00:23:28.208 
你要有一個清洗的預估

00:23:29.710 --> 00:23:32.913 
Uber在Bay地區
是一款非常流行的汽車服務應付

00:23:33.347 --> 00:23:36.917 
而且總價直到乘行結束纔會被結算

00:23:37.584 --> 00:23:39.419 
現在 它們處理付款單語言

00:23:39.486 --> 00:23:41.421 
非常清晰易懂

00:23:41.922 --> 00:23:47.361 
我發現總價總是在統計時間
和距離後可以計算得到

00:23:49.329 --> 00:23:51.198 
因此如果你正處理訂閱

00:23:51.265 --> 00:23:54.301 
反覆出現你預估的付款或情形 

00:23:54.701 --> 00:23:57.905 
確保你在付款單中使用的
語言是清晰易懂的 

00:23:58.238 --> 00:24:00.607 
因爲沒有人喜歡後來的驚喜收費

00:24:02.643 --> 00:24:05.779 
最後 確保你的地址你的公司名

00:24:06.380 --> 00:24:09.049 
顯示在付款單下方的總額旁邊

00:24:10.450 --> 00:24:13.086 
這就是客戶希望在

00:24:13.153 --> 00:24:15.889 
銀行費用上看見的名字和總額

00:24:16.390 --> 00:24:18.258 
因此在這裏

00:24:18.458 --> 00:24:21.895 
我清楚地看到Fancy
有一個299美元的費用

00:24:22.763 --> 00:24:26.900 
再次重複 沒人喜歡在他們的銀行
對賬單看到充滿疑問的費用

00:24:26.967 --> 00:24:28.135 
以及讓人驚訝的數量

00:24:28.335 --> 00:24:30.103 
因此現在你應該非常清楚了

00:24:31.839 --> 00:24:34.441 
這就是自定義付款單

00:24:34.508 --> 00:24:35.876 
另外一件你唯一要做的事情

00:24:35.943 --> 00:24:39.246 
是確認交易正如你今天已經做的那樣

00:24:40.380 --> 00:24:42.983 
一旦有客戶用Touch ID付款 

00:24:43.050 --> 00:24:45.519 
拇指打印按鈕將會變爲已完成狀態 

00:24:46.587 --> 00:24:49.923 
付款單將被確認用戶將返回到應用

00:24:50.657 --> 00:24:53.493 
<br/> 
因此你可以讓他們安心

00:24:54.061 --> 00:24:57.364 
告訴他們訂單已經在處理 

00:24:57.431 --> 00:24:59.933 
而且他們會在郵件中收到更多信息

00:25:02.569 --> 00:25:05.539 
當你正考慮如何使蘋果支付

00:25:05.606 --> 00:25:07.774 
整合到你的應用之中 

00:25:07.841 --> 00:25:09.943 
嘗試將所有的障礙移開進行一次購買

00:25:10.477 --> 00:25:14.448 
不需要讓人們在購買
東西前註冊一個賬號

00:25:16.049 --> 00:25:18.585 
明顯地展示蘋果支付按鈕

00:25:18.652 --> 00:25:21.788 
如果他們的設備支持蘋果支付
而且有你接受的已激活的銀行卡

00:25:22.756 --> 00:25:24.925 
你只要確保你定製的付款單

00:25:24.992 --> 00:25:26.026 
是合適的即可

00:25:26.360 --> 00:25:29.062 
別忘記把你的公司名放在

00:25:29.129 --> 00:25:33.333 
底部的總額旁邊然後確認交易
就像你今天做的那樣

00:25:34.568 --> 00:25:38.038 
我希望這些會
讓你在應用裏設置蘋果支付的時候

00:25:38.105 --> 00:25:39.573 
有一個好的體驗

00:25:40.040 --> 00:25:41.975 
我今天下午將在蘋果支付實驗室 

00:25:42.042 --> 00:25:45.245 
如果你還有任何關於
蘋果支付的UI問題 

00:25:45.312 --> 00:25:47.948 
或者你想要更多關於

00:25:48.815 --> 00:25:52.052 
如何在你的應用裏處理支付的建議 
我將很樂意爲你們解決 

00:25:52.786 --> 00:25:54.755 
但是現在我將把舞臺交回給尼克 

00:25:54.821 --> 00:25:57.224 
他將向你們展示如何將
所有這些放進代碼裏 謝謝

00:26:06.066 --> 00:26:06.900 
謝謝 理查

00:26:07.134 --> 00:26:09.837 
好的 我想我們已經
做好了準備看看總體情況了

00:26:10.003 --> 00:26:11.638 
我想我們已經準備好要談談一些代碼

00:26:12.272 --> 00:26:13.173 
這是非常令人激動的

00:26:14.775 --> 00:26:17.277 
現在我們將建立一個樣板應用

00:26:18.212 --> 00:26:21.648 
它將基於理查向你們展示的應用 

00:26:22.115 --> 00:26:23.483 
但我將把UI簡化很多

00:26:23.684 --> 00:26:25.118 
因爲我們只想專注於代碼

00:26:25.786 --> 00:26:27.020 
它將要求一項付款

00:26:27.654 --> 00:26:30.924 
它將展示付款單然後處理授權

00:26:32.693 --> 00:26:35.863 
在我們深究Xcode之前
讓我們來看看

00:26:36.163 --> 00:26:37.264 
組成蘋果支付的類

00:26:39.566 --> 00:26:41.969 
我要討論的第一類

00:26:42.169 --> 00:26:44.605 
是
PKPaymentSummaryItem

00:26:44.771 --> 00:26:46.807 
再次說明
蘋果支付存在於Passkit 

00:26:47.307 --> 00:26:48.542 
因此我們可以在那裏找到它

00:26:49.476 --> 00:26:53.247 
PKPaymentSummaryItem
描述你將在付款單上

00:26:53.313 --> 00:26:55.115 
索價的個別項目例如稅收 

00:26:55.349 --> 00:26:57.351 
配送 或總額

00:26:58.519 --> 00:27:03.991 
然後你把所有項目綜合起來
放入PKPaymentSummaryItem

00:27:05.092 --> 00:27:08.228 
現在PKPaymentRequest是一個對象

00:27:08.295 --> 00:27:10.531 
它描述你要索價的項目

00:27:10.731 --> 00:27:13.700 
以及你想如何支付的信息 

00:27:13.767 --> 00:27:15.836 
還有諸如你想要支持的卡網

00:27:16.069 --> 00:27:17.471 
你要求什麼樣的配送信息

00:27:17.538 --> 00:27:19.006 
如此這類的事

00:27:20.440 --> 00:27:22.176 
你作出詢問並將它發送

00:27:22.276 --> 00:27:25.345 
到PKPaymentAuthorization 
ViewController 

00:27:25.412 --> 00:27:26.880 
這是付款單類

00:27:27.648 --> 00:27:29.116 
就像其它所有視圖控制器

00:27:29.183 --> 00:27:31.652 
你運用
presentViewController進行展示

00:27:32.386 --> 00:27:35.856 
然後當這些都做完了你將接收到
一個PKPayment對象

00:27:36.990 --> 00:27:40.127 
一個PKPayment對象包含
你需要處理

00:27:40.194 --> 00:27:41.261 
付款的信息

00:27:42.062 --> 00:27:43.697 
以及展示確認單

00:27:43.764 --> 00:27:45.265 
或設備回執

00:27:45.332 --> 00:27:47.968 
可能需要的信息

00:27:51.271 --> 00:27:54.908 
因此第一件我們要做的事情是

00:27:55.275 --> 00:27:58.312 
檢查設備是否支持蘋果支付

00:28:00.214 --> 00:28:01.982 
我們要看看它們是否有

00:28:02.216 --> 00:28:03.350 
我們可接受的付款卡

00:28:03.917 --> 00:28:07.988 
首先 我創建一個
paymentNetworks數組

00:28:08.655 --> 00:28:11.358 
它包含字符串常量你可以

00:28:11.658 --> 00:28:13.627 
將它用於蘋果支付支持的網絡

00:28:14.161 --> 00:28:17.564 
我在這裏檢查用戶是否有任何
MasterCard或Visa卡

00:28:19.733 --> 00:28:20.968 
然後你將這個數組

00:28:21.201 --> 00:28:23.670 
傳輸到一個類
PKPaymentAuthorization

00:28:23.737 --> 00:28:25.138 
ViewController

00:28:25.339 --> 00:28:28.041 
它稱爲
canMakePaymentsUsingNetworks

00:28:29.042 --> 00:28:32.913 
現在 如果這返回爲真你將知道用戶

00:28:32.980 --> 00:28:34.915 
創建了蘋果支付

00:28:35.082 --> 00:28:37.484 
並且他們有與你要求相匹配的卡
他們可以付款

00:28:38.919 --> 00:28:41.388 
如果返回爲假你可以把用戶

00:28:41.555 --> 00:28:43.123 
帶到傳統支付流

00:28:44.424 --> 00:28:47.394 
現在你同樣可以用其它一些方法

00:28:48.061 --> 00:28:51.265 
我們有一個方法可以測試硬件
是否支持蘋果

00:28:51.331 --> 00:28:53.600 
因此你不必做任何複雜的設備檢查

00:28:53.667 --> 00:28:55.769 
你只需要調用
canMakePayments 

00:28:55.836 --> 00:28:56.904 
然後它將回饋給你爲真

00:28:56.970 --> 00:28:59.173 
如果設備有支持蘋果支付的硬件

00:29:00.107 --> 00:29:03.544 
在iOS9中 有一點新的
你同樣可以檢查

00:29:03.710 --> 00:29:07.681 
銀行卡的容量容量主要指的是信用額度

00:29:08.415 --> 00:29:11.585 
我想這在英國和歐洲是非常實用的

00:29:11.785 --> 00:29:15.589 
在那裏你可能
只想對借記卡進行檢查或收費

00:29:19.259 --> 00:29:22.863 
假設用戶有一張卡可以用於付款

00:29:24.264 --> 00:29:26.133 
讓我們創建一個PK付款請求

00:29:27.000 --> 00:29:28.435 
讓我們將讓付款生效

00:29:29.670 --> 00:29:31.672 
因此我們想要做的第一件事

00:29:32.239 --> 00:29:35.209 
是傳輸我們的商家識別符以便我們知道

00:29:35.809 --> 00:29:37.911 
如何正確地加密付款

00:29:38.846 --> 00:29:40.981 
現在你可能已經在開發者門戶網站

00:29:41.114 --> 00:29:43.951 
或者在Xcode屬性窗口設置了

00:29:44.284 --> 00:29:46.520 
如果你使用Xcode你也獲得權限

00:29:47.054 --> 00:29:48.922 
因爲所有這些API都授權了

00:29:50.691 --> 00:29:52.626 
然後你輸入一個國家代碼

00:29:52.693 --> 00:29:55.896 
這是一個標準的ISO
國家代碼它是你的

00:29:56.597 --> 00:29:58.298 
付款處理器你將進行

00:29:58.365 --> 00:30:00.200 
收費的所在國家的代碼

00:30:00.267 --> 00:30:02.102 
不是用戶或者

00:30:02.669 --> 00:30:05.372 
貨幣所在的國家因爲有貨幣代碼

00:30:05.439 --> 00:30:09.643 
用來表示貨幣
在ISO標準代碼中同樣如此

00:30:10.511 --> 00:30:12.813 
你可以在蘋果支付中
收取任何你想要的貨幣

00:30:13.413 --> 00:30:17.050 
這裏我僅用USD但如果你想變爲英鎊

00:30:17.117 --> 00:30:18.585 
或歐元這是很容易做到的

00:30:20.954 --> 00:30:23.023 
下一步你將提供一些
supportedNetworks

00:30:24.091 --> 00:30:25.993 
supportedNetworks
再次說明

00:30:26.059 --> 00:30:27.561 
它是一個類似
canMakePayments的數組

00:30:27.628 --> 00:30:29.296 
檢查你接受的
supportedNetworks

00:30:29.363 --> 00:30:31.298 
在這裏我作出一點點變化

00:30:31.565 --> 00:30:34.368 
我說我可以支持American
 Express和Visa卡

00:30:36.436 --> 00:30:37.437 
這裏還有另外一個

00:30:37.571 --> 00:30:39.273 
在PaymentRequest上
需要的特性

00:30:39.339 --> 00:30:41.074 
它起初看起來有點神祕

00:30:41.675 --> 00:30:43.844 
那就是
merchantCapabilities

00:30:44.378 --> 00:30:48.582 
結果是我們有兩種方法生成付款數據

00:30:48.649 --> 00:30:51.685 
其中一種叫3DS另一種叫EMV

00:30:52.119 --> 00:30:55.722 
你不需要知道他們是如何運行的

00:30:56.156 --> 00:30:58.725 
你們中大多數人都會使用3DS 

00:30:58.792 --> 00:31:01.128 
你應該檢查你的付款處理器
或者諮詢銀行

00:31:01.195 --> 00:31:02.963 
讓它們爲你進行正確的設置

00:31:03.297 --> 00:31:05.265 
再次說明
你們中的大多數都會用3DS 

00:31:05.532 --> 00:31:09.636 
但是付款平臺或者處理器會給你
你需要的精確的建議

00:31:10.103 --> 00:31:12.773 
3DS標準就點到爲止

00:31:14.474 --> 00:31:18.745 
最後PaymentRequest
最後一個也可能是最重要的屬性

00:31:19.279 --> 00:31:20.647 
那就是我們實際要收費的東西

00:31:22.082 --> 00:31:24.218 
現在在我們討論它之前我們先看看

00:31:24.284 --> 00:31:26.653 
一些iOS 9裏的新東西

00:31:27.354 --> 00:31:29.756 
你可以使用
merchantCapabilities屬性

00:31:29.823 --> 00:31:32.526 
來允許某些類型的卡可用於付款

00:31:32.860 --> 00:31:36.196 
這有一些掩碼如果你想把
卡限制爲借記卡

00:31:36.630 --> 00:31:39.066 
相比於在美國這方案在歐洲更普遍

00:31:39.132 --> 00:31:40.968 
你可以很容易地做到

00:31:43.737 --> 00:31:47.241 
因此一個
PKPaymentSummaryItem 

00:31:47.508 --> 00:31:49.543 
描述一些你想要收費的信息

00:31:49.910 --> 00:31:52.513 
它有一個數量和一個標籤

00:31:52.579 --> 00:31:54.047 
標籤是一個字符串

00:31:54.381 --> 00:31:57.551 
數量是一個類
稱爲NSDecimalNumber

00:31:58.085 --> 00:32:01.889 
它是一個Cocoa類之前你可能已經
發現NSDecimalNumber 

00:32:01.989 --> 00:32:04.258 
它精確地表示基數10的浮動點數

00:32:04.324 --> 00:32:07.594 
當你處理財務和貨幣工作時

00:32:07.861 --> 00:32:09.663 
浮動點數非常重要

00:32:10.597 --> 00:32:13.700 
因此這避免了任何基礎2的浮點錯誤

00:32:14.401 --> 00:32:16.370 
這裏有一些很方便的初始化器

00:32:16.436 --> 00:32:17.704 
它有一些字符串初始化器

00:32:18.405 --> 00:32:20.107 
它同樣有一對初始化器

00:32:20.174 --> 00:32:22.543 
你可以從另外一個
NSDecimalNumber

00:32:23.076 --> 00:32:24.378 
進行初始化 我將使用字符串

00:32:25.179 --> 00:32:27.447 
我在這裏創建一個總結項目

00:32:27.514 --> 00:32:30.450 
因爲正如理查說的
我如果只有一件東西想要收費

00:32:30.517 --> 00:32:31.952 
我應該只有一個單獨的總額

00:32:32.452 --> 00:32:36.323 
標籤是Apple Inc 
因爲那是將在賬單上顯示的物品

00:32:37.124 --> 00:32:40.694 
我從字符串中
創建一個數額$349.99

00:32:41.628 --> 00:32:43.230 
在我的數組中只有一個單獨的項目

00:32:43.297 --> 00:32:45.065 
我將它傳到我的
SummaryItems

00:32:46.266 --> 00:32:48.035 
強調說明一下總結項目數組

00:32:48.101 --> 00:32:50.838 
最後一個項目是你想要收費的總數

00:32:50.938 --> 00:32:53.407 
這是我們將授權併發送給你的

00:32:56.310 --> 00:32:58.278 
付款請求很完美

00:32:58.645 --> 00:32:59.646 
我們爲把請求發送到

00:33:00.180 --> 00:33:02.182 
請求付款授權的視圖控制器

00:33:03.784 --> 00:33:05.819 
這裏顯示了付款信息 

00:33:06.053 --> 00:33:08.288 
在應用上是這樣顯示模塊

00:33:09.156 --> 00:33:12.526 
在iPad上 則是一種形式單
是多任務形式單

00:33:12.593 --> 00:33:14.494 
它將覆蓋整個屏幕

00:33:14.561 --> 00:33:16.330 
如果你有兩個並排應用

00:33:16.396 --> 00:33:19.266 
它們不會同時對兩件東西收費

00:33:19.433 --> 00:33:20.734 
它完全是模塊顯示的

00:33:22.569 --> 00:33:24.872 
它的初始化很簡單

00:33:25.172 --> 00:33:26.640 
僅需通過
paymentRequest

00:33:26.840 --> 00:33:29.343 
它同樣有個指派我們等會會說到

00:33:30.477 --> 00:33:32.412 
你展示它就像其它任何控制器

00:33:32.513 --> 00:33:34.882 
你很有可能想要通過動畫進行展示

00:33:37.251 --> 00:33:39.820 
而且你可能想要使用
蘋果支付按鈕進行展示

00:33:40.787 --> 00:33:45.559 
現在 從iOS8.3開始我們有這個
很棒的類PKPaymentButton

00:33:46.793 --> 00:33:49.196 
它有各種顏色的預定款式

00:33:49.496 --> 00:33:51.732 
而且很重要的是它已經完全本地化

00:33:51.798 --> 00:33:53.200 
因此我們真的推薦你使用

00:33:54.601 --> 00:33:57.037 
它就像一個UI按鈕
它是一個UIButton子類

00:33:57.171 --> 00:33:59.606 
如果你需要8.3版本以下的

00:33:59.706 --> 00:34:01.408 
在我們的開發者網站

00:34:01.608 --> 00:34:03.243 
有一些可用的圖片你可以使用

00:34:03.410 --> 00:34:05.279 
在環節的末尾
會有一個鏈接

00:34:07.714 --> 00:34:13.687 
關鍵時刻到了
讓我們看看演示是否能夠成功

00:34:14.487 --> 00:34:16.556 
我們將轉換到演示機器

00:34:19.426 --> 00:34:20.260 
漂亮

00:34:20.594 --> 00:34:23.096 
好的 在這裏
我創建了一些很簡單的應用 

00:34:23.230 --> 00:34:25.364 
所有這些樣板代碼也將在

00:34:25.431 --> 00:34:28.335 
開發者網站上可以下載

00:34:29.902 --> 00:34:31.405 
讓我們看看它現在是什麼樣子的

00:34:31.471 --> 00:34:33.239 
我還沒有在蘋果支付裏執行任何東西

00:34:35.475 --> 00:34:36.643 
讓我麼把模擬器弄小一點

00:34:37.210 --> 00:34:39.146 
一個小的購物應用

00:34:40.581 --> 00:34:43.784 
你可以看見我獲得一些價格
和通過蘋果支付按鈕購買的描述

00:34:44.952 --> 00:34:45.985 
好的 什麼事也沒發生

00:34:46.753 --> 00:34:47.688 
讓我們把代碼放進去

00:34:48.554 --> 00:34:50.257 
讓我們談談到目前爲止我獲得了什麼

00:34:50.324 --> 00:34:54.360 
在這裏你可以看見我有一個
canMakePaymentsUsingNetworks

00:34:56.063 --> 00:34:58.265 
我還有這個
supportedNetworks屬性

00:34:58.332 --> 00:34:59.900 
因此我進一步地明確這些

00:35:00.200 --> 00:35:01.335 
讓我們看看那些

00:35:02.236 --> 00:35:03.070 
這裏

00:35:04.037 --> 00:35:07.708 
你可以看到我支持所有四種銀行卡
American Express卡

00:35:08.108 --> 00:35:10.644 
Discover卡 
MasterCard卡和Visa卡

00:35:12.312 --> 00:35:14.047 
如果支持可用我會添加一個按鈕

00:35:14.815 --> 00:35:18.151 
我有這種
applePayButtonPressed方法

00:35:18.318 --> 00:35:20.087 
因此我將添加內容到那裏

00:35:20.621 --> 00:35:22.456 
讓我們設置我們的
paymentRequest

00:35:23.257 --> 00:35:24.324 
好的 在我們開始設置

00:35:24.391 --> 00:35:26.260 
在設置paymentRequest
之前我們要再三檢查

00:35:26.326 --> 00:35:27.394 
我們的權限已經設置好

00:35:27.895 --> 00:35:30.063 
所以它們全都列舉在權限裏

00:35:30.731 --> 00:35:32.299 
你可以看見我的有點紅

00:35:32.432 --> 00:35:33.333 
但不用擔心

00:35:33.500 --> 00:35:35.068 
稍後你將看見這是爲什麼

00:35:37.271 --> 00:35:38.672 
好的 讓我們返回到我們的代碼

00:35:39.673 --> 00:35:41.975 
讓我們設置它創建我們的
paymentRequest

00:35:42.843 --> 00:35:44.845 
我們一行一行地看發生了什麼

00:35:45.546 --> 00:35:46.547 
把滾動條向上滾動一點

00:35:47.648 --> 00:35:51.084 
好的 首先我們
創建paymentRequest 

00:35:51.818 --> 00:35:54.922 
然後我們傳輸商家識別符

00:35:54.988 --> 00:35:58.258 
爲了方便起見 我將它界定爲結構類屬

00:35:59.860 --> 00:36:02.129 
然後我傳輸必要屬性
countryCode

00:36:02.196 --> 00:36:05.399 
和currencyCode 現在在
這個情況下我的應用只以USD收費

00:36:06.967 --> 00:36:09.436 
我同樣將它傳輸到
supportedNetworks

00:36:11.371 --> 00:36:13.607 
現在 我和我的付款處理器對話

00:36:13.674 --> 00:36:15.843 
它們告訴我
應該使用3DS作爲我的屬性

00:36:16.877 --> 00:36:17.711 
我已經按如此做了

00:36:18.812 --> 00:36:21.682 
我也想
創建我的SummaryItems

00:36:21.748 --> 00:36:24.218 
我這裏有一個
很方便的方法 將它隱藏起來了

00:36:24.284 --> 00:36:25.786 
但它將創建一個產品

00:36:25.853 --> 00:36:28.989 
在這個應用裏所有的
產品都來自appealists

00:36:29.523 --> 00:36:30.724 
這是一個人爲的例子

00:36:31.258 --> 00:36:32.926 
它將爲我生成一個總結版本

00:36:33.594 --> 00:36:36.196 
我們將更加仔細地看看

00:36:37.464 --> 00:36:40.801 
好的 現在我已經準備就緒了
展示視圖控制器

00:36:42.336 --> 00:36:44.271 
再次說明它被
PaymentRequest初始化

00:36:44.338 --> 00:36:45.172 
並獲得一個授權

00:36:46.473 --> 00:36:47.875 
我的授權方法在這裏

00:36:47.941 --> 00:36:48.775 
我們將再次查看

00:36:49.543 --> 00:36:50.477 
我只能展示它

00:36:51.011 --> 00:36:52.779 
讓我們運行它

00:36:55.782 --> 00:36:58.785 
我剛想到某些東西我不知道

00:36:58.852 --> 00:37:01.255 
你們當中是否有人
嘗試在iOS8中使用蘋果支付

00:37:01.421 --> 00:37:02.923 
而實際上無法在模擬器上運行

00:37:02.990 --> 00:37:05.559 
因此我可能會有許多問題

00:37:06.026 --> 00:37:06.860 
讓我們看看

00:37:07.961 --> 00:37:11.131 
哦 好的 我猜蘋果支付
現在再模擬器上運行了

00:37:14.134 --> 00:37:16.970 
iOS 9支持蘋果支付

00:37:17.037 --> 00:37:19.239 
我們將售賣你需要的

00:37:19.773 --> 00:37:21.942 
各種制式模擬卡

00:37:22.242 --> 00:37:23.143 
它們隱藏在這裏

00:37:25.078 --> 00:37:27.714 
讓我們通過密碼付款
而無需Touch ID

00:37:27.781 --> 00:37:30.517 
哦 好的 我猜我又有一個難題

00:37:30.584 --> 00:37:33.253 
這就是這些麻煩的指派方法

00:37:34.254 --> 00:37:36.490 
讓我們談談這裏我們還需做些什麼

00:37:36.557 --> 00:37:39.760 
讓我們談談一旦情況發生
我們如何處理指派

00:37:43.830 --> 00:37:45.799 
因此一旦用戶Touch ID 

00:37:45.866 --> 00:37:48.068 
我們將在
PaymentAuthorization

00:37:48.135 --> 00:37:51.004 
ViewControllerDelegate
收到一些反饋

00:37:51.772 --> 00:37:53.140 
我們將使用這些指派

00:37:53.273 --> 00:37:55.676 
來確認我們是否收到

00:37:56.143 --> 00:37:57.678 
付款以及是否可以處理它們

00:37:59.012 --> 00:38:01.715 
現在 有兩種指派方法

00:38:02.583 --> 00:38:05.185 
第一種方法是
paymentAuthorization

00:38:05.252 --> 00:38:08.155 
ViewController
didAuthorizationPayment

00:38:08.589 --> 00:38:10.824 
你將取回一個PKPayment對象

00:38:11.491 --> 00:38:15.963 
你返回一個完成處理器
一個帶有狀態的數據塊

00:38:16.096 --> 00:38:18.732 
這個狀態會告訴我們你是否可以

00:38:18.799 --> 00:38:20.734 
在自己的服務器上處理付款

00:38:21.068 --> 00:38:23.170 
這個情況下
我們將在表單上顯示一個核對符

00:38:23.737 --> 00:38:26.974 
或者如果有什麼錯誤
我們將告訴用戶發生了什麼

00:38:28.308 --> 00:38:30.210 
然後你需要釋放付款視圖控制器

00:38:30.344 --> 00:38:32.045 
這會發生在另外一個指派方法

00:38:32.145 --> 00:38:33.847 
因此你不能在
didAuthorizationPayment中

00:38:33.947 --> 00:38:35.482 
釋放視圖控制器

00:38:35.716 --> 00:38:36.550 
你想要指派它

00:38:37.050 --> 00:38:40.554 
paymentAuthorization
ViewControllerDidFinish

00:38:42.456 --> 00:38:43.757 
現在PKPayment對象

00:38:43.824 --> 00:38:46.226 
它將取回其它
包含PKPayment令牌的對象

00:38:46.293 --> 00:38:47.461 
在成功授權之後

00:38:48.362 --> 00:38:50.330 
它將返回這就是你要

00:38:51.164 --> 00:38:54.301 
發送到付款處理器
或你自己的服務器上的

00:38:54.968 --> 00:38:56.837 
它將獲得加密的付款數據

00:38:57.171 --> 00:38:59.373 
和任何其它你可能需要的元數據

00:38:59.940 --> 00:39:00.807 
所以 關於配送地址

00:39:02.576 --> 00:39:03.777 
好的讓我們把這些添加進去

00:39:03.844 --> 00:39:05.946 
我們把它放入到應用中

00:39:10.117 --> 00:39:14.388 
好的讓我們首先做
didAuthorizationPayment

00:39:14.454 --> 00:39:17.691 
現在 我將整合今天的付款處理器

00:39:18.192 --> 00:39:20.661 
所以 你只需要想象這些完成

00:39:21.295 --> 00:39:22.863 
這就是我將發佈到服務器的東西

00:39:24.998 --> 00:39:25.832 
我們繼續

00:39:27.434 --> 00:39:29.770 
現在我獲得一個應用聯線

00:39:29.870 --> 00:39:31.738 
用於發送確認表

00:39:32.906 --> 00:39:34.675 
已經定義好了 我必須找到它

00:39:36.710 --> 00:39:40.247 
找到了 我有一個簡單的聯線
在paymentToken上屬性

00:39:40.314 --> 00:39:42.449 
我們稱之爲交易識別符

00:39:43.250 --> 00:39:45.219 
PKPayment令牌如我所說

00:39:45.285 --> 00:39:47.120 
它包含你需要的付款信息

00:39:47.254 --> 00:39:50.290 
它也獲取一些有用的
你可能想要顯示在收據中的元數據

00:39:51.058 --> 00:39:54.061 
比如銀行卡名稱的淨化版本

00:39:54.628 --> 00:39:56.597 
這個東西稱爲交易識別符

00:39:57.130 --> 00:39:58.365 
這保證是唯一的

00:39:58.765 --> 00:40:00.934 
如果你喜歡你可以使用它
你可以在收據中使用它

00:40:01.001 --> 00:40:02.870 
它對每個蘋果支付購買都是唯一的

00:40:05.205 --> 00:40:07.074 
最後但不是最重要的我可能想要

00:40:07.140 --> 00:40:08.542 
釋放我的視圖控制器

00:40:10.143 --> 00:40:10.978 
我們繼續

00:40:12.045 --> 00:40:14.147 
現在 我發送成功了

00:40:14.414 --> 00:40:17.384 
但我們有一些其它
狀態如果你想你可以發送

00:40:20.754 --> 00:40:23.757 
成功與失敗
在你嘗試授權它的時候

00:40:23.824 --> 00:40:25.025 
可能某些東西產生了錯誤

00:40:25.492 --> 00:40:28.195 
正如我們後來看到的我們有其它的狀態

00:40:28.262 --> 00:40:31.598 
如無效支付地址以及無效郵寄地址

00:40:32.099 --> 00:40:34.034 
或者沒有提供足夠的聯繫信息

00:40:36.036 --> 00:40:37.704 
好的 讓我們運行它

00:40:39.840 --> 00:40:43.210 
因爲我覺得因此我想找鋁顏色

00:40:43.277 --> 00:40:45.779 
這次在WWDC我們沒有足夠的鋁

00:40:47.981 --> 00:40:49.016 
好的 用密碼支付

00:40:50.150 --> 00:40:51.151 
好的 很好

00:40:51.218 --> 00:40:52.886 
你看交易識別器這裏顯示

00:40:53.020 --> 00:40:54.054 
模擬識別器

00:40:54.521 --> 00:40:57.858 
這是因爲我在模擬器上
它返回給我虛擬信息

00:40:57.991 --> 00:40:59.993 
如果這是一個真的設備

00:41:00.194 --> 00:41:01.495 
我將有一個真實的交易識別符

00:41:02.529 --> 00:41:04.865 
我也將它發送到我自己的
服務器進行處理

00:41:05.866 --> 00:41:08.936 
我有一個應用可以接受蘋果支付和付款

00:41:09.203 --> 00:41:11.171 
這看起來我不需要太多代碼 對嗎

00:41:11.238 --> 00:41:12.840 
我想十幾行就可以了

00:41:13.841 --> 00:41:15.342 
我的應用裏有一個小問題

00:41:16.376 --> 00:41:18.912 
我購買狗項圈
但我不知道要把它們運到哪裏

00:41:19.580 --> 00:41:21.215 
所以我們必須把這安排好

00:41:21.515 --> 00:41:25.519 
我們必須看看我們如何獲得聯繫信息

00:41:27.120 --> 00:41:28.789 
你可以在付款請求上

00:41:28.856 --> 00:41:31.692 
使用一些掩碼來請求用戶的聯繫信息

00:41:31.859 --> 00:41:34.361 
這叫做
requiredShippingAddressFields

00:41:34.795 --> 00:41:39.166 
我們有郵寄地址 郵件和電話 
然後在iOS8.3 

00:41:39.399 --> 00:41:41.502 
我們引入了名字它僅僅是名字

00:41:41.568 --> 00:41:43.504 
因此如果你是一個共享類應用

00:41:43.570 --> 00:41:44.938 
你不想收集用戶的郵寄姓名

00:41:45.305 --> 00:41:47.174 
但你想要他們的名字讓司機知道如何

00:41:47.241 --> 00:41:48.809 
稱呼他們 你可以使用那個名字

00:41:51.812 --> 00:41:56.116 
另外你還可以請求賬單 賬單地址

00:41:56.450 --> 00:41:58.952 
這是另外一些
帶有需要的賬單地址區域的掩碼

00:41:59.753 --> 00:42:02.723 
對於所有這些聯繫信息我們建議你

00:42:02.856 --> 00:42:05.459 
不要請求它除非你絕對需要它

00:42:06.493 --> 00:42:09.563 
這很重要 用戶喜歡蘋果支付
是因爲它快速且易於使用

00:42:10.163 --> 00:42:11.331 
因此你不要反其道而行

00:42:12.065 --> 00:42:13.133 
尤其是賬單地址

00:42:13.200 --> 00:42:15.302 
處理蘋果支付並不需要該地址

00:42:15.402 --> 00:42:17.004 
付款過程也不需要用到

00:42:17.738 --> 00:42:19.940 
出於這個原因我們建議你不要請求它

00:42:20.007 --> 00:42:21.942 
但是我們明白你們中的
一部分人可能會有平臺

00:42:22.009 --> 00:42:24.044 
欺詐系統 現有結構

00:42:24.111 --> 00:42:27.014 
因此這樣的情況下你需要請求

00:42:27.080 --> 00:42:29.016 
但是請想一想避免的方法

00:42:31.418 --> 00:42:35.722 
因此聯繫人信息

00:42:36.089 --> 00:42:37.090 
與配送成本聯繫在一起

00:42:37.758 --> 00:42:40.394 
因爲用戶可以在蘋果支付單裏

00:42:40.460 --> 00:42:42.663 
更新配送信息或許你想要

00:42:42.729 --> 00:42:44.031 
更新收費的價格

00:42:45.132 --> 00:42:48.302 
所以你將通過選擇性指派方法
接收到一個回調函數

00:42:48.769 --> 00:42:51.205 
paymentAuthorization
ViewController

00:42:51.271 --> 00:42:53.273 
didSelectShippingContact

00:42:54.541 --> 00:42:58.846 
它返還給你一個聯繫方式
並且它有完成處理器

00:42:59.746 --> 00:43:01.548 
現在完成處理器有一個狀態

00:43:01.882 --> 00:43:04.318 
所以你可以有成功或無效信息

00:43:04.918 --> 00:43:05.819 
它將分爲兩個數組

00:43:06.587 --> 00:43:09.356 
最後一個數組是
PaymentSummaryItems數組

00:43:09.723 --> 00:43:12.459 
看起來很敏感
你可以更新你要收費的總項目

00:43:13.026 --> 00:43:15.495 
但還有一個數組
叫做ShippingMethods

00:43:15.562 --> 00:43:19.566 
所以蘋果支付單也可以
展示配送方法及成本

00:43:19.633 --> 00:43:20.801 
這是一個獨立的數組

00:43:23.403 --> 00:43:27.341 
PKShippingMethod是
PKPaymentSummaryItem

00:43:27.407 --> 00:43:31.578 
的一個子類就像SummaryItem 
它有一個標籤和一個數量

00:43:32.112 --> 00:43:34.748 
但它有另外一個字符串屬性稱爲詳情

00:43:35.182 --> 00:43:36.583 
你可以用它告訴用戶

00:43:37.317 --> 00:43:39.286 
送貨需要多少時間

00:43:39.553 --> 00:43:41.555 
這裏我創建一個單獨的配送方法

00:43:42.256 --> 00:43:44.825 
把它分配到我的付款請求
這樣它就會在表單中顯示

00:43:47.160 --> 00:43:48.161 
聯繫信息

00:43:48.428 --> 00:43:52.566 
出於對於用戶的隱私
在這個指派回調函數

00:43:53.333 --> 00:43:56.069 
你將不會得到完整的
未編輯的聯繫信息

00:43:56.136 --> 00:43:57.738 
因爲用戶
還沒有使用Touch ID

00:43:58.172 --> 00:44:01.008 
我們把用戶使用Touch ID視爲

00:44:01.074 --> 00:44:02.042 
同意信息傳輸到應用

00:44:02.843 --> 00:44:08.682 
因此你將接收到城市 州以及郵編代碼
或者英國郵政編碼

00:44:08.749 --> 00:44:12.853 
或者淨化版本的英國
郵政編碼我該這樣說

00:44:14.321 --> 00:44:16.890 
我們認爲這對於
估算配送成本已經足夠了

00:44:16.957 --> 00:44:18.825 
例如 在州際或國際上方面

00:44:19.526 --> 00:44:22.296 
但在最終付款一旦你取得授權

00:44:22.362 --> 00:44:25.899 
你就可以獲得完整的聯繫方式

00:44:26.667 --> 00:44:29.570 
現在 這些API 
對你來說可能比較不熟悉

00:44:29.636 --> 00:44:31.972 
這是因爲它們在iOS 9 

00:44:32.039 --> 00:44:33.807 
使用新的Contacts框架

00:44:34.241 --> 00:44:37.144 
所以此版本中通訊簿已被取消

00:44:37.211 --> 00:44:40.681 
是的 不用爲我鼓掌
爲Contacts團隊鼓掌

00:44:41.348 --> 00:44:42.182 
我知道我做到了

00:44:44.318 --> 00:44:45.586 
那些已經遠離我們了

00:44:45.719 --> 00:44:47.921 
我們也在蘋果支付中找到代替方案

00:44:48.088 --> 00:44:50.257 
現在 我們將在接下來的版本中

00:44:50.357 --> 00:44:51.358 
對API作一點點改變

00:44:51.625 --> 00:44:53.260 
它們不會一模一樣

00:44:53.327 --> 00:44:54.595 
如果你在線觀看影像

00:44:54.728 --> 00:44:56.196 
查看最新信息的開發者文檔

00:44:56.263 --> 00:44:58.131 
但這裏有一個非常簡單的例子

00:44:58.198 --> 00:45:01.702 
說明提取名字和郵箱地址的例子

00:45:02.569 --> 00:45:04.771 
讓我們結束我們的應用

00:45:05.539 --> 00:45:08.542 
讓我們把
所有的信息化爲代碼

00:45:10.143 --> 00:45:15.482 
我想做的第一件事是請求配送信息

00:45:20.921 --> 00:45:22.556 
我想要郵政地址

00:45:22.723 --> 00:45:23.657 
這是我的請求

00:45:25.592 --> 00:45:27.528 
然後我們需要放入指派方法

00:45:28.462 --> 00:45:30.230 
讓我們找到正確的那個

00:45:30.330 --> 00:45:33.901 
didSelectShippingContact
讓我們將代碼放入

00:45:34.067 --> 00:45:35.235 
在應用裏我將做什麼

00:45:35.469 --> 00:45:37.104 
我這裏可以人爲做示例

00:45:37.171 --> 00:45:38.605 
我將一行一行地帶你瀏覽

00:45:39.473 --> 00:45:41.141 
我將索要手續費

00:45:41.241 --> 00:45:43.277 
如果用戶選擇了
一個不在美國的配送地址

00:45:43.343 --> 00:45:45.779 
那麼就產生一個國際手續費

00:45:47.381 --> 00:45:49.483 
現在這個paymentAuthorization 
ViewController  

00:45:49.550 --> 00:45:52.119 
didSelectShippingContact 
方法總是被調用

00:45:52.252 --> 00:45:53.687 
如果用戶在表單內有地址

00:45:54.254 --> 00:45:56.356 
所以如果用戶有一個默認地址

00:45:56.423 --> 00:45:58.525 
或許來自名片因此當表單被展示的時候

00:45:58.592 --> 00:45:59.693 
你將得到一個回調

00:46:00.360 --> 00:46:01.995 
我設定了一個配送方法

00:46:02.062 --> 00:46:03.730 
我將有一個標準配送

00:46:05.766 --> 00:46:07.734 
然後我將檢查地址

00:46:07.868 --> 00:46:10.938 
現在這裏
我將用新的聯繫API來獲得地址

00:46:11.305 --> 00:46:13.140 
關於聯繫API 我們將有另一場說明

00:46:13.207 --> 00:46:14.708 
因此不用太擔心這個

00:46:14.775 --> 00:46:16.510 
稍後有機會詳細瞭解

00:46:17.544 --> 00:46:22.115 
然後我檢查在這個例子中
地址是否在美國

00:46:22.549 --> 00:46:25.285 
我說這是人爲的原因是因爲在iOS上

00:46:25.752 --> 00:46:28.755 
地址信息可以有許多不同的來源

00:46:29.122 --> 00:46:31.525 
它可以來自用戶在
Contaact應用輸入

00:46:32.025 --> 00:46:34.494 
也可能來自
Facebook的同步信息

00:46:34.561 --> 00:46:36.230 
或者其他與iOS系統上的社交網絡

00:46:36.797 --> 00:46:39.132 
所以很重要的是你要確認地址的正確性

00:46:39.433 --> 00:46:43.103 
不能假設它們永遠是一樣的信息

00:46:43.570 --> 00:46:45.339 
所以 爲了展示之方便

00:46:45.672 --> 00:46:47.074 
我要把事情簡化一些

00:46:48.442 --> 00:46:51.545 
之前 我看到我有
稱作makeSummaryItems的

00:46:51.612 --> 00:46:52.613 
幫助功能

00:46:52.913 --> 00:46:55.849 
所以這實際上的功能是如果是國際費用

00:46:56.350 --> 00:47:00.354 
你可以檢查樣板代碼

00:47:00.721 --> 00:47:02.256 
並在我的付款項目中添加了手續費

00:47:02.322 --> 00:47:03.957 
這也是爲什麼這裏可以看到

00:47:04.024 --> 00:47:06.093 
稱爲requiresInternationalSurcharge
的布爾屬性

00:47:06.960 --> 00:47:10.230 
然後我將返回我的完成
處理器成功完成的

00:47:10.731 --> 00:47:13.333 
這裏獲得了一個配送方法數組只有一個

00:47:14.301 --> 00:47:15.602 
以及我的總結項目數組

00:47:17.404 --> 00:47:19.840 
再次說明你可以在
這裏返回一個失敗狀態

00:47:20.207 --> 00:47:23.477 
或許用戶輸入了
一個你不能配送到達的城市

00:47:23.544 --> 00:47:26.413 
州或國家這樣你可以返回

00:47:26.480 --> 00:47:28.348 
一個無效的郵寄地址狀態

00:47:30.150 --> 00:47:32.152 
好的 讓我們試一下

00:47:34.621 --> 00:47:37.357 
我已經在我的蘋果支付表中
獲取了一些地址

00:47:37.891 --> 00:47:39.726 
我獲得了一個加拿大地址

00:47:40.427 --> 00:47:41.261 
它不是在加拿大

00:47:41.461 --> 00:47:42.763 
我把它放在一起

00:47:43.230 --> 00:47:45.065 
你可以看到這裏有國際處理

00:47:45.432 --> 00:47:47.634 
但如果我把它變爲一個美國地址

00:47:49.903 --> 00:47:51.672 
你可以發現這裏有個副標題

00:47:51.738 --> 00:47:54.041 
國際處理不見了這是一個單獨的標題

00:47:54.474 --> 00:47:56.810 
在蘋果支付單上更新你所有的

00:47:56.944 --> 00:48:01.682 
配送成本是很容易的
它們被列在單獨的屏幕上

00:48:02.616 --> 00:48:04.818 
這裏我隨便獲取一個
這裏只有一個可供選擇

00:48:05.853 --> 00:48:08.488 
直接從你的表單裏獲取配送信息

00:48:08.789 --> 00:48:11.658 
和另一個購買流的步驟
這是一個很好的方法

00:48:13.327 --> 00:48:15.529 
所有的樣板代碼都在開發者網站上

00:48:15.596 --> 00:48:16.797 
現在已經可以下載使用

00:48:18.332 --> 00:48:20.033 
這裏還有一些其它東西我想談談

00:48:21.668 --> 00:48:24.104 
在iOS9裏我們有一些新的API

00:48:25.439 --> 00:48:27.808 
其中有一個被稱爲
PKPaymentMethod

00:48:28.342 --> 00:48:30.844 
它讓你可用找到更多的付款工具

00:48:31.078 --> 00:48:34.748 
我說的工具指的是用戶選擇的卡

00:48:35.682 --> 00:48:36.884 
它讓你可用做這些事情

00:48:36.950 --> 00:48:39.820 
比如 申請借記或信用手續費或折扣

00:48:39.920 --> 00:48:43.056 
再次說明在美國不是很普遍

00:48:43.123 --> 00:48:44.691 
但適用世界的其它地方

00:48:45.425 --> 00:48:47.694 
當用戶改變他們的支付方法

00:48:47.761 --> 00:48:49.096 
你將會收到一個指派回調函數

00:48:50.063 --> 00:48:51.198 
因此我在這裏

00:48:51.565 --> 00:48:54.368 
可以通過確認屏提升
檢查是不是使用借記卡付款

00:48:55.402 --> 00:48:58.405 
你可以使用這個API它真的很棒
它對你來說可能非常實用

00:48:59.573 --> 00:49:03.010 
這裏有一個警告大多數添加

00:49:03.076 --> 00:49:06.246 
到蘋果支付的舊卡
我們不知道它們的類型

00:49:06.446 --> 00:49:09.383 
因此你將會接收到
PKPaymentMethodTypeUnknown

00:49:09.716 --> 00:49:12.319 
現在由於這款API的主要目標在歐洲

00:49:12.386 --> 00:49:14.254 
我們下個月將啓動英國

00:49:14.788 --> 00:49:16.857 
這不會是一個問題但如果你是在美國

00:49:16.924 --> 00:49:19.393 
並且你想要使用這款API 
那就請牢記這一點

00:49:19.459 --> 00:49:20.561 
你需要在這編寫代碼

00:49:22.996 --> 00:49:26.700 
我們在PKPaymentSummaryItem上
也有了一個新屬性

00:49:26.934 --> 00:49:29.670 
用戶或者開發者需要的某些東西

00:49:30.370 --> 00:49:33.874 
以及能夠改變總結項目的功能

00:49:33.941 --> 00:49:38.579 
我們有兩種類型一種叫做最終自解釋
另一種叫做待定

00:49:39.513 --> 00:49:43.851 
你可以用它來表示你的收費不是最終的
如果你是一個共享類應用

00:49:44.384 --> 00:49:46.286 
而你不知道用戶將花費多少

00:49:46.753 --> 00:49:48.822 
你可以選擇待定類型

00:49:49.923 --> 00:49:52.159 
現在這個類型的相關文件

00:49:52.226 --> 00:49:54.828 
將在未來版本中發佈
我們會再次做出許多改變

00:49:55.062 --> 00:49:56.496 
在此 如果你是在線觀看

00:49:56.997 --> 00:49:59.566 
請查看開發者文檔獲取最新消息

00:50:03.270 --> 00:50:05.005 
我已經討論過模擬器支持

00:50:06.139 --> 00:50:08.408 
很重要的是雖然我們已經

00:50:08.475 --> 00:50:10.944 
爲模擬器添加了支持
但你仍需把應用放在真實硬件上

00:50:11.512 --> 00:50:14.014 
如果你有開發者在另一個國家

00:50:14.081 --> 00:50:16.750 
我想這是一個很棒的特點
如果你現在在英國

00:50:16.817 --> 00:50:18.218 
那麼可以馬上進行安排和運行了

00:50:18.619 --> 00:50:20.354 
很重要的是在你來到商店之前

00:50:20.420 --> 00:50:23.123 
你要在真實硬件上對你的應用進行測試

00:50:23.190 --> 00:50:24.825 
確保支付可以成功處理

00:50:27.494 --> 00:50:28.996 
我也想談談Apple Watch

00:50:29.062 --> 00:50:31.431 
當我向你展示硬件幻燈片

00:50:31.498 --> 00:50:34.501 
你可能在想Apple Watch 
有一個安全元件

00:50:35.068 --> 00:50:37.871 
Apple Watch在
WatchKit應用裏

00:50:37.938 --> 00:50:39.173 
不支持蘋果支付

00:50:39.640 --> 00:50:41.909 
然而它可能會使用Handoff 

00:50:41.975 --> 00:50:43.810 
在Apple Watch上
直接觸發付款

00:50:43.944 --> 00:50:46.980 
一旦用戶從鎖屏上啓動應用

00:50:47.047 --> 00:50:48.749 
你可以直接切換到

00:50:48.815 --> 00:50:51.151 
你手機上的應用並展示蘋果支付單

00:50:51.952 --> 00:50:54.288 
在應用裏我只展示
一些樣本代碼說明一下

00:50:54.354 --> 00:50:57.424 
我有一個WatchKit拓展

00:50:57.491 --> 00:51:00.427 
WatchKit在手機上觸發付款

00:51:01.028 --> 00:51:02.563 
如果你感興趣的話請看一下

00:51:03.030 --> 00:51:05.132 
實際上 我們也爲手錶 

00:51:05.199 --> 00:51:06.867 
打開了PassKit API

00:51:07.467 --> 00:51:08.569 
如果你想知道更多信息

00:51:08.969 --> 00:51:11.872 
請觀看剛剛進行的關於
Wallet 蘋果支付的主頁的部分

00:51:12.406 --> 00:51:14.641 
你可以在線觀看

00:51:17.044 --> 00:51:21.849 
總結一下 蘋果支付使用非常方便

00:51:22.349 --> 00:51:24.318 
它具有隱私性和安全性

00:51:24.952 --> 00:51:27.020 
我強烈建議你使用它

00:51:27.421 --> 00:51:28.956 
去商店下載應用

00:51:29.022 --> 00:51:31.725 
我們在商店裏有一個
很棒的精選部分可以下載

00:51:31.792 --> 00:51:36.363 
很多很棒的使用蘋果支付的應用
今晚就試試吧想想它如何和你的應用

00:51:36.430 --> 00:51:41.001 
融合在一起不僅想想如何提高用戶體驗

00:51:41.301 --> 00:51:45.973 
也想想如何改善蘋果支付的成果

00:51:46.607 --> 00:51:47.674 
讓你的用戶感到滿意

00:51:47.774 --> 00:51:49.209 
我知道他們會很喜歡蘋果支付的

00:51:50.844 --> 00:51:53.113 
我們爲你準備了更多的信息

00:51:54.114 --> 00:51:57.651 
我們有一些文檔我們爲開發者
微型網站創建了一個蘋果支付

00:51:58.452 --> 00:52:01.021 
如果你對安全元件和硬件有興趣

00:52:01.121 --> 00:52:03.490 
你可以在iOS安全白皮書上

00:52:03.624 --> 00:52:05.392 
找到更多信息

00:52:05.726 --> 00:52:08.495 
它深究了許多
我們如何生成這些付款的細節

00:52:08.829 --> 00:52:10.864 
以及在設備上獲取卡的過程

00:52:11.331 --> 00:52:12.966 
閱讀起來非常有趣你可能會想查看

00:52:14.735 --> 00:52:16.904 
我們還有技術支持

00:52:16.970 --> 00:52:20.174 
以及開發者論壇如果你有任何問題

00:52:20.340 --> 00:52:23.744 
你可以跟我們的專員保羅或理查討論

00:52:23.810 --> 00:52:25.145 
之前你在臺上見過他們

00:52:25.379 --> 00:52:28.182 
我們的用戶體驗專員會爲你解答任何
關於蘋果支付的設計問題

00:52:30.117 --> 00:52:31.385 
另外還有相關的部分

00:52:31.585 --> 00:52:34.454 
包括我已經提到過Wallet部分
你可以在線觀看視頻

00:52:35.122 --> 00:52:37.257 
如果你對新的Contacts
框架感興趣

00:52:37.591 --> 00:52:39.927 
我強烈建議你敢看該部分

00:52:39.993 --> 00:52:42.162 
時間是在週四3:30

00:52:42.629 --> 00:52:45.265 
瞭解我們已經所做的
如何讓Contacts更方便的工作

00:52:47.201 --> 00:52:50.504 
最後一點我們有實驗

00:52:51.171 --> 00:52:53.073 
今天和明天下午

00:52:53.240 --> 00:52:55.442 
有關於蘋果支付的實驗請來參加

00:52:55.509 --> 00:52:57.811 
我們將邀請來自服務器團隊的人員

00:52:57.878 --> 00:52:59.680 
回答關於加密系統的問題

00:52:59.746 --> 00:53:01.515 
我們還會邀請來自iOS方面的人員

00:53:01.782 --> 00:53:03.750 
我們還邀請一些商業團隊如果你有任何

00:53:03.817 --> 00:53:05.953 
關於如何接受蘋果支付
以及支付手續的問題

00:53:06.186 --> 00:53:07.754 
理查今天將在實驗室

00:53:08.055 --> 00:53:09.990 
到時候可以進行設計反饋

00:53:10.390 --> 00:53:12.860 
非常值得大家過來參加
我們將非常高興看到你們

00:53:13.927 --> 00:53:15.362 
這是我和理查今天的全部內容

00:53:15.829 --> 00:53:16.830 
十份感謝

00:53:16.964 --> 00:53:18.298 
希望你喜歡餘下的部分

00:53:18.632 --> 00:53:20.067 
午餐愉快 再見