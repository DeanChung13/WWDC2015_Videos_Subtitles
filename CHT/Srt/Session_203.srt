00:00:21.088 --> 00:00:24.625 
《HealthKit最新內容》

00:00:25.459 --> 00:00:27.828 
大家好
歡迎來到《HealthKit最新內容》講座

00:00:27.895 --> 00:00:32.466 
這是幫大家瞭解今年在SDK中
最新內容的絕好機會

00:00:32.966 --> 00:00:35.335 
我是香農·譚
是iOS工程師

00:00:35.402 --> 00:00:38.672 
稍後我的同事
艾倫·肖特利奇也會上臺

00:00:39.206 --> 00:00:41.675 
我們很激動能幫助
大家搭建有效應用

00:00:41.742 --> 00:00:44.912 
來幫助數百萬民衆
能過上更健康更好的生活

00:00:47.814 --> 00:00:49.383 
我們先從講座的路線圖開始

00:00:49.449 --> 00:00:51.852 
今天我們將談到幾項不同的內容

00:00:52.819 --> 00:00:54.955 
我們將快速
過一遍HealthKit

00:00:55.122 --> 00:00:59.426 
還會介紹在iOS 8.2中
引入的單位偏好API

00:01:00.027 --> 00:01:01.995 
並會談到iOS 9的糖尿一族

00:01:02.062 --> 00:01:04.897 
可以用到HealthKit
支持的軟件的全新功能

00:01:05.933 --> 00:01:10.404 
接下來艾倫會上臺來介紹數據源
刪除和Workout會話

00:01:11.004 --> 00:01:12.873 
最後我們會介紹
WatchKit的演示

00:01:14.741 --> 00:01:16.343 
先來談談HealthKit的背景

00:01:18.011 --> 00:01:20.547 
現在個人健康是個非常活躍的領域

00:01:20.747 --> 00:01:22.316 
在App Store中

00:01:22.382 --> 00:01:24.952 
有許多app都是在幫助
用戶獲得並保持健康狀態

00:01:25.786 --> 00:01:27.955 
運動跟蹤器和智能手錶

00:01:28.021 --> 00:01:31.225 
這類設備可以記錄大量極爲
私人的相關數據

00:01:31.859 --> 00:01:35.028 
HealthKit框架使存儲和提取
這類信息變得非常容易

00:01:35.095 --> 00:01:40.834 
它可以提供豐富的API
來保存健康和健身數據並在應用間分享

00:01:41.101 --> 00:01:45.672 
同時還能在極爲隱私的環境下 
使用加密數據庫中確保安全

00:01:47.074 --> 00:01:49.009 
對於app開發人員而言
這意味着什麼？

00:01:49.309 --> 00:01:50.744 
意味着當你使用
HealthKit時

00:01:50.811 --> 00:01:54.281 
你可以跳過編寫自定義編碼 
來分享存儲和同步數據 

00:01:54.348 --> 00:01:57.484 
而可以更多關注app體驗的核心功能

00:01:58.185 --> 00:02:00.120 
同時還是更出色的生態系統的組成部分

00:02:02.956 --> 00:02:06.126 
最後 有了HealthKit
還誕生了Health app

00:02:06.193 --> 00:02:08.262 
這可以提供
HealthKit的全視圖

00:02:08.895 --> 00:02:10.797 
在iOS 9中
我們增加了更多視圖

00:02:10.864 --> 00:02:15.569 
以便於用戶存儲 總結並關聯數據

00:02:20.941 --> 00:02:24.111 
我們來談談支持這些
出色的Health應用的數據類型

00:02:25.379 --> 00:02:29.383 
目前在HealthKit 
有着許多數據類型

00:02:29.449 --> 00:02:31.952 
其中涵蓋了個人健康的方方面面

00:02:32.586 --> 00:02:35.556 
我們試着將數據類型儘可能的
廣泛和有效

00:02:37.624 --> 00:02:38.559 
有個常見問題

00:02:38.625 --> 00:02:42.896 
Apple怎樣能在有限的開發時間內
對需要添加的數據類型進行優先安排

00:02:44.398 --> 00:02:47.434 
我們最重要的優先級考慮是存在硬件

00:02:47.835 --> 00:02:51.071 
例如可以自動跟蹤體重狀況的藍牙秤

00:02:51.538 --> 00:02:54.741 
可以測量你的睡眠情況的
Sleeptracker

00:02:55.209 --> 00:02:57.744 
我們發現自動量化的健康數據

00:02:57.811 --> 00:03:00.147 
並同步到設備上的
HealthKit很強大

00:03:02.616 --> 00:03:05.018 
我們也根據存在的軟件添加數據類型

00:03:05.085 --> 00:03:08.956 
是否已有的流行app可以圍繞
這些數據類型生成體驗

00:03:10.657 --> 00:03:13.093 
最後我們會考慮顧客和開發人員的反饋

00:03:16.630 --> 00:03:18.098 
爲支持我們對數據類型的討論

00:03:18.165 --> 00:03:19.600 
我們現在來看
它們的結構

00:03:20.467 --> 00:03:22.236 
HealthKit中的
每個對象都有個類型

00:03:22.302 --> 00:03:24.505 
每個類型都會繼承HK對象類型

00:03:25.072 --> 00:03:27.574 
特徵類型不會隨着時間而改變

00:03:27.808 --> 00:03:29.309 
如血型或出生日期

00:03:30.277 --> 00:03:32.112 
隨着時間而改變的類型叫做樣本類型

00:03:32.179 --> 00:03:33.080 
我們會介紹兩種

00:03:33.580 --> 00:03:36.617 
數量樣本有着數量和單位 比如體重

00:03:37.050 --> 00:03:41.221 
類別樣本可以枚舉若干不同的值
如睡眠分析

00:03:41.288 --> 00:03:43.323 
你可以是處於幾種睡眠狀態之一

00:03:44.324 --> 00:03:46.527 
當然這是在回顧已有的信息

00:03:46.593 --> 00:03:48.662 
如果想要了解
更多HealthKit的構成

00:03:48.962 --> 00:03:51.164 
我們建議大家看看去年的講座

00:03:51.298 --> 00:03:52.599 
《HealthKit介紹》

00:03:56.370 --> 00:03:59.006 
我提到了數量樣本
包括數量和單位

00:03:59.339 --> 00:04:02.643 
我將花些時間來介紹新的
單位偏好API

00:04:03.277 --> 00:04:08.715 
雖然這款API不是iOS 9的內容
但在iOS 8.2講座中我們介紹過

00:04:08.916 --> 00:04:10.350 
我們現在還想提一下

00:04:14.221 --> 00:04:15.956 
大家可能注意到在iOS 8.2

00:04:16.023 --> 00:04:18.291 
在Health app中
有個新的單位窗格

00:04:19.660 --> 00:04:23.463 
根據yoghurt的地區
和位置來顯示單元

00:04:23.697 --> 00:04:25.666 
但是用戶可以整理輸入這行數據 

00:04:25.899 --> 00:04:30.037 
用自己的單位偏好覆蓋默認的設置

00:04:32.272 --> 00:04:35.742 
在iOS 8.2中
HK Health Store裏有新的類擴展

00:04:35.809 --> 00:04:37.978 
你可以用來發現單位偏好

00:04:38.345 --> 00:04:39.213 
我們建議這麼做

00:04:39.279 --> 00:04:41.715 
這樣你在app UI中
顯示的單位就會

00:04:41.782 --> 00:04:44.117 
與用戶希望在Apple Health
看到的相匹配

00:04:44.751 --> 00:04:48.989 
最後每當單位偏好發生改變時
就會啓動新的通知

00:04:49.857 --> 00:04:53.594 
現在我們探討回顧了
HealthKit中的單位數據類型

00:04:53.660 --> 00:04:56.930 
我們再來看在iOS 9中
可用的新數據類型

00:04:57.431 --> 00:04:59.032 
首先是水攝取量

00:05:01.802 --> 00:05:06.206 
我相信大家都知道
有人會隨身帶個巨大水瓶

00:05:06.273 --> 00:05:08.108 
別人要是問起來
他會解釋說

00:05:08.642 --> 00:05:11.078 
每天補水對健康很重要

00:05:11.144 --> 00:05:13.580 
若是整天都覺得很渴
也許的確很糟

00:05:14.281 --> 00:05:18.385 
在App Store有許多app
會溫和地督促你增加水攝取量

00:05:18.452 --> 00:05:23.557 
甚至會有部分設備和傳感器
如藍牙水瓶 可以跟蹤你的水攝取量

00:05:24.191 --> 00:05:27.561 
很多人都希望確保自己每天的飲水
可以達到8個8盎司杯

00:05:27.794 --> 00:05:29.196 
或是兩升的推薦標準

00:05:29.263 --> 00:05:33.300 
如果運動強度較大有脫水風險
人們可能會需要更多水

00:05:34.034 --> 00:05:37.538 
因此我們在HealthKit中增加
新的數量類型Dietary Water

00:05:37.604 --> 00:05:38.739 
這是單位是體積

00:05:39.206 --> 00:05:44.278 
它的字面意思是指膳食水
這類型也可以跟蹤通過食物攝取的水分

00:05:48.515 --> 00:05:50.217 
接下來的類型
是UV Exposure

00:05:51.818 --> 00:05:55.656 
紫外線輻射存在於日光當中
對人體健康產生正面和負面的作用

00:05:56.490 --> 00:05:58.358 
它還可以促進維生素D的形成

00:05:58.892 --> 00:06:01.595 
還可以改善情緒和健康水平

00:06:02.229 --> 00:06:04.698 
但過度暴露在紫外線下會產生負面作用

00:06:06.333 --> 00:06:10.771 
會對人體產生負面影響 如曬傷
或長期影響 如皮膚損傷或白內障

00:06:10.838 --> 00:06:14.942 
如果你要在陽光下呆上一段時間
那麼瞭解何時有曬傷風險會很有幫助

00:06:17.077 --> 00:06:20.981 
還有一些很精巧的設備
可以跟蹤人暴露在紫外線照射下的情況

00:06:21.048 --> 00:06:23.283 
針對這類app和傳感器

00:06:23.350 --> 00:06:25.619 
我們添加了新的數量類型
UV Exposure

00:06:26.019 --> 00:06:29.556 
其中的值是標量
代表紫外線指數是從0到12

00:06:30.123 --> 00:06:31.658 
代表從最無害到最危險

00:06:35.596 --> 00:06:39.032 
當然紫外線照射並非是衡量
我們的日曬風險的最理想方式

00:06:39.399 --> 00:06:41.034 
這可能會取決於你所穿的衣服

00:06:41.535 --> 00:06:43.637 
你所用的防曬霜或你的皮膚類型

00:06:44.137 --> 00:06:46.273 
針對最後一點
我們在HealthKit中

00:06:46.340 --> 00:06:49.209 
增加了新的特徵類型
Fitzpatrick Skin Type

00:06:49.576 --> 00:06:56.083 
這代表了根據菲氏量表的個人
皮膚類型來反映曬傷或曬黑的情況

00:06:56.750 --> 00:07:00.587 
iOS 8.3的表情符號
就是根據菲氏量表做成

00:07:00.787 --> 00:07:05.058 
左邊的所有都是1型
代表很容易曬傷的很淺膚色

00:07:05.359 --> 00:07:10.864 
右邊的都是永遠不會曬傷或嚴重曬黑的
深棕色或黑色皮膚

00:07:14.134 --> 00:07:17.104 
因爲Fitzpatrick Skin Type
是特徵類型

00:07:17.171 --> 00:07:20.607 
因此它與大家可能用過的類別
或數量樣本都不相同

00:07:20.807 --> 00:07:22.843 
它可以通過Health Store
直接訪問

00:07:23.277 --> 00:07:25.779 
並返回枚舉的簡單包裝類

00:07:30.784 --> 00:07:35.789 
現在我想來談談在生殖健康類別下
我們添加的全新數據類型

00:07:41.428 --> 00:07:43.030 
當想到量化健康時

00:07:43.096 --> 00:07:47.868 
我們會想到技術驅動項目
如運動跟蹤器和智能手錶

00:07:48.602 --> 00:07:51.238 
我們會想到
用HealthKit同步健身數據

00:07:51.305 --> 00:07:53.974 
也許會將營養成分自動輸入美食日記

00:07:54.875 --> 00:07:57.444 
但是生殖健康是很重要的健康內容

00:07:58.412 --> 00:08:04.017 
很多跟蹤記錄健康數據的女性都知道
月經週期是令人興奮或相當重要的數據

00:08:04.351 --> 00:08:08.455 
對於許多想要懷孕生子的夫妻
和許多不想要孩子的夫妻來說

00:08:08.922 --> 00:08:14.428 
排卵期 理解荷爾蒙變化
或紊亂的監測結果是非常重要的信息

00:08:16.630 --> 00:08:20.267 
也許談論這些敏感甚至私密的
數據會令人感覺有些奇怪

00:08:20.801 --> 00:08:25.639 
可是當我們談到技術改善生活時
這些都是非常關鍵重要而有意義的信息

00:08:25.939 --> 00:08:30.110 
它幫助女性理解並瞭解自己的身體狀況
從而可以控制健康情況

00:08:31.211 --> 00:08:32.946 
它可以幫助並已幫助數百萬人

00:08:33.013 --> 00:08:36.416 
在瞭解可靠信息的基礎上
對生育和計劃生育做出決策

00:08:38.217 --> 00:08:39.919 
跟蹤排卵期的app是

00:08:39.986 --> 00:08:43.590 
App Store中Health和Fitness
類別下最受歡迎的app產品 

00:08:43.890 --> 00:08:46.527 
這也是HealthKit
第一大開發要求

00:08:47.194 --> 00:08:50.063 
我們很興奮能在
iOS 9中爲這些app提供支持

00:08:54.935 --> 00:08:56.670 
在生殖健康方面有着許多因素

00:08:57.037 --> 00:08:59.106 
我們先從6個新類型開始

00:08:59.339 --> 00:09:03.944 
這些都是公開內容
也許對想要寶寶的人或是不想懷孕

00:09:04.211 --> 00:09:07.648 
或希望對自己的健康狀況全面瞭解的人
都會有所幫助

00:09:10.250 --> 00:09:11.818 
第一種是
Basal Body Temperature

00:09:11.885 --> 00:09:14.154 
針對每種類型
我們會在Apple Health中

00:09:14.221 --> 00:09:17.191 
添加控制圖給大家看到數據視覺化

00:09:20.427 --> 00:09:22.896 
基礎體溫是身體在休息狀態下的溫度

00:09:22.963 --> 00:09:25.098 
通常是在清晨測量

00:09:25.165 --> 00:09:29.336 
它呈現雙相變化
在排卵後會稍稍上升

00:09:30.003 --> 00:09:32.806 
人們常常會在同一時間
一連數月跟蹤基礎體溫

00:09:33.073 --> 00:09:36.543 
這樣就會得出週期圖形
並可以大體預測下一個週期的時間

00:09:37.077 --> 00:09:39.046 
一般都是用鉛筆和紙張記錄的

00:09:39.213 --> 00:09:41.181 
這種跟蹤排卵的辦法由來已久

00:09:43.984 --> 00:09:49.223 
還有一種跟蹤或檢測排卵期的常見辦法
是測量宮頸粘液質量

00:09:50.757 --> 00:09:52.826 
與基礎體溫的變化相反

00:09:52.893 --> 00:09:55.128 
宮頸粘液是在排卵期之前發生變化

00:09:55.896 --> 00:09:58.632 
在HealthKit中這是類別樣本

00:09:58.699 --> 00:10:00.601 
其中會列出醫學一般
會接受的宮頸粘液狀態

00:10:03.937 --> 00:10:07.040 
我們添加的下一個類型是
Ovulation Test Results

00:10:08.575 --> 00:10:12.513 
對女性來說 
黃體生成素激增會導致排卵

00:10:13.580 --> 00:10:17.784 
用戶可以購買家庭測試套裝和LH試紙
來測量LH高峯

00:10:19.419 --> 00:10:24.324 
在HealthKit
這種類別樣本測量結果是陰性或陽性

00:10:28.662 --> 00:10:31.498 
經期是否健康是極其重要的指標

00:10:32.032 --> 00:10:36.737 
醫生經常會問及女性末次經期的時間
以及生理週期的規律性情況

00:10:37.070 --> 00:10:43.143 
幫助人們記錄經期情況的App
非常受歡迎而且種類繁多

00:10:44.178 --> 00:10:46.780 
在HealthKit中
我們添加了類別樣本

00:10:48.582 --> 00:10:51.185 
我們還添加了新的元數據祕鑰

00:10:52.186 --> 00:10:54.188 
Menstrual Cycle Starts

00:10:54.254 --> 00:10:57.858 
因爲上次經期的時間和週期規律性
是重要的醫學信息

00:10:57.925 --> 00:11:00.994 
我們要讓app便於計算這類信息才行

00:11:02.796 --> 00:11:05.632 
我們讓所有的客戶端
都記錄這個布林元數據祕鑰

00:11:05.699 --> 00:11:07.568 
如果我們看不到就會拋出異常

00:11:10.037 --> 00:11:11.271 
我們再來看元數據

00:11:11.672 --> 00:11:15.742 
元數據是提供HealthKit對象
額外信息的字典

00:11:15.809 --> 00:11:17.578 
可以幫助擴展規定的對象類型

00:11:17.644 --> 00:11:19.913 
併爲HealthKit
添加具體app信息

00:11:21.014 --> 00:11:25.252 
字典祕鑰是你可以生成的字符串
或是Apple預定義的祕鑰

00:11:25.719 --> 00:11:28.856 
預定義祕鑰可便於在不同的應用中分享

00:11:29.389 --> 00:11:31.491 
我們現在來生成包含

00:11:32.392 --> 00:11:33.594 
重要信息的元數據字典

00:11:34.094 --> 00:11:37.164 
在最後保存到
HealthKit之前 

00:11:37.264 --> 00:11:38.565 
我們生成樣本時

00:11:38.632 --> 00:11:41.435 
會將樣本放入適當的數值類型
並傳遞到元數據

00:11:45.772 --> 00:11:47.674 
接下來的兩個類型是類別樣本

00:11:47.741 --> 00:11:51.678 
但與HealthKit現有類別樣本不同
它們只有單一的值

00:11:51.879 --> 00:11:54.681 
HK Category Value
Not Applicable

00:11:55.682 --> 00:11:58.919 
這些類別樣本
有數據 元數據和其他屬性

00:11:58.986 --> 00:12:02.256 
它們無法列入多個值

00:12:03.524 --> 00:12:05.526 
因此這些類型中首先是陰道出血

00:12:05.926 --> 00:12:10.030 
這是指在經期以外發生的少量出血

00:12:10.564 --> 00:12:11.798 
因此它與
經期不同

00:12:14.468 --> 00:12:16.537 
我們添加的第二類型是性生活

00:12:17.771 --> 00:12:24.144 
性生活在許多排卵跟蹤應用中
也是相關的重要信息

00:12:24.711 --> 00:12:26.847 
我們在HealthKit中
也增加了相應支持

00:12:27.447 --> 00:12:30.150 
還新添了可選預定義元數據祕鑰

00:12:30.217 --> 00:12:32.352 
Sexual Activity Protection Use

00:12:32.419 --> 00:12:36.123 
這是指預防性傳播疾病或防止懷孕

00:12:40.427 --> 00:12:41.562 
我們來總結一下

00:12:41.762 --> 00:12:45.566 
剛說過在iOS 9增加的新數據類型

00:12:45.766 --> 00:12:49.436 
Water Intake和UV Exposure
和Fitzpatrick Skin Type

00:12:49.503 --> 00:12:51.939 
以及6種新的生殖健康類型

00:12:52.806 --> 00:12:59.012 
我們希望看到大家在自己的應用設備中
會創造性地使用這些數據類型

00:13:00.147 --> 00:13:03.217 
現在有請艾倫來介紹數據源部分

00:13:09.923 --> 00:13:10.757 
謝謝 香農

00:13:11.725 --> 00:13:13.026 
大家好 我是艾倫

00:13:13.093 --> 00:13:15.896 
是Apple HealthKit
團隊的軟件工程師

00:13:17.464 --> 00:13:18.532 
我們剛剛聽過香農

00:13:18.765 --> 00:13:22.402 
介紹了iOS 9中的
HealthKit新類型

00:13:22.870 --> 00:13:27.374 
我來講講大家用iOS 9的
HealthKit還能做些什麼

00:13:28.275 --> 00:13:31.912 
我要介紹的第一部分改變
是關於數據源

00:13:34.581 --> 00:13:37.351 
HealthKit可以通過
不同的源保存數據

00:13:37.818 --> 00:13:42.456 
可以從用戶iPhone中的
Motion代碼處理器或連接的藍牙

00:13:42.890 --> 00:13:45.225 
心率監測器自動提取樣本

00:13:46.193 --> 00:13:50.163 
也可以是來自
Health app手動輸入的樣本

00:13:50.631 --> 00:13:54.835 
或由諸位這樣的開發人員
創建的應用保存的樣本

00:13:56.870 --> 00:14:00.007 
知道HealthKit的數據
是來自哪裏很重要

00:14:00.073 --> 00:14:03.977 
特別是如果你在使用數據進行
醫學或研究工作時 更是如此

00:14:04.611 --> 00:14:07.147 
那麼怎樣判定HealthKit的
數據是來自哪裏呢？

00:14:09.650 --> 00:14:13.487 
HK對象類是所有
存儲在HealthKit的根類

00:14:14.021 --> 00:14:17.925 
在iOS 8中
它有數據源相關的兩個屬性

00:14:19.326 --> 00:14:20.928 
其一是Source屬性

00:14:21.595 --> 00:14:24.932 
它代表着用哪個應用保存該對象

00:14:26.700 --> 00:14:28.468 
第二個屬性是元數據

00:14:29.203 --> 00:14:35.075 
開發人員常用元數據存儲
生成對象的外部設備信息

00:14:36.009 --> 00:14:40.681 
這些信息可以是外部設備的名稱
或廠商名稱

00:14:41.982 --> 00:14:44.651 
在iOS 9中
我們引入了兩個新屬性

00:14:44.718 --> 00:14:47.554 
可以提供對象來自何處的更豐富信息

00:14:49.389 --> 00:14:52.159 
這些新屬性中第一個是
Source Revision屬性

00:14:52.559 --> 00:14:54.261 
而且替代了Source屬性

00:14:54.962 --> 00:15:01.869 
除了代表生成樣本的應用
它還帶着保存對象的app版本

00:15:03.036 --> 00:15:05.172 
第二個是Device屬性

00:15:05.739 --> 00:15:10.143 
會返回代表生成對象的外部設備的對象

00:15:11.078 --> 00:15:15.082 
它本意是替代外部設備相關的元數據

00:15:17.985 --> 00:15:21.955 
我們再來看看
HK Source Revision類

00:15:22.623 --> 00:15:24.992 
它有兩個屬性源代碼

00:15:25.926 --> 00:15:27.194 
同樣代表着...

00:15:27.427 --> 00:15:28.262 
不好意思

00:15:28.662 --> 00:15:33.967 
代表着保存數據的應用
這樣它也包括版本字符串

00:15:35.435 --> 00:15:37.237 
當你在HealthKit中
保存數據時

00:15:37.838 --> 00:15:41.308 
HealthKit會自動
爲它賦值HK源代碼修改

00:15:42.276 --> 00:15:47.447 
版本字符串來自app的
Info plist中的束版本輸入

00:15:49.049 --> 00:15:51.752 
在iOS 9之前 
保存在HealthKit的對象

00:15:51.818 --> 00:15:53.086 
將會有空版本字符串

00:15:56.023 --> 00:15:57.824 
我們來談談HK Device

00:15:58.825 --> 00:16:01.929 
HK Device類包括若干

00:16:01.995 --> 00:16:06.166 
代表硬件設備不同方面的字符串

00:16:06.266 --> 00:16:10.370 
例如名稱廠家 版本信息 等等 

00:16:11.538 --> 00:16:17.878 
當你創建設備時 
你需要向用戶提供儘可能多的適用屬性

00:16:17.945 --> 00:16:23.784 
並向其他應用提供對象來自哪裏的信息

00:16:26.753 --> 00:16:33.327 
如果你app保存的對象
是由app設備上內置的感應器生成

00:16:33.894 --> 00:16:37.197 
你可以在HK Device上
使用本地設備類方法

00:16:37.397 --> 00:16:41.902 
以獲取一個設備來代表你的
app運行的設備

00:16:45.105 --> 00:16:48.475 
我們先來看怎樣在設備上保存樣本

00:16:49.309 --> 00:16:53.580 
首先你要創建具備所有適用屬性的設備

00:16:54.915 --> 00:17:00.487 
接下來使用一個採用設備的
HK樣本子類

00:17:00.554 --> 00:17:02.689 
初始化方法實例化樣本

00:17:03.624 --> 00:17:04.491 
最後和之前一樣

00:17:05.025 --> 00:17:07.961 
你可以把對象
保存到HealthKit 

00:17:10.731 --> 00:17:15.502 
查詢來自某個源代碼修改
或設備的對象也很容易

00:17:16.270 --> 00:17:22.142 
你可以用新介紹的謂詞便捷方法來面對
iOS 9中的HK Query

00:17:25.244 --> 00:17:30.918 
這裏的示例是查詢在之前版本
應用中保存的對象

00:17:32.753 --> 00:17:38.458 
首先我們用默認源代碼
生成源代碼修改和1.0版本的字符串

00:17:40.627 --> 00:17:47.467 
之後對謂詞實例化
以匹配有着源代碼修改的所有樣本

00:17:49.069 --> 00:17:52.072 
最後我們會執行HK樣本查詢

00:17:52.739 --> 00:17:58.045 
它會返回給我們
用應用版本1生成的所有對象

00:18:05.485 --> 00:18:09.056 
現在我們介紹了在HealthKit
保存對象的新方法

00:18:09.156 --> 00:18:11.325 
再來介紹一些刪除對象的方法

00:18:13.894 --> 00:18:16.730 
iOS 8只有一種 刪除對象的方法

00:18:16.797 --> 00:18:20.000 
這就是HK Health Store中的
Delete Object方法

00:18:20.534 --> 00:18:22.102 
它會刪除單獨的對象

00:18:22.736 --> 00:18:28.208 
這很簡單
但若一次刪除多個樣本就會有些麻煩

00:18:28.475 --> 00:18:31.912 
我們現在引入了兩種新的便捷方法
來刪除對象

00:18:33.814 --> 00:18:35.115 
第一種是
HK Health Store的方法 

00:18:35.182 --> 00:18:37.451 
這可以刪除一組對象

00:18:38.118 --> 00:18:41.555 
每當你有之前查詢過的樣本系列

00:18:41.622 --> 00:18:43.357 
並想將之全部刪除時 
可以用這個

00:18:44.057 --> 00:18:47.561 
例如 你也許想用HK Device

00:18:47.728 --> 00:18:51.765 
而不是元數據
將之前版本的app保存樣本做轉移

00:18:52.933 --> 00:18:56.170 
一旦您保存了以往對象的新拷貝

00:18:56.236 --> 00:18:59.306 
你可用Delete Objects
刪除所有舊對象

00:19:01.108 --> 00:19:03.777 
我們要介紹的第二個新方法就是

00:19:03.877 --> 00:19:05.846 
Delete Objects Of Type

00:19:06.380 --> 00:19:08.882 
因此它會刪除匹配給定謂詞的
所有對象

00:19:09.550 --> 00:19:13.253 
這樣做很高效
因爲你在刪除對象之前不必查詢

00:19:20.561 --> 00:19:27.100 
你並非總是要刪除對象
有時你也會需要了解何時刪除的對象

00:19:27.701 --> 00:19:30.204 
也許是用戶或是另外的應用做了刪除

00:19:31.238 --> 00:19:33.473 
如果你的app
與HealthKit同步

00:19:33.807 --> 00:19:36.443 
一旦從HealthKit的數據庫
刪除對象

00:19:36.510 --> 00:19:39.213 
你最好從你的數據庫把對象刪除

00:19:39.646 --> 00:19:43.050 
在iOS 8沒有簡單的辦法
來實現這點

00:19:43.517 --> 00:19:45.118 
我們引入了新方法

00:19:45.185 --> 00:19:49.957 
通過Anchored Object Query類 
查詢 在iOS 9中刪除的對象

00:19:52.726 --> 00:19:54.061 
HK Anchored Object Query

00:19:54.161 --> 00:19:56.964 
有帶有結果
處理器代碼塊的新初始程序

00:19:57.297 --> 00:20:01.034 
其中的參數包括
新樣本和刪除的樣本

00:20:02.202 --> 00:20:03.670 
現在當你執行這個查詢時

00:20:04.137 --> 00:20:09.543 
HealthKit會返回
自上次你運行錨定對象查詢後 

00:20:09.977 --> 00:20:12.179 
匹配謂詞的生成或刪除的所有樣本

00:20:12.546 --> 00:20:14.581 
這是由你所提供的錨來表明

00:20:18.719 --> 00:20:23.257 
刪除的對象
通過HK Deleted Object類的

00:20:23.524 --> 00:20:26.393 
實例來代表其中攜帶了
刪除對象的UID

00:20:27.761 --> 00:20:28.729 
爲節省空間

00:20:28.795 --> 00:20:33.867 
刪除對象僅在被永久銷燬前有限時間內
存儲在HealthKit中

00:20:37.171 --> 00:20:41.742 
這意味着如果你有功能
需要取決於查詢被刪除的對象

00:20:42.009 --> 00:20:47.548 
你應該註冊背景升級
以確保你的app會因刪除而啓動

00:20:48.282 --> 00:20:52.119 
你可以使用iOS 8中的
Enable Background Delivery For Type方法

00:20:52.186 --> 00:20:58.525 
它會因iOS 9中的
刪除和樣本生成而啓動

00:21:01.628 --> 00:21:04.698 
現在我們回到
HK Anchored Object Query

00:21:04.765 --> 00:21:09.469 
來談談在iOS 9中
針對類的第二個新添內容

00:21:09.837 --> 00:21:11.538 
即Update Handler屬性

00:21:13.073 --> 00:21:13.907 
一旦提供

00:21:14.174 --> 00:21:20.814 
當生成或刪除匹配謂詞的更多樣本時
在結果處理器之後就會調用代碼塊

00:21:23.784 --> 00:21:28.622 
有着更新處理器的HK錨定對象查詢
會繼續無限期運行

00:21:28.689 --> 00:21:32.759 
直至你在HK Health Store
用Stop Query停止它

00:21:33.961 --> 00:21:35.529 
在本次講座稍後的部分

00:21:35.929 --> 00:21:37.664 
你會看到這是

00:21:37.731 --> 00:21:40.234 
處理來自HealthKit的
數據流的有效方法

00:21:41.034 --> 00:21:45.806 
例如你可能會想從HealthKit
顯示用戶的最新心率數據

00:21:46.306 --> 00:21:48.542 
你可以使用更新處理器來實現

00:21:49.209 --> 00:21:50.210 
大家也許注意到

00:21:50.410 --> 00:21:54.081 
Apple最近推出了新的硬件
它可以讀取佩戴者的心率

00:21:54.715 --> 00:21:57.985 
如果能從該設備上直接運行這個查詢
會不會很酷？

00:21:58.619 --> 00:22:00.020 
而你的確可以

00:22:01.755 --> 00:22:06.527 
今年除了在iOS 9在
對HealthKit做了改進

00:22:07.027 --> 00:22:09.429 
我們還帶來了
WatchKit app的框架

00:22:17.704 --> 00:22:21.275 
watchOS上的HealthKit
與iOS的HealthKit非常像

00:22:21.708 --> 00:22:24.511 
你所熟悉的幾乎所有
HealthKit API

00:22:24.678 --> 00:22:26.380 
在watchOS中也都可用

00:22:27.447 --> 00:22:33.320 
你可以用習慣的相同查詢和方法
來存儲和提取健康數據

00:22:34.188 --> 00:22:38.091 
但是因爲在新平臺上
性能相當重要

00:22:38.592 --> 00:22:42.963 
只有有限的HealthKit
歷史數據 在Watch上可用

00:22:44.097 --> 00:22:46.967 
我們還會介紹嶄新的健身API

00:22:47.301 --> 00:22:49.703 
這可以在Watch上記錄鍛鍊數據

00:22:51.638 --> 00:22:54.808 
最後
在Watch的HealthKit中

00:22:54.875 --> 00:22:58.078 
保存的數據會自動同步到用戶的手機上

00:23:00.714 --> 00:23:03.217 
當你的app將鍛鍊數據
保存到Apple Watch時

00:23:03.383 --> 00:23:06.687 
消耗的能量也會在運動環中記錄

00:23:07.354 --> 00:23:13.060 
你的用戶一定會喜歡佩戴Watch時
使用你的app

00:23:14.027 --> 00:23:15.529 
大家可以在這些截屏中看到

00:23:16.330 --> 00:23:17.397 
你保存的鍛鍊數據

00:23:17.798 --> 00:23:22.669 
將會在iOS的Daily Summary
和Activity app顯示 

00:23:25.839 --> 00:23:29.710 
在我進一步探討鍛鍊前
我先要介紹有關隱私問題

00:23:30.577 --> 00:23:34.147 
我們相當重視用戶的
HealthKit數據的隱私性

00:23:34.348 --> 00:23:37.951 
所以和iOS一樣
我們自然會在Watch對之妥善保護

00:23:38.452 --> 00:23:43.524 
我們需要申請訪問權
才能使用HealthKit數據

00:23:45.826 --> 00:23:47.528 
當你的app申請授權時

00:23:47.794 --> 00:23:50.664 
彈出框會同時出現
在Watch和用戶的手機

00:23:50.964 --> 00:23:52.733 
來授權你的app可以訪問

00:23:54.835 --> 00:24:00.140 
假設 如果你的手機應用已經授權
存儲並提取距離樣本

00:24:00.707 --> 00:24:05.879 
那麼也會授權Watch app存儲
並提取距離樣本

00:24:07.548 --> 00:24:10.751 
一旦WatchKit app得到
授權可以使用HealthKit數據

00:24:10.984 --> 00:24:13.420 
你可能就想記錄鍛鍊數據

00:24:15.556 --> 00:24:16.523 
我們引入了全新的

00:24:16.723 --> 00:24:19.927 
HK Workout Session類
來實現這一點

00:24:20.594 --> 00:24:24.998 
有了HK Workout Session
你可以明確用戶從事的運動類型

00:24:25.399 --> 00:24:30.237 
該信息將幫助Apple Watch
更準確地記錄用戶的運動情況

00:24:31.338 --> 00:24:33.774 
在會話中你的app會位於前景

00:24:34.007 --> 00:24:37.277 
每當用戶擡起手腕
檢查鍛鍊的進度時

00:24:37.544 --> 00:24:39.046 
你的app就會在
前面居中的位置

00:24:40.314 --> 00:24:43.283 
注意在任何具體時間中 
只有一個鍛鍊會話可以運行

00:24:43.650 --> 00:24:47.187 
如果用戶在另一個應用
開始了另外的鍛鍊

00:24:47.454 --> 00:24:48.856 
你的鍛鍊會話就會結束

00:24:52.159 --> 00:24:53.994 
我們現在來看
HK Workout Session

00:24:55.596 --> 00:24:59.199 
你會用運動類型和位置類型
實例化鍛鍊會話

00:25:00.234 --> 00:25:04.938 
位置類型表明運動是否發生
在室內還是戶外

00:25:07.040 --> 00:25:08.542 
你還可以設置委託

00:25:10.444 --> 00:25:13.747 
這可以實現告知你鍛鍊狀態發生了改變

00:25:17.651 --> 00:25:22.089 
那麼HK Workout Session
委託協議有着兩種方式

00:25:23.857 --> 00:25:27.361 
每當鍛鍊發生改變時 
就會調用第一種

00:25:27.861 --> 00:25:31.131 
例如從Not Started到Running
或從Running到Ended

00:25:31.865 --> 00:25:35.169 
這是個不錯的機會
可以記錄鍛鍊的開始和結束日期

00:25:35.502 --> 00:25:38.605 
同時還可以開始或停止
任何可能的數據查詢

00:25:41.775 --> 00:25:44.344 
只要出現錯誤 
就會調用第二種方法

00:25:45.646 --> 00:25:47.514 
會在第一種方法之外再調用它

00:25:48.315 --> 00:25:50.717 
並會表明你的鍛鍊會話已經結束

00:25:54.021 --> 00:25:56.390 
開始和停止鍛鍊會話其實很簡單

00:25:56.590 --> 00:25:58.025 
你只需要在HK Health Store

00:25:58.091 --> 00:26:00.460 
調用Start Workout Session
或Stop Workout Session

00:26:01.428 --> 00:26:03.564 
現在我來快速解釋一下

00:26:03.797 --> 00:26:07.401 
怎樣用這些新款API
搭建WatchKit app

00:26:15.776 --> 00:26:17.945 
我已經搭建了一個
簡單的WatchKit應用

00:26:18.145 --> 00:26:20.347 
我要給大家看一下
這個app怎麼用

00:26:23.483 --> 00:26:26.920 
它可以讓用戶規定從事的運動形式

00:26:27.454 --> 00:26:28.322 
例如跑步

00:26:28.722 --> 00:26:29.590 
我選擇跑步

00:26:30.557 --> 00:26:34.461 
一旦選定了運動類型
它們就會選擇位置類型

00:26:38.098 --> 00:26:39.366 
戶外或室內

00:26:40.634 --> 00:26:41.568 
我選的是戶外

00:26:42.636 --> 00:26:46.607 
這是進行會話的視圖
它會顯示該鍛鍊的幾項指標

00:26:48.041 --> 00:26:51.712 
在會話視圖中什麼都沒有
因爲我們沒連上HealthKit 

00:26:52.045 --> 00:26:52.980 
我們現在就動手

00:26:57.284 --> 00:27:01.221 
在Xcode中
我們看到我的運動界面控制器

00:27:02.089 --> 00:27:06.560 
這是第一個我們剛看到的視圖
用戶選擇所從事的運動類型

00:27:07.294 --> 00:27:12.332 
這是我申請授權訪問
HealthKit數據的絕好機會

00:27:13.500 --> 00:27:15.669 
我現在馬上
就在這裏...

00:27:16.036 --> 00:27:18.739 
不好意思
是Will Activate方法

00:27:22.576 --> 00:27:27.581 
首先我實例化了要分享的一組類型 
其中就包括鍛鍊類型

00:27:28.782 --> 00:27:33.587 
接着我要從HealthKit
讀取一系列類型

00:27:34.188 --> 00:27:39.893 
例如長途單車 長途步行
還有跑步能量消耗以及用戶的心率

00:27:41.128 --> 00:27:44.097 
最後我們調用並申請授權來分享類型

00:27:44.231 --> 00:27:46.200 
這和iOS中一樣

00:27:47.201 --> 00:27:53.140 
現在我們需要在配套的應用中
做點什麼來完成這個申請

00:27:54.474 --> 00:27:57.044 
在配套app的app委託中 

00:27:57.811 --> 00:28:01.515 
我將要執行新的UI應用委託方式

00:28:04.484 --> 00:28:07.020 
應用應該申請健康授權

00:28:08.622 --> 00:28:13.160 
我只需要爲完成擴展調用處理授權

00:28:13.493 --> 00:28:15.762 
這會提示用戶爲我的app授權

00:28:17.397 --> 00:28:18.532 
我們來看這個操作

00:28:27.808 --> 00:28:28.642 
大家可以看到

00:28:28.709 --> 00:28:35.115 
用戶會在Watch和手機上都得到
提示打開我的app並授權

00:28:37.451 --> 00:28:39.987 
這是熟悉的健康授權表格

00:28:40.721 --> 00:28:43.457 
我批准app訪問它所需的任何內容

00:28:44.658 --> 00:28:45.492 
並點擊Allow

00:28:46.760 --> 00:28:48.962 
現在我們得到授權
可使用HealthKit數據

00:28:51.498 --> 00:28:52.799 
接下來

00:28:53.333 --> 00:28:56.069 
我們需要在用戶點擊Start時
開始鍛鍊會話

00:28:57.437 --> 00:28:59.806 
我這裏有
Workout Session Manager類

00:28:59.873 --> 00:29:03.744 
這就是負責管理
我和HealthKit互動的地方

00:29:07.514 --> 00:29:10.517 
這是個很大的類
但是我們只會執行其中的一部分

00:29:12.119 --> 00:29:15.656 
我們點擊Start
調用Start Workout方法

00:29:16.657 --> 00:29:21.261 
我希望開始之前在構造器上
實例化的鍛鍊會話

00:29:26.867 --> 00:29:28.735 
我們只需要在
包含鍛鍊會話的

00:29:28.869 --> 00:29:32.272 
HK Health Store調用
Start Workout Session

00:29:33.740 --> 00:29:39.880 
現在我們需要執行鍛鍊會話委託協議
這樣我們就會得知鍛鍊狀態發生的改變

00:29:42.683 --> 00:29:46.286 
因爲這是在背景提示中
調用我在處理狀態

00:29:46.353 --> 00:29:47.921 
改變前 我在回調主隊列

00:29:50.357 --> 00:29:54.528 
如果會話狀態改爲Running 
我會調用Workout Did方式

00:29:54.962 --> 00:29:58.031 
如果它改爲Ended
我會調用Workout Did End

00:30:02.102 --> 00:30:04.037 
我們繼續
Workout Did Start

00:30:05.472 --> 00:30:09.710 
我們需要
爲HealthKit數據進行查詢

00:30:09.776 --> 00:30:11.144 
以便在鍛鍊中顯示

00:30:12.446 --> 00:30:14.014 
其中的一個指標是距離

00:30:14.081 --> 00:30:18.051 
我需要查詢
從HealthKit蒐集距離數據

00:30:18.185 --> 00:30:20.988 
並把它累計到鍛鍊會話進度中

00:30:21.889 --> 00:30:27.528 
我將會生成助手方式
在這裏生成查詢

00:30:27.594 --> 00:30:31.031 
我們還會使用HK Anchored Object
用升級處理器來查詢

00:30:36.537 --> 00:30:38.872 
所以我編寫了
Create Streaming Distance Query

00:30:38.939 --> 00:30:40.274 
它採用了鍛鍊開始日期

00:30:42.142 --> 00:30:44.244 
我們首先做的是生成一個謂詞

00:30:44.811 --> 00:30:48.282 
可以匹配所有查詢
不好意思...

00:30:48.482 --> 00:30:52.886 
是鍛鍊開始日期後的所有樣本

00:30:54.288 --> 00:31:00.527 
接下來通過結果處理器
我實例化了HK錨定對象查詢

00:31:00.594 --> 00:31:03.130 
並調用了
Add Distance Samples方法

00:31:04.097 --> 00:31:06.533 
Add Distance Samples
在這裏執行

00:31:07.801 --> 00:31:09.369 
它回調了主提示

00:31:09.770 --> 00:31:14.474 
並在我的總跑步距離中添加了距離樣本

00:31:14.775 --> 00:31:19.780 
也將樣本添加到我在鍛鍊過程中
積累的一組樣本中

00:31:22.049 --> 00:31:25.452 
同樣在結果處理器中
我們調用Add Distance Samples

00:31:25.919 --> 00:31:29.823 
並在更新處理器中
我們做了完全一樣的內容

00:31:30.257 --> 00:31:31.959 
最後我們返回距離查詢

00:31:33.560 --> 00:31:37.331 
現在這已經在
Workout Did Start中使用了

00:31:43.904 --> 00:31:47.341 
Workout Did Start
注意到鍛鍊的開始日期

00:31:47.808 --> 00:31:52.613 
接着它生成查詢要了解流距離
運動能量和心率等

00:31:54.147 --> 00:31:59.620 
它執行了我們生成的所有查詢
然後告知UI鍛鍊開始

00:32:00.888 --> 00:32:02.756 
我們來看怎樣來實現

00:32:12.833 --> 00:32:14.468 
我再次選定跑步

00:32:15.302 --> 00:32:16.136 
是戶外跑步

00:32:17.504 --> 00:32:19.740 
正如大家所見
計時器在走

00:32:21.041 --> 00:32:27.948 
我也在累計模擬距離樣本
也顯示了部分卡路里樣本

00:32:29.149 --> 00:32:32.519 
這樣用戶可以在app的這個地方看到
他們的距離 卡路里 心率等

00:32:34.087 --> 00:32:38.592 
最後我們想要支持用戶的是
停止並保存鍛鍊數據

00:32:39.893 --> 00:32:43.130 
我有個Force Touch菜單
其中只有一個Save按鈕

00:32:44.164 --> 00:32:46.333 
在鍛鍊結束時
用戶可以點擊按鈕

00:32:47.601 --> 00:32:50.304 
我們還沒有執行它
所以鍛鍊還在繼續

00:32:51.038 --> 00:32:52.072 
現在我們就動手執行

00:32:58.712 --> 00:33:01.481 
這裏是
Stop Workout And Save方法 

00:33:01.849 --> 00:33:06.320 
每當用戶點擊Force Touch
菜單按鈕 UI就會調用這個方法

00:33:07.521 --> 00:33:09.056 
我會在這裏停止鍛鍊會話

00:33:14.194 --> 00:33:16.697 
只要調用
Stop Workout Session即可

00:33:18.198 --> 00:33:21.368 
我們需要將狀態改變到結束狀態

00:33:22.703 --> 00:33:25.506 
我們相應調用
Workout Did End

00:33:29.576 --> 00:33:32.479 
這裏大家可能想到了
我需要停止查詢

00:33:32.880 --> 00:33:34.081 
接着保存鍛鍊結果

00:33:39.653 --> 00:33:40.954 
我們會注意到鍛鍊的結束日期

00:33:42.055 --> 00:33:43.390 
我們會停止所有的查詢

00:33:44.658 --> 00:33:46.460 
我們會告知UI鍛鍊停止

00:33:47.261 --> 00:33:48.395 
然後我們會保存鍛鍊結果

00:33:52.199 --> 00:33:54.501 
將鍛鍊結果保存到
HealthKit也相當簡單

00:33:59.373 --> 00:34:03.744 
首先我要做的是
打開開始和結束日期 

00:34:04.478 --> 00:34:07.915 
我在Workout Did Start
和Workout Did End見到過

00:34:07.981 --> 00:34:10.284 
我來使用Swift的最新守護語句

00:34:10.350 --> 00:34:12.018 
如果這些是零值
則會提早返回

00:34:13.853 --> 00:34:20.827 
接下來用戶從事的運動類型的
開始和結束日期 消耗總能量和距離

00:34:20.893 --> 00:34:22.795 
將鍛鍊實例化

00:34:26.166 --> 00:34:30.603 
我還通過在鍛鍊期間積累的
所有樣本生成了一個數組

00:34:30.938 --> 00:34:34.174 
因爲我們想讓這些樣本在保存
並鍛鍊結果後與之關聯

00:34:36.976 --> 00:34:39.279 
然後我會將鍛鍊結果
保存到HealthKit之中

00:34:40.147 --> 00:34:43.050 
一旦完成
我將會在鍛鍊結果中加入樣本

00:34:44.685 --> 00:34:46.853 
現在我們就來看一下

00:34:55.529 --> 00:34:58.632 
我再次選擇跑步類型
是戶外跑步

00:35:00.200 --> 00:35:01.468 
我的鍛鍊在繼續

00:35:02.769 --> 00:35:06.139 
一旦獲得幾個指標
我就會保存

00:35:08.375 --> 00:35:11.678 
我將要保存鍛鍊完成

00:35:12.713 --> 00:35:15.516 
現在我們將鍛鍊結果
保存到HealthKit

00:35:15.582 --> 00:35:18.085 
我們來看下在配套app中顯示

00:35:20.621 --> 00:35:22.523 
這就是我們3卡路里的鍛鍊結果

00:35:22.990 --> 00:35:23.891 
做了不少工作

00:35:32.299 --> 00:35:36.703 
好的
我們總結一下剛纔演示中的內容

00:35:37.471 --> 00:35:41.675 
首先我們請求授權訪問
用戶的HealthKit數據

00:35:43.243 --> 00:35:46.813 
接下來我們使用
HK Workout Session記錄鍛鍊結果

00:35:47.381 --> 00:35:50.717 
我們通過HK Anchored Object Query
從HealthKit提取樣本

00:35:51.418 --> 00:35:55.756 
最後保存HK鍛鍊數據到
HealthKit並將樣本與之關聯

00:35:59.159 --> 00:36:01.895 
這就是iOS 9中
HealthKit的新增內容

00:36:02.596 --> 00:36:05.365 
我們今天先介紹了單位偏好API

00:36:05.732 --> 00:36:11.271 
可以實現在app中依照用戶喜愛的
單位顯示HealthKit數據

00:36:12.472 --> 00:36:15.309 
接下來我們講了
HealthKit儲存的新數據類型

00:36:15.542 --> 00:36:17.945 
例如Water Intake
UV Exposure

00:36:18.011 --> 00:36:19.947 
以及與生殖健康相關的信息

00:36:21.782 --> 00:36:24.885 
接着還說到源代碼修改和設備

00:36:24.952 --> 00:36:28.522 
這可以爲HealthKit中 
數據從哪裏來提供更豐富的信息

00:36:30.090 --> 00:36:34.728 
我們還介紹了刪除樣本以及
查詢刪掉的樣本的新方法

00:36:35.262 --> 00:36:38.365 
最後我們探討了
HK Workout Session API

00:36:38.432 --> 00:36:40.934 
並介紹瞭如何
用它搭建WatchKit app 

00:36:43.537 --> 00:36:46.740 
我們覺得大家會喜歡在iOS 9中
對HealthKit所做的改進

00:36:46.807 --> 00:36:48.709 
我們真想看到大家能用它搭建出什麼

00:36:50.110 --> 00:36:54.348 
若想了解更多詳情
可以訪問開發人員文檔資料

00:36:54.414 --> 00:36:57.618 
位置在
developer.apple.com/healthKit

00:36:57.684 --> 00:36:59.152 
或是聯繫技術支持

00:36:59.820 --> 00:37:02.723 
一般性的問題可以聯繫
healthkit@apple.com

00:37:02.990 --> 00:37:05.392 
感謝大家
希望你們會喜歡大會的其餘部分