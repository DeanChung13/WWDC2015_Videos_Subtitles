定制
大家好欢迎参加709会议
我是维普尔·普拉卡什
还有我的同事戴夫·萨利姆和詹森·道格拉斯
我们将和大家一起深入看看iOS 9的新搜索API
正如你在Keynote中所见
应用的内容中的深链接 
现在可以整合到Spotlight 搜索结果之中
这着实让人兴奋
因为iOS用户大多数时间都在app内 
这里也是内容的展示场所 
而且也是人们现在数字生活的居住地
我们非常想通过搜索将所有这些内容整合到一起
在你的app内创建广告式尺寸统一的索引页面
从而在Spotlight显示出来这不是我们要的做的事
这种指向网络的索引方法行得通 因为尺寸统一
但是对于app搜索而言 这种方法却不对
我们要做的是提供一种体验 开发者可以精确选择搜索的内容 
结果呈现方式以及用户点击结果后会跳转的位置
我认为通过搜索API已经做到这点了
方法简单且轻便
搜索API的目标是
让你的app内的内容在搜索时候更为深入人心
而且搜索结果会同时出现在Spotlight和Safari中
在iOS8系统上我们也通过类似的方法
提供Spotlight搜索建议
当用户在Safari地址栏输入一条请求后 
你会从网络上看到结果
比如Maps Wikipedia和App Store
用户可以点击搜索结果 然后直接跳转到搜索内容
在iOS 9中用户可以直接跳转到你的app内容
这也是我们提供的提高曝光率和分销的另一种方法
App内部的公共深链接现在可以在搜索结果中显示 
这样用户就没有必要安装你的应用了
这真是超级棒啊
这样你的app就能通过一种全新的曝光方式
让潜在的数百万iOS用户看到
让我们看看这是如何工作的请看一下例子
我们邀请了Airbnb人员看这些API 
而且他们能够在几个小时内进行整合
他们所做的是他们找到用户的保留信息
以及在平台产生的通讯
然后在搜索API之中加以索引
现在当我在Napa查找我的保留信息的时候 
我在Spotlight上输入 然后保留信息就是第一个搜索结果
这里还有日期
非常酷
这里有日期 客人数量 描述而且当我点击后
我可以跳转到app内容进行更丰富的体验
在这里你可以看到另一个结果是第二条结果 
这是保留信息是伺服器发出的信息
如你所见我可以阅读这条信息 这非常有用 
而且右边还有一个调用字符 
当他们索引的时候
数据会被编入到伺服器电话号码 
然后Spotlight会检索到 进行调用
正如预期的一样
它会进行调用
这样通过完美功能整合 从而实现搜索API
让我看看另一个例子
这里是LinkedIn一款专业的社交App
在这个例子中 
我的第一级网络 
我在LinkedIn上的所有通讯都被添加到搜索索引中
同样的可按照内嵌式联系方式和内嵌式信息获取到这些信息 
现在搜索API不仅仅局限于内容搜索了
一种非常有用的情况是
在App内容的搜索位置设置导航点和导航功能
看一个例子看看Health是如何做到的
它对所有的对话中的深链接进行索引
如果我想要看看我已经走了几步
我在Spotlight中输入步数
获得深链接 点击 然后直接跳转到步数画面
我认为这很酷
用户最常使用Spotlight的是进行app查找和安装
在iOS 9系统中我们相信在app内部
进行直接的深导航以后 将会非常受欢迎
在所有的情况下直接从你的设备索引中搜索结果
这些深链接会放在设备索引中而且不会跨设备索引
那么如果用户还没安装你的app呢？ 
我们在Apple云服务器上保留了大量的深链接索引
我们可以从这些索引之中进行无缝查找
我们想出了一个共享这些索引的绝佳方法
开发者可以标注公共内容为公共 
而且一旦有足够的用户检索到 
那么深链接会提交到云索引
这样你的app所有用户都可以检索到
而且如果深链接有相关的网页链接那么iOS所有用户都可以访问
现在
对app进行检索和爬取
在某种意义上已经毫无意义但是对网页而言则不是
如果你的应用将内容复制到网站上 
我们可以打开网络对网站进行索引 找到深链接
然后放到云索引中 这样就能无缝进行搜索
无缝设备搜索和云搜索的逻辑
对于app搜索而言非常重要
在app中有很多内容是私密的 
而且有些是公共的内容内容只能之二者中的一者
使用这种方法是创建一个无缝搜索接口
这样用户可以知道搜索结果是来自设备索引还是云索引
请看看这个例子
我搜索一个音乐节“northern lights”
我从EventBrite应用云索引中找到一个结果 
我没有必要安装该app因为这个结果有一个网页链接
我点击链接
这样我可以在Safari中打开链接
你注意到了作为EventBride用户 
这个巧妙的app标语会鼓励我下载app 
然后进行更丰富地内容体验 
这正是我现在做的
想象一下如果这是你的app 
以这种交际性的方式将你的内容呈现给iOS用户
而用户找的正是你的应用提供的内容那不是很棒吗？ 
这里我有一个例子我搜索裸关节扭伤
我不想要在我的设备上安装医疗类的app
我通过app搜索找到多个基于app的结果 
而且是用户之前已经查找过的感兴趣的
我可以点击
安装app
然后再app内继续查找
那么工作原理是什么呢？ 
App搜索有三个API
各自独立却又相关
这些API可适用于不同用户情况下的进行App搜索
首先是NSUserActivity
这是发布到iOS 8系统上Handoff APi的扩展
当我们查看信息存取模式 
然后搜索时呈现给用户的是之前他们看到的
而且现在需要的NSUserActivity
让搜索这种信息和检索更为简单
这相当于是浏览器保留了你的浏览记录 
然后用户活动保留了app历史格式 从而使之变为可被检索到
第二个API是CoreSpotlight
这是一款非常好用的工具
用于对app的内容进行综合检索
所有iOS 9的内置式app包括Mail Notes Calendar 
都是使用CoreSpotlight
这让你可以对设备索引进行底层访问 
相当于一款数据库API你可以添加和移除项目
而且这也是用户在你的APP内部
进行私密内容检索的最好方法
第三个API是web markup
这指的是APP复制内容到一个网站上
你可以使用深链接注释信息标记网站内容
我们会到网页上抓取内容 
然后放到云索引
这样就能够通过iOS 9搜索无缝呈现给用户
这里是大会剩下的安排表
我们会深入看看每一个API
说明其工作原理
然后我们会看看在App内采用这些API的最好的方法
我们接下来会谈谈NSUserActivity和CoreSpotlight 
我想邀请戴夫·萨利姆
大家好我是戴夫·萨利姆
是App搜索的一名开发者
我们刚才了解了一些
关于如何让你的app变得可被搜索和曝光的新特性
现在我们会谈谈这些API 以及如何善用这些功能
首先我们先看看NSUserActivity
先来点背景资料
在iOS 8系统引入NSUserActivity 是为了支持Handoff功能 
Handoff功能是非常棒的功能
可以让你远程启动以及查看另一台设备上的应用
NSUserActivity使用轻量化设计
用于捕捉之后可以被恢复的应用状态
现在在iOS 9中
我们添加了NSUserActivity新功能 
这样能够从iOS搜索和Safari中进行索引和搜索
你需要具备关联元数据和活动的能力
这样才能描述活动
而且这些信息可以用于检索和提供丰富的搜索结果
当用户查看你的搜索结果的时候 
你的app会启动然后将搜索结果传递给活动
你可以继续恢复app状态 让用户回到内容页面
让我们看看一个例子 
看看NSUserActivity是如何被添加到索引中的
这里我们有一个食谱app当用户在app内浏览食谱的时候
我们创建一个NSUserActivity
用于捕捉器状态
和提供所需的信息 然后返回到食谱中
然后我们使用来自食谱的资料 
比如标题 描述甚至是缩略图描述该活动
然后我们通知系统该活动表示的是用户的当前状态 
然后该活动会被添加到设备内置索引中
这样当一名用户使用app的时候
我们使用相同的方式创建活动 描述活动 
然后通知系统这些活动表示用户当前状态 
这些活动会被添加到设备内置索引
让我们看看用于支持App搜索的NSUserActivity的新旧属性
首先现在我们有使用指派活动权限的属性
其中之一是关于Handoff的属性默认情况下Handoff是激活的 
如果你选择不启动Handoff 你可以在这里设置为False
还有一个用于搜索的属性 可以允许活动进行设备内置索引
还有一个用于公共索引属性 稍后我们会谈谈
接下来要如何描述你的活动呢？ 
首先是要给活动设定一个标题
这个标题可用于索引和显示搜索结果
你还可以提供活动描述关键字 这些关键字也可以被索引
为了更全面地描述你的活动
你可以使用在CoreSpotlight中引入的新类别
称之为CSSearchableItem.attributeSet  
使用这个类别可以让你使用设置属性快速进行活动描述
你可以在NSUserActivity中的contentAttributes属性中进行设置
如果你想要设置在特定日期之前不显示你的活动
你可以设置一个到期日
另外如果你的活动内容可以保存到网上或者你支持Safari的通用链接 
设置网页URL属性 
然后系统会在Safari或者app内启动你的活动
现在让我看看如何创建活动
这里我们可以举一个关于NSUserActivity的例子 
而且我们在这里会设置一个活动类型
这是你设置的唯一字符串 同样也是你告诉系统的字符串 
让系统明白你的app可以处理什么活动
我们推荐你对这些字符串类型
设置反向DNS类注释这样确保其唯一性
接下来我们的活动需要一个标题
再一次标题可用于索引 而且可作为搜索结果的显示标题
接下来我们要在useriInfo属性上设置一个词典
其中应包括重新创建状态所需的信息
接下来我们要设置eligibleForSearch为True 
启动活动设备内置索引 
该活动代表用户的当前状态 
然后我们通过活动becomeCurrent属性通知系统 
然后该活动会被添加到设备内置索引中
在用户看来这过程看起来是怎么样的呢？ 
现在用户可以返回到你的app索引得到的搜索结果
在这里我们可以明白标题属性是如何映射到搜索结果的标题的
而且如果你使用contentAttributes输入更多的信息
我们就可以得到更丰富的结果
所以当用户点击其中一个搜索结果时会发生什么呢？ 
会调用应用内的一个UI应用指派方法 
和Handoff调用的是同一个
这里我们看到的是continueUserActivity restorationHandler
然后我们传递搜索结果活动 
我们可以查看其活动类型然后可以使用用户信息继续恢复状态
所以现在用户可以点击活动的结果 
然后你可以将结果恢复到适当的状态
App搜索内的NSUserActivity
是让用户返回到之前浏览内容的好工具 
我们想要更进一步
所以在我们设计这项功能的时候
我们查看了App Store内很多app
我们注意到很多app内容其他用户也会看到
所以我们在想
如果我们可以让活动代表公共内容
然后让这些内容可让所有用户搜索到 
而不仅仅是那些之前浏览过的用户这样的话不是更棒吗？ 
这正是我们通过NSUserActivity和公共索引做到的
那么工作原理是什么呢？ 
当用户在你的app内导航到公共内容的时候
你会创建NSUserActivities用于捕捉状态
然后你可以指派内容为公共内容
当用户查看这些活动的搜索结果的时候
该活动会和我们的云索引进行共享
然后让app的所有用户都可以进行搜索
而不仅仅是那些之前浏览过的用户才能搜索
如果你的活动保存到网站上 
那么你可以设置webpageURL属性
这样可以极大增加被iOS的Safari搜索到的机会
所以让我们看看要如何指派一项活动为公共活动
我们可以启动之前看到的那个活动 
然后我们可以额外设置一项属性
这里我们设置eligibleForPublicIndexing为True
然后我们指派该活动为公共
虽然我们已经设置该属性为True 
但这不是说该活动的内容会被立即分享到我们的云索索引中
对于被共享的一项活动
首先需要在搜索结果中出现而且要和用户产生互动
我们可以使用零知识证明方法跟踪这些互动 
这个方法可以确保活动内容的私密性 
直到满足互动阀值
所以更详细地说
当用户和被指派为公共的活动搜索结果进行互动的时候
会发送活动的一个单项Hash到我们的云索引中
当云索引多次调用同一hash之后
活动的内容才会和我们的云索引进行共享
我们在设计该方式的时候还考虑到其他的方面
首先是用户隐私 
第二是防止其他用户的数据意外和云索引产生共享
另外对于这里的大部分人而言NSUserActivity eligibleForSearch
和eligibleForPublicIndexing属性是默认为false的 
对这里每个人来说
只有对活动中代表内容 和特性的属性指派为公共后
才能让app的其他用户看到
现在让我们来看看采用NSUserActivity获得的额外好处
首先是Handoff功能
采用API你可以为Handoff添加支持
如果你选择 你可以允许用户在一台设备上开启一项活动
而在另外一台设备里继续活动
另外两点是关于Siri的新特性
正如主题中展示的向左滑主页代表用户的Siri建议
除了建议联系人和建议应用以及和附近地点
应用中的活动也可以被建议
这里我们看到一条对即将到来的日历事件的建议
和一条对恢复播客的建议
下一个是Siri智能提醒
现在用户可以让Siri提醒他们应用里的具体内容
以及记录在提醒事项里各种活动的时间
这是一种很容易让用户回到他们想要被提醒的内容的方式
应用搜索的内NSUserActivity
让用户可以更加容易地返回到他们之前所访问的内容
并且让应用里的公共内容更容易被找到
接下来让我们谈谈下一个可搜索应用内容的API
那就是CoreSpotlight
CoreSpotlight是iOS 9里的一个全新框架
它提供一个数据库式的API
你可以添加 更新 删除项目
你使用CoreSpotlight在iOS中进行索引的项目
而且可用于内置应用包括Messages Mail Calendar Notes
你明白用CoreSpotlight可以索引的内容
让我们来看看这个API
首先我们从CSSearchableItem开始
这表示的是我们想要索引的个别项目
接下来我们关联一个CSSearchableItemAttributeSet
这是一种通过设置属性描述项目的简单方法
然后我们将CSSearchItem传递给CSSearchableIndex
这样项目就被添加到设备内置的索引上
我们来看看如何创建一个项目
首先我们从创建CSSearchableItemAttributeSet开始
这里我们有一个关于图像的
接下来我们在属性设置里设置一些属性
用于我们要索引的项目
这里我们设置一个标题和一个描述
这里我们将看到标题和描述是如何映射到搜索结果的
接下来我们创建CSSearchableItem
并且我们提供一个独唯一的标识符
应用可以将该标识符用于参考我们想要索引的实际数据
我们可以提供一个域标识符
这是一种将项目分组到一起的方法
在这个例子中我们要为索引一张照片
我们想要将相同标识符的所有照片分到一起并用一个相册表示
并且我们提供一个属性设置用于描述刚刚创建的项目
接下来我们在CSSearchableIndex进行项目索引
称为indexSearchableItems
传递给索引的项目
这对用户来说看起来像什么呢？
用户们现在进入iOS搜索
然后在应用里返回搜索结果
这些搜索结果已使用CoreSpotlight索引
这就是属性设置上的属性映射到搜索结果的方式
当用户点击搜索结果的时候将发生什么呢
应用里的一个UI应用指派方法将被调用
与Handoff调用的方法一致
这里我们再次看到ContinuousUserActivity RestorationHandler
这次你知道CoreSpotlight项目启动了你的应用
因为活动类型被设置为CSSearchableItemAction
并且当我们初始化可搜索项目时
所用的唯一标识符在用户信息里的
CSSearchableItemActivityIdentifier可以使用
因此用户可以点击搜索结果
你可以将正确的上下文返回给用户
现在我们来谈谈索引维护
索引支持更新项目
随着时间的推移
项目标题 描述可能改变用户可能更新代表项目的某些领域
你可以通过调用用于索引项目的方法进行更新
使用唯一的标识符创建一个
你想要更新的CSSearchableItem关联到一个更新的
CSSearchableItemAttributeSet
并且为项目索引调用CSSearchableItems
另外一种常用的维护例行程序是删除项目
删除任何不再与上下文相关的项目是一个好做法
我们支持多种删除项目的方式
首先你可以通过标识符来删除
你可以传递标识符数列
从而删除带有标识符的可搜索项目
这些项目将从你的上下文中被删除
你可以通过域标识符来删除
你可以看见早前我们创建项目的时候
可以用域标识符将项目分组到一起
当调用deleteSearchableItems的时候
你可以传递标识符将分组的项目删除
最后
你可以通过调用
deleteAllSearchableItems WithCompletion处理器将所有的项目从上下文中删除
现在我们来看一个演示如何轻松地将CoreSpotlight添加到应用
我们的演示应用是一个图片查看器
我将向你们展示如何轻松地通过标题索引项目
并且我们将看看搜索和修复的用户体验
这里我们有Xcode和IPhone模拟器
首先我们启动应用
以便对它是什么样子有一个概念
这里我们有一些照片
每张照片下方都有一个标题
这里有一些漂亮的日落
好的 让我们看看如何轻松地
用照片的标题为这些照片编索引
进入Spotlight
我们有一个方法为项目编索引
并且当数据模型初始化的时候
我们将在数据存储中列举所有的照片
并且使用CoreSpotlight添加每张照片
我们将创建属性设置
然后开始描述照片
这里我们为照片创建一个CSSearchableItemAttributeSet
然后我们把数据模型里的标题设置到属性设置里的标题属性
同样也包括基于标题的描述
下一步我们将创建项目本身
这里我们传递一个唯一的标识符
它代表我们可以用于参考数据存储中的图片
然后我们调用indexSearchableItems
将项目传递到CSSearchableIndex
现在让我们建立并运行这个应用
现在我们回到应用
当我们初始化应用的时候它调用索引项目
并且列举照片集里所有照片并将每张照片添加到设备内置索引
现在我们可以进入到iOS搜索
并且我记得我在那里看到一些漂亮的日落
我们可以从应用的结果里
看到这些以日落为标题的日落照片
点击其中的一个结果
它允许我们将应用存储到适合该项目的上下文中
这就是如何轻松地使用CoreSpotlight来为项目编索引
CoreSpotlight里的一些额外功能支持批处理
你可以选择为大量的项目编索引
并且在批处理中分别索引
索引支持保存批处理进程状态并进行检索
这样你就可以继续上次的操作
它同样支持指派和拓展
这样索引就可以与前景 背景通讯或者在尚未运行的状态下进行通讯
它支持数据保护类
这样你就可以为你的索引信息选择合适的安全策略
CoreSpotlight可以很轻松地采用数据库式的API
这样你可以用于从你的应用中索引任何功能或上下文
现在我将现场交给詹森·道格拉斯
让他来谈谈第三种APIweb markup
大家好
我叫詹森·道格拉斯
我来自Siri团队
我们将谈谈web markup
已经有两种不可思议超棒的的方法使你的应用内容
在NSUserActivity和CoreSpotlight可搜索到
而第三套APIs就是web markup
用于应用内容的检索对于网站而言同样适用
标记这种联系的关键在于移动深链接
一个深链接像是一个URL而不是一个关联内容的网页
即关联到应用内部的具体内容
早前你看过这个示意图
当时我们为从设备中获取的公共项目设置设备内置索引和云索引
为了抓取网站内容
现在Apple有一个网页抓取器叫做AppleBot
AppleBot会查找网页然后多次抓取应用网页
对于许多这样的内容你无需做什么
如果你的网站支持移动深链接
那么我们可以继续找到这些内容
并让它们可被iOS搜索和Safari上搜索到
当这些内容从网站上撤出
就像你看到的 我们将直接在搜索和Safari上显露出来
当用户点击其中一个结果它们直接深链接到你的应用中的内容
用户就可以看到来自搜索结果的内容
你可以发现有一个连接到你应用的链接
这是免费的
你不用在应用内特别做什么才能使用到这链接
用户只需点击左上角的链接他们就会被带回到搜索
这使得它无缝往返
使用web markup只需四个简单步骤就可让你的应用内容被搜索到
第一步
确保Apple可以发现你的网站并索引你的网站
第二步确保你的网站包含移动深链接标记
下一步确保你的应用可以处理打开这些深链接
最后虽是可选项目但我们强烈推荐
就是为结构数据添加标记
我们等下会谈谈这是什么
这样可以让你的搜索结果看起来丰富从而吸引用户
因此第一步让你的网站容易被Apple发现
我们将抓取网页同时找寻网站有深链接确保我们可以找到应用网站
最简单的方法是当你提交网站给iTunes Connect时
用它作为你的支持或营销URL
当你提交应用的时候会有两个文本框
这很容易
我们使用它作为找寻移动深链接的开始点
下一件事情就是确保你的网站已经有深链接标记
最普遍的做法你之前可能已经看过
某种被叫做Smart App Banners的东西
它们已经存在一段时间
这是一个简单的&lt;meta&gt;标签用于指定应用
并且说明深链接URL是什么样
当用户访问Safari应用网站时他们会看到一个横幅广告
如果用户还没有安装该应用
广告允许用户直接进入应用商店进行安装
如果已经安装你可以直接点击视图按钮
直接在你的应用里查看内容
如果你想了解更多关于Smart App Banners
请查看Safari网站内容指南里面有更多信息
在iOS 9里有一个新特性叫做Universal Links
它是一种比Smart App Banners更好的方法
自定义URL方案有一些优势之前你可能已经用于深连接了
第一个优势是唯一性
许多应用支持自定义
他们可能对相同自定义URL方案产生冲突
但使用通用链接的话就不会有冲突
因为我们使用应用网站作为唯一的识别方法
这也很安全
因为可以说一个应用属于某个特定网站而这是我们设置好的
将签字证书上载到网站
然后当用户安装应用时
我们可以检查证书并确保这二者是关联在一起的
这样做也非常灵活
因此不论是在网站内还是通过应用进行控制 用户可以控制行为
从而用户可以额轻而易举地切换行为并选择他们最想要的默认值
这意味着可以在不使用JavaScript的情况下询问用户要什么
另一个不使用Javascript的优势是
这是深连接的一种比较复杂的类型我们要花很多时间来理解
使用通用链接可以确保我们能正确地解析深连接
最后一个优势是普遍性
一个通用链接是一个单独的URL可用于网站内容以及应用内容
你不需要有两个不同的URL一个用于网站 另一个用于深链接内容
如果使用通用链接
我们仍需通过web markup来了解深链接
所以你想要使用Smart App Banners
或者其他支持方案
这同样确保了如果用户没有安装应用他们仍可以发现应用并安装
因为通用链接的一个特点是一旦你安装应用通用链接就会被启用
想要了解更多的话我强烈建议你查看无缝连接到你的应用
明天会开始的部分
下一步是说我们支持深链接
它的替代方案之一是Twitter卡
Twitter卡也使用meta标签和Facebook应用链接
除了支持智能应用横幅外
我们同样支持这些
并且我们将添加到其它以后可能出现的流行标准
最后确保你的应用可以打开深连接
过去你可能对此很熟悉你可能已经在你的应用里这么做了
你已经确保实现了openURL
这里有一个简单的使用openURL的例子
在我们的例子中
我们有一个URL
它可以查看配置文件 而且有一个配置文件ID
我们用NSURL组件进行URL解析
然后将配置文件ID从查询参数传到视图控制器
这是一个例子说明如何简单在你的应用指中支持深链接
现在我想谈谈之前我提及的结构化数据
结构化数据是基于移动深链接之外的一些东西
它让我们理解并解析搜索结果信息
解析自由格式的网页文本是一件困难的任务
结构化数据能提供极大帮助
而且还可以确保搜索结果更为显眼
而不仅仅在结果中出现图片 评级和其它关键事项的文本
这同样还可以帮助你提高排名
因为我们知道结果丰富可以吸引用户
比起其它结果我们更能凸显该结果
所以添加这种结构化数据类型标准之一是开放式图表
使用开放式图表可以从结果中指定一张图片 一段音频甚至一段影像文件
你只需简单地将标记放置于网页之中
然后我们将把它与在同个页面的深链接关联
另一种很普遍的结构化数据形式是schema.org
我们会马上添加支持
一个普通的schema.org是AggregateRatings
主要用于排名和评论
这个例子中我们会展示
使用schema.org微数据添加AggregateRanging标记
而且我们还支持RDFA
因为JSON-LD基于网站的执行方式
我们在以后会提供支持并进行解析和设置兼容
现在让我们来详细分析一个例子看看实际上是如何运行的
这里有一个airbnb结果
第一件事也是最明显的事
我们使用标准HTML&lt;标题&gt;标签进行解析
然后我们进一步来解析标题
这里显示的每晚价格
我们可以做到这一点
是因为我们已经把报价模式添加到网页并且把它关联到酒店
我们可以解析价格以及计价货币并直接显示在结果中
我们也可以通过schema.org的AggregateRanging展示评论数量
并且用星进行排名
最后使用开放式图表的图像标签展示图片
现在谈谈我们在schema.org上支持的一些模式
第一个是AggregateRatings
另外是报价价格
或者如果你有一个用户消费型网站你提供销售的商品
正如我们看到的酒店预定
价格范围 如果没有固定价格的话还有许多与价格相关的因素
比如喜好 风景 评论等
同样interactionCount将会被schema.org里的新模式取代
这个我们也同样支持
如果你正考虑从interactionCount转移到Actions
对于像公司等这样的商业组织
你可以将地址与电话号码等联系信息关联起来
稍后我们将看看这样做如何使你的搜索结果更加丰富
Recipes这是一目了然的SearchActions
如果你的网站有一个搜索登录页面
使用特别方式进行标记
这样我们也能处理搜索结果只是方式稍微不同而已
我们知道这是一个搜索登陆页面
最后是ImageObjects
这仅仅是针对图像的
现在我想谈谈Actions
Actions是一种运用结构化数据使得你的结果可执行的方法
在支持启动的时候有一系列的操作
第一步是拨打电话号码获取地址
并播放音频或视频文件
这些例子的第一步是拨打电话号码
正如我们之前在组织模式里看到的你可以添加电话作为一项属性
当我们看到这个电话号码后可以解析它并直接在结果中放置一个拨号按钮
现在你的结果已经可以执行拨号了
另一种是使用AudioObject模式
使用AudioObject你可以指定一个URL到音频文件
且用户可以在结果中播放文件无须深链接到应用中再从里面进行播放
最后获取方向
提供一个邮政地址使我们可以允许用户直接导航
而不需要深链接到应用
这样做的好处是使得结果更有可能与用户互动
如果一个用户看到结果清单并且可以直接执行想要的操作
他们更有可能会点击你的结果
所以我们在这里展示了许多不同的模式 标记
我们将在今年晚些时候添加测试工具用于测试网站上的标记
这些将在今年晚些时候出现在开发者网站上
我们将有对深链接标记和搜索结构化数据标记的测试工具
最后当你添加移动深链接
或结构化数据到网站
我只想要鼓励大家多用一些资源进行资源检查这些资源提供许多信息
并且我们希望能够助你一臂之力
谢谢
现在我将把这里交还给维普尔
这是三个简单 强大 灵活的方式让iOS 9里的应用可被搜索到
你应该使用哪一个
这取决于你想要创建的内容性质的功能以及想要的搜索体验类型
CoreSpotlight用于设备上的私人数据索引
你可以使用CoreSpotlight来彻底索引应用里的数据
如果你正建立或者说你有一个社交网络应用
你想要索引所有用户发出和接收的信息
CoreSpotlight是最适合的工具
web markup适用于映射应用内容到网页上的情况
如果你这么做了你当然要使用这个标记
因为它为你的应用和内容提供更多被用户发现的机会
而这些用户还没有安装你的应用
NSUserActivity可用于应用内公共
或私人内容以及索引导航点
现在有另一种风格的NSUserActivity
那就是戴夫谈及到的公共索引
这玩意儿真的非常强大
如果你的应用有百万甚至是上亿项目
你可以使用公共索引从根本上移动这些项目
并在苹果云索引里索引
这些API各自千秋
但是又能配合使用
在相同的应用 相同的内容里你可以采用多个API
唯一要记住的事情是
在多个地方被索引的项目你需要赋予其相同的ID
从而关联这些项目
如果你使用所有这三个API
最常用的ID是URL 
你可以设置CSSearchableItemsUniqueIdentifier到URL
然后NSUserActivity关联到该唯一标识符
然后网页URL关联到URL
如果你同时使用NSUserActivity和CoreSpotlight
这是一种很普遍的组合模式你只是需要确保它们有相同的ID
这有助于搜寻复制结果也有助于项目排名
让我们来谈谈排名
搜索的真正魅力在于基于用户输入的一些信息
提供最相关的结果
到这里我们已经做了许多
相关性和排名是一种复杂的功能指的是配对查询和项目
这里说的绝大多数对于开发者和用户是完全透明的
然而
这里的一个重要的排名因素是与内容和结果的互动
你可以做的是帮助确保搜索抓取所有这些互动
我们有三种互动类型
一是URL广泛度
这是通过web markup索引的可应用内容
它是基于你添加到模式当中的质量指标
比如排名 喜好 评论以及网页链接图表中URL的位置
URL基于广泛度提高排名并且这是自动发生的
第二种互动
是应用内内容被查看的频率
抓取该频率的唯一方法是通过NSUserActivity
这就是为什么我们一直鼓励你采用NSUserActivity
第三种也是最重要的
互动形式是搜索结果参与度
当搜索结果展示给用户的时候
不管他们是否点击结果
或者他们是否对结果中的描述感到满意
我们称为无声参与并通过解析环节抓取
从而获得优化关联性的快速清单
首先
继续你现在在做的事情开发出优秀的应用和内容
搜索系统本来就是设计用于发现最好内容的
你可以帮助我们确保所有的互动
都可以通过NSUserActivity抓取到
在可执行的地方使用公共索引NSUserActivity
因为根据用户数据我们现在可以抓取内容的参与度
采用模式标记的方法标记处互动计数和质量指示
最后遵守用户界面指南我稍后将谈到它
突显优秀内容另一方面是去除不相关的内容
我们在这方面也已经做了许多工作
如果恶意或不好的应用滥发索引邮件
我们将对结果进行降级或完全压制这些搜索结果
最重要的方法是参与度显示比
即搜索中展示的结果数量和参与的次数的比值
低参与度将会被压制
而高参与度将有助于提升结果在搜索中的排名
获取高参与度的最好方式是
遵守用户指南中的一些建议
你在iOS 9中可以注意到的一件事情是
即使是来自内置应用的搜索结果内容也很详实且丰富
这是因为我们发现更丰富的结果意味着更高的参与度
这里有几件事情提供一个缩略图
提供一个精心构建的易被阅读的描述以及排名和操作
缩略图里的图像效果非常强大
当用户他们点击结果后他们会感受到所看到的
提供一个好的缩略图
提供用户找寻的关键信息
例如如果用户正找寻一个订舱号一个在描述中提及的参考号
这样搜索任务可以在搜索中完成
另一个强大的功能是支持关键字
在所有的API里你可以提供一串关键字
然后进行搜索
种类关键字是非常非常实用的
当用户找寻一种具体的“票”时
它们可能键入票的类型而不是票的名称
当他们找寻蛋白质的时候他们可能键入食谱
这让用户感受到一个神奇的智能体验
其它实用的关键字类型是同义词和缩写词
用户想关键字越少越好
所以他们可能输入sf giants
而非San Francisco Giants
你可以通过关键字提供相关回调
同样重要的是
启动行为这指的是用户点击结果所发生的事
你想把用户直接带到搜索内容里面
而且没有插入式广告 没有弹出广告
没有屏幕广告 而且加载页面很快
测量和估计从点击到内容展示的时间是很重要的
并将该使用作为排名的一个因素
这里有两个例子
一个是对的一个是错的
让我为你展示如何做
我确定没有人的应用会这么做
用户会很沮丧而且你想要找到完全避免的方法
我们来谈谈接下来怎么做
当然了你可以对你的应用内容进行全面索引
这是我们发现的在搜索上下文方面非常实用的一些事情
你可以通过NSUserActivity抓取任何用户过去查看的内容
或用户创建的内容 或评级过的内容或在应用内创建的清单
人们想要返回到任何他们过去做的事情
导航点和功能是非常非常实用的工具
用户可能想要查找
应用里的新信息 新内容
你可能想要在搜索中查找这些
你可以进行创新式的
或者主动地进行项目索引
而这些正是用户想要查看的
假设我买了一张音乐节的票但我可能对区域内另一场音乐节感兴趣
你可以使用你的应用解析得到有趣的内容并将其放入索引
API非常灵活
而且允许你创建非常新奇的搜索体验
这方面有无穷的可能性
总结一下让我们看看我们在这个部分谈及的内容
我们介绍了用于索引深链接
和应用搜索的快速设备内置和云架构
我们向你展示三个API以及你可以采用的深链接方法
我们向你展示了好的内容丰富的搜索结果
以及内容到结果的快速互动方式
是如何改善搜索体验的
API可以抓取你的内容
并展示给世界各地的iOS用户
我们还有更多的信息
如果你想要了解详细信息你可以前往搜索文档首页
我们的论坛上有更多关于互动的内容
我建议你前往詹森介绍的无缝连接环节
我们有两个实验
一个将在我完成讲说的时候马上开始大家可以加入我们
另一个是在星期五举行
我们希望在星期五的时候看到
大家在WWCD整合搜索API的成果
这就是应用搜索的全部内容