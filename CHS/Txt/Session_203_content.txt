《HealthKit最新内容》
大家好欢迎来到《HealthKit最新内容》讲座
这是帮大家了解今年在SDK中最新内容的绝好机会
我是香农·谭是iOS工程师
稍后我的同事艾伦·肖特利奇也会上台
我们很激动能帮助大家搭建有效应用
来帮助数百万民众能过上更健康更好的生活
我们先从讲座的路线图开始
今天我们将谈到几项不同的内容
我们将快速过一遍HealthKit
还会介绍在iOS 8.2中引入的单位偏好API
并会谈到iOS 9的糖尿一族
可以用到HealthKit支持的软件的全新功能
接下来艾伦会上台来介绍数据源删除和Workout会话
最后我们会介绍WatchKit的演示
先来谈谈HealthKit的背景
现在个人健康是个非常活跃的领域
在App Store中
有许多app都是在帮助用户获得并保持健康状态
运动跟踪器和智能手表
这类设备可以记录大量极为私人的相关数据
HealthKit框架使存储和提取这类信息变得非常容易
它可以提供丰富的API来保存健康和健身数据并在应用间分享
同时还能在极为隐私的环境下 使用加密数据库中确保安全
对于app开发人员而言这意味着什么？
意味着当你使用HealthKit时
你可以跳过编写自定义编码 来分享存储和同步数据 
而可以更多关注app体验的核心功能
同时还是更出色的生态系统的组成部分
最后 有了HealthKit还诞生了Health app
这可以提供HealthKit的全视图
在iOS 9中我们增加了更多视图
以便于用户存储 总结并关联数据
我们来谈谈支持这些出色的Health应用的数据类型
目前在HealthKit 有着许多数据类型
其中涵盖了个人健康的方方面面
我们试着将数据类型尽可能的广泛和有效
有个常见问题
Apple怎样能在有限的开发时间内对需要添加的数据类型进行优先安排
我们最重要的优先级考虑是存在硬件
例如可以自动跟踪体重状况的蓝牙秤
可以测量你的睡眠情况的Sleeptracker
我们发现自动量化的健康数据
并同步到设备上的HealthKit很强大
我们也根据存在的软件添加数据类型
是否已有的流行app可以围绕这些数据类型生成体验
最后我们会考虑顾客和开发人员的反馈
为支持我们对数据类型的讨论
我们现在来看它们的结构
HealthKit中的每个对象都有个类型
每个类型都会继承HK对象类型
特征类型不会随着时间而改变
如血型或出生日期
随着时间而改变的类型叫做样本类型
我们会介绍两种
数量样本有着数量和单位 比如体重
类别样本可以枚举若干不同的值如睡眠分析
你可以是处于几种睡眠状态之一
当然这是在回顾已有的信息
如果想要了解更多HealthKit的构成
我们建议大家看看去年的讲座
《HealthKit介绍》
我提到了数量样本包括数量和单位
我将花些时间来介绍新的单位偏好API
虽然这款API不是iOS 9的内容但在iOS 8.2讲座中我们介绍过
我们现在还想提一下
大家可能注意到在iOS 8.2
在Health app中有个新的单位窗格
根据yoghurt的地区和位置来显示单元
但是用户可以整理输入这行数据 
用自己的单位偏好覆盖默认的设置
在iOS 8.2中HK Health Store里有新的类扩展
你可以用来发现单位偏好
我们建议这么做
这样你在app UI中显示的单位就会
与用户希望在Apple Health看到的相匹配
最后每当单位偏好发生改变时就会启动新的通知
现在我们探讨回顾了HealthKit中的单位数据类型
我们再来看在iOS 9中可用的新数据类型
首先是水摄取量
我相信大家都知道有人会随身带个巨大水瓶
别人要是问起来他会解释说
每天补水对健康很重要
若是整天都觉得很渴也许的确很糟
在App Store有许多app会温和地督促你增加水摄取量
甚至会有部分设备和传感器如蓝牙水瓶 可以跟踪你的水摄取量
很多人都希望确保自己每天的饮水可以达到8个8盎司杯
或是两升的推荐标准
如果运动强度较大有脱水风险人们可能会需要更多水
因此我们在HealthKit中增加新的数量类型Dietary Water
这是单位是体积
它的字面意思是指膳食水这类型也可以跟踪通过食物摄取的水分
接下来的类型是UV Exposure
紫外线辐射存在于日光当中对人体健康产生正面和负面的作用
它还可以促进维生素D的形成
还可以改善情绪和健康水平
但过度暴露在紫外线下会产生负面作用
会对人体产生负面影响 如晒伤或长期影响 如皮肤损伤或白内障
如果你要在阳光下呆上一段时间那么了解何时有晒伤风险会很有帮助
还有一些很精巧的设备可以跟踪人暴露在紫外线照射下的情况
针对这类app和传感器
我们添加了新的数量类型UV Exposure
其中的值是标量代表紫外线指数是从0到12
代表从最无害到最危险
当然紫外线照射并非是衡量我们的日晒风险的最理想方式
这可能会取决于你所穿的衣服
你所用的防晒霜或你的皮肤类型
针对最后一点我们在HealthKit中
增加了新的特征类型Fitzpatrick Skin Type
这代表了根据菲氏量表的个人皮肤类型来反映晒伤或晒黑的情况
iOS 8.3的表情符号就是根据菲氏量表做成
左边的所有都是1型代表很容易晒伤的很浅肤色
右边的都是永远不会晒伤或严重晒黑的深棕色或黑色皮肤
因为Fitzpatrick Skin Type是特征类型
因此它与大家可能用过的类别或数量样本都不相同
它可以通过Health Store直接访问
并返回枚举的简单包装类
现在我想来谈谈在生殖健康类别下我们添加的全新数据类型
当想到量化健康时
我们会想到技术驱动项目如运动跟踪器和智能手表
我们会想到用HealthKit同步健身数据
也许会将营养成分自动输入美食日记
但是生殖健康是很重要的健康内容
很多跟踪记录健康数据的女性都知道月经周期是令人兴奋或相当重要的数据
对于许多想要怀孕生子的夫妻和许多不想要孩子的夫妻来说
排卵期 理解荷尔蒙变化或紊乱的监测结果是非常重要的信息
也许谈论这些敏感甚至私密的数据会令人感觉有些奇怪
可是当我们谈到技术改善生活时这些都是非常关键重要而有意义的信息
它帮助女性理解并了解自己的身体状况从而可以控制健康情况
它可以帮助并已帮助数百万人
在了解可靠信息的基础上对生育和计划生育做出决策
跟踪排卵期的app是
App Store中Health和Fitness类别下最受欢迎的app产品 
这也是HealthKit第一大开发要求
我们很兴奋能在iOS 9中为这些app提供支持
在生殖健康方面有着许多因素
我们先从6个新类型开始
这些都是公开内容也许对想要宝宝的人或是不想怀孕
或希望对自己的健康状况全面了解的人都会有所帮助
第一种是Basal Body Temperature
针对每种类型我们会在Apple Health中
添加控制图给大家看到数据视觉化
基础体温是身体在休息状态下的温度
通常是在清晨测量
它呈现双相变化在排卵后会稍稍上升
人们常常会在同一时间一连数月跟踪基础体温
这样就会得出周期图形并可以大体预测下一个周期的时间
一般都是用铅笔和纸张记录的
这种跟踪排卵的办法由来已久
还有一种跟踪或检测排卵期的常见办法是测量宫颈粘液质量
与基础体温的变化相反
宫颈粘液是在排卵期之前发生变化
在HealthKit中这是类别样本
其中会列出医学一般会接受的宫颈粘液状态
我们添加的下一个类型是Ovulation Test Results
对女性来说 黄体生成素激增会导致排卵
用户可以购买家庭测试套装和LH试纸来测量LH高峰
在HealthKit这种类别样本测量结果是阴性或阳性
经期是否健康是极其重要的指标
医生经常会问及女性末次经期的时间以及生理周期的规律性情况
帮助人们记录经期情况的App非常受欢迎而且种类繁多
在HealthKit中我们添加了类别样本
我们还添加了新的元数据秘钥
Menstrual Cycle Starts
因为上次经期的时间和周期规律性是重要的医学信息
我们要让app便于计算这类信息才行
我们让所有的客户端都记录这个布林元数据秘钥
如果我们看不到就会抛出异常
我们再来看元数据
元数据是提供HealthKit对象额外信息的字典
可以帮助扩展规定的对象类型
并为HealthKit添加具体app信息
字典秘钥是你可以生成的字符串或是Apple预定义的秘钥
预定义秘钥可便于在不同的应用中分享
我们现在来生成包含
重要信息的元数据字典
在最后保存到HealthKit之前 
我们生成样本时
会将样本放入适当的数值类型并传递到元数据
接下来的两个类型是类别样本
但与HealthKit现有类别样本不同它们只有单一的值
HK Category ValueNot Applicable
这些类别样本有数据 元数据和其他属性
它们无法列入多个值
因此这些类型中首先是阴道出血
这是指在经期以外发生的少量出血
因此它与经期不同
我们添加的第二类型是性生活
性生活在许多排卵跟踪应用中也是相关的重要信息
我们在HealthKit中也增加了相应支持
还新添了可选预定义元数据秘钥
Sexual Activity Protection Use
这是指预防性传播疾病或防止怀孕
我们来总结一下
刚说过在iOS 9增加的新数据类型
Water Intake和UV Exposure和Fitzpatrick Skin Type
以及6种新的生殖健康类型
我们希望看到大家在自己的应用设备中会创造性地使用这些数据类型
现在有请艾伦来介绍数据源部分
谢谢 香农
大家好 我是艾伦
是Apple HealthKit团队的软件工程师
我们刚刚听过香农
介绍了iOS 9中的HealthKit新类型
我来讲讲大家用iOS 9的HealthKit还能做些什么
我要介绍的第一部分改变是关于数据源
HealthKit可以通过不同的源保存数据
可以从用户iPhone中的Motion代码处理器或连接的蓝牙
心率监测器自动提取样本
也可以是来自Health app手动输入的样本
或由诸位这样的开发人员创建的应用保存的样本
知道HealthKit的数据是来自哪里很重要
特别是如果你在使用数据进行医学或研究工作时 更是如此
那么怎样判定HealthKit的数据是来自哪里呢？
HK对象类是所有存储在HealthKit的根类
在iOS 8中它有数据源相关的两个属性
其一是Source属性
它代表着用哪个应用保存该对象
第二个属性是元数据
开发人员常用元数据存储生成对象的外部设备信息
这些信息可以是外部设备的名称或厂商名称
在iOS 9中我们引入了两个新属性
可以提供对象来自何处的更丰富信息
这些新属性中第一个是Source Revision属性
而且替代了Source属性
除了代表生成样本的应用它还带着保存对象的app版本
第二个是Device属性
会返回代表生成对象的外部设备的对象
它本意是替代外部设备相关的元数据
我们再来看看HK Source Revision类
它有两个属性源代码
同样代表着...
不好意思
代表着保存数据的应用这样它也包括版本字符串
当你在HealthKit中保存数据时
HealthKit会自动为它赋值HK源代码修改
版本字符串来自app的Info plist中的束版本输入
在iOS 9之前 保存在HealthKit的对象
将会有空版本字符串
我们来谈谈HK Device
HK Device类包括若干
代表硬件设备不同方面的字符串
例如名称厂家 版本信息 等等 
当你创建设备时 你需要向用户提供尽可能多的适用属性
并向其他应用提供对象来自哪里的信息
如果你app保存的对象是由app设备上内置的感应器生成
你可以在HK Device上使用本地设备类方法
以获取一个设备来代表你的app运行的设备
我们先来看怎样在设备上保存样本
首先你要创建具备所有适用属性的设备
接下来使用一个采用设备的HK样本子类
初始化方法实例化样本
最后和之前一样
你可以把对象保存到HealthKit 
查询来自某个源代码修改或设备的对象也很容易
你可以用新介绍的谓词便捷方法来面对iOS 9中的HK Query
这里的示例是查询在之前版本应用中保存的对象
首先我们用默认源代码生成源代码修改和1.0版本的字符串
之后对谓词实例化以匹配有着源代码修改的所有样本
最后我们会执行HK样本查询
它会返回给我们用应用版本1生成的所有对象
现在我们介绍了在HealthKit保存对象的新方法
再来介绍一些删除对象的方法
iOS 8只有一种 删除对象的方法
这就是HK Health Store中的Delete Object方法
它会删除单独的对象
这很简单但若一次删除多个样本就会有些麻烦
我们现在引入了两种新的便捷方法来删除对象
第一种是HK Health Store的方法 
这可以删除一组对象
每当你有之前查询过的样本系列
并想将之全部删除时 可以用这个
例如 你也许想用HK Device
而不是元数据将之前版本的app保存样本做转移
一旦您保存了以往对象的新拷贝
你可用Delete Objects删除所有旧对象
我们要介绍的第二个新方法就是
Delete Objects Of Type
因此它会删除匹配给定谓词的所有对象
这样做很高效因为你在删除对象之前不必查询
你并非总是要删除对象有时你也会需要了解何时删除的对象
也许是用户或是另外的应用做了删除
如果你的app与HealthKit同步
一旦从HealthKit的数据库删除对象
你最好从你的数据库把对象删除
在iOS 8没有简单的办法来实现这点
我们引入了新方法
通过Anchored Object Query类 查询 在iOS 9中删除的对象
HK Anchored Object Query
有带有结果处理器代码块的新初始程序
其中的参数包括新样本和删除的样本
现在当你执行这个查询时
HealthKit会返回自上次你运行锚定对象查询后 
匹配谓词的生成或删除的所有样本
这是由你所提供的锚来表明
删除的对象通过HK Deleted Object类的
实例来代表其中携带了删除对象的UID
为节省空间
删除对象仅在被永久销毁前有限时间内存储在HealthKit中
这意味着如果你有功能需要取决于查询被删除的对象
你应该注册背景升级以确保你的app会因删除而启动
你可以使用iOS 8中的Enable Background Delivery For Type方法
它会因iOS 9中的删除和样本生成而启动
现在我们回到HK Anchored Object Query
来谈谈在iOS 9中针对类的第二个新添内容
即Update Handler属性
一旦提供
当生成或删除匹配谓词的更多样本时在结果处理器之后就会调用代码块
有着更新处理器的HK锚定对象查询会继续无限期运行
直至你在HK Health Store用Stop Query停止它
在本次讲座稍后的部分
你会看到这是
处理来自HealthKit的数据流的有效方法
例如你可能会想从HealthKit显示用户的最新心率数据
你可以使用更新处理器来实现
大家也许注意到
Apple最近推出了新的硬件它可以读取佩戴者的心率
如果能从该设备上直接运行这个查询会不会很酷？
而你的确可以
今年除了在iOS 9在对HealthKit做了改进
我们还带来了WatchKit app的框架
watchOS上的HealthKit与iOS的HealthKit非常像
你所熟悉的几乎所有HealthKit API
在watchOS中也都可用
你可以用习惯的相同查询和方法来存储和提取健康数据
但是因为在新平台上性能相当重要
只有有限的HealthKit历史数据 在Watch上可用
我们还会介绍崭新的健身API
这可以在Watch上记录锻炼数据
最后在Watch的HealthKit中
保存的数据会自动同步到用户的手机上
当你的app将锻炼数据保存到Apple Watch时
消耗的能量也会在运动环中记录
你的用户一定会喜欢佩戴Watch时使用你的app
大家可以在这些截屏中看到
你保存的锻炼数据
将会在iOS的Daily Summary和Activity app显示 
在我进一步探讨锻炼前我先要介绍有关隐私问题
我们相当重视用户的HealthKit数据的隐私性
所以和iOS一样我们自然会在Watch对之妥善保护
我们需要申请访问权才能使用HealthKit数据
当你的app申请授权时
弹出框会同时出现在Watch和用户的手机
来授权你的app可以访问
假设 如果你的手机应用已经授权存储并提取距离样本
那么也会授权Watch app存储并提取距离样本
一旦WatchKit app得到授权可以使用HealthKit数据
你可能就想记录锻炼数据
我们引入了全新的
HK Workout Session类来实现这一点
有了HK Workout Session你可以明确用户从事的运动类型
该信息将帮助Apple Watch更准确地记录用户的运动情况
在会话中你的app会位于前景
每当用户抬起手腕检查锻炼的进度时
你的app就会在前面居中的位置
注意在任何具体时间中 只有一个锻炼会话可以运行
如果用户在另一个应用开始了另外的锻炼
你的锻炼会话就会结束
我们现在来看HK Workout Session
你会用运动类型和位置类型实例化锻炼会话
位置类型表明运动是否发生在室内还是户外
你还可以设置委托
这可以实现告知你锻炼状态发生了改变
那么HK Workout Session委托协议有着两种方式
每当锻炼发生改变时 就会调用第一种
例如从Not Started到Running或从Running到Ended
这是个不错的机会可以记录锻炼的开始和结束日期
同时还可以开始或停止任何可能的数据查询
只要出现错误 就会调用第二种方法
会在第一种方法之外再调用它
并会表明你的锻炼会话已经结束
开始和停止锻炼会话其实很简单
你只需要在HK Health Store
调用Start Workout Session或Stop Workout Session
现在我来快速解释一下
怎样用这些新款API搭建WatchKit app
我已经搭建了一个简单的WatchKit应用
我要给大家看一下这个app怎么用
它可以让用户规定从事的运动形式
例如跑步
我选择跑步
一旦选定了运动类型它们就会选择位置类型
户外或室内
我选的是户外
这是进行会话的视图它会显示该锻炼的几项指标
在会话视图中什么都没有因为我们没连上HealthKit 
我们现在就动手
在Xcode中我们看到我的运动界面控制器
这是第一个我们刚看到的视图用户选择所从事的运动类型
这是我申请授权访问HealthKit数据的绝好机会
我现在马上就在这里...
不好意思是Will Activate方法
首先我实例化了要分享的一组类型 其中就包括锻炼类型
接着我要从HealthKit读取一系列类型
例如长途单车 长途步行还有跑步能量消耗以及用户的心率
最后我们调用并申请授权来分享类型
这和iOS中一样
现在我们需要在配套的应用中做点什么来完成这个申请
在配套app的app委托中 
我将要执行新的UI应用委托方式
应用应该申请健康授权
我只需要为完成扩展调用处理授权
这会提示用户为我的app授权
我们来看这个操作
大家可以看到
用户会在Watch和手机上都得到提示打开我的app并授权
这是熟悉的健康授权表格
我批准app访问它所需的任何内容
并点击Allow
现在我们得到授权可使用HealthKit数据
接下来
我们需要在用户点击Start时开始锻炼会话
我这里有Workout Session Manager类
这就是负责管理我和HealthKit互动的地方
这是个很大的类但是我们只会执行其中的一部分
我们点击Start调用Start Workout方法
我希望开始之前在构造器上实例化的锻炼会话
我们只需要在包含锻炼会话的
HK Health Store调用Start Workout Session
现在我们需要执行锻炼会话委托协议这样我们就会得知锻炼状态发生的改变
因为这是在背景提示中调用我在处理状态
改变前 我在回调主队列
如果会话状态改为Running 我会调用Workout Did方式
如果它改为Ended我会调用Workout Did End
我们继续Workout Did Start
我们需要为HealthKit数据进行查询
以便在锻炼中显示
其中的一个指标是距离
我需要查询从HealthKit搜集距离数据
并把它累计到锻炼会话进度中
我将会生成助手方式在这里生成查询
我们还会使用HK Anchored Object用升级处理器来查询
所以我编写了Create Streaming Distance Query
它采用了锻炼开始日期
我们首先做的是生成一个谓词
可以匹配所有查询不好意思...
是锻炼开始日期后的所有样本
接下来通过结果处理器我实例化了HK锚定对象查询
并调用了Add Distance Samples方法
Add Distance Samples在这里执行
它回调了主提示
并在我的总跑步距离中添加了距离样本
也将样本添加到我在锻炼过程中积累的一组样本中
同样在结果处理器中我们调用Add Distance Samples
并在更新处理器中我们做了完全一样的内容
最后我们返回距离查询
现在这已经在Workout Did Start中使用了
Workout Did Start注意到锻炼的开始日期
接着它生成查询要了解流距离运动能量和心率等
它执行了我们生成的所有查询然后告知UI锻炼开始
我们来看怎样来实现
我再次选定跑步
是户外跑步
正如大家所见计时器在走
我也在累计模拟距离样本也显示了部分卡路里样本
这样用户可以在app的这个地方看到他们的距离 卡路里 心率等
最后我们想要支持用户的是停止并保存锻炼数据
我有个Force Touch菜单其中只有一个Save按钮
在锻炼结束时用户可以点击按钮
我们还没有执行它所以锻炼还在继续
现在我们就动手执行
这里是Stop Workout And Save方法 
每当用户点击Force Touch菜单按钮 UI就会调用这个方法
我会在这里停止锻炼会话
只要调用Stop Workout Session即可
我们需要将状态改变到结束状态
我们相应调用Workout Did End
这里大家可能想到了我需要停止查询
接着保存锻炼结果
我们会注意到锻炼的结束日期
我们会停止所有的查询
我们会告知UI锻炼停止
然后我们会保存锻炼结果
将锻炼结果保存到HealthKit也相当简单
首先我要做的是打开开始和结束日期 
我在Workout Did Start和Workout Did End见到过
我来使用Swift的最新守护语句
如果这些是零值则会提早返回
接下来用户从事的运动类型的开始和结束日期 消耗总能量和距离
将锻炼实例化
我还通过在锻炼期间积累的所有样本生成了一个数组
因为我们想让这些样本在保存并锻炼结果后与之关联
然后我会将锻炼结果保存到HealthKit之中
一旦完成我将会在锻炼结果中加入样本
现在我们就来看一下
我再次选择跑步类型是户外跑步
我的锻炼在继续
一旦获得几个指标我就会保存
我将要保存锻炼完成
现在我们将锻炼结果保存到HealthKit
我们来看下在配套app中显示
这就是我们3卡路里的锻炼结果
做了不少工作
好的我们总结一下刚才演示中的内容
首先我们请求授权访问用户的HealthKit数据
接下来我们使用HK Workout Session记录锻炼结果
我们通过HK Anchored Object Query从HealthKit提取样本
最后保存HK锻炼数据到HealthKit并将样本与之关联
这就是iOS 9中HealthKit的新增内容
我们今天先介绍了单位偏好API
可以实现在app中依照用户喜爱的单位显示HealthKit数据
接下来我们讲了HealthKit储存的新数据类型
例如Water IntakeUV Exposure
以及与生殖健康相关的信息
接着还说到源代码修改和设备
这可以为HealthKit中 数据从哪里来提供更丰富的信息
我们还介绍了删除样本以及查询删掉的样本的新方法
最后我们探讨了HK Workout Session API
并介绍了如何用它搭建WatchKit app 
我们觉得大家会喜欢在iOS 9中对HealthKit所做的改进
我们真想看到大家能用它搭建出什么
若想了解更多详情可以访问开发人员文档资料
位置在developer.apple.com/healthKit
或是联系技术支持
一般性的问题可以联系healthkit@apple.com
感谢大家希望你们会喜欢大会的其余部分