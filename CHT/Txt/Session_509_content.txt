無縫連接APP
大家好我是康拉德·舒爾茲
是Safari和WebKit 團隊的工程師
這是第509號講座《無縫連接APP》
如果參加WWDC 你幾乎肯定會app
甚至會有app的網站
大家舉手示意一下在座的有哪些
有網站 可供用戶訪問與app中相同的
部分內容或功能
非常棒 這次講座是爲你準備的
我們要談談怎樣讓app和
網站之間的壁壘不復存在
並在二者之間建立緊密的聯繫性
關於我們想談的內容舉例而言
我希望開始先演示一個app
你可能已經在iPhone或iPad上安裝了它
這就是WWDC app
我收到同事喬納森發來的一條消息
讓我查看主題
聽上去這是個不錯的想法
我把WWDC app安裝在這個iPad上
看到是個網頁鏈接
那麼可能還是在Safari打開
我們繼續 輕點一下
哦 相當酷 直接進入WWDC app
也許你錯過了我們再來一遍
我來繼續 輕點回左上方的信息
看到就是普通的HTTPS鏈接 前往
Developer.Apple.com
輕點 一下就好！
直接到了app直接就是主題
不要再通過Safari來一遭
非常棒！
我們要談談三種很酷的技術
可以幫助消除app和
網站之間的壁壘
首先 剛纔大家看到演示當中的神奇表現
輕擊普通鏈接時 WWDC app在
正確的地點打開
接下來 我們來談談Smart App Banner
它可以幫助用戶在訪問
網站時 發現app
最後 分享網絡憑證允許app訪問
Safari保存的密碼因此使得
用戶登錄app非常快捷
首先 我想有請我的同事喬納森
上臺來和大家聊聊怎樣連接app
<br/> 謝謝 康拉德
大家好 我是喬納森·格林斯潘
是Apple的核心服務軟件工程師
我希望先和大家聊聊app
在宇宙中的位置
剛纔康拉德問 有多少人既有app也有網站時
我看到很多人都舉起了手
這並不奇怪
許多現代的app不僅是讓用戶下載
它們還有着強大的網站呈現
網站內容常常可以反映出app內容
在座的很多都有強大功能的出色網站
我們希望用戶可以使用到這些功能
甚至都無需安裝app
我們也希望各種app都可以彼此配合
app彷彿是生態系統的組成部分
在app或網站中需要訪問其他app
或網站所提供的內容
需要某種程度的交流互通
例如 如果有美食家app你可能想把它連到
菜譜搜索網站Yumly這裏app
或服務中
怎樣讓app連接到Yumly 怎樣快速
準確地提供Yumly的內容呢？
在iOS上 我們通常用URL在app之間發送
數據信息
我們先來看今天我們會怎麼做
許多 iOS app執行所謂自定義URL方案
這些是非常有效的工具
因爲它們可以讓app彼此交流
但其中也有陷阱
首先 它們不會總能映射到正確的app
因爲沒有哪個app真正擁有它們
兩個app可能會請求同一個URL方案
用戶並沒有真正的好方法
表示他們指的是哪個app
第二 如果app沒有安裝 則會回退
URL無法打開app需要自定義代碼
才能處理這種相當常見的情形
最後 它們會使得保護用戶隱私
很是困難
App需要查明app是否在設備上安裝
才能使用自定義URL方案
這意味着 它們可以探嗅出用戶是否
安裝了約會app或銀行app或者是政治相關的app
這屬於個人信息
用戶不願意對外分享
應該有更好的辦法但是這所謂更好的辦法
應該是什麼樣子呢？
顯然 它應該和使用URL方案
一樣簡單我們現在還會
介紹一種URL
它必須具有 可證實的所有權
URL應該在正確的app中打開
在app和URL之間應該存在強大的
雙向聯繫
如果app並未安裝 它必須有能力
優雅地回退 
當用戶輕點URL時它還應該可以工作
Safari和網頁瀏覽器一般而言是顯示
富內容的不錯方法而且在各種平臺上
都有顯示因此我們將確保
這些鏈接可以在網頁瀏覽器中打開
它絕對必須保護用戶的隱私
當我在自己的設備上運行app時 它無權
知道 我已經安裝了你的app
當然 鏈接...不好意思 當然
你輕擊的鏈接是在你和
設備之間的事情
沒有必要牽扯第三方進來
正如康拉德給大家看的網頁URL可以滿足
上述所有標準 是理想的解決方案
你知道它們何時打開
它們在哪裏幾乎都可行當輕擊它時 沒有第三方
會牽扯其中
現在我們確定將網頁URL作爲
我們的解決方案我們再把它細分
我知道大家都見過URL 但是如果來看
URL的組件我們會對這些
鏈接怎樣發揮作用有更好的理解
這裏是個非常正常的網頁URL
如果你感到好奇
這是去年的WWDC主題演講視頻的鏈接
這並非是我們爲此目的或
僅爲此app而新生成的URL
它是現成的今天就可以在
Apple開發人員連接網站上看到
如果在Safari打開我希望看到的是
你所希望的內容視頻和相關信息
如果... 我也希望如果是在Mac或其他
平臺 我也看到的是完全一樣的內容 是通用的 
多虧這個通用鏈接這個鏈接將在
WWDC app中打開無需牽扯到網頁瀏覽器
爲了這可以發揮作用
iOS需要找到幾項內容
首先 我們要看這個方案
我們支持HTTPS和HTTP URL
接下來是域名或主機名
通過使用SSL證書 簽署存儲在安全
網絡服務器的文件 域名與app
安全關聯
稍後 這方面還有更多詳情
我們分析過方案和域名後
我們再來看路徑
路徑可以是完全匹配
或者是和前綴匹配
在兩種情況下都要規定匹配 不好意思
你需要規定匹配而且要控制情形
如果你網站的內容無法在app上
顯示時 這會非常有用
如果URL並不匹配可以在Safari打開
和其他任何鏈接一樣
如果我們匹配URL 則需要不好意思 如果匹配URL
併發送給你 你可以使用NS URL組件
來做細分 並獲得URL上的
有用信息
我特別喜歡使用NS URLQuery Item
因爲這可以讓訪問查詢組件
變得非常簡單
通用鏈接是指讓app而不是Safari
來處理網站上的鏈接目的是爲了打開app
當用戶輕點網站鏈接時iOS需要了解
app應該打開該鏈接
app必須請求它可以從網站處理鏈接
iOS隨後可以聯繫 網站 證實網站
瞭解app願意被它
來代表
我們將服務器準備好
全程包括四個步驟
第一步是生成特殊文件
Apple-app-site-association文件
iOS可以從網站服務器下載
文件包括特殊結構的JSON數據
如果去年你從Web用過Handoff
或Shared WebCredentials這會非常相似
頂層密鑰是applinks 這是網站
證書的兄弟類或活動延續
若你有二者之一的話
app祕鑰非常重要應該和作爲值的
空數組一同顯示
在新的詳細祕鑰下你會看到字典
字典祕鑰是應用的識別符
其中包括團隊ID 這可以從
開發人員門戶網站獲得後面跟着句號
後面還有束識別符
如果有不止一個app 可以用不同的
祕鑰 規定每個app
路徑數組告知我們 網站的哪部分
可以通過app支持
如果app中可以支持整個網站
你只需要包括一個星號
就像這裏這樣
但是在第一天
很可能app不會支持網站的任何一個網頁
我們已經讓你有能力規定
它可以處理哪些網頁
如你所見 我已經爲數組增加了兩個路徑
第一個是完全匹配
如果用戶輕點連接可以直接前往路徑
會在app中打開
如果網站的全部內容都得到app的支持
可以使用路徑前綴例如本數組的第二輸入
來規定
該部分將在app打開
注意結尾的星號它告知我們
這是路徑前綴
需要注意這些路徑要分大小寫
其他URL組件如查詢或
片段則不支持
第二步是從認可的證書籤發機構
那裏獲得SSL證書
這不是爲了App Store簽署app所用的
那個證書不是Apple生成的
我們建議你使用HTTPS服務器上用的
相同證書但不做要求
如果有不止一個域名需要在app體現
我們建議考慮獲得
通配符證書
若要了解證書生成的更多詳情
請聯繫證書籤發機構
第三步是簽署JSON文件這是你剛通過SSL證書
而生成的
爲此 你需要在
開發Mac的終端使用openssl smime
命令
這兩個文件名都很重要
第一個是你剛生成的文件名稱
是在開發Mac上未簽署的JSON文件
第二個必須和你在這裏所見到的完全匹配
apple-app-site-association
這些是你的私人祕鑰
是在證書生成期間生成的
以及證書籤發機構所提供的證書
同樣 這不是Apple提供的證書
也不是App Store的證書
也不是開發人員ID證書
這是需要注意的最後一點
如果你有證書簽發機構提供的
中間證書在簽署期間
也需要包括在內
第四步也就是最後一步
你現在有了簽署的JSON文件
需要上傳至網站服務器
這會到達 服務器的根目錄
例如
www.example.com
/ apple-app-site-association
需要注意域名支持的每個app
也許需要不同的JSON文件 
這是爲域名妥善簽署過的
例如example.com
和<u>www.example.com</u>
<u>&lt;http://www.</u><u>example.com&gt;</u>是不同的
我們在iOS 8中引入了這個功能性
支持兩個功能：Handofffrom the Web
和Shared Web Credentials
在iOS 9中 我們添加了通用鏈接的支持
我們需要讓它變得儘量簡單
便於儘快在app中採用通用鏈接
不好意思 是從iOS 9種子2開始
我們不再要求大家簽署
Apple-app-site-association文件
只要上傳未簽署的JSON 謝謝
謝謝
只要上傳未簽署的JSON文件加上相同的文件名
apple-app-site-association
到HTTPS服務器
iOS就會處理其餘工作
如果需要支持iOS 8的向後兼容 
注意簽名要求還依然有效
如果是從 iOS 9開始
則無需填寫文件
我們來談談應用的運用
需要調整應用委託
需要用到授權
我給大家看看怎麼做
首先是應用委託
如果去年用過Handoff 這會非常相似
當用戶活動 應用委託
這個方法會發送到應用委託
用戶活動對象不好意思
用戶活動對象有着頁面URL屬性
在這一功能的情況下
會一直是HTTPS或HTTPURL
這一功能永遠都不會爲零值
在通用鏈接的情況下活動類型
一直都是
NS User ActivityType Browsing Web
一旦確認了活動類型符合你的預期
就可以通過NSURLComponent類
從網頁URL細分URL
與自定義URL方案相似URL可能會
不代表app中的任何內容
或代表過時或變形的內容
如果出現這樣的情況你應該查明並優雅地失敗
現在 在這裏優雅根據各app的情況
也許需要向相關使用顯示提醒
解釋出了什麼差錯或者在Safari
打開鏈接效果會更好這可以從app來實現
調用UI ApplicationOpen URL即可
從中拿走的最重要的是
不會讓用戶盯着空白的
View Controller
一旦應用委託得到升級 
你需要更新app的授權
使用XCode會很容易
導航至項目設置
再到配置不好意思
功能選項卡並選擇相關域名
你需要添加app支持的
每個域名的輸入app鏈接 後面加上冒號
再加域名名稱
同樣 app支持的
每個域名在這裏需要單獨的輸入這些都很清楚
Example.com和www.example.com
需要不同的輸入正如大家所見
我給大家看看這些怎樣
才能很快都實現
但是 首先我想回顧兩個最佳實踐
因爲所有內容是來自app以外
數據可能會變形你可能會需要驗證
如果是這樣 這並非是說你犯了錯
而是說這種情況發生時
你需要優雅地失敗
一旦在處理URL你需要牢記
HTTP在iOS 9上做出警告
這是爲了用戶安全
和隱私的考慮
例如 你傳遞了使用數據
NSURLSession
就應該一直使用HTTPS
如果需要在app使用未加密的HTTP
則要回顧第711號講座
《網絡互聯NSURLSession》
其中涉及重要的網絡互聯新技術
App Transport Security
我們來看這些怎樣在XCode中使用
我會爲大家展示
來自WWDC app的代碼
這在App Store中可以獲得
這裏是
WWDC項目
我創建一個新的擴展 其中會有
我們今天看到的代碼
這個擴展是在應用委託類
我首先要做的是
添加我們探討過的應用委託方法
同樣
如果去年用過Handoff 這裏是
同樣的委託方法
你需要加以擴展來支持這個新功能
我們感興趣的參數是
用戶活動參數其中包括用戶
所作所爲的信息
在本例中是從網站導航
我們還感興趣
活動類型和網頁URL
出於我們的目的活動類型一直是NSUser 
活動類型BrowsingWeb
但是 如果app支持來自其他來源的
用戶活動 例如Handoff 那麼你就要
檢查我所做的活動類型
因爲它是NSUser活動類型BrowsingWeb
我知道會有網頁URL而且不是零值
因此我使用網頁零值
屬性的顯性打開來從中獲取URL
我會把它發送給函數顯示URL
它負責細分URL 並把它
交付給用戶界面
這樣用戶就可以看到
這個函數的簽名相當簡單
它將單一的URL作爲輸入 並返回Boolean
表示我們是否可以處理URL
現在方法的主體有些更爲複雜
但是我會帶大家逐行來看
首先我們要做的是創建NSURLComponents實例
我說過 這個類 會細分URL
並允許你訪問其中的各部分
而無需你搭建自己的解析器
一旦有了這個對象我們會從中
提取感興趣的部分組件
對於WWDC app我們感興趣的是
主機和路徑組件
現在WWDC app
可以處理URL來自
不止一個域名的情況
所以我要檢查域名
確保它是我所預期的
在這裏 我有個開關語句
是在developer.apple.com介紹的
康拉德之前給大家看過這個URL 不好意思
URL的主機名稱
一旦進行了匹配我希望匹配路徑
我會用開關語句這在Swift中非常強大
立刻蒐集所有的組件並在一個代碼行中
進行比較s/videos/WWDC
有些可以是也可以不是一年
我希望來看看值 
現在是個字符串並把它改爲Int
我把它轉換爲Int初始程序 不好意思
我還會蒐集講座序號
在本例中是第509號講座
在康拉德給大家展示的例子中
是第101號講座
我馬上給大家看Find Session方法
如果組件可以匹配
我就會將它呈現給用戶
但是我希望先確認輸入
因爲可能會是
它不在任何合理範圍
例如 年份是在Apple成立之前
或講座序列號是數百萬
我用講座的年份
在兩個範圍中進行比較
2011到2015是年份
100到10000是講座序號
如果是在這兩個範圍內則看似有效
可以向用戶進行呈現
我們繼續來呈現
我提到這個Find Session方法 馬上就給大家看
在這裏
這是專爲app準備的
大家不大可能拿到完全相同的代碼
我也不會講太多細節
但是思路是提供的數據可能是
來自不止一種來源我們希望檢查所有這些內容
首先我們要看這個片段 是2014年 
和之前的URL的情況包括講座ID
如果不包含講座ID 我們就看看
查詢
從NSURL查詢項分離出的查詢
在本例中 查詢項的屬性已經爲我們填好了
我們再重複一遍可以發現
匹配的ID或實例
任何一種都會包括講座序號
現在 代碼基本已經就緒
不過 有些內容缺失了
這裏有很多返回錯誤
還有很多無法處理URL的情況
同樣 這樣是可以的因爲我們會時常
收到無效輸入
但是在應用委託中
我不會對返回值做任何處理
如果獲得明顯無效的URL
用戶則什麼都看不見
打開WWDC Apple 會出現空白的
View Controller
這是我希望完全避免的情況
我們需要優雅地失敗
這可以非常非常簡單地實現
在本例中 如果出現URL返回錯誤
我會瞭解 我並未 給用戶呈現任何內容
並通過UIApplicationpenURL
將URL傳遞給Safari
所有這些代碼改變你都需要採用
如果你已經獲得自定義URL方案的代碼
很可能它會與我們這裏的情況
非常相似
現在我就將向大家展示添加代碼前後
app會是什麼樣子但是在此之前
我需要加上授權
因此我進入Project Setting
選擇Capabilities選項卡
並選擇Associated Domain
我還會在這裏加上一個輸入
因爲我們並非是只用到一個域名
不過同樣 如果不只是一個域名 example.com
www.example.com它們需要在這個
授權中 分別輸入
在本例中 我需要applinks:
developer.apple.com
就是這樣
我準備在客戶端繼續
那麼我會讓大家看看在加上這個之前
app是什麼樣子
這裏是我的iPad這是我們加上之前
安裝的WWDC app拷貝 不好意思
是在我們加上通用鏈接之前
我將前往同樣的文本信息 不好意思
是我之前發給康拉德的同樣的iMessage 
信息內容完全相同可是當我點擊它的時候
因爲我沒有使用通用鏈接
它只在Safari中打開
Safari是個不錯的app可以顯示很棒的內容
特別是 它並未 提供可以從app
獲得的所有選項
我可以在app和Safari上觀看視頻
我還可以從app提供反饋 使之成爲 
以後可作爲收藏以後觀看我甚至可以下載後 脫機觀看
正如我會給大家展示的那樣 在app中 現在有了這個
在app中 現在大家手中有了這個
看上去有點像是這個樣子
這還是我之前給康拉德發的URL
和之前一樣 我輕點一下打開主題
並可以把它加入收藏
我可以觀看視頻下載 等等
基本上 我們要做的所有內容就是這些
謝謝
我把遙控交給康拉德之前
要非常感謝大家能來而且我非常希望
看到大家能用iOS 9中的
通用鏈接能有所創造
謝謝
非常棒
謝謝 喬納森
通過通用鏈接
你可以爲所有
用戶提供可能實現的最佳用戶體驗
用戶如果在你的iPhone或iPad上安裝了你的app
連在你網站上的鏈接
就會在app立刻打開
而不需要通過Safari中間過渡
你不再需要在自己的網站上編寫JavaScript 
來檢查是否安裝了你的app
或是試圖去檢查是否安裝 
再代替用戶安裝app
如果用戶並未安裝你的app
你的鏈接也仍可以在Safari無縫打開
出於同樣原因
你的鏈接在Mac
甚至其他平臺上也會依然有效
因爲這些都是在用戶設備上本地操作
就不會浪費時間前往用戶
網絡服務器
或是你的網絡服務器
當然 這也意味着Apple或其他
第三方都無法跟蹤用戶在做什麼
我們今天講了一些 
談到如果沒有安裝你的app 
這些鏈接怎樣將用戶帶到你的網站
如果是這樣 許多人可能會希望
幫助用戶發現並安裝你的app
ILS有一項技術 可以幫上忙
這就是Smart App Banner
我們用幾分鐘時間來談談
Smart App Banner這是關於使用它們
將花費多長時間
那麼Smart App Banner是什麼？ 
這是無侵入的UI元素
可以幫助將用戶帶到app
可以在iOS上通過Safari 
自動呈現
如果用戶並未安裝你的app
廣告條則會 
啓動App Store以便用戶下載
如果用戶已經安裝了你的app
你的app 廣告條則會
用戶啓動app
Smart App Banner的添加對你的網站而言微不足道
iOS 9 app搜索功能有項新內容
Apple將Smart App Banner
用於幫助索引你的app及其內容
這可以提高用戶發現
並安裝你的app的可能性
現在 有些人也許會用自定義URL方案
讓用戶從網站進入app
這樣也可以
但並不推薦這麼做
這樣並不會確保自定義URL方案的
用戶體驗在未來會保持一致
Smart App Banner可提供更好的用戶體驗
爲使用Smart AppBanner 你只需要
在網站的標頭部分
添加一行HTML
apple-itunes-app元標籤
會告知Safari 
你想要安裝或顯示Smart App Banner
內容屬性必須
包括你的app ID 
這是用於將用戶指向正確的app
可以通過便捷的iTuneslink maker鏈接生成工具
來獲取你的app ID
app參數應該包括
當前顯示頁面的URL
這其中有兩個原因
首先
這可以實現自定義爲用戶
顯示的視圖
它會被傳遞到應用開放URL源
應用註解方法
其二
它可以幫助確保app搜索可以
識別出你的站點不僅僅是
着陸頁
若要了解這方面的更多詳情
我推薦大家聽聽《介紹搜索API》那場講座
可以找到相關視頻
這是昨天的講座
最後 要注意SmartApp Banner不會出現在
iOS模擬器中 所以一定
要在實體設備上進行測試
一旦你使用了Smart App Banner
一旦你的app可以將鏈接帶入你的網站
你就會有非常棒的機會來簡化
你的網站
它不再需要成爲你的app的
推廣工具
這樣可以專注於以最好的方式
呈現你的內容
你不再需要參與
顯示廣告條
或開場屏
或編寫代碼
來處理自定義URL方案
網站現在使用起來更簡單編寫也更容易
好的
我們已經介紹了如何讓用戶
進入你的app
一旦如此
許多人就會登錄
你的服務因爲這樣會有幫助
如果是這樣他們也許會看到
類似這樣的屏幕
登錄表
這對用戶而言會很是沮喪
也許他們不記得憑證
即使已經在Safari多次登錄過
你的站點也無濟於事
他們不想或者不知道怎麼去查找密碼
這時候 用戶可能
就會選擇放棄 離開
你的app 也許甚至會刪掉它
但是如果你可以
羅列出一系列憑證
讓用戶選擇會怎樣呢？
可能會變成這個樣子
和這個樣子
用戶可以輕鬆一點他們之前
保存在Safari中的密碼
具體實現的技術在iOS 8中有過介紹
叫做SharedWeb Credential
Shared WebCredential允許你的app
訪問Safari保存的密碼
因此可以讓用戶後顧無憂
不必在不同的設備的不同
上下文中記住自己的密碼
怎麼做到的呢？
當Safari在iOS或OS X上
看到有用戶登錄
或填寫賬戶創建表單
它可以通過不同方式幫助用戶
具體而言 Safari 可以在鑰匙串上
代替用戶保存密碼
它可以通過iCloud Keychain
在用戶的所有設備中同步這些密碼
那麼 它們可以在用戶的
iPhone iPad和Mac上可供使用
它會建議用戶使用保密性高的密碼
當然 在用戶 
登錄的時候也可以代替用戶
自動填寫密碼
有了Shared WebCredential API
它可以防止用戶在登錄時
卡在app上
使用Shared Web Credential
分爲兩步驟
首先
你需要在app和我們談及
通用鏈接的網站之間
建立密切聯繫
其次
你需要在你的app中使用
一個小API 來訪問憑證本身
因爲分享網頁認證證書允許
用戶分享密碼我們需要確定
你可控制自己的app和網站
正如我們允許允許你的app
可以從網站處理鏈接一樣
你的服務器告知我們
可以信賴你的app
只需要簡單添加
Apple-app-site-association文件
即可 這點喬納森提到過
具體而言
你只需要通過你的網站所信賴的服務器
app祕鑰
app ID數組分享憑證
在網絡憑證祕鑰下
添加頂層字典即可
你的app還要告知我們要信賴你的網站
這可以通過添加一個或多個
網絡憑證輸入到相關
域名授權這個我們
剛纔談到過
還可以使用XCode的項目檢測器來實現
就像喬納森演示的那樣
好的
現在 我們來談談在你的app中使用API
在你的app中 典型的流程是這個樣子
首先
你的app要檢查是否在鑰匙串
保存了憑證如果保存了 則用它來登錄
如果沒有
它會要求用Safari保存的
任何密碼來進入
如果可用它就會使用這些
還將在本地保存然後登錄
如果不可用
它會顯示內置的登錄UI
請求憑證再按照通常方式來繼續
請求Safari的密碼的
基本執行大概是這個樣子
主要函數是
SecRequestSharedWebCredential
它會用到完成處理器
也可以使用域名和用戶名參數
在完成處理器中
我們會檢查是否取回了憑證
如果取回 則用它來登錄
否則
我們將顯示登錄UI
注意在兩種情況下我們都會分派到主隊列
因爲這樣並不會確保
完成處理器會在主隊列調用
如果你的app允許用戶創建賬戶
或改變密碼
你則的確應該升級Safari的鑰匙串
這樣 下次用戶登錄你的網站時
比如 是通過Mac來登錄
則會自動填入正確的密碼
可以使用這裏顯示的
SecAddSharedWebCredential函數來實現
Shared Web Credentials API
也會讓你生成安全的密碼
所用的算法和Safari完全一樣
通過Sec Create Shared Web
Credential Password函數 如這裏所示
還有一些額外的高級API功能
如果大家感興趣我建議大家
可以看看去年的講座《你的App你的網站和Safari》
我們已經介紹了一些不錯的工具
可以爲用戶在你的app和
網站上提供最佳體驗
首先
在iOS 9上只需你做一點工作
你的網站的普通鏈接
就會變成通用鏈接
可以像打開你的網站一樣 輕鬆打開
你的app
iOS還可以確保 用戶可以獲得
你的app或網站可實現的
最佳體驗
使用自定義URL帶用戶進入
你的app的時代已經過去了
接下來
你可以使用Smart App Banner
可以讓用戶首次來到你的網站時
幫他們找到你的app
在時候的訪問中
它們會重新引導用戶進入你的app
它們始終會幫助App Search
索引你的app和內容
這樣在用戶的Safari和
Spotlight中就都可以使用
最後
通過使用共享網絡憑證
你可以讓app訪問Safari保存的密碼
幫助用戶輕鬆登錄你的app
若要了解我們今天介紹的更多詳情
可以去看看我們的文檔資料
大家還可以在開發人員論壇中提問
當然也可以去DTS看看
還可以聯繫約翰·戴維斯我們的網絡技術開發顧問
或者傑克·伯倫斯App框架開發顧問
去年和今年 還有若干相關講座
其中會深入介紹我們
所講的內容
感謝大家 希望大家喜歡大會的其餘部分