女士們先生們
歡迎OS X系統平臺副總裁安卓思·溫克爾
安卓思·溫克爾:下午好
歡迎來到2015全球開發者大會
作爲蘋果開發者今年又是一個欣喜之年
加上watchOSSDK的開發數據包
現在蘋果產品有三大主要平臺
我們開發這些平臺的方法是
將好產品與獨特的用戶體驗結合在一起
同時使用與蘋果系統一樣的優先科技
程序語言設計和編程概念
以便這些平臺之間能夠輕易地代碼共享
並使平臺之間的應用實現協作
但我們也保持每一個平臺的特色
這些平臺的數據開發包將會在
今年稍後安裝到Xcode IDE新版本
形成版本7
它包含了很多新的特色
在這裏我只想強調其中一個
那就是我們允許用戶AppleID
下載Xcode
並在他們的設備上運行應用
如果你們真的想讓成爲開發者的夢想
更容易尤其對年輕的學生來說
那麼 需要三個平臺的協作
如果你習慣使用某個應用並想進行拓展
我們爲你準備了另外一個好消息
現在 一項單向支付的開發者計劃會員身份
可以讓你展開蘋果產品中所有的應用
你不需要註冊
且不需要購買支付會員資格
當然使用一次性支付會員身份的話
你還可以得到其它好處
比如獲取預發行版本微軟
接入強大的數據庫 報表工具
現在我想說說軟件方面的更新
iOS創新曲線一直是整個行業的驕傲
對美國開發者而言是巨大的優勢
因爲你不需要處理來自
其它應用生態系統的相同數據碎片
但是在iOS8中我們發現
大量使用者在升級方面有困難
因爲安裝程序
需要很大的可用空間
我們已經採取措施
在iOS8更新中減少了佔用空間
在iOS9中我們會繼續降低該數值
正如你們今早在主旨發言中聽到的
iOS9只需要1.3G的可用空間
我們也改變了軟件升級的提醒方式
用戶可以選擇立即安裝或者在不方便的時候
選擇稍後安裝
所以 我們認爲
這將確保用戶快速更新iOS
使用最新版本的iOS
現在 我們還在研究一些技術
我們稱爲應用瘦身
讓用戶獲得更多可用空間
應用瘦身包括三項技術應用切割
需加載資源和位碼
我們一個一個地看一下
先來看應用切割
爲iOS系統開發應用
其實就是開發同一款應用的不同變體
然後將它們包裝在一起
放在一個應用程序包裏
所以 如果你打開一個應用你會發現
有很多相似的其他組件佔用設備的有限空間
這是32位和64位的處理器結構
不同屏幕尺寸和分辨率的圖像
以及工具 比如着色器
用不同語言編寫而成的圖形編輯器
但是 要在特定的設備中運行一款應用
你只需要其中的一個即可
所以爲了充分利用儲存空間
我們將刪除設備中
所有的應用
所不需要的所有組件
所以你可以繼續開發並且使用你已習慣的應用
但是商店只會安裝時傳輸經過瘦身應用給到用戶
這就是大大縮減了空間
正如你們在表格中看到的一般的應用可以節省
20%到40%的空間
應用瘦身的作用在一些應用中
體現的尤其明顯比如在安裝單元應用中時
經常突然出現遊戲下載限制
瘦身版本可以更加容易地在限制範圍內安裝完成
所以你可以將更多的特定資源
放到應用中並且提供給用戶
提供更加完美的體驗
最棒的一點是在使用Xcode的資產目錄
你不需要改變程序中的任何東西
在你下次登陸的時候後臺將會自動爲你備份更新等
如果你在使用其他自定義數據格式
我們要求你通過創建資產目錄以分成程序片
並且使用我們爲你的設備
添加的其所需的新的資產目錄
一些應用可以通過使用更多資源得到好處
因爲不需要同時使用各種程序片
在這種情況下我們推薦
按需資源 簡稱ODR
使用ODR按需資源時儲備會將你的資源分爲
恰當程序片
然後將它們放置在蘋果服務器中
但是下載過程會被延遲
直到你的應用明確需要他們
然後iOS將釋放空間
當你的應用不再需要資源時
按需資源的典型類型是關卡遊戲
但是很多其它應用也可以在其中得到益處
比如 你可能想要下載教程
到ODR資產中
當用戶真正想看的時候纔會開始下載
使用ODR需要你懂得規劃
但重要的是
你可以在不同時間使用多於4G的資源
因此 應用切割和需加載資源
將會極大地幫助應用節省空間
我們還在研究一項新技術
它是更有遠見的技術
我們現在將位碼引入到AppStore提交過程中
位碼是二進制中的一種框架系統中間代碼
它可以讓商店先優化你的設備應用
然後再傳輸給用戶
你在Xcode中正常開發和調試應用
但是商店將會進入一種狀態
不斷運行我們更新的編譯器優化
這樣你的應用能夠在所有的設備中運行順暢
應用將不斷更新
因爲App Store會不斷讓你的應用
獲得也許會加入未來新處理器的運算優勢
所有這一切你都不需要向AppStore重新提交
所以位碼的形成可以通過Xcode進行設置
從一開始這便強制對所有watchOS系統執行
對與iOS系統來說現在屬於可選項
儘管我們認爲優勢很好
因此我們準備默認對所有項目採用該服務
這就是應用瘦身
它包括了應用切割按需資源以及位碼
這些將會極大地優化應用
尤其是儲存空間方面
現在 我們來看一下
應用中的二進制
AppStore目前要求你應用使用32位和64位版本
在過去的幾年中我們見證了
我們系統設備在處理器能力上的發展
我們的中央處理器和圖形處理器
以及引入64位處理器體系結構
之後的所有設備
所以該應用目錄
僅僅適用64位處理器
和64位體系結構
因此用戶只可以提交64位應用
這將從今年稍晚系統9開始使用之後
接着我們來說watchOS軟件開發工具包
爲了解說 我想把舞臺交給
我的同事：易麗扎·布洛克
易麗扎·布洛克謝謝 安卓思
我們很高興Watch系統在研發者社區
得到了認可
在蘋果商店中很早就已經有
上千種手錶的應用
今天 我很高興地告訴大家
更多關於WatchOS 2軟件開發工具包的一些新特點
首先我們來討論一下watchOS現有構架
應用有個用戶界面你可以將它作爲
一個故事版這會被安裝在手錶中
點擊應用程序擴展來打開用戶界面
它在手機上運行
在watchOS2中我們在結構上做了一個重大改變
用戶界面依舊一樣應用擴展將
在手錶中運行
這產生了很多益處
因爲這與手錶應用相互作用
不再需要綁定在手機中使用應用的用戶
用戶會在速度和應用反應上感受到實質性的改進
當然 因爲同樣的原因
你的手錶應用也可以在手機不在的時候運行
由此應用擴展直接在手錶運行
它直接連接手錶硬件
這就產生了無數可能性
現在你編寫手錶應用時
你會用什麼程序設計語言？
好消息是和其他很多框架一樣
和你已經非常熟悉的iOS開發框架一樣
還有另外一個重點
手錶的連接框架可以使你與手機應用對接
當然了現在正在其他設備中運行
另外 你的應用擴展可以直接
與使用網絡接口語言程序的網絡服務對接
即使你的手機不在範圍內這種交接也可以進行
在當前watchOS應用中有三種方法可以查看數據
快捷視圖 通知以及應用本身
但是 這樣會不會很棒
假設你只要擡起手腕甚至不需要觸碰屏幕
就可以看到你的應用目錄
在watchOS 2中這有可能實現
因爲現在你可以在手錶界面創建一個程序
我們爲手錶設計了簡短對接
並且以最快的方式看到你的目錄
那就是通過程序快捷視圖以及通知
所以 讓我們進一步瞭解一下
不要理會這些名字
程序其實很簡單
它們信息片段
出現在你手錶界面上而已
因此 如果我們打開手錶界面並去掉時間
就只剩一個程序
現在 你在這裏看到的是OS系統的內部情況
現在你可以自行創建了
現在 你可能還不太瞭解
比如舊金山足球俱落部正在舉行
2015年錦標賽
所以 我們可以創建一個程序
來模塊化提醒我們接下來是進行哪場比賽
如果我安裝到我的手錶上
每次擡起手腕我都會看到
這很好但要做到一個好的體驗
很重要的是隨着時間變化以及程序所需
程序需要作出相應變化
一打開屏幕這些就會出現
爲了達到這個效果
我們爲你的程序以時間線的方式收集數據
那樣 當我那天看看我的手錶
程序就會提示信息
告訴我此時此刻的信息
所以在日程中創建一個時間線
來提示足球比賽非常簡單
一方面 我製作一個日程
另一方面 這不太可能改變
但是 這可能不是你創建程序的理由
世界上事物在變化你可能需要
隨時更新你的時間表
我們爲此提供了幾種方法
第一種是計劃更新
計劃更新
對程序而言非常完美它的數據變化
會根據預測而變化像天氣預報一樣
如果你寫了天氣預報的程序
那麼服務器每小時
都會提供更加準確的天氣數據
所以你下載時間線時你可以告訴我們
你下一次更新數據的準確時間
那麼應用將在後臺
保持運行
你可以點擊服務器更新新的天氣數據
重新下載時間線
但是在預計的時間內
並非所有的數據都可以更新
假如我想要在我的足球程序中
加入直播得分
我要是每個小時或者每十五分鐘
都點擊服務器以獲得目前得分
這麼做不方便因爲每一次進球
都需要立即在我的程序中更新
爲了解決這種麻煩接下來介紹一種
新的高優先級的推送通知
如果你爲程提供所需要的數據
你可以發送推送通知到你的手機
它將會馬上被傳輸
到你手錶上的應用擴展中
所以要確定的是
程序目錄總是最新的因此時間線非常重要
而且這樣做還有其他重要目的
如果你看到了今早的主旨發言
你會聽到我們在watchOS2中
介紹的時空之旅它讓你回到數碼皇冠時代
可以回顧過去 展望未來
讓你看到在一天不同時刻
你的程序將會顯示什麼
比如 這裏
看上去海洋諾伊谷遊戲已經結束
而我錯過了因爲我站在臺上談論蘋果手錶
我可以通過時空之旅回到當時 看看發生了什麼
看起來好像諾伊谷好像爲我暫停了一樣
真是激動人心
這就是程序
方便進行快速查看重要數據
小部分數據
但是如果你想要看到更多信息怎麼辦
這時候你就可能需要快捷視圖
你可以向上移動錶盤表面來獲得快捷視圖
快捷視圖提供了一個機會
讓整個屏幕充滿用戶數據
比如 我的足球俱樂部快捷視圖告訴我
比賽中A隊的狀況
程序和快捷視圖
讓我進入計劃表中的應用數據
但是 有時候你需要在
用戶面前獲得信息
這時候你需要一個通知
手錶中的通知非常強大
你可以充分利用屏幕
顯示整個自定義用戶界面
比如 通知我
這是最後機會選出今天下午在索瑪奶牛低地遊戲的冠軍
除了自定義用戶界面外
你還可以添加自定義動作
按下其中一個按鈕
則進行應用註冊
但這還不是全部
因爲watchOS 2系統
我們根據文本回復推送通知
所以我可以在通知中添加一個按鈕
讓我能夠編輯信息並且發送
我是個真正的索瑪迷我想讓全世界都知道
所以我要選擇這個按鈕
當我選擇回覆我得到快速回復表
我甚至可以使用口述來形成一條信息
這些都在通知內部形成不需要變換目錄
謝謝你們你們真好
這就是通知
程序快捷視圖以及通知都很簡單
這也可能是你的用戶在你的應用中
最常見的交流方式
但有時候你需要更多時間
而且你要一種交互性更好更加逼真的體驗
這時候你需要啓動完整的應用程序
在watchOS 2中你可以做很多事情
舉個例子 既然你可以
使用數碼皇冠時代那麼你可以用讓屏幕
快速顯示全部比賽隊伍
可以快速找到你最喜歡的隊伍並且得到他們的信息
然而這只是你使用watchOS 2之後
帶來的諸多優勢其中之一
你也可以給你的用戶界面添加動畫
你可以使用振動馬達
你可以通過手錶錄音
你可以嵌入聲音信號和回放錄像
你可以通過應用打電話
你可以通過直播訪問
醫療傳感器和加速計獲取數據
能夠看到你們這麼會玩我們很高興
現在我想展示在watchOS 2
安裝應用的方法有多簡單
讓我們邀請喬什·謝弗
喬什·謝弗:謝謝 易麗扎
我很高興能夠向大家展示
將watchOS 1中應用升級到watchOS 2中
在手機本機上運行
如果你已經下載過今年開發者大會上的應用
你可能會注意到其中有一個手錶應用擴展
可以在你手錶上安裝和運行
所以接下來我們要看一下怎樣升級應用
並且在手錶2中運行這些應用
我們在其中會使用一些易麗扎剛剛介紹的特色
在這裏你可以看到
開發者大會應用的Xcode
Xcode會注意到
我有一個watchOS 1應用擴展
並且主動幫我升級到watchOS 2應用擴展
我要點擊這裏
讓它執行這些變化
它會注意到所有的目標
並且升級使原始資料生成代碼
將故事版準備就緒我就可以重新使用所有的應用
我們看一下這裏檢驗一下控制器內容
首先我們要改變一些代碼
來改變我們獲取數據的方法
既然我們在不同的設備中運行
我們需要能夠將數據從手機移動到手錶
我們可以使用新的手錶連接框架
實現這項功能
所以我要開始添加手錶連接框架
我們要替換開源原應用調用
我曾經在watchOS 1版本使用
新的手錶連接代碼將會要求數據
從手機複製到手錶
這樣 現在我們可以添加一些附加功能
比較酷的一項功能是
與數據皇冠時代的交互
現在數據皇冠時代與手錶應用中交互方式
是利用一種新的界面選擇器控制
我們要在一分鐘內將其從故事板中拖出
但首先我們要添加一些搭建代碼
我們要做一些參照將其連接到故事板中
一旦我們將其拖出
然後你需要對選擇器編程
把你想要的項目添加進去
所以我們要追蹤的是
一週內存在的所有會話蹤跡
並且在每個蹤跡的選擇器中添加一個入口
這樣 我們就可以整理會話列表
尋找我們感興趣的會話蹤跡
最後我們要添加IBAction
連接我們的控制之後每次變化它都會被調用
所以我們要在那裏添加代碼
現在我們可以切換到故事板在應用中找到安置它的地方
所以我在這裏找到新的選擇器控制
我們要把它拖出來並且安置在會話控制器中
會話控制器可以顯示所有的會話
所以通過添加置頂
它會提供過濾會話列表的方法
將它稍微縮短一點這樣它不會那麼高
現在 選擇器控制真的很靈活
並且有三種不同的形式
可供你選擇列表 堆疊和序列
你可以瞭解整整一週的情況
列表1是一個非常好的選擇
因爲這裏是我們要在這裏做的事情列表
我們要打開一個重點概覽
以便我們可以保證用戶
在轉換到數碼皇冠時代的時候可以區分
因爲有了這些變化我們就可以
連接到我們剛剛結束的代碼
我們要將連接拖出到我們的IBOUTLET
並且將一個連接拖至我們的IBAction
因此每次選擇器變化它都會被調用
就這樣
所以 我們要點擊構建和運行
然後我們可以切換到手錶模擬器
看到它如何運行
在watchOS 2中關於手錶模擬器很重要的東西是
它是手錶中一個完整的模擬器
所以你可以一起運行你的整個手錶
在手機應用中同時調試
並且測試他們之間的連接代碼
所以現在我們可以跳過這裏
在會話列表中你可以看到我們可以滾動會話列表
我們也可以根據我們想看的蹤跡進行過濾
我們改變的時候就在升級
現在 我想說的最後一個特點是
在手錶屏幕上展示會話的能力
爲了能實現這項功能我們要在應用中添加一個程序
現在我提前爲此編寫了大部分代碼
所以我只要將文件拖出去並且將其添加到
這裏我的程序中
我唯一沒做的事情就是添加代碼
它會循環訪問並且構建時間線
現在 易麗扎剛剛提到的
我們要以時間線的形式提供數據
所以我們要循環訪問
這是我最愛的部分
在手錶屏幕上我可以看到整個星期我喜歡的會話
現在 爲了節省時間
今天我提前在手錶上構建且安裝了
切換到這裏 看一下如何添加
到我們的手錶屏幕中
所以開始的時候
我在手錶屏幕上中間配置了日曆
但因爲我在WWDC做完了這些
我們只要切換到這裏並且將其自定義
然後我們可以將其滾動至程序列表的底端
你們可以看到現在大會上的應用可以通過底部進入
我們可以點擊那裏打開
然後返回查看我們的會話列表
現在 很明顯美國平臺
是我現在喜歡的會話
我們可以毫不費力地向前進行時空之旅
通過會話列表
接下來看到的是蘋果設計獎
這是我絕對不想錯過的
往明天繼續推進
可以看到早上watchOS 2的介紹
這也絕對是我想要看的
所以更新你的手錶應用就這麼簡單
在watchOS上運行就像本來就是其中的應用
非常好的特色
所以接下來
接下來塞巴斯蒂安會告訴我們
一些非常好的新的基礎技術
塞巴·斯蒂安:謝謝 喬什
非常好
現在我們來談論一些基礎技術
應用在我們的平臺中的技術
我會從第一個性能開始說
和其壓縮性
我們將會讓壓縮變得很有趣
蘋果的產品一向使用許多
壓縮算法作爲我們核心框架的一部分
優化速度的LZ4
高度的壓縮性的LZMA以及很多人用過的zlib
它可以找到壓縮和速度之間的最優點
我們開始構建一個更好的壓縮算法
使其在壓縮庫上更加進步
你可能知道壓縮庫已經二十多年之久
處理器體系結構改變之時就需要重建
所以我們認爲可以創建可以優化
現在處理器和微體系結構的事物
現在 我們稱這個新算法爲Lempel Ziv
Finite StateEntropy
你可能知道
他們還是一個非常好的獨立樂隊
你應該到Connect上去找看看
爲避免任何困惑我們簡單稱其爲LZFSE
現在 LZFSE 謝謝
在壓縮中 壓縮庫有所改進但更重要的是
它比壓縮庫速度快三倍
這是一次巨大的進步
可以使你的應用更加敏感
另外它還延長電池壽命
在能量消耗上它可以減少60%
在相同的壓縮算法中
它在速度上快了三倍
最後我們使用起來相當容易
我們已經將其添加我們的標準框架中
你需要做的就是改變算法 使用LZFSE
我們已經完成了所有困難的工作
你和你的用戶可以享用其中的益處
這就是LZFSE真正重新定義了最優點
在主流壓縮中
接下來 我要說一下電池壽命
克雷格今早提到了電池壽命
現在在這個行業中我們測試電池壽命時
經常是重複性測試
舉個例子我們測試時在瀏覽器中
一次又一次的瀏覽網頁
我們知道現實生活中
我們使用這些設備的方法與這些綜合實驗測試
的方法不一樣 對嗎？
我們將設備裝進口袋再取出來
我們接收通知和信息我們可能使用很多應用
我們連接網絡 斷開網絡
所以在iOS 9上做的事
主要集中在最佳化基板組上
這樣可以適用在平臺所有最流行的應用
這是第一步第二步
我們關注一些基礎設施的改善
比如 一些算法可以增亮背光燈
朝下檢測所以如果你接收到一條通知
當時不能看到它由於手機屏幕朝下
我們無需讓屏幕發亮
還有其它一些優化
比如系統如何進入睡眠狀態如何優化最低電源狀態
所有的這些最優化加起來可增加
一個小時額外使用時間是針對一般用戶的普通使用
真是巨大改善
今早克雷格還提到了省電模式
我們要開啓省電模式很簡單
只需要進入設置 開啓
激活了一部分內部槓桿
比如保護中央處理器和圖形處理器
不受進入最高性能的破壞
除了最耗電的狀態
保護應用免受後臺過度運行的影響
阻止它們進行不必要的網絡活動
最後關閉一些耗電的動畫
總而言之當你開始充電時
省電模式將會爲你增加三小時的使用時間
所以再次強調這是巨大的進步
現在我開始保護客戶數據
所以從一開始蘋果系統就真正
關注客戶數據的保護
在iOS9中我們採取了一些重要措施保護數據
包括設備中的和雲端的
所以我們從雲端說起吧
當然用你的Apple ID進入
雲端的一些服務中 你的照片
可能你有一些文檔存在雲端中 你的購買記錄
可以利用它在即時通訊和視頻通話中發送信息
雲端對你的數據最大的威脅是
有人獲得你的密碼
可能是因爲你在其他共享網站
分享過你的密碼
或者可能攻擊者通過捕釣式的攻擊
獲得密碼
這種情況的解決辦法是雙因素認證
我們儘量把它做的簡單以使每個人都可以使用
我來向大家展示它如何運作
在iOS9中當你得到一個新的設備
你就想要在你的雲端賬戶中登記
你將需要輸入密碼
此外 你還會輸入驗證碼
同時我們向我們已有的信任的設備發送通知
通知包括註冊新設備的地址
所以如果那是你在註冊
你可以輸入驗證碼
如果是攻擊者試圖用你的賬戶註冊
你可以憑藉蹤跡阻止他們
這是關於雲端現在說關於設備上的設備密碼
設備密碼是保護
私人數據的最後一道防線
在瀏覽歷史中我們保留四位數密碼
因爲你每次使用手機都需要輸入
但是當然我們不會輸入密碼
太過頻繁
我們使用指紋識別中的指紋完美註冊
我們的手機
所以現在在iOS9中我們可以將密碼
由四位數增至六位數
密碼強度增至一百倍
不需要緩和設備使用的妥協
既然我們說到設備
我介紹一種用在所有平臺中的新技術
我們稱之爲蘋果安全傳輸
蘋果安全傳輸是真正關於所有的安全數據
它從一個設備傳輸到網絡
或者從你的應用傳輸到你的終端服務器
因此我們當然想要需要的信息
在網絡傳輸中安全
但是結果證明現在
對大家來說真的很難
很難將其做好
你不能使用傳輸協議
你必須使用一個安全協議
然後需要擔心協議的版本降級攻擊
數據加密 保密性
最佳規範
這些做法非常難
在蘋果安全傳輸中我們核心框架搭建它
所以現在當你使用我們的標準網絡框架
我們會建立一個最好的安全實踐連接
在你的應用和後臺服務器之間
現在最佳實踐是安全傳輸層協議1.2和正向保密
但是因爲標準和的發展最高技術
框架當然要使用最新技術
並且自動爲你執行
所以 要從哪裏開始？
如果你用完了標準網絡框架
比如 NSURL會話那麼它會被馬上創建
這是iOS9默認的
所以你下載開發者係數時
我敢肯定很多人都已經下載過了
你就會重新編譯你的應用
我們會在後臺執行最佳實踐
安全連接
可能你還沒與更新你的後臺
至最佳實踐
或者你在使用第三方數據庫
如果是這樣 我們提供了異常機制
給你時間來通過位置服務平臺更新你的後臺
這就是蘋果安全傳輸
讓我們轉換到計算機
介紹一種新技術
我們稱之爲系統完整性保護
在個人消費型電腦中用戶賬戶有明顯的
管理特權並且這種管理特權是
真的等同於內核訪問
這就使保護系統的完整性變得很難
在系統的完整性保護中
我們破壞了等同的狀態
管理級別的訪問不再充分
爲了在系統中做一些運作
我來舉一些例子
比如 如果你有管理級別訪問的特權
你不能梗更改系統文件
你不能將程序安裝至系統的位置
你不能依附系統程序 比如
內省記憶或者改變控制程序
所以對於現在出現的數據庫 我們希望
大家下載下來 測試你的應用
以確保你基本上可以將其粘附在所有的規則上
現在 你可能還想知道
這是如何影響我的應用開發
好消息是我們已經更新了XCode
發展了工具鏈對大多數人來說
你們看不出什麼不同
對那些有明確開發要求的人來說
比如 你在開發X系統的內核功能擴展
我們也提供了一種功用這也是恢復分區的一部分
它可以讓你失去系統完整性保護的能力
這就指向了我要說的最後一種技術
一種鞏固現代網絡的技術互聯網協議6
爲什麼互聯網協議6這麼重要？
我們都聽說過互聯網協議4地址的不足
猜猜看
最終在這裏
實際上2011年在中國和亞洲
已經不用互聯網協議4地址
在美國 我們也將在接下來的幾個月中放棄
意味着實踐中一些
媒介物現在在配置只用互聯網協議6的網絡
如果你的應用在互聯網協議6中不能正常運作
它在那些媒介網絡也不會運作
對那些客戶也不會運作
所以支持互聯網協議6真的很重要
好消息是一直以來作爲平臺的一部分
互聯網協議6已經得到了支持超過了10%
已得到現場證實
很多使用我們的標準網絡框架的人在使用
互聯網協議6
但是我們希望得到進一步發展
我們想確保每個人都創建一款應用
能在互聯網協議6網絡中運行
所以我們爲大家準備了祕訣
使用標準網絡框架
我們已經提到過NSUL會話
這真的關係到獲得網絡的複雜性
避免使用互聯網協議4的程序語言系統
很多甚至在構思互聯網協議6之前就已經得到發展
最後不要將地址進行硬式編碼
一旦你按照這個祕訣你會說
我如何測試它是否正常運行
因爲並非所有人都可以進入互聯網協議6網絡
好消息是大家爲了研發都使用個人電腦
我們正在用最新的數據庫
將你們的電腦變爲互聯網協議6 網絡模擬器
所以你所需要的就是
通過一個新連接分享模式簡歷一個個人熱點
你只要查看互聯網協議6的盒子
你就可以連接你的測試設備測試你的應用
確保它們在互聯網協議6中運行很簡單
最後因爲互聯網協議6的支持很關鍵
對保證世界上大家應用的運行來說
對每位客戶而言
我們將它作爲一個蘋果儲備提交要求
從iOS9開始
所以這就是我要說的基礎技術
現在我把它交給我的同伴加拿大人 託比·帕特森
他將會說到更高水平的程序語言系統
託比？
託比·帕特森:我知道大家都來自
世界各地一些人甚至來自
跟加拿大一樣遙遠的地方
你們的客戶就像大家一樣各種各樣
有趣的是 你們可能沒注意到
這個表格顯示了世界上蘋果專賣店
是按國家劃分的
它告訴我們一件有趣的事情
如果你的商店沒有在正確的位置
你就不會得到除了你的客戶之外的
大多數潛在客戶
現在 有個好消息這對大家來說並不難
我們有國際化和地區化指導
它可以告訴你你想知道的一切
當然我們已經得到很大的支持
在框架以及微軟軟件開發工具包方面
我們有數據和數字的格式化程序
今年 我們介紹一種新的格式化程序
來幫助你正確顯示人們的名字
名字是一件很棘手的事情
每個人都有
但不同的文化 有不同的意義
關於他們的用途有不同的習俗
在英語中 我們先寫名字 中間姓 姓氏
在中國 卻不一樣先寫姓氏
而且根本沒有中間字
NSP的名字組成很格式化
我保證看起來比聽起來更像編碼
當你大神說出它時
這關係到大家的所有細節
它甚至還有一些文化智慧
所以如果你問一個人有沒有短一點的名字嗎
可能不太合適使用一個人的姓
或者就直接使用它本身
對於阿拉伯和猶太人我們有一些好消息
我們已經得到了初步的支持不客氣
我們已經得到了初步支持
近年來在這些語言方面
在系統中文本被嚴格限制
但是 個人電腦已經有了更復雜的佈局
在用戶界面元素中
我很高興能夠告訴你們在蘋果iOS9中
我們已經全面檢測了用戶界面對右向語言的支持
這是它在跳板裏的樣子
現在 我們還未撤銷
屏幕上的用戶界面元素
這是一種深層次的切換
在視圖控制器 用戶交互
和系統手勢間進行的程序切換
如果換做希伯來或阿拉伯人
設計的話用戶界面應該是這樣
我們來看看它在手機上的樣子
我想介紹沙拉·卡迪
你們可以快速地看一下
我們體驗一下iOS 9系統支持的從右到左新式語言
現在我的手機語言是阿拉伯語
我們先鎖屏從右向左滑屏
解開手機鎖
這裏從右向左是應用程序圖標
頁面視圖自然地
從第一頁過渡到第二頁
整個系統和所有自帶軟件都支
持用戶界面鏡像或從右向左定位
以照片應用程序爲例
這些照片是按照我意願排列的
整個用戶界面位於導航欄右側
而導航欄位於下方菜單欄的頂部
現在 我們體驗一下電子郵件
它的標準佈局 導航欄
手勢瀏覽和動畫都可隨意設置
所以 點擊郵件快速獲取信息
從屏幕左側
拖動至右側
會出現表視圖單元格的排版流程
手勢導航也會
從屏幕右側進入頁面
現在把手機旋轉到豎屏模式
出現的消息窗口
讓我這個母語人士感到很自然
因爲所有的郵件標題在右側
而信息詳情在左側
因爲所有的Email都已置入UIKit中
所以您也可免費操作這一流程
進行從右向左定位
接下來我向您展示一下蘋果
軟件商店的第三方應用程序
您們一定認爲我們不選擇
Kayak因爲它的名字是個迴文
或者說您可以從右向左閱讀信息
因其採用自動佈局和耗能最小
新式應用程序接口所以添加上翻譯
軟件這個程序就能如期運行
所以 在WWDC結束後我打算去旅行
我來瀏覽一些消息
所以 拖動第一個滑塊可選擇旅遊的時間
往右滑動
可減少旅行的天數
它採用了股票用戶界面滑塊
所以您可免費使用這一軟件
因爲我只喜歡直達航班
所以打開下面的按鍵 你可以看到
它會從右側移動到左側
右側呈現整個用戶界面
因爲採用的是母語所以很直觀
把從左向右定位添加到iOS 9
軟件是多麼容易啊
謝謝大家
現在我們再講講託比
託比 帕特森謝謝 莎拉
正如莎拉所講我們全力支持UIKit
和其他系統框架
你的應用程序可以免費安裝
這些軟件
您如果有自定義視圖或手勢識別
您確實該好好考慮
從右向左語言給您帶來的好處
我不會向您展示和推銷這裏的API
也不會贅述UI的流動方式
您可以爲您的UI做出自己合理的選擇
下面我講講鏈接
這裏是指您從朋友信息或郵件裏
獲得的鏈接
點擊鏈接您就會打開一個網頁
這正是您想從電腦上獲取的網頁
Safari就是爲網站應用程序所開發的
另一方面IOS是唯一的本地應用程序
在相關應用程序點擊同樣鏈接
可以進入同一網頁這不是很棒麼
這正是iOS 9做出的突破
點擊軟件的鏈接同樣可以
打開您想打開的頁面
這在您當前的頁面操作就可以
電腦的Safari瀏覽器或iOS系統的本地應用
這是它的運行過程
將文件託管到URL服務器的網頁
您的應用程序便可本地化處理
當用戶點擊其中某一URL服務器時
我們把它包裝在NSUserActivity
以切換的方式交付給應用軟件
這就是運行過程
就這樣簡單
我願意談談關於iOS 9新奇的事
先從HomeKit智能家居平臺說起
今天早晨我們公佈了HomeKit平臺
的幾個新特點
當然我們將繼續提高HomeKit運營體系
現在 特定級別的配件
可以向你的設備直接推送
門窗及報警系統推送信息
而且 我們的新系統界面
可以和智能家居網絡實現共享管理
在設置中進行設置
另外 你還可以通過程序編程接口對接自己的應用
不過我認爲真正有趣的事情是
事件觸發器
你可以設置“如果…那麼…”的動作程序
這樣你可以設定激活報警系統的時候
選擇關閉燈光
或者可以在早晨的時候開啓咖啡機
我認爲這些功能以後將會非常有用
現在我們在搜索方面也有了新突破
我想大家會感興趣
當然 重磅消息是
iSO現在可以對你的應用內容進行搜索了
我們有了豐富的搜索結果
當用戶點擊時
將直接對應到應用中的具體位置
對應用數據進行索引一共有三種方法
核心聚焦可以直接搜索
全部的應用內容
現在 某些數據有時限性
這樣你可以選擇對一款應用進行索引擴展
核心聚焦會在特定時間啓動
以確保索引更新索引更新
索引數據的另一種方式是NSUerActivity
NSUerActivity對應用內的用戶所見
及行爲進行索引
這樣方便循跡並返回應用
最後 如果應用正在生成網站鏡像
你可以對網站進行加示
這樣網絡爬蟲會找到網站編入索引
之後在設備上進行本地搜索時則直接提供結果
正如大家今早看到的新搜索界面
現在我們有了新系列搜索建議
可供使用
這是無需手動輸入的
當然Siri甚至可以在應用內部
進行結果建議
如果您正用NSUserActivity
進行用戶應用行爲記錄
那麼在出現預設建議時Siri可以對記錄進行搜索
會注意到我們在NSUserActivity
基礎上做足了功夫
有Handoff功能
還有通用連接 搜索 建議等
這正是我們在現有基礎上進行開發的絕佳實例
從而讓應用和整個行業系統有更多成果
今天早上的重大消息是多任務功能
我們很高興能在今天和大家分享
有滑屏和拆分視圖
這些功能讓你在同一時間進行多任務應用處理
我想大家肯定會有疑問
我該怎麼做
才能讓好好使用新功能呢
其實 答案不言而喻
大家可能還記得去年我們推出自適應用戶界面
這是一個非常簡單的概念
與其設計一種佈局
與其設計固定屏幕尺寸的用戶界面的
然後根據窗口大小進行適應變化
而且我們還提供了一些工具進行協助
可對文字進行動態佈局
以及根據用戶界面的變化進行自動佈局
當然 現在我們知道
只有一個佈局是無法滿足
不同尺寸的屏幕要求
所以我們推出了尺寸分級
就可以選擇合適的佈局尺寸
無需查看設備
這是通過尺寸分類屏幕大小實現的
分爲兩大類常規級別和壓縮級別
在這裏你可以看到iPad屏幕尺寸是常規級別
而iPhone則是緊湊級別
我們使用完全相同的機制
設計多任務用戶界面
你可以在這裏看到滑屏視圖
的尺寸是緊湊級別
當我在分屏視圖中顯示兩個應用程序
我們調整了左邊的主應用的邊界
調整到常規級別
現在 有趣的是當你平均調整拆分視圖
不僅是調整這裏的窗口邊界
同時也會將左邊主應用尺寸
由常規調整好緊湊級別
我們發現在自己的應用中
這樣的窗口尺寸是最佳的
所以如果你已經適應了應用的界面
那麼其他的可以交給該功能了
你需要使用分鏡功能
用於靈活替代默認ping
然後就可以支持所有其的了
就是這樣
克雷格今天上午提到我們可以在數分鐘內轉換應用
並啓動運行
這真的很棒
今天早上我們還宣佈了畫中畫功能
讓你可以在不關閉其它應用的情況下
觀看視頻
如果你開發的是視頻應用
那麼這項功能真的是爲你量身定製的
當然 你的設備必須
支持背景媒體播放
然後啓用畫中畫功能就可以了
我們將該功能內置到標準媒體播放控制中
這樣圖形控制器能對畫中畫
進行精細控制
接下來我想談談Mac系統
當然OS X系統已經有了多任務
多窗口功能
而且今年我們還宣佈了新的窗口管理功能
這實在讓人激動
這裏的關鍵是
在拆分視圖裏並排顯示兩個應用界面
正如這張截圖所見
現在 大家都容易適應
另外可變窗口也可以支持該功能了
你只需要確保你的窗口
形狀美觀和寬度適中
以便和系統中的其他窗口適應
不會產生不良效果
當然 之前增加的新程序接口AppKit功能
能夠使這項功能更爲便利
包括在NS拆分視圖控制器自動隱藏工具條
Mac系統的另一突破是壓力觸控
這在幾個月前已經發布了
壓力觸控開闢了觸控的全新領域
有了觸控板的壓力感應和觸覺反饋
我們在自己的應用中使用該技術
如文本查找 壓感播放控制
同時還有預覽和標記等精確控制
當然我們還添加了一些程序接口
方便大家的應用可以使用該功能
你可以設置壓力觸控
壓力配置的預設值
配置觸控板的默認觸覺反饋
以及視圖和手勢識別事件
壓力變化
我們相信Mac系統的壓力觸控新功能會很受歡迎
我們很期待
大家如何充分利用該功能
現在 iCloud也更新了
去年我們推出了iCloud Drive
極大方便訪問移動設備
電腦和網絡上的所有文件
現在在iOS系統中應用能夠提供強大功能
用於管理你的文檔
並且我們認爲這種簡單以應用爲中心的模式
對用戶非常有用
但是 Mac用戶習慣
直接在iCloudDrive上直接處理文件
因此我們將新應用iCloud Drive
應用添加到iOS系統中
看起來是這樣子的
現在 你可以方便查看
iCloud Drive上的所有文件
你可以在應用中預覽文件
當然你可以使用應用打開文件
在之前的iOS 9系統
只能將文件複製到應用程序中才能打開
這正是用戶不想在iCloudDrive儲存
或者處理文件的原因
我們真正想要的是可以對文件進行編輯
無需移動或者複製就
因此如果你開發的是一款基於文件的應用
這正是你們需要的
你需要能夠進行文件協調
因爲現在有了多進程
可以同步進行處理
而你只需要在記錄中進行添加
列出並使用應用打開回調
就是這樣
iCloud Drive是基於CloudKit的
集iCloude服務於一身
CloudKit是一個公共接口
我們開放接口
現在對所有人都開放了
那麼這實際上有什麼用途了
你可以在iCloudDrive上免費儲存文件
無需成爲用戶
當你的應用用戶越來越多
數據馬上就會裝滿 直到最大限度
現在 我們搭建了CloudKitDashboard
方便向大家介紹這些功能
其中包括一些免費功能
我們將在未來不斷增加付費服務
這樣 用戶在使用付費之前也會收到通知
另外 如果你使用付費服務
這裏有價格單和說明
你還可以在這裏找到CloudKit其他信息
新功能的介紹等
如我們今年推出新功能
CloudKitWeb服務
這可以讓CloudKit在網絡應用上實現運行
你可以做的是
CloudKit接口對接可以通過JSON實現
我們提供與CloudKit接口相當工具
JavaScript函式庫
我還提供了Web login flow
這樣可以對用戶進行安全驗證
我們認爲這會變的很簡單
開發基於CloudKit的網絡應用
和你的ipadiphonemac一起運行
這就是CloudKit 謝謝
現在我把現場交給克里斯·拉特納
他將介紹Swift
克里斯·拉特納：好的
謝謝
謝謝你 託比
Swift現在的相應很不可思議
真的很難想象
才過了一年的時間
當我們談到Swift
我們會談到它的一些主要特徵
如性能 安全性和互動性
但我們希望每個人都可以使用Swift
所以我們開放編譯器和標準庫
甚至簡化Linux board
將在OSI認證的協議下運行
今年晚些時候搭建好的Swift2之後
我們期待與大家的更多合作
期待大家的貢獻和主意
現在關於Swift已經有很多資料
我們不會一一說明
最喜歡的是Swift現在是最佳的棧溢出編程語言
喜歡Swift的理由很多
其中之一是它的成功搭建
能夠高速運行應用
在過去的一年中Swift代碼性突飛猛進
因爲我們已經在編譯器中實現新的優化
另外Swift2也有許多新改進
特別是在基板方面
現在我們簡單談談其中幾個
先從最熱門的一項開始吧
新的錯誤處理模式
錯誤處理是非常熱門的領域
已知的方法很多
但是這些方法也有一些問題
我們對現行方法並不滿意
因此我們找到新方法 非常類似
但是可以處理好這些問題
我們現在談談
先從簡單的說起
Swift的功能或者方法是標記錯誤
這極大簡化了通用Cocoa API
以及允許編譯器驗證錯誤
是否得到合適的處理
Swift現在可以用類似的catch語法處理錯誤
並且使用功能強大的匹配模式
表達豐富的cache條件
Swift獨闢蹊徑使用嘗試性關鍵字
用於標記調用
產生錯誤的方法
這重新對錯誤類型進行定義
當發生非預期控制流時
可以讓該控制流在代碼中顯現出來
這樣可以對其進行分析處理
當然處理錯誤將預期地簡單
而且Swift在對用戶錯誤條件類型進行類型
和分類自定義方面可謂完美無缺
真的很棒
現在 我們認爲Swift
錯誤處理功能將不再陌生
很容易接受
但是這也會極大提高
Swift代碼在基板中的傳輸質量
現在我們可以繼續談談下一個重大特色
接入性檢查
爲此 我們增加了全新的接口
經常我們也會想要調用新的接口
增加應用的性能
但是我們仍需要支持OS X
或者iOS的更早版本
這帶來一項挑戰
因爲你可以無條件使用的某些符號
但是其他符號則對應用運行
所運行的OS系統進行了條件限制
有了Swift 2解決這問題輕而易舉
現在如果你想直接使用一個符號
而不想進行檢查
那麼編譯器將產生一條錯誤信息
這樣方便區分
另外 Xcode在這方面走得更遠它提供了其他更好的方法
首次是你可以使用新的“如有”語句
在需要的地方進行精確查找
但我認爲比那更好的是
你也可以標出整個方法
甚至整個類根據OS新特徵
可消除在你的代碼中將出現的
細微檢查的需求直接表達多種普通情況
是一種非常棒的解決方法可以很好的一起使用
現在Swift 2差錯處理特徵
和可用性檢查特徵
是更容易寫出正確代碼的
兩大方法
但 當然我也想要你的代碼也很漂亮
所以在Swift 2中我們做了數個大變動
Swift 1 引入一些
真正強大的整體通用函數
用算法做強大的東西
強大的 極好的
問題是 這些總是不夠用
比如說 我有一組數據想按比例增加數字
並丟掉某些結果
用Swift 2這很簡單
但寫出來需要重排很多代碼
當你考慮時你必須徹底地閱覽
這使得它很難被推出來
Swift 2引進一種新的語言程序
叫協議擴展
使用協議擴展
可通過徹底改動這些整體通用函數
讓它們至始至終都一樣
意思是說你寫的新代碼很漂亮
很容易寫 也很容易讀
讓我們談談早退出
經常看到因爲某些原因想要早點退出作用域
或許你有辦法 比如使用參數
可能是0 如果是0它不起作用
好吧 如果讓的表述爲你提供一種很熟悉
很舒服 很棒的方法來檢查這些條件
但它需要你將所有的代碼縮排成額外行
爲解決這個問題我們引進了一種新的防護說明
允許你檢查條件
然後早點將其擺脫
允許你寫出漂亮的直接式程序
無需額外的縮進
下一個Swift如何運作的一個大元件
和Cocoa配合使用可達到什麼程度
但對於普通的Objective-C API
Swift編譯程序是否有指示器
毫無影響
或一個序列的單元類型是什麼
引入new featuressubjective C
來解決這個問題
包括可以將指針類型表達爲空性的能力
在Xcode 7我們引入整個全新的
一級的基因體系
可讓你在Objective-C中
表示單元類型
和許多其他的事
儘管採用了這個和其他整組特徵
Cocoa感覺還是相當快
最後讓我們來說說Xcode
Xcode 7引入修改後的Swift移植器
它可自動將Swift 1代碼移到Swift 2序列
包括採用新差錯處理模型
只要Swift語言繼續演變發展
移植器也將繼續發展與之匹配
下面 我們談談頭文件
但 等一下 有無頭文件
是Swift的明顯特徵是吧
問題是 是否有時候你確實想
掃一眼一堆的代碼看看它究竟是什麼
並以這種方式獲得所有執行細節
Xcode已經解決這個問題
通過引入新輔助編輯器
它提供任意Swift源文件的
一個類似頭文件的意見
給於你所有頭文件略讀優勢
沒有寫保持以及自己編輯的維護壓力
好極了
下一個 豐富的註釋
Xcode讓你寫出
漂亮的SwiftPlaygrounds
通過直接向Xcode編輯器
這些豐富評論使用非常流行的Markdown syntax
現在我們已將它應用到syntax
用來進行文檔註釋
我們也增加對新特徵的支持比如內嵌圖像和鏈接
提供很棒的始終如一的體驗
在Playgrounds和doc註釋之間
最後
最後來說Playgrounds
Playgrounds對我們來說很重要
我們知道利用API是一種很棒的體驗
也和Swift程式語言本身
認爲Playgrounds也是教和學習
程序編制的一種好方法
所以我們對其增加了一些特徵
包括爲多重頁面增加最新的支持
爲了更好地進行展示我要邀請麥斯·杜克曼上臺
麥斯·杜克曼:謝謝克里斯
今天我要展示的是在Xcode7中教和學習使用
Playgrounds多麼簡單
讓我們從這開始我開發了一個playground
關於Apple的製圖API用來教學生
在這個部分
我爲他們介紹一個全新的GameplayKit
如Playground所說GameplayKit用來
開發技術以驅動遊戲設置
我們馬上就可以看到更多東西
Playground使用形象化的飛車追逐
表現GameplayKit部分功能
我創造了這個Playground
所以我的學生可以編輯壞蛋的車輛
只需調整這三個精靈節點變量（SpriteNode）
現在Playgrounds可以爲你
展示每個代碼行的結果
我們增加了聯機的功能
現在 我可以開始了
用學生將要用的方式編輯我的Playground
通過改變數值
改變壞蛋的外貌
你可以看到 在我編輯時
變化也隨之更新
那是一輛壞蛋的車
至此 我讓我的學生
寫了點代碼
將壞蛋一起放到精靈中
現在 當我開始寫代碼
壞蛋就開始聚集了我準備好了
這就是爲設置所做的
是時候開始重要的事情了
它會讓材料移動
這個我放在了其他頁面
頁面是一種好方法
可將Playgrounds劃分成像書一樣的小主題
你可以使用頁面底部的
手動導航連接轉到其他頁面
你也可以使用跳轉欄
當然 還可以使用導航
這是我Playground中所有的頁面
每個頁面都有軟件源和資源
所以你可以如你所願啓動你的Playground
我們來檢查下一頁
現在存好導航 放到一邊
這個頁面是關於
GameplayKit的集羣行爲
集羣是講壞蛋聚集在一起
並使之移動的單位
現在不需要進一步的數據對象
我將打開Xcode的時間抽助手
看看聚集者
好了 這就是所有的罪犯
各種壞蛋在追蹤英勇無畏的英雄
但你可以看到 他們四處亂撞
真是集羣災難
來看看是否可以修正一下
這裏有數個參數 可以用來
管理集羣行爲
這個有意思 內聚性
用來控制壞蛋團結一致的程度
我可以立馬試試那個數值
立刻就可以看到效果
內聚性有點太大了
所以 讓它稍微小點
這個間隔好多了
但仍不是我想要的那種目標一致
所以 我要試試尋找參數
設置一個不同的數值
看看能不能達到我想要的聚集
好了
現在他們聚集在一起了
現在我知道我想要的數值範圍
就可以告訴我的學生開始玩了
將助手儲存好 放一邊
將編輯器切換到原始標記
現在使用熟悉的Markdown syntax
編輯Playground的PROSE
我可以回到尋找參數
我也可以增加額外的PROSE
讓我的學生和這些數值玩一玩
我也可以來到這裏
用圖表的形式增加一些品牌
現在 無論何時有人問我是否知道聚集
我就可以說我寫了一本關於聚集的書
謝謝 你很好
我們在Xcode 7中的Playgrounds
僅加了少數的程序編寫特徵
等不及要看看你們可以用它們做些什麼出來
現在爲告訴你一些非常棒的Xcode特徵
有請馬太·菲力克上臺
馬太·菲力克：謝謝 麥斯
伴隨着watchOSiOS和OSX新版本的發佈
我們很興奮爲你提供Xcode 7
這個新發布的版本包括特徵並支持所有平臺
且每個平臺的獨特體驗
已經被合併到工具中
使你能夠鎖定和釋放你的應用
到所有設備中
我今天將從獨特的體驗開始
使用設計工具 即界面生成器
首先是一種展示你的應用的新方法
叫做堆棧視圖
對於堆棧視圖
你可以使用水平和垂直堆棧設計你的應用
你可以從選擇方向開始
增加你的控制
每增加一個控制
堆棧視圖將自動調整大小和定位
爲你提供正確的樣子
堆棧視圖出色的嵌套
可允許你改變方向
這樣 你就可以獲得你完全想要的那個佈局
現在 我們已在自動版面配置頂端建立堆棧視圖
它爲你處理所有的約束

隊列 空間和分佈
堆棧視圖同樣靈活
你可以在界面生成器上
在運行時 和你的界面玩
當你在堆棧視圖增加控制時你可對它們重新排序
嘗試不同的佈局或許最好的情況是
當你在運行時隱藏視圖
堆棧視圖將自動調整
堆棧視圖是界面生成器上的新方法
可使你完全獲得你想要的佈局
下一個是Storyboard
references
使用Storyboard你可以創造設計場景
用0代碼將他們連接在一起
以構成完整的用戶界面
現在 你的場景和界面進化了
變得有點複雜
你想要更容易的控制它
Storyboardreferences
允許你截取一部分界面
並移動以分離storyboard文件
保持連接
storyboardreferences
使你的界面重點突出並模塊化
和你處理應用代碼相同的方式
也可很容易地設計你的應用流
和應用流應用佈局同樣重要的
是應用外觀
在此次發佈我們製作了值得一看的界面生成器
在接下來的場景中
你將看到更多應用在界面生成器中
iOS 和OS X的可視化
畫布內將對模糊和陰影着色
振動則成爲展示的標準
而可設計的控制可以展示隱蔽和陰影
組成你的場景中的其他視圖
結合這些可視化以及先前的編輯器
可使你進一步改進特殊界面的外觀和佈局
意思是 現在比以往更加可以
直接在界面生成器中編輯界面
看看你的使用者會在他們的設備上做什麼
創建應用的另一方面是管理資產
含有工具的Xcode可與新
按需資源API配合使用
使用Xcode 7你可以連接資產
發送到整個項目
以供下載和使用
每個標籤代表一個資源聚集
我們把它叫做包
每個單獨的資源可申請多個標籤
這可使你
在不同的環境中使用資源
幫助你管理標記的資源
在項目編輯器中Xcode包括一個標籤概述
在這裏 你可以很容易地增加移除重命名標籤名
你可以改變包的內容
你也可以安裝按需資源各個方面
比如下載命令
下載優先次序
當你建立應用時
你的標記資產自動集合成資源包
你只需標記你的資產然後就可以開始了
當你配置你的應用時
你的按需資源將由App Store主導
在調試時Xcode將在你的Mac上
主導按需資源
並根據要求輸到你的設備中
以模仿Store的下載行爲
對於使用Xcode持續集成的人
程式即將建立並主導你的按需資源
所以 你可以在你的團隊中通過無線電進行測試App
最後 爲幫助你追蹤包
在進行調試時調試計量表將顯示
所有按需資源進度和狀態
所有工具的組合
將讓你很容易的在App上使用按需資源
Xcode 7還有很棒的調試和性能分析工具
可以幫助你進一步強化應用的質量
塞巴斯蒂安剛提到我們重點放在電池壽命
擺脫你的大部分設備
充一次電即可支撐一整天這很重要
所以 我們讓
能源使用跟蹤應用變得簡單
iOS新能量計量器將顯示CPU使用
調用API聯網以及定位服務
還將顯示你的App
從前臺到後臺的轉換
你可獲得應用行爲的內部信息使用其它調試測量表
當你需要更多信息時
可通過儀器獲取所有細節
說到設備 設備已經更新
比以前更好了
目前 追蹤視野更緊湊
使用流動姿勢可讓數據形象化更簡單
我們還有不少更新後的工具以及新工具
可供你使用比如核心位置分析
新CPU系統追蹤
在次次發佈中 我們將
Clang's AddressSanitizer
整合到調試工作流程中
Address Sanitizer是C語言的一種
內存錯誤檢測系統
一旦激活Xcode將監視應用的內存使用情況
檢測普通問題 比如緩衝超限
檢測出來時Xcode將通知你
並提供基本細節幫助你進行診斷
調試問題
和其他類似的工具不同
AddressSanitizer速度很快
速度快到你可以在你的交互應用中使用
但是儘管有如此出色的調試和分析工具
有時
漏洞會泄露 並造成崩潰
爲幫助你儘快解決這個問題
Xcode爲崩潰日誌整合支持
將你的App提交到提交到TestFlight
謝謝
提交到TestFlight和app store
Xcode會提供
symbolicatedcrashes
服務於每一項任務
整合後將爲你提供一份更新清單
關於apps最常見的崩潰告訴你回溯
崩潰的細節以及最近發生崩潰的排行榜
你可以重新命名崩潰以方便追蹤
你也可以增加備註
當你搞定崩潰時可以對其做記號
當你回顧回溯時你想讓它變得簡單些
所以Xcode有OpenIn Project鍵
可使你將回溯下載到程序中的調試導航
提供熟悉的工作程序
爲崩潰幀引導源代碼
找出問題 並解決問題
早春時我們爲你們的iOS應用提供崩潰日誌
今天以Xcode7開頭
你將拿到OS X應用的崩潰日誌
watchOS應用的崩潰日誌也將很快出來
這此次發佈 我們還將提供
應用擴展到所有平臺的app的崩潰日誌
你就可以很好的進行追蹤和改善
另一種改善應用的方法是測試
我都喜歡測試 對吧
我再試一下
我都喜歡測試 對吧
很好 因爲測試是傳送好應用的基本
今年 你有兩個顯眼的新添置
測試方法的核心是XE測試框架
和測試導航這些都將爲你進行設計
組織測試提供不錯的方法
在這之上Xcode爲你提供了不少
測試應用的方法
你可以檢測你API的正確性
隨時測量追蹤它們的性能
你可以在測試代碼評估代碼的同步行爲和異步行爲
不斷的測試木馬集成
所有這些組合在一起
可以做出一個強大的測試解決方案
但我們想要啓發一個Notch
所以今年我們增加了用戶界面測試
這建立在相同的測試基礎之上
現在你可以進行正確性和性能測試
這些測試在用戶界面上完成
將進一步擴大測試覆蓋
說到覆蓋 我們也增加了
代碼覆蓋是一種很棒的新方法
可用來評估測試進展
確保你能做所有你想要的測試
所以 讓我們來快速的看一下
新UI測試和Xcode7中代碼覆蓋率特徵的演示
這裏有一個我和我的團隊正在做的應用
是iOS和iOS X中的一個
SpriteKit遊戲叫做Demo Bots
在我們開發應用時我們同樣做了測試
從這裏可以看到在測試導航中
有不少測試很有用
我們可以知道哪個部分的代碼還未進行測試
或因爲我們還未寫測試
或因爲目前的測試並不完整
對於Xcode 7這正是可獲得的
帶代碼覆蓋率測試的內部信息
一測試Xcode就會收集覆蓋率數據
跳到測試報告
我們可以看到有一個新覆蓋率部分
覆蓋率部分的內部
應用中的所有文件被列出
它們的右邊有一個指示器
顯示每個文件的覆蓋率百分比
現在 在這個清單中我按照從高到低進行分類
這樣看起來好多了
往下滾動可以看到這裏還有些工作要做
對於列表中的每個文件你可以公開內容
看看方法的覆蓋率
以及此處說包含的功能
對於這個我已經公開的文件
前兩個功能覆蓋率100%
但其他三個的覆蓋率爲0
對於項目 報告爲你提供覆蓋率的高度概括
但是我們想直接爲你提供信息
看看這裏當我操作一個源文件時
我們直接將代碼覆蓋率信息
帶到源編輯器中
黑色的這部分
是還未進行測試的代碼
非常好這樣我就知道該關注哪裏
它和助理編輯器也配合得很好
因爲你可以有源代碼並一起進行測試
一旦測試持續進行就更新信息
如果我們回到報告看看未覆蓋的類
大部分是用戶界面類
它們是視圖自控器 等等
所以 幫我一下
我要創建一個用戶界面測試
我已經建立一個用戶界面測試bundle和類
我將從這裏挑選
我想要寫的測試程序是用來測試遊戲選擇板
新API和XE測試可使你與用戶轉換元件互動
訪問他們的設備
觸發行動真的很容易寫出來
但比寫UI測試更簡單的是什麼 知道嗎
記錄一個讓我來告訴你怎麼做
我先解除項目導航
爲自己釋放一些空間
以及測試中我想進行的插入點
我將點擊一下編輯器底部的
小記錄按鈕
你可以看到在我操作時Xcode開始應用
請注意
左上角的測試
首先我想要你點擊應用中的選擇按鈕
你可以看到
Xcode正在記錄測試代碼的
插入對應線
你可以看到API非常簡單
它正在爲窗口和按鈕詢問應用
告訴我們點擊
測試的下一步
我要填上玩家的名字
我開始在標準玩家把手這打字
你可以看到這裏兩件很酷的事情發生了
第一 當我在文本域打字時
編輯器也跟着更新並展示數值
非常的酷
另一個是
UI記錄注意到我正在和
同一用戶的界面因素進行不止一次的互動
它重構測試代碼爲它創建一個局部變量
這使得測試可讀
意味着後續很容易重構並重新使用代碼
我們繼續從這挑選一些選擇項
你可以看到測試升級了
對於最後一個要素我要從這選一個不同的機器人
我將按這個按鈕選擇藍色機器人
點擊完成回去看我的測試
和記錄一樣很容易就可追蹤我所有的行動
測試還可以做更多的事
我們可驗證一些數值
在點擊完成按鈕之前讓我們先插入一些代碼
檢查設置是否正確
我將在這插入一些代碼
從界面獲取有效機器人的數值
這是在文本域中
我將和我預料的數值進行對比藍色機器人
沒有進一步的動態數據對象可以開始測試了
我不介入
這裏可以看到它正在更新數值
選擇正確的機器人
驗證測試 測試通過了
所以記錄產生編寫UI測試真的很容易
我們可以看看Xcode內部的測試並局部運作
我們也可以讓它在持續集成木馬上運作
我爲應用iOS和OSX版本設置一些木馬
如果選擇iOS版本看看測試
當我過濾掉失敗的測試
我看到一些有趣的東西
我有四個界面測試它們iPhone上通過測試
但在iPad上 測試失敗
爲方便診斷測試失敗原因
每個運行測試包括所有運行過的測試行爲的副本
看到這些我可以通過擴展測試
這是一份清單測試的所有行爲
是關於剛纔就開始運行的
因爲可以看到用戶界面測試
我想要更進一步
每一個行動都包含平面截圖
如果我檢查iPhone上通過的測試
我可以得到一個平面截圖關於測試如何開始的
這是我們遊戲的開始
我也可以查看測試的中間部分
這裏 我們用鍵盤
在文本域中敲入一個數值
我同樣可以看測試的最後部分
這是在點擊完成按鈕前UI的情形
如果我將其翻過來在iPad上看測試
並一直跳過 直到最後部分
可看到這是iPad UI所有設置都正確
但沒有完成按鈕
顯然 在UI中我們錯誤安裝了一些東西
屏幕截圖可以很快地幫我們縮小範圍
代碼覆蓋率告訴我在哪裏寫測試
UI測試和記錄讓我可以
很容易的獲取更多的覆蓋率
新測試記錄幫我
縮小問題範圍
以上是關於Xcode 7
代碼覆蓋率和UI測試的信息
用戶界面測試使系統可達性的使用與
UI要素相互作用
意思是如果你已經讓你的app具有可達性
那麼你也已經讓你的app具有可測試性
UI測試同樣可用於根據尺寸和定位設計的Uis中
包括從右到左的支持
也就是說你的UI測試
可以測量你的UI中所有的演示
新API 是的你可以爲它鼓掌
新API和XE測試使用於
Swift和Objective-C
UI記錄將生成你所使用的任何一個
這些是你在Xcode7可找到的新特徵
在你爲我們平臺創建App時就可以看到
現在 我們要和你們分享一些令人興奮的新技術
它們可用在遊戲和製圖中
我將邀請我的同事傑夫· 斯特爾上臺
傑夫· 斯特爾：謝謝你馬太·菲力克
我很激動Xcode 7實在令人驚訝
能在這裏和你們談論遊戲和製圖
似乎就在不久前我們在這裏介紹了
我們首個與遊戲有關的API Game Center
或社交類遊戲網絡
從那之後我們一直爲API的鍵盤輸入
和製圖技術忙碌像遊戲控制器SceneKit
SpriteKit以及最近的Metal
今年我們推出了不少新遊戲技術
包括使你的繪圖現代化的Model I/O
ReplayKit用來拓展遊戲的社會範圍
Game Center用來爲你的遊戲增加超級厲害的大腦
而且 我們把所有的這些都放在GameKit裏
只要有一個GameKit所有功能均觸手可及
很棒的解決方法
在我們平臺上發展遊戲的極其完整的解決方法
讓我們來看看GameKit上的某些很酷的新特徵
從Metal開始
你知道Metal是
去年我們爲iOS推出的3DAPI
我們真的很興奮今年我們將它引進OS X
作爲翻新產品讓我們來看一個例子
我們最近從OpenGL移到Metal的遊戲開發
這裏有個遊戲 開始時
是在OpenGL上運行你可以看到
OpenGL處理命令使得一個CPU完全飽和
這使得遊戲玩法進入第二個CPU
這個CPU並不繁忙事實上 在這個例子中
我們看到CPU有40%處於閒置狀態
移到Metal
我們徹底地減少處理命令的時間
我們有API
你可以更直接的爲GPU編程
如果你選擇你可以將處理命令分開
穿過多重芯部
在這個例子中我們釋放了GPU的全部性能
我們和第三方開發人員合作爲OSX開發Metal
讓我們花一分鐘
看看他們在Mac上所做的
很高興爲你們介紹大衛·麥克德蘭
他來自Adobe Systems
將爲我們展示
他們使用OSX對Metal做了什麼
大衛·麥克德蘭:非常感謝
去年春天Adobe曾很激動
當Apple把iOS引進Metal的iOS時
事實上 我們已經用它來優化
部分流行的iOS App
Premier FlipPhotoshop Mix
而且看到了很好的結果
當Apple告訴我們Metal被引入到OSX
我們非常的激動
這樣一來 我們就可以在這些平臺分享我們的代碼
今天我將展示我們的一些進展
Mac OS的兩款旗艦產品
Illustrator和After Effects
我們來看一下
這是當前版本的Adobe Illustrator
裏面有大量的原圖超過三十萬點
漸變和合成模式
我將繼續並對這張原圖做縮放
你可以看到
在處理那張複雜的原圖時速度有點慢
我真想看看我們能否做些改善
用這個版本 我們將展示
在我們用了整個繪製引擎並將它放到Metal上時
我們可以用Metal做什麼
事實上 它很好用
它們將展示出有不斷縮放功能的全新特徵
當你考慮我們可以用Metal做什麼的時候
你可以看到結果出人意料
事實上 我可以一直縮放放大很多
直到你可以看到文本信息
這也很大程度上改變了藝術家使用我們產品時的工作方式
現在我想談一下後遺效應
這裏有一盤錄像來自極限運動團videographer
DevinSupertramp
讓我們快速瀏覽一遍
十分有趣
我們要的是從中選擇一個鏡頭
用後遺效應進行分析加入一些效果
將其製作成商品廣告插播
所以在這裏 我將做一些
色彩校正 波紋特效
和鏡頭光斑特效接下來
脫離Metal重新播放一遍
你可以看到它在中央處理器中運行十分困難
也不能產生
我們所傾向的交互性能
並提供給文字編排人員
這也是對程序員的一種挑戰他們要時刻注意這一點
看看能利用Metal做些什麼
所以短時間內 他們需要
將這三個效應轉移給Metal之後
你們會發現相當驚人的不同
現在我切換到相同的編制
但這次那些特效將會被替換
轉變爲Metal版本下面我再重播一遍
你可以馬上看到實時運行
不需要降低框架我們看到
這些特效達到八倍的性能優化
很大程度上減少處理器使用量
因此奧多比公司致力於將Metal
引入到Mac操作系統創新雲應用中
如Illustrator及我今天爲你展示的後遺效應
當然還有Photoshop和Premier Pro
我們很激動看到Metal
爲雲用戶所做的一切
非常感謝
傑夫 斯特爾：大衛 謝謝你 這不可思議
我同意克雷格的觀點這十分有趣 因爲
你可以進行非實時交互作用並轉換爲
流暢的用戶交互
但Metal不僅適用於應用程序
當我們說到今天早上
iOS系統中關鍵的圖形技術
接入就將OSX系統以及應用程序界面
直到現在像核心動畫技術
以及硬件加速的核心圖像
移文檔Safari頁面顯示都已被置於開放圖形語言頂端
這意味着中央處理器疲於應對圖形處理器的指令
運用Metal我們可以提高效率改進性能
尤其是關鍵的用戶級別任務
此外 我們不想僅僅
提升系統性能
我們真正想做的是想讓所有人可以很輕鬆地
使用Metal
因此我們引入MetalKit
通過它可以瞭解Metal
這對你來說是一份重擔
MetalKit可以做很多事從繪製渲染循環
到通過交互作用加載3D模型
主要是同藝術家I/O模式的交互作用
事實上MetalKit可以將網格
直接輸入Metal緩衝器
運用所能做的去渲染場景
不僅如此
Metal着色器是高性能
圖像處理着色器主要應用於Metal應用程序
這些都是基於圖形處理器的平行計算着色器
個別再次轉變爲我們的圖形處理器使我們更易
使用Metal
所以現在 你擁有極佳的渲染管道
但也需要豐富的儲存信息
因此我們使用I/O模型
有時使用3D模型加載和運行比較難處理
這都多虧了I/O模型
簡化了內容加載
使不同文件格式的內容可直接輸入SceneKit
或通過與MetalKit交互作用輸入到Metal中
但它將自己區分在於處理光照的方式
I/O模型向你提供最先進光線跟蹤的
材料照明方式
這意味着它驚人地提供
紋理映射
讓我們看一下
從基線開始
這僅是一個模型它是通過紋理載入
這很難讓人感興趣
事實上 它比較單調
我認爲九零後希望重新啓用該模型
如果我們除去紋理
並應用全球照明方式
那麼我們看到的
是那些看起來十分真實的事物
我們再將紋理添加進來就會得到一些
看起來很棒的東西
最後 當然即使使用I/O模型
以及它的照明方式你也可以添加自定義照明
和陰影使事物看起來更加真實
你可以得到一些驚人的結論從普通
到非凡 I/O模型可以向你提供卓越的解決方案
幫助你的模型和照明
所以現在你擁有極佳的渲染管道
也有極佳的模型和儲存信息
現在只需好的遊戲設置
因此我們有了GameplayKit
遊戲設置可分爲兩個領域
我們有導航否則你如何在遊戲裏移動目標
我們也有策略否則遊戲如何思考
GameplayKit對這兩方面都有解決方案
GameplayKit基於組件的應用程序界面完全保障
遊戲設置的對策
不論你是想追蹤其他玩家的黃金
還是想從甲地到乙地追蹤敵人
並且消除途中的障礙
就需要生成確定隨機數
以便下次進行在線聯機遊戲
遊戲設置也爲你提供解決方案
從簡單遊戲到複雜遊戲
我們認爲遊戲設置可以有效地幫助你們
開發遊戲
我們從社會組成開始即遊戲中心
ReplayKit可以擴展到社會交互作用
ReplayKit允許玩家錄製電視節目重播
主要針對遊戲開放
他們可以保存或分享錄像
它屬於硬件加速具有高性能
十分便於你們操作
便於將其添加到遊戲中也許
它可以開展下一次的病毒式市場營銷活動
來推廣遊戲項目
最後是SceneKit和SpriteKit
我們對他們進行了一些偉大的更新
但我覺得最有趣的或者說最引人注目的
是我們創建了一些工具
可以讓SceneKit和SpriteKit
直接導入Xcode 7系統接下來由我的同事
Jacques Gasselinde Richebourg
向你們展示Xcode 7內部工具
去年的Xcode 6系統我們引進了視覺場景編輯
添加進Xcode 系統的SpriteKit
今年 我們引進了一個缺口
並將動畫編輯添加進Xcode系統
所以在這裏我會做一些場景剪切
你們會看到可愛的紅色小熊他將往前走
穿過兩條峽谷走到另一邊
這些都是基礎的動畫技術我在這裏呈現一下
我想要將此分層導入到動畫中
很明顯 我們首先讓它運行
接下來 抓取一個動作
現在讓我們進行最有趣的操作
這是一個參考行爲
意味着它實際上儲存在另一個文件裏
即actions.sks文件
我在這裏進行參考就可以進行排版操作
所以我打算抓取下來
當然這和複製粘貼或一樣簡單
我打算多做幾次它就會很自然地附加
在相同的軌道後
讓我們看一下接下來
這次我們使用清除器所以它是一個時間線
一個有清除器的時間線你可以隨時預覽
動畫的大致模樣
這不僅是一個極佳的預覽工具
實際上它也是不錯的編輯工具
你可以注意到他沒有跳過峽谷
這是個問題 我們將進行調整
讓我們想出 他跳躍的好時機
看起來這裏是最好的
之後我們要抓取一個移動瞬間
讓他在這裏跳躍
現在注意是如何抓取時間線的
好 下面讓它增長100個單元
再次使用時間線
計算出頂點值
大約在這裏
現在看一下持續時間
好了嗎？這很簡單
很明顯 當他跳起來我想讓他減速
這意味着在一開始 他速度很快
在頂點時卻很慢
複製 粘貼 反過來
達到負100
然後開始加速
使他能夠在頂點停滯
好 讓我們對此淨化
這是拋物線式跳躍
完美 現在 可以看到它有點怪異
如果他在空中停留的話所以讓我們添加一個動畫
注意 我在每個動畫頂端進行分層
這次我們使用SpriteKit進行操作
現在我要抓取跳躍長度的動畫
進入媒體庫
取出跳躍畫面
過濾掉跳躍選中它 就可以選中全部
拖拽 好的
很好 現在對此淨化
好 一個完美的跳躍
現在 這裏有兩個峽谷
重複兩次操作
最簡單的方式是將此轉變爲參考
選中 點擊右鍵
轉變爲參考將此命名爲Jump
儲存進actions.sks文件
我之前運行過
好 很好 這就是跳躍
再次使用清除器設置另一次跳躍
參考最大的用途
是它們在這裏出現直接顯示在目標程序庫中
我只需將它拖拽進來
現在就完成了我們的最終剪輯畫面
好 跳躍 再跳躍
很好 好的 謝謝大家
最棒的一點 對於參考而言就是它們不僅幫助你
設置其他場景 還有編碼
接下來這裏我們運用Sk操作
加載相同的操作過程將它們連接過去
連接到左右鍵以及空格鍵來跳躍
讓我們操作一下看一下過程
現在利用熊貓進行剪輯場景
完美 現在我來控制它
看着 左 右
跳躍
很簡單
大家都很忙
所以轉化到下一個動畫
對Xcode 7系統不熟悉我們擁有完整的視覺場景編輯
運用SceneKit編輯3D儲存信息
這個編輯程序很像SpriteKit2D程序
同樣的工作原理
拖拉以添加新信息
也可以使用3D中的調製器環繞拖動
對齊到其他事物
你甚至可以複製
還有一些物理過程
以及編輯器內部的動畫
現在我們進行動畫繪製
很好讓我們與此進行交互作用
播放
就可以從之前的演示中看到同樣可愛的熊貓
讓我們試一下
這是一隻紅色熊貓而不是狐狸 是一隻紅色熊貓
繼續操作接下來
將其與之前的小資料塊進行交互作用
好 剔除出去
很好 在這個遊戲中播放這隻小紅熊
它正在採摘花朵和珍珠
很遺憾
我承諾在製作過程中不會傷害到熊貓
這不僅是對現階段的演示
實際上 我們在向你展示
這是個樣本
你可以設計下一個3D SceneKit遊戲
使用這個編輯器SceneKit
以及Xcode7系統謝謝大家
接下來讓我們歡迎安德里亞斯
好的
讓我們快速回顧一下我們會上討論過的技術
今天我們宣佈了OSs的新版本
新的本地化watchOS軟體開發套件
該套件含多個新應用程序界面你可以充分利用
尤其是在遊戲過程中
新的最優化技術包括應用瘦身
轉換的新版本讓軟件運行更快
同時可以讓你編寫更有效的代碼
當然目前Xcode系統的新版本
具有用戶界面記錄和檢測
這些技術有利於你下載
今天下午全球開發者大會參與者門戶上面的內容
我們希望你可以很快採用它們
甚至爲用戶設計更具創新性的應用
請繼續載入所有素材
讓我們知道你對它的看法
此外 我們也進行一些創新在今年 使用飛行試驗服務
從今天開始 你們可以對應用進行配置
適用於飛行測試中iOS 9軟件開發工具包
接下來的幾周裏我們會繼續加大支持 尤其是對分層應用
點播資源以及Bitcodes所以你可以檢測自己的應用
在我們發行iOS 9之前運用這些新技術
預計今年下半年
超過一百個講座
超過一百五十個實驗室超過一個apple工程師
當然 在這裏我們有很多機會去學習
在會議上討論的這些技術
而且 你還可以參加一百多次會議
去衆多實驗室獲取項目幫助
實際上 有一百多名蘋果公司工程師
在現場回答你的問題
所以 我希望你們可以享受此次會議
並在此周之後收到你們的回覆