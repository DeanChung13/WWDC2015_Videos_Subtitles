《SceneKit改进》
谢谢大家
下午好 欢迎参加《SceneKit改进》讲座环节
我叫 托马斯·古森斯
如果您还不知道SceneKit是什么
这里有一个关于iOS 10上的各种不同框架的概述
SceneKit和SpriteKit是高级API
SpriteKit 是2D 的而 SceneKit 是3D 的
您可以将他们与其他游戏开发技术配合使用
如Model I/O GameplayKit 以及 GameController
有需要的话SceneKit也 可以让您使用低级API
即OpenGL和Metal
SceneKit是随OS XMountain Lion推出的
而且去年也在iOS 8上推出了
去年 我们在SceneKit上添加了一些新的特性
使其方便用于休闲游戏如粒子系统
物理学 力场以及与SpriteKit的集成
例如对于所有2D游戏场景叠加
今年对SceneKit的两个主要扩展
是向Metal的过渡
以及新的场景编辑器
我们的这个演示将从
向您展示最新的场景编辑器开始
然后解释为何我们过渡到Metal
以及它的采用对您意味着什么
最后我们将展示一些
我们今年对引擎添加的新特性
好最新的场景编辑器
它在Xcode 7上提供
因此我们可以在El Capitan或 Yosemite上运行它
而且它也在Force Field中提供对力场的支持
要打开它
只须打开一个SceneKit支持的3D文件
如DAE OBJ Alembic
或者您可以使用模版选择器
创建一个新的
SceneKit文件那样它将创建一个新的
扩展名为.scn的空SceneKit文件
而scn文件不过是一个由NSKeyedarchiver存档
的一个scn场景实例
那意味着若您愿意您可以使用程序代码 
制作一个您自己的SceneKit文件
而这对生产流程而言是很方便的
那么场景编辑器的主要目的是
让您为您的游戏构建多个平面
您会发现
通过引用原始资源
将来自于不同文件的多种资源
结合起来而构成一个单一场景
确实是容易的
场景编辑器也为SceneKit的一些关键特性
加入了一些视觉效果编辑器
例如 让您在一个3D场景中实时配置粒子系统
配置您的物理学
检查并配置您的对象的物理形状
并对模拟效果进行预览
如力场的感知而
且它还包含一个动作编辑器
让您通过图形用户界面
构建动作序列
场景编辑器也包含一些更高级的特性
如 如果您希望在您的场景中
实时编辑共享修改器
以及一些烘培工具
如烘培环境光遮蔽
关于此内容
请参考 MondelIo 讲座环节以了解更多信息
好了 最好还是为您做一个这方面的展示
那么现在让我请Amaury上台演示Xcode 7 谢谢
大家好 我叫 阿莫瑞是SceneKit团队的
一名软件工程师
我们极大地改进了Xcode 7中的SceneKit编辑器
而且由于它的最新编辑功能
现在很容易完全
以直观和互动的方式构建场景
稍后在本节讲座中我将向您展示
如何在编辑器中使用SceneKit
构建拼图游戏Red Panda
但是目前我们将从一些更简单的东西开始
一个物理尺寸的小游戏
它包括构建一个由木块组成的塔
随着我们把木块从它上面移除
塔将最终倒掉
那么您在这里看到的是
一个显示空场景的SceneKit场景编辑器
在右侧通常是应用区
这里有检测器和库
在对象库里面
您可以发现很多SceneKit对象
比如模式
光线
照相机
几何参数
以及物理场
现在 对于我们的木块
我们使用一个简单的几何形状盒子
为了对它的外观进行自定义
我可以把它拖放到这里看看效果
那么现在正如在Interface Builder中
检测器也能编辑您的3D对象的所有属性
例如 在属性检测器中
我可以把几何形状的大小
改为2… X 1... X 6
而为了把它放置在场景中央
我可以使用节点检测器
并将其位置设为...零
但是实际上有一个更简单的做法
即使用 3D 操纵器
我可以自由地在场景中移动对象
好了 那么既然我们的木块已经准备好了
我们将把它作为一个构建其他木块的模版
使用3D操纵器我可以轻易地通过按住alt键盘
进行复制
我可以重复这个操作
进行选择
把选定的部分复制
旋转
再重新选择
重复操作
再最后一次复制以完成塔的构建
我们现在准备好使用SceneKit 内置的物理引擎
来使场景更有吸引力
我将直接选定所有对象
来到物理检测器界面
并向每个木块添加一个动态实体
现在我们已经准备好运行模拟
如您所见 我们的木块现在受到重力影响
无限下落
为防止这种情况我们将向场景添加一个地板
因此我打开对象库
放一个地板
将其定位
我需要一个静态实体
以便让它参与模拟
但却不允许移动
如果我们再次运行模拟什么都不会发生
但是当我们从塔上移除一些木块时
我们就很好地了解了游戏会是什么样子
另外一个我想为您展示的特性是场景检查
您可以在编辑器的左下角进行场景检查
在场景检查中您可以查看场景中的所有节点
也可以编辑节点层次
例如 我们有地板
很多木盒子
但是我们也有聚光灯
建立了工程之后
我就把这个灯放在场景右边
目前它是隐藏并没有效果的
让我们把它显示出来
为了进一步改善照明
也为了避免这些完全黑暗的区域
我将直接向场景添加环境光线
就是这样
仅仅通过编辑器我们就构建了整个场景
它包括3D对象
质地灯光和动态实体
在我们执行了手势之后
它们就会组成一个不错的游戏
因此SceneKit场景编辑器确实能够
让您以更少的代码
编写游戏
通过编辑器您实际上还可以做更多事情
而为了说明那一点
让我们切换到
Red Panda演示
并再次查看那个演示
那么Red Panda是一个3D拼图游戏
在里面您可以通过全景动作操纵摄像机
并控制角色的行走路线
游戏的目标是收集这些花
而这里是第一朵花
在它的路上 Red Panda将必须收集物品
您看 有了那么多细节
这个世界是多么丰富多彩栩栩如生
我们有大量的粒子系统和具有动画效果的植物
现在Red Panda可以在平面上到处游逛
例如 它可以爬山
但是在它的路上 Red Panda还必须躲开障碍
是否注意到当我们强行推进的时候叫声就会变大？
这是因为我们使用了SceneKit最新API的3D音频
这里很多特性都在起作用
我们有用于导航和碰撞检测的物理引擎
我们有很多粒子系统
而阴影修改器和各种动作让场景变得生灵活现
那么我们刚刚收集了第七朵花
而通过移动摄像机
我们可以看到物体藏在哪里
让我们快速走过拱门
这一关就完成了
谢谢你托马斯
那么我们现在将看一下
如何通过SceneKit场景编辑器
构建这个游戏
那么这是我们的游戏起点
一个快速而简易
和立刻改进您的场景的方式
是添加一个贵宾看台
贵宾看台...
只不过是代表环境的一组六张图片
在我们向场景添加了贵宾看台后
我们有了一个可以构建这个平面的环境
那么如果我们看一下在我们项目中的资源
我们可以看到我们的艺术家为我们
提供了很多构成要素
就是说我们有用于竹子
要采集的花
珍珠以及很多结构元素
所需的不同文件
那么现在您如何在您的场景中
使用这些外部构件呢？
你到场景中
并把一个外部构件拖拽并放置到场景中
您可以看到这个小的箭头图标
表明参照节点已被建立
有这些外部文件作为外部资源是很好很方便的
因为那样您就可以设计这个平面
而以后仍有机会编辑这些资源
您也可以将这些资源再次用于
您的游戏的其他平面
那么我把这个项目加入进来
如您所见我已为其他工业元素
加入其他参考节点
那么这就是您通常如何构建一个游戏平面
您要一个接一个地添加构件
进行迭代
您要为将要采集的花和珍珠
做同样的操作
最后是植物
那么这里您可以看到只是通过一个简单的操作
我们就能达到什么样的状态
大家记得由于有了很多细节
是丰富的动画效果的
我们有很多粒子系统
而且我们也有栩栩如生的植物
很多动画是通过“蒙皮” 
这种相当复杂的动画特技实现的
它需要一个特殊工具完成
但是我们都使用阴影修改器
实际上这里还有最后一个元素
需要做成动画
它就在小瀑布里面
那么为了实现它
我将为我们的瀑布打开场景
现在SceneKit的编辑器让您能够
直接向场景中添加修改器以便获得即时反馈
和解决实时编译问题
您可以在辅助编辑器中
添加并修改每个修改器
那么在这里我将选定瀑布
并选择添加一个几何形状修改器
我添加修改器
而你可以立刻看到它生效了
你可以把玩一下阴影修改器
并试图对瀑布的最后效果图进行微调
你可以试图弄清最后的修改器是什么
一旦你对您的场景满意
您就关闭辅助编辑器
并回到您的主平面
如您所见
我们的山现在具有动画效果
这是因为我们使用了参考节点
而且当您编辑资源时
它们会自动在场景中有所反映
这里我们想做的最后一件事情
是在场景中添加一个敌人
那么这就是我们的敌人的场景
如您所见
它是静态的
它没有任何行为
为了添加行为我们使用动作
现在场景编辑器让您能够直接在场景中
添加和编辑动作
那么这就是动作编辑器
我将选定我的敌人
选择一个行检测
添加它
将其设为沿 Y 轴旋转
并让它永远...重复
那么这就是我们为敌人赋予的简单行为
但是动作编辑器也让您构建一些复杂的情景
而关于那个话题的更多信息我邀您观看
“SpriteKit中的新特性”这一讲座环节
现在可以回到我们的游戏平面
向我们的敌人添加一个参考
那么我们的场景就建完了
那么刚才我们看到了编辑器如何让您
使用来自于外部的构成要素构建整个游戏平面
以及如何借助阴影修改器和动作
让场景变得栩栩如生
话到此处我要把舞台还给托马斯
他将谈一下游戏架构
是的我们非常乐于
将这个不错的演示作为示例代码提供给您
它在开发者站点上提供下载
你将看到它是非常简单和直接的
那里有大约一千个同时适用于iOS 和 OS X的代码项目
它包括诸如声音和控件等一切
您刚才看到的一切
Amaury刚才向您展示了
为了构建此演示在Xcode 7中所做的工作
我将快速地展示剩余的内容
包括在内部和外部的工作
我们做的第一件事
是为我们的游戏
定义一个方向和一个简单的游戏播放控制
我们是从游戏的主要角色开始的
然后我们定义了我们的平面的形状
包括可收集物品应在的位置
以及敌人应在的位置
而且我们定义了我们希望通过使用SceneKit
而实现的外观
然后下一步就是
在3D工具中仔细查看3D模型
描绘出不同的质地配置我们的角色
并使其具有动画效果
最后的润色
是通过添加某些粒子
植物以及烟雾完成的
我们最后通过在上面
添加一些二维叠加层而完成的游戏的制作
然后在代码方面的第一个挑战是
对碰撞的处理
比如 我们不希望我们的角色穿过墙壁
为了通过碰撞实现它
我们采用了“碰撞网”
“碰撞网”简化版本的圆形网格
它有一个类似的形状
因此碰撞的感觉与您在屏幕上所看到的一致
当您出于性能原因处理物理问题或碰撞时
应采用“碰撞网”而不是“渲染网”
这一点是很重要的
而对于地面
我们希望角色能够
在平台上各处行进
但仍然紧贴地面
因此我们需要知道 
在3D世界里任一点的标高
对此有几个解决方案
我们这里仍然采用了“碰撞网”
我们绘制了
阵列交叉垂直阵列以及网格
这给了我们一个交叉点
是我们应该放置角色的位置
然后当我们使用触屏或键盘移动角色时
我们只是在X平面或Z平面上移动它
然后我们在角色所在位置绘制了一个新的交叉
这为我们提供了一个新的交叉点
我们利用这个点调整我们的角色在Y平面上的位置
我们在每个帧上都重复操作这说明了让我们的角色
在游戏中动起来是多么的简单
然后是多个动画
游戏中有几个动画元素
角色不管在空闲或工作时都是动画的
草和竹子的动画
是为了模拟风的效果
作为一个不错的意外效果
你会发现竹子投射的影子
也自动具有动画效果
所有这些动画都是重要的
因为它们都有助于让您的游戏更加栩栩如生
在技术上
角色和竹子是通过蒙皮而实现的动画效果
因此艺术家们已经在3D工具中构建了骨架和动画
并已将其导出为DAE文件
因此在这里开发者完全没有什么好做的
草的动画是直接在Xcode 7中
通过阴影修改器实现的
与动画相关的是颗粒效果
游戏中已有了几种粒子效果
而且它们也是全部在Xcode7中完成的
<br/>这里没有代码
对于珍珠和鲜花燃烧的火球发出的一些火花
以及敌人吐出的一些火苗
都是通过颜色渐变的调节而完成的
由白色到黄色然后到红色
环境的颗粒效果
是四张由随机大小
且或多或少模糊的点
构成的图造成的
而且那些点都具有初始速度
以模拟风的效果
现在需要提一下我们的材质
以及我们如何在游戏中实现这种看起来很棒的材质效果
这里就是...
我们的木块在游戏中的样子
但是如果您只是取它的几何形状
并用单调的颜色渲染它
它看上去就像是这个样子
有点过于简单化了
因此我们做的第一件事
是设置发散性的质地
这给了我们物体的基本颜色
然后我们添加一个常规图
它使我们的表面进一步变得极其细化
同时不会增加大量的多边形
因此这是很容易做到的
然后我们添加一个光线图
使用此次版本中最新的
自照明属性
在对我们的物体的整体照明方面
光线图让细部进一步细化
比如您可以看到...
石头的角
您可以看到一些光的遮蔽
例如它在光线图中具有烘培效果
然后我们做的最后一件事是建立一个反射立方图
以便反映环境
尤其是天空
反射立方图
看起来就是这样
我们使用衰减器使环境效果逐渐减弱
使朝向目光方向的
表面上的反射减弱
现在关于光线图还有一点需要注意
它只烘培整体照明
而不烘培直射的主要光线和主要阴影
因为我们希望整体照明
保持充分的动态感
如果我们想 有需要时我们可以让太阳的位置也动起来
但是最重要的是
在游戏中角色可以行进
它的影子也是活跃和自动的
在这里您无事可做
那么那就是演示内容
我把舞台移交给塞巴斯蒂安
他将继续讨论向Metal的过渡谢谢大家
谢谢你 托马斯
我是 塞巴斯蒂安
我正在从事SceneKit研发
我将跟大家谈谈向Metal
以及我们今年增加的
很多新特性的过渡
那么SceneKit正朝Metal过渡
大家知道Metal是一个非常低水平的
低开销的图形 API
它为多个平台带来了更优的性能
以及更加现代的API
对您们SceneKit用户来说最重要的是它确实奏效
它也为SceneKit带来了一些新特性
比如对阴影着色的计算因此您可以仅使用...Metal
或是几何资源或是Metal质地
作为材质属性
它还让我们进行自动批处理
所以如果您的几何资源被多个物体使用
而且使用相同的材质
我们可以极大地降低[听不清] 的数量
我将通过演示向您表明这一点
您看到的是一个运行在OpenGL ES编辑器上的
简单的SceneKit 应用
它显示的是一个有小行星围绕其轨道运动的行星
仅是显示小行星就让
OpenGL占用了大量的CPU空间
如您所见
不增大CPU并降低帧速率的话
我们无法添加更多小行星
但如果我们转到Metal渲染器上运行的同样的应用
我们可以增添多得多的小行星
过一会儿您就会看到
当然CPU也开始被吃掉
但是我们可以大幅增加小行星的数量
我觉得这是很棒的
谢谢大家
那么您怎样在您的SceneKit应用上采用Metal呢？
首先它是默认在iOS 9上运行的
因此您将不得不使用最新的SDK对您的应用进行重新编译
然后它将在所有支持它的硬件上使用Metal的硬件上运行
它也是向后兼容的
因此如果您现有一个应用
您没有对其进行更改也没有进行重编译
它将默认在OpenGL上运行
而且如果您想的话
您可以选择使用OpenGL渲染器
比如如果您有专用于OpenGL的
自定义着色器的话
选择渲染器是非常简单的
如果您有一个配有内置渲染器的内置应用
您只须使用这个小小的按钮
更改默认选项
您也可以通过编程方式实现
因此 如果您在运行时
创建了自己的场景视图
您将为其做出正确的选择那就是使用Metal或OpenGL
由您任选
关于...Meta的新特性
我们也增加了对Metal着色器的支持
那么您如何使用配有最新API的SceneKit处理着色器呢？
在SceneKit上使用自定义着色器的第一种方法
是使用Metal阴影修改器
阴影修改器曾只用GLSL编写
现在我们同时支持这两种语言
如果您添加一个GLSL修改器
在OpenGL上它将以当前格式运行
而在Metal上它将被转换成Metal格式
它在大多数情况下可行
如果您使用Metal着色语言编写了自己的阴影修改器
在OpenGL渲染器上
它将变为不可行 而被忽略
但是在Metal上将以当前格式运行
在SceneKit中使用着色器的第二种方法
是使用SCNPrograms
这种情况下是没有自动转换的
因此您将手动进行
您将必须转换您的所有代码
这是被支持的
它支持GLSL和Metal两种着色语言
因此您可以在相同的应用中
同时支持两种语言
您可以离线编译它们
您只须提供着色器片段
以及定点着色器的函数名称
或者您可以运行时编译它
在本例中除了函数名称外
您只须给出源代码
现在我将向您展示您如何通过创建一个
将能在SceneKit中工作的
极其小巧的着色器来实现
您要做的第一步操作
是加入我们的SceneKit标头
以便您能够...
读取一些顶点语义
以及默认度量指标
在这里我们确定我们的自定义顶点结构
由于语义上的定义
这是SceneKit所与生俱来的正确数据
我们还可以阐明标准度量指标的使用
比如 模型视图投影
而且我们可以使用我们自己的数据
为自己将试图使用的算法定义我们自己的结构
然后 我们只须通过为我们已经定义的结构
给出参数
从而创建顶点函数
真的很简单
然后在程序中
我们只须定义同样的结构
我们必须为我们在Metal定义中使用的结构
使用同样的类型以及同样的布局
我们创建了程序
给出了顶点以及片段的函数名称
然后我们可以通过使用该结构
并将其围绕时间戳进行封装 
提供一些数据
非常简单
在SceneKit中使用着色器的
最后一种方式是使用技巧
技巧是去年推出的
它是对您的所有在角色场景上的应用
进行后期处理的
一种很不错的方式
在本例中
您只须给出在您的Pass定义中的
Metal着色器的正确函数名称
就是那么简单
它的工作原理将与OpenGL版本类似
关于Metal就讲那么多
让我们继续往下进行查看一些
今年我们为您添加的新特性
第一个...
是与Model I/O的集成
我们已经增加了对Model I/O的支持
包括将你们的模型和场景
导入...导出
如您所见
并不是所有的文件格式都支持
我们在SceneKit中支持的所有数据
因此请选择最适合您的应用的那个
我们也已经增加了场景过渡
只用了一行代码非常简单
所以您可以在场景之间建立过渡
而且有不错的动画
确实简单易用
我们也增加了调试选项
因此您可以一次性地把您的箱子 各种物理形状
所有东西进行视觉化处理以便调试
我们也增加了材质的混合模式
因此您可以为每个节点
为您应用中的每种材质
选择透明度的工作方式
您可以用它创建新的特效
此外 我们还增加了一个能够在SceneKit中
为所有元素工作的音频引擎
我们可以创建...
3D声音
将它们附加到各个节点
然后它们将随着节点在场景中移动
它也能与环境和音乐协同工作
因此您可以禁用位置音频
并让自己创建的声音循环
监听器被放在了摄像头节点
但是您可以把它移动到场景中的任何节点
真的是很简单的
它是基于AVAudioEngine的
因此您只须从AV音频节点进行备注
而且如果您想或您有现有音频引擎的话
您可以进行自己的音频处理工作
最后 我们也添加了一种创建声音动作的方式
因此 您可以把声音整合到您的动作序列中
真是简单易行的
这里讲一下如何使用声音API
首先您必须从文件名上
把一个声音实例化
然后您创建一个播放器并把它附加到场景中的任意节点
它将立刻开始播放
当声音结束时即会停止
如果您希望播放音效或音乐
您必须进行切换操作
如 数字音效 位置声音以及开始循环播放
最后
非常容易创建一个歌曲播放选项
它只有一行
您可以手动执行或将其添加到
一个现有的动作序列上
这个API 曾在示例代码中
被用于所有声音
而我们使用碰撞网...
刚才托马斯向您展示了
来探测行走中的角色脚下的地面
比如
当他在草上行走时
或者当他在岩石上行走时
真的很简单易行
那么 就讲那么多了
我将把舞台还给托马斯
来为这个讲座进行一下总结谢谢大家
这就是我们今年为SceneKit添加的特性的概述
一个很棒的场景编辑器将为您节省无数行的代码
并将为您的Game Insight工具做更多的工作
这通常是一个不错的主意
向Metal的平滑过渡
将提升您的游戏的表现
而且多数时间您自己什么都不用做
在这个讲座中我们也展示了
一些新的特性
但是为了获得活动列表请查看在线文稿
还有一个令人惊叹的演示app
我们将极其自豪地与您分享它的代码
在开发者站点上搜索 "Fox"
你们应该能找到它
如想获取更多信息
请查看我们的网上资源和在线文稿
一般事务的问询
请联系我们的技术传播者Allan Schaffer
还有一些相关讲座
如Model I/O
今年推出的很棒的新框架
并请查看
《SpriteKit中的新特性》讲座
他们有一个确实很棒的关于场景编辑器的演示
会更加深入详细
因此您一定会希望观看那个讲座
就讲这么多
谢谢敬请畅享讲座
谢谢大家