使用 ClockKit建立Complications
嗨大家好我是伊莉莎我旁邊這位是保羅
我們將告訴你們什麼是Complications以及您如何來製作他們
所謂的Complications是一些小信息件
就是在您的鐘面上顯示正確的時間
在您看到的這個鐘面上
如果我們把時間從方程式中移出
剩下來的一切就叫做Complications
所以這兒您看到的都是建立OS系統但是
在Watch OS 2 裏您可以開始爲鐘面創造屬於您的 Complications
我們將會告訴您該怎麼做
我將會舉例來創建一個Complication
在一場足球比賽中
來顯示即將到來的比賽
因此讓我們看看...
你們已經建立的想象這樣一個Complication
它看起來像會去選擇它
那麼聚焦於中間的鐘面
如果您是在用力觸摸屏幕
您可以定製鐘面
向右滑動可以讓您
開始打造出您獨特的Complications
轉到數字頂部
可以選出一個Complication
因此如果我們滾動到列表的結尾
我們會看到我們尚未建成的足球比賽Complication
我們可能選擇它
我們能看到現場數據
顯示在鐘面上
您將如何提供數據
去安置這些Complications
正如您面對面看到的
我們所有的時鐘都有一個一致的外觀和感覺
正是這點
使得和鐘錶保持互動是愉快的這正是我們想要做的
在保持那種一致性時
那些正在手錶上運行的擴展
將會以文本和圖片的形式
爲這些Complications提供數據
然後鐘面實際上會以某種方式移動
以配合其他頁面
因此如果我在
我的手錶上安裝了這種Complications
每次我舉起手腕
我都會立馬去看它
這是一個偉大的事情這是偉大的事情之一
關於建立Complications
同時它也呈現了一種挑戰
因爲隨着時間的流逝
在Complications展示的信息需要更新
因爲它是可見的
一旦您舉起手腕
隨着時間屏的打開
更新需求就已經發生了
如果您想一下
這個表可以有五個Complications
展示在這個單獨的鐘面上
我們不可能有時間把它們都開啓
拉新數據
可能會涉及網絡請求
或者讓所有的人
都在屏幕上帶着數據及時返回
來解決這個問題
我們正在進行的是提前以時間軸的形式
爲您的Complications收集數據
因此你們要給我們一個時間軸的數據
時間線的多少取決於
您申請的數據密度
和我們一天內看手錶的方式
每次我看它Complications就已經更新了
顯示的是在那個時刻有意義的信息
現在時間軸真的是一個非常強大的概念
保羅待會將會和我們談論這個話題
但是我想提及它帶給我們的另一種形勢
就是Time Travel的特點
Time Travel是一個我們在Watch OS2裏介紹的新特點
使您能夠正確地轉換錶冠
在鐘面您能夠看到您的Complications會是什麼樣子
它展示了一天當中的不同時間
因此您可以提前去看看下一場比賽什麼時候會開始
或者一個小時以前我參加了什麼會議諸如此類
因此爲了看到手錶是怎麼和這個Complication工作的
這裏沒有多餘的工作您不得不去
做到這一點
通過數據線的形式提供您的數據
我們可以免費使Time Travel成真
着手行動吧因此您可以在任何時候開始一個新的Xcode工程
或者把一個老工程轉換成您可以選擇的Watch OS 2
來加一個Complication
您可以檢查下那個盒子那將成爲Xcode的來源
以自動生成您需要的文本
和設置的東西超級容易
您不需要做其他的事情
如果您瀏覽到您的WatchkitApp推廣的一般信息
♠您提供我們待會將會討論到的數據來源課程
您也可以檢驗
那些您想支持的Complications家族
這些Complications家族到底是什麼？
在WatchOs上的Complications 看起來是不同的方式
在不同的鐘面上我們把它們
分爲了五種不同的家族
你們可以分別選擇是否支持每一個家族
因此
我想向你們演示這些家族的樣子
這是模塊畫面
在它上面有兩個Complications家族
小模塊化家庭給您一些方形的小模塊
小Complications大模塊化家族
就是在模塊中間的那個
可以展示清楚的效果和更多的數據
因此我們一直集中精力在這個例子上
很多類似模塊也支持Complications
這些Complications在實用家族
有一種適用各種類似小角落的Utilitarian Small模塊
還有一種UtilitarianLarge模板
能沿着底部展現整個區域
最後 在彩色模板有一個單獨的家族
我們稱它爲小環形
這是它用代碼的樣子
正如您所期待的那樣這是一個詳細的介紹
好吧
因此當用戶在某一方面啓動您的Complications時
他們會選擇將它作爲一個特定的位置
只要那個Complication出現那個位置就會被連接
而且會出現一個特別的家族
您應該被告知您正在爲這個家族提供數據
那是因爲您需要這麼做
去決定如何把那些數據展現出來
並且這裏有一些方法可以爲每一個家族
展現您的數據
另外我想要向您展示
我們的設計師已經創造和收集到的樣板
對於小模塊化的Complications家族
我們有這些樣板
在整個不同的模板裏
您可以有小文本、兩個不同排的文本、一個圖像和文本
您可以做一個大的文本或一個大的圖片
這些填充在底部附近的一個環裏
可以顯示錶格里一些事情的進展
這一個可以在0和1之間變化的浮點數字
您可以把文本或圖像放在裏面
最後有一個模板可以讓您做類似的事情
顯示一項體育成績
Modular large也有很多不同的方式
可以讓您佈局您的數據
有一個簡單的標準三行模板
可以使用一個可選圖像
您可以做一個列樣式模板
或兩個不同的列樣式模板
實際上 您可以做一個大的模板
這是一種適用於廚房定時或日期文本
以及許多其他您可以用它做到的事情
實用的小模板大多數都是平的
並且在邊角處有一個可選的圖像
但是您也可以用一個大一些的圖像
您也可以用UtilitarianSmall做這個風格
Utilitarian Large僅有一個模板
一個可選圖像和一些相近的文本
最後 CircularSmall的模板是相似的
對比ModularSmall的模板有一些尺寸方面的不同
所以 您在Watch OS 2進入模板
我要去看一下在代碼中的意思
所以讓我們縮小
我們的足球俱樂部的數字
Modular large模板
這有四塊
有一個標題圖像
您可以提供標題文本
然後兩行正文文本
您可能已經注意到了那有很多Complication模板
所有這些對應子類
對於CLKComplication模板這是所有父類
您可以選擇用哪一個
和如何填寫它的各種性能
所以這很簡單
因此這是CLKComplication模板之一
Modular Large標準模板有一點大
但是它能傳遞一個非常重要的
以名義命名的信息權
這個模板是爲
Modular LargeComplication家族創建的
當您被問到的時候這個真的很關鍵
提供Complication特定家族數據
您提供的模板符合這個家族
這是我們爲什麼已經把家族姓名
建立到了班級名裏
這裏是爲了消除這個困惑
看起來
像這樣出現在環形面顯然是不管用的
現在 您可能注意到了這裏還有一些有點奇怪的地方
我們有一個圖像和三個文本的特性
但是它們不是代碼裏的UI圖像和NS串
我們有圖像提供和文字提供業務
這裏正在發生什麼？
那麼讓我們進入下一個部分
您是如何提供文本和圖像的？
我想解釋下這些課程是爲了什麼
以及它們可以爲您做什麼
讓我們從圖像開始
這裏在彩色編輯屏幕裏是我們的Complications
因此用戶能夠定製他們想要看到的Complications
他們可以挑選Complications
在那個課程裏
他們也可以定製界面的樣子和感覺
包括改變顏色
當您給您的Complications提供圖像
這些圖像必須已參與同一個顏色主題
那是用戶已經選擇了的他們的界面
他們需要能夠正如您看到的那樣改變顏色
因此這裏我們的足球服可以轉變成
任何用戶正在選擇的顏色
因此一個圖像提供程序是一類屬性排序
它能夠成功達到這樣的效果
所以您可以提供一個背景圖片
您也可以把它做爲模板圖像
一張圖像只允許包含阿爾法信息
而沒有屬於它自身的顏色
它可能是像素也可以是任何您想要的顏色
但是我們將只關注阿爾法通道
它將會根據客戶選擇的顏色作出相應的轉變
但是您可以稍微比這個多做一些
您可以選擇
提供一個背景圖像和一個前景圖這些圖像將被放在彼此的頂部
背景圖將會根據界面的顏色而改變顏色
前景圖將被浮於背景圖上
您可以在您的圖片上獲得更多的細節
您也可以選擇把您的前景圖變黑
讓我們看一看這樣子的代碼
您給我們背景圖
您給我們一張可選擇的前景圖
您能夠選擇您背景圖的顏色
對於大部分將要決定的顏色
那些用戶已經選擇好了
因此背景圖代表了
您想要您的背景圖是什麼顏色如果您能夠選擇的話
另外還有一些背景將會被任命
但是隻要它們出現在
被用戶選擇了顏色的界面上您的選擇就是無效的
因此在這兒提供的顏色僅僅是一個選擇的參考
好吧 這就是圖像提供者
那麼現在文本提供者又是什麼呢？
這真是酷
能告訴您一些關於它們的信息我真的很激動
當我們開始構建Complications時
在Watch OS 1裏
我們挑戰了大部分
歸咎於Complications的微不足道的事實
在其它UI中
您經常爲您所有的平臺創建
它們當中的一些甚至小到只有44像素我們正試圖
找尋可以用到這個如此小的空間上的合適的信息
但是在沒有把您的文本縮小的情況下
它是很有挑戰性的
舉一個很好的例子關於文本提供者的主意
因爲空間非常有限
我們想借用一些我們已經做過的工作
來解決如何在小的空間裏設計出一個合適的文本的問題
因此我們引薦文本提供者做爲你們的一種思路
以此來向我們聲明您的目的
而不是總是給我們一個格式化字符串
然後我們會處理格式細節
爲您找出合適的字符串
拿日期格式來舉例說明
這裏有一個CLK日期格式提供商爲您做的文本
我想要向您展示什麼是對您有用的
假設您想要在您的Complications裏
在一行內設置時間是：星期三 9月23日
現在空間非常拮据
但又有如此多的內容在您大多數的文本里
您顯然不會喜歡看到類似這種
我們已經丟失了這一類的大批信息
這比截取更好
如果我們能夠轉而依靠持續增長的字符串
這一類仍然在增長的字符串
例如我們可以開始縮短一些字符串
您可以縮短更多的字符串
如果那樣做仍然不奏效我們甚至可以開始丟棄一些字符串
而不是截取一些
我們更樂意看到9月23日而不是星期三點點點
最後 爲了把日期顯示出來我們可能只有更少的空間
來應對我們突然放下的內容
這是CLK日期文本編輯器可以爲您做的事情
您有一個日期想要顯示
或者您有一個單位想要完美地展示
正如這個例子當中的星期幾、月和日
您創造了一個文本體編輯器從一些碎片中
那些文本編輯器
可以被粘貼到這些樣本當中
並且使這些樣本根據不同的內容看上去也不一樣
因此這裏我們要說的是
在Modular Large Complication裏顯示一個他們當中比較長的日期
這裏有相同的文本編輯器
製造了非常相似的代碼
顯示了在進一步約束空間下不同級別的內容
另外這兒還有相同的文本編輯器編輯出日期
在這些Circular SmallComplications裏
沒有任何地方都有的截面字符串
沒有不得不做的工作在您現在看到的代碼範圍之外
就是文本編輯器
同樣也有其他類型的文本編輯器
您很有可能打不開編輯時間要用到的文本編輯器
會允許您隨意編輯文本
但是它比NSString更好
因爲除了能編輯出您想看到的內容
您也能夠編輯出一個比較小的版本
在截取出理想的字符串之前我們通常會退一步選擇編輯較小的文本
這裏有一個時間編輯器
時間格式很好
您獲得了很好的小寫的代碼與系統的其他部件都相匹配
如果沒有足夠的適合的空間
您會丟棄AM/PM
正如您在日出/日落Complication裏看到的
正在底部使用的這類文檔編輯器
也有一種時間間隔文本編輯器
這類編輯器對時間格式的文本很好
您在日期Complication會用到它
它也有一些很不錯的格式特點
如果在第一天早上它看起來是這個樣子
第二天下午的話會是這個樣子
如果兩天都是下午那就很靈活
丟掉多餘的AM/PM符號
是爲了使效果看起來更好
在一個有限的版本里它同樣可能不好做
如果這種效果不合適
這種小版本的編輯器就是有用的我們鼓勵你們用這個
還有一點我想告訴大家
在我說出它之前讓我向您演示它解決的問題
這裏您看到我們數字化的月亮相位
Modular LargeComplication
在這個相位底部第三行
在月亮相位Complication那裏它告訴我們時間的總數
是截止到月落時 時和分的條款
因此今天月落在2:19
在三小時一分鐘之前
從11:18開始
這個字符串在11:19時隨着時間記號的改變
顯示了3小時11:20時的內容也顯示了2小時59分的內容
還有更多
現在 想像一下如果您正在創造一個時間軸
去放置這個Complication
您需要提供一個新的模板
對一整天的每一分鐘
就需要很多個模板
也有可能更糟糕
因爲月亮相位Complication記號
是隨着分鐘記錄的
如果時間軸的記號隨着秒數變化而記錄會怎麼樣呢？
想象下得需要多少模板啊
這很可能遠遠超過我們合理的貯藏
造成難以置信的浪費
因爲這些字符串
是可以從兩條信息裏推導出的
即您正在裁剪的日期和您正在用的日期
我們知道現在的日期
這就是我們正在做的
我們的手錶
所以我們想要給您一種可以製造這種字符串的方法
它不用在您的時間軸放置大量
多餘的信息
這就是相應的時間編輯器可以做的
這正是我們在嘗試它代碼時候的樣子
去製造第三條您在這裏看到的文本線
您將會從日落裏獲得時間
我們將會選擇我們想要展示的單元
實際上我將會在下一個屏幕裏顯示很多不同的
您可以利用的單元
我們將選擇一種風格另外 再一次
我將會向您展示可能的風格
現在您看到的是自然風格
您可以做一個這些元素的
相應的時間編輯器
然後您設置下文本編輯器
把您正文的文本編輯器作爲您的模板
鐘面在做其它工作的時候
它總是會展示相對的日期到日期
那是您在無需爲您做進一步工作的每一刻
給予我們的
這就是一些我們可以提供的風格
正如您看到的如果看着自然風格和偏置式風格
您可以得到一個細分
相對日期或者非常課程相對日期
這取決於您想要看到的日期
取決您想要展示多久前的日期
我們顯示星期幾、時間、月、年等等
所有的方法分秒就可以做到
好吧這就是文本編輯器和圖像編輯器
我要總結下它們是怎麼用的
您把您的內容給我們
您從很多個可能模版當中
選擇一個
與您被問道的Complication家族
相匹配
並提供數據給我們
然後您放置那些
圖像編輯器和文本編輯器
然後您以時間軸的形式
將那些完整的字符串傳遞給我們
爲了談到更多如何形成時間軸的方面
我想要邀請保羅
這就是保羅
好極了！
掌聲
大家好
像伊莉莎提到的爲了您的Complication
我們將會以時間軸的形式聚集我們的數據
時間軸有益於兩件事
嶄新的Time Travel特色
和我們將向用戶現時呈現的內容
毫無延遲的腕錶功能
讓我們看看關於如何考慮時間軸和Complications
我們現在開始通過在這創造一個天氣Complication
在左下角 57度
因爲現在手錶顯示10:00AM
我們的氣象員說
在這個地方外面溫度是57度
事實上 我們有今天一直到下午七點的
這個地方的天氣預報
可以利用
對於時間軸我們並沒有描述一個範圍我們結合實際數據
我們想要展現時間上的一個點
因此讓我們滑動到那邊
隨着一天時鐘的前進
我們將會展示您提供到鐘面時間軸上的
最近的數據
因此當過了11AM我們將會把天氣預報更新到55度
隨着時間慢慢接近中午11:59
接近59秒天氣仍然是55度
一旦時間到了12點我們就會更新模板
這個和Time Travel工作的特色是相似的
由於可以爲用戶導航一整天的內容我們將會展示在您的時間軸上的
最近的節點的數據
因此當我們過了1:00PM我們將會把更新溫度到54度
其它Complication是一些容易理解的例子
因爲您的數據完美地匹配了
在時間軸上的流暢時間
讓我們看一些比較複雜的內容
通過在這建立日期Complication
如果您是幸運的您的日期
會有很多間隔
今天我去吃了午餐
接着我將去理髮
然後接下來我看到時間合適我就會去
跟我的朋友看一場電影
我們可以心無旁騖地做這些事情
我們接通我們想要展現的這些事件模板
來讓它們開始
並讓它們清楚事件結束的時間
讓我們看看在實踐中這是如何進行的
今天中午的時候我們會看到我們吃了午餐
而一旦午餐結束在1:00PM
我們就看不到腕錶上顯示吃午餐的內容了
這真是個糟糕的用戶體驗
更糟糕的是儘管越來越接近4:00PM
我卻不知道
我需要開車去理髮
您從來不想刪除那個爲您做頭髮的人
現在太晚了 我要去燙頭髮
手錶也不好好工作了
讓我們這樣設置
第一個錯誤是
假設我們記錄了那些
在時間軸上不用的時間框
所以讓我們丟掉那些時間框
顯示事件時不再有用
在一個日期Complication裏
我們本應該把模板放置在前一個事件結束的時候
這樣您就有充足的時間去設置您的下一個事件
事實上發生在這兒的第一件事
並沒有前一事件因此它可能是有用的
爲了獲得充分的提醒
您在午夜標記出它
當您在早上醒來的時候
我們應該讓我們的用戶知道在接下來這一天
他們沒有什麼事情可擔心
用我們的提示不會再有問題
這是如何工作的？
中午的時候我們像以前一樣我們知道要吃午餐
而一旦午餐結束我們有充足的提示時間
來提示我們需要去理髮
我們將會和朋友見面
因爲我們沒有錯過任何一件事
當我們看完一場電影的時候
我們可以回家並且知道我們沒有錯過任何事情
因此您怎麼讓您的數據
成爲您的代碼
您將用到Complication時間軸入門
伊莉莎早先時候描述了生成模板
要用到本文編輯器和圖片編輯器
以及我們需要用一個NSState連接的內容
我們將會把目標填充到
Conciliation時間軸的入口
當您遞交信息到鐘面的時候我們會校對日期
並且在時間軸上做下筆記從而知道
當時間到了那個點的時候要去展示相應的模板
您可以看到目標做成代碼的樣子
用時間屬性和
Complication模板屬性
那麼您實際上是怎麼和我們交流這些數據的呢？
在您的工程裏您將會有一個目標
即實現CLKComplication數據源協議
這個目標
被註解在您的XcodeWatchKit擴展目標設定上
在您設置您的工程的時候正如伊莉莎向您展示的
您將會在您的目標上獲得成串的指令
他們通常是每個Complication
另外我們會給您一個CLKComplication目標
那個目標包含一個您想要切換到的家族屬性
這點上您得決定這個
是Modular large嗎？我應該用哪一個模板？
是Modular Small嗎？
哪一個文本編輯器需要和我選擇的這個模板相匹配？
另外除了用Complication
這個您感興趣的提供內容外
我們也會給您一個處理器
您將會用這個處理器給我們提供要求的數據
讓我們知道您在做運行
這是非常重要的
因爲您會想有機會更新您的背景內容
您想要知道什麼時候做運行
因此讓我們開始建設我們的時間軸
您可以看到鐘面在您的左面
您的延展在右邊
我們想要通過按鈕建立時間軸
在您的延展內容裏
您可以看到您的Complication控制對象
現在 這是Xcode爲您創造的默認對象
去執行Complication數據源協議
這是我們將要溝通的對象
因此當我們開始的時候我們會詢問您
現在應該展示哪一個時間軸入口
您需要打包好一個時間軸然後通過電纜和處理器
發送給我們
然後我們就會把它添加到正確的時間軸
在所有我們詢問的問題列表裏有個非常重要的提示
我們提出下一個問題是基於
上一個問題您已經提供給我們的信息
因此我們將逐漸把時間軸建立起來
我們需要非常精確的數據
您不要盲目地標註當前的NS日期爲這一記錄
但如果您需要10:00AM而預先數據是10:30AM
您就應該標註這個Complication
時間軸記錄爲10:00AM
因此這個功能
我們將會獲取目前的時間軸記錄爲Complication
再次強調 我們將給您一個CLKComplication
這裏有一個家庭屬性您應該切換到
決定哪個模板、哪個文本和圖像編輯器是您想要的
並提供一個需要時間軸記錄的處理器
當您完成了複查您應該做好標記
現在我們有您的目前記錄
我們需要更新您的時間軸
爲未來和過去
我們開始看看未來吧過了特定的一天後
我們會一直問您的時間軸裏有什麼
這一天具體是哪天
取決於您之前交給我們的數碼
而這些數碼還在我們的高速緩存中
所以我們會把這個日期告訴你們然後你們
要整理好過了這個日期後的
一堆CLKComplication時間軸的數據
有一個好方法是把每一天的數據整理好
當您把這些數據交給我們時我們會把它們
加入您的時間軸而如果我們覺得
需要存儲更多的數據我們會再通知您
如果您有更多的數據就能輕鬆愉快地把它們交給我們
如果我們一直跟您要數據
可是您已經沒有數據可提供了
您可以交一個空的NSArray或無
我們就知道了
隨着時間的流逝您的數據會逐漸過時
所以爲了補充我們的數據我們在未來可能得再向您要數據
而這個未來就在
我們需要爲Complication獲得時間軸條目的時候
我們會把令我們感到好奇的Complication交給您
所以您可以看看它的家族性能
當然 之後我們會給您一個日期但這個日期當天並不被包括在內
您就要整理這個日期之後的時間軸行列
爲了確保我們不會有過多的數據
我們會給您一個指定的數量
所以不要放超出數量的數據進去
如果您放了 我們會消除它們並且我們不能保證不會更改數據
而您也不會想了解發生了什麼事
當然負責這些數據的人也不會想了解
我們有個日期功能它能把舊的數據分出來
而且根據您負責的Complication種類
Time Travel可能會不同
比如說預計未來的Complication
不能翻看過去的資料
再比如由於我們還沒把股票Complication
給完美地完成
而只能查閱已有資料裏的股票
因此我們會要求您設定好您支持的方向
比如天氣預報Complication
我們會說我們只支持未來
我們的時間軸只看未來
如果那名用戶查看過去的資料
我們就會把您的資料暗化
好讓大家知道那裏沒東西可看
相對的股票Complication
可以說您只支持過去
我們就會把您未來的資料暗化
您可能不想使用Time Travel
但又還是想把資料放進鐘面上
在這種情況下您可以不提供資料
我們還是會把您的資料呈現出來
但是一旦進入Time Travel我們就會把它們暗化
您或許
知道一些想在未來呈現的信息
我們可能向您要求對未來的諮詢
即便您不改Time Travel
我們也絕對不會向您要求對過去的諮詢因爲時間不會倒流
而如果您想利用Time Travel
到過去和未來的話
要索取一個功能
就是爲Complication獲取支持Time Travel的指令
把這個Complication和可以克服這些指令的處理器
告訴我們
您支持的是過去還是未來
不是唯一需要Time TravelComplication處理的事
比如說我們的天氣預報Complication
只能預報到7點的天氣
但Time Travel可以做到更好
那我們來看看會發生什麼事吧
我們Time Travel到4點時還有數據
所有的Complications都在更新
但一到7:09就是剛過7點
我們就不希望用戶認爲我們的溫度數據還是有效的
所以我們要暗化它們並拿出您的Complication
而我們知道暗化的方法就是
在您時間軸的尾端或前面
向您發問
同時這又取決於您支持的方向
如果您支持未來我們會在建立時問您
是否支持未來
那您就得返還我們NS日期
相對的如果您是支持過去的Time Travel
您可以提供我們另一個NS日期
而我們也會對應地去調整
而我們用來瞭解該用Time Travel走多遠的功能
是“爲Complication獲取時間軸和日期”
我們會把Complication和
能接受您時間軸尾端的NS日期的處理器交給您
相對的
我們有時間軸開始日期來確定您的時間軸該在哪裏開始
所以如果用戶在定製Complication和鐘面
而他們想選您的Complication
他們會選擇比如Modular Large
並使用錶冠來
設定舊金山的足球Complication
在這裏您會看見幾樣
有關定製的東西
您的Complication條目裏
有您應用程序的名字
這是系統提供的
既然我們來到了ModularLarge插槽我們就能
提供一個Modular Large模板
這個模板會形容我們的用戶希望看到什麼
並給予他們正確的信息
好讓他們選擇我們的Complication
他們選好Complication後
就會回到切換器和實時鐘面
我們會開始向您要求數據和填充時間軸
我們會把這些定製模板
稱爲佔位符模板
我們會在安裝和高速緩存時向您發問
以確保我們不需要在定製時
多次啓動
因此安裝時
我們會索取所有您負責的Complication佔位符模板
然後您再把
時鐘Complication模板交給我們
在我們使用這個的時候
底部沒有時間軸
而我們在這裏也不用時間軸條目
這只是個Complication模板
因爲它和日期沒有關聯
所以這個功能是由Complication開啓的
爲Complication獲取Placeholer功能
現在您已習慣這個方程式和處理器
既然您已經非常熟悉
如何建造自己的時間軸那我就把伊莉莎 布洛克帶上臺
告訴您如何用數碼建造它
好的
我這裏有個項目
我只做了一點
我們要做一個Complication
就是我們全程一直放照片給您看的那個Complication
我們來看看Xcode項目究竟怎麼用
我創造了一個新的項目並把幾個資源帶進來
包括一個我曾設計的模擬
好讓我們設計這個時間軸
我把它做得
可以在Complication裏使用
所以如果我把它弄過來... 啊！
我的手錶的常規設施
在那裏
如果我放大您可以看到
上半部分有我的數據來源
現在在Xcode裏看起來有點醜
但如果您點擊它您會發現
它正指向我們的Complication
而我除了Modular Large外
暫時不用其他的家族
好讓我們的演示看起來更簡單
我們只專注於創作
Modular LargeComplication
我們建議您
學會支持越多的家族越好
因爲您的用戶會想要有
更多選擇那麼您支持的家族越多
他們就越有可能在手錶裏
使用您的作品
所以
當您創作這個Xcode
Xcode
而您想使用Complications
Xcode會做一個控制Complication的東西
它們有存根能讓您用所有的方法
來執行控制
所以非常有用
我們可以看到它
然後利用它來提供我們需要的信息
所以我會從底部這裏開始
我要多加點空行
纔可以看見這個
爲Complication獲取Placeholder模板
我要從這裏開始這樣我們就可以
看到保羅在熒幕上展現的Complication的模樣
我要拿掉Xcode提供的樣板
然後
我們要做一個Complication模板
即Modular LargeStandard Body模板
我要給它一個圖樣一個足球的圖樣
我的圖樣是UI圖樣
我要用這個圖樣做一個圖像提供
但我暫時不會管背景顏色
讓我們來看看那個圖像怎樣
我把它放在XCode裏
而我可以在Finder裏開啓它
這是預習
讓我把它放大
在這裏您可以發現這是個模板圖像
它是單色的
它有個阿爾法一個阿爾法通道
您就是要這個格式的圖像
纔可以好好地上色
好的這就是我們的圖像
我們得加點文字
我的標題是“比賽時間”
而我第一個文字提供會寫
“2015女子比賽”
我不會再寫第二個文字提供
因爲這個模板讓我有這個選擇權
而我的目的是
把第一行字和第二行連起來
只要不用第二個文字提供這就會自動形成
我們只需要這一點數碼就可以創建並運用這個
然後我們應該就可以在編輯那裏拿到我們的
Complication了
所以我會轉到模擬器那裏
然後讓我再次確保安裝已經完成
好 這就是我們的應用程序這很好
我要按下模擬器
定製過去... 啊！
Complication那裏
其實您知道嗎？我想我還是先...
就如保羅剛纔說的那樣佔位符模板只用一次
也就是當您的應用程序第一次被安裝後
如果您要這麼做
您就要先卸載纔可以...啊 這是...
確保它被丟棄... 啊！
好了！所以要確保它已經卸載了
消失了
然後我們會讓它再出現
這樣我們的數碼
纔會再向您索取佔位符模板我們再試一次
讓它不在這裏... 好的
我們會再加載回去
然後再試一次
耶！好了
好的
所以我們有了我們的模板
現在我們能選Complication了
那我就
直接出來
當然您可以看到這個Complication
並沒有出現也沒有呈現更新的訊息
因爲我們
還沒寫好這方面的程序
所以
它會和佔位符模板粘在一起
因爲那就是它所有的信息
我們回到數碼那裏
然後加入能實行協議的部分
好 讓我們來看看
我正在用的模型
我要切換到頂部這裏
我有個模型這個模型是用Objective-C寫的
您可以把Objective-C和Swift一起用
這樣您就可以拿其他項目的數碼
放到Watch OS2應用程序裏
但要在您的Swift橋接報頭
加個頂
就可以用了這很酷吧
所以這裏是我的足球比賽模擬
而這些傢伙有個日期信息也就是
比賽開始的日期
他們有個團隊介紹所以能告訴您
哪個隊員和哪個團隊在比賽
它也能告訴我
第一場比賽和最後一場比賽什麼時候開始
而在每一個比賽中都可以告訴我上一場和下一場比賽是什麼
所以有了這個
我們就可以
開始寫填充這個Complication的數碼了
我會寫兩個輔助方法
來解決兩個需要我們回答的問題
簡單地說就是我們在這個Complication裏
必須回答的兩個設計問題
第一題是我們的模板看起來到底是什麼樣的？
對付這個我會寫個方法
不僅能拿足球比賽
還可以
做出個CLKComplication模板的東西
所以它還蠻直接的
我們要做一個... 沒事...
做個ModularLarge標準的模板
就像我們剛纔做佔位符一樣
還有把剛纔那個足球圖像變成圖像提供的
然後這個
我們得有三行字
所以頂部是比賽時間
我正用CLK 時間文字提供來弄這個
第一行字
則會告訴我們哪個團隊在比賽
而我正在做一個簡單的文字提供
和我的團隊介紹
最後
第三行是組織描述
我們現在有個模板
我們也得決定
我們要怎樣在我們的時間軸上安排這些模板
保羅剛纔說的幼稚方法就是
把開始的日期和時間軸的日期
配在一起
但有個缺點
就是您將無法在您的Complication上
看到哪一場球賽即將開始
您只能看到過去有哪些比賽在什麼時候開始
所以我們要和保羅一樣對付日曆
把這些條目移到更遠的未來
我們要確保每一個條目的開始是
在上一場比賽結束時
因此我們要決定一場球賽要花多少時間
我覺得它大概有90分鐘
所以我要用一個
我們一會兒可以更改的數據這樣就算我們弄錯了也可以輕易修改
我們決定了比賽時間長達90分鐘
然後我們可以用時間軸條目
匹配日期這個方法
它會推算出每一場比賽究竟
要在時間軸的哪個地方出現
那我們現在要知道的是
某個比賽之前的比賽是什麼？
如果之前還有一個比賽
那我們就會用那場比賽的尾端來當這場比賽的時間軸日期
所以如果有這個比賽
我們會把這個比賽的日期
加上我們設定的時間
如果我們不那麼做那就表示這是時間軸上第一個比賽
而我已經決定
要把第一場比賽
在開場前六小時就顯示出來
但很明顯的您可以做其他的事
來匹配您的使用
以上就是
那兩種方法
現在我們只需要閱讀和實踐
剛纔保羅說的每一個協議方法
我們從頭開始吧
我們這裏有時間軸構造
而第一個方法就是
爲Complication獲取支持Time Travel的指令
默認的XCode模板
是能讓您的時間軸前進和後退的
我們現在要的就是這個
所以我們不會碰它
我們下一個步驟
就是想好時間軸要在什麼時候開始
由於我們已經寫好了這些輔助方法所以能輕而易舉地解決問題
我會用‘無’來拿掉處理器
然後我們要想好開始的日期
也就是第一場足球比賽的條目日期
還有別忘了要把處理器拿出來
我們下一步
是要想結束的日期
而這個日期應該是
最後一場比賽過後
這樣我們才能拿到最後一場比賽的信息
我們要把這個日期加上比賽時間
這就是我們結束的日期
我們會用處理器來完成這個步驟
下一個方法是我們一整場演說都沒提過的
但卻非常重要的方法
尤其如果您的諮詢有任何一點敏感性
如果用戶的手錶沒被開啓
您不會希望敏感的信息呈現在屏幕上
因爲那就表示他們已經把手錶摘下了
而別人很可能會找到它
如果您的Complication上有敏感信息
您可以使用這個方式
來確保手錶被鎖好時不會呈現信息
但足球比賽的時間軸並不是敏感信息
所以我放任它爲之前的設定
讓它即使在鎖住的情況下也呈現信息
接下來
我們要填充
時間軸
這是非常重要的部分
我們得把現時的條目放進去
我們得告訴自己... 告訴手錶
如何把時間軸往後移
也得告訴它如何往前移
我從往前移開始說
我們來到底下這裏
我們想要做的是建造一個
從我們收到條目的第一天一直往前走
走到未來的條目數組
我的戰略是做個數組
做好後再用處理器
我們要查看每一個比賽
然後找到一個在我們開始寫數碼後纔開始的比賽
由那個比賽開始創建模板
然後把它們放到這個數組裏
我會從
第一場比賽開始
而我也已經把它變成選項了
這並不是因爲第一場比賽的結果可能是‘無’
而是因爲我們要把它們
換成下一場比賽
直到所有比賽結束然後數據就會變成零
那我們就知道什麼時候要停了
接下來 我們要... 啊！
雖然這裏有場比賽
但我們得拿到顯示比賽的日期
這個就是這場比賽的顯示日期
現在我們要把這個日期和我們拿到的日期
也就是我們應該填充時間軸條目的日期
來做比較
如果它們的時間是往後退
那表示我們的日期對了
所以我們要開始把這些時間軸條目放回去
這裏我們就要填充一個時間軸條目
這很直接
我們做個模板給這場比賽
那是我們的輔助方法
我們在開始的日期製造條目這條目是我們之前算出來的
然後製造那個模板
我們追加到我們的數組
然後要小心不要做太多個
我們已經超過極限了
我們要在極限之內
既然我們現在加了東西到數組裏
就要檢查數組看看它是否超過極限如果超過了 我們就停止
最後
爲了啓動這個循環
我們必須拿下一個又一個
我們剛剛處理的比賽
把它們填充在
時間軸裏我們設定的日期過後的其他條目
我們也可以做另一件非常類似的事
來填充之前的數據
就是複製我們剛剛寫好的數碼
然後往上移到在日期前
爲Complication獲取時間軸條目
這個方法
把它複製在這裏然後更改三樣東西
我們要做一模一樣的東西
但我們會從最後一個條目
開始往前移
或者說從最後一場比賽開始移到第一場比賽
我們從最後一個比賽開始
然後底下這裏循環發生的地方
我們會拿前面的
最後 我們只在
它們還沒超過我們的日期前用它們
所以必須讓順序倒過來
這就是我們的方法
我們最後要寫的是獲取現時時間軸條目的方法
我們可以很聰明地
利用我們之前寫的方法
因爲索取現時的條目基本上就是
要拿某個日期（現在）前的條目
就是我們現在要呈現的條目
所以我要採用在日期前爲Complication
獲取時間軸條目方法
就是我們剛寫好的那個
我要把日期設爲當下
我要把極限設爲一
因爲我們這裏只需要一個
然後當我啓動處理器後
我會拿數組裏的第一個條目並把它放回
獲取現時時間軸條目方法的處理器
所以我們可以放心啓動這個
而我會啓動它
然後迅速換到還在啓動的模擬器那裏
它還在呈現
我們之前填充的佔位符模板
所以只要我啓動這個它就會廢止模擬器裏的時間軸
然後重新詢問
每一個方法我們現在都已經執行過了
所以我們可以拿到數據了好了 來吧
啓動然後轉移
現在我們應該
看到
我們的東西被填充
然後這裏我們有實質的數據
這告訴我們...
這告訴我們比賽在11點開始
這是正確的行爲 您記得嗎？
我們就是要看
11點到12:30的比賽
90分鐘後
如果我們把Time Travel往前
直到12:30
我們應該可以看到下一個比賽的更改
所以Time Travel到3點都還能發揮作用
我們應該可以開始看見再下一個比賽
啊 我超時了
我們的Time Travel有效
而我們主要要做的
是寫好三個最重要的方法
這樣就能有個實用的Complication
現在我會交給保羅來告訴我們
如何安排Complication
來實時更新世上的信息
謝謝伊莉莎
既然我們的Complication都弄好了
我們要確保的就是
我們顯示的東西是正確的
所以Watch OS2裏有很多方式
可以讓您把世上每一個角落的信息
都收集到您的手錶裏
您可以使用新的WatchConnectivity APIs
來和其他iOS應用程序溝通並索取更多資料到您的手錶裏
或者直接使用NSURLSession和網站溝通
並把信息帶進手錶裏
假設我們的Complication時間軸已經設立好了
而且我們和網站溝通了
並拿到了新的信息
如果那些信息已經廢止了我們原有的信息
我們就要告訴鐘面刷新時間軸
我們可以進入時鐘Complications服務器
它是我們和鐘面溝通的接口
我們可以
要求鐘面刷新我們的數據
然後丟掉之前所有的信息
然後以尋找現時時間軸的方法
重新啓動我們的溝通渠道
您可能已經發現
這是個毀滅性有點大的動作
如果您有個股票Complication
而您之前的數據還有用的話
鐘面現在可不會向您二次確認了
那其實是您的責任
您必須告訴我們是要廢止
還是延長您的信息
所以除了丟掉信息
您還可以要求延長信息
這樣我們就不會要求您刷新所有東西
反而會在尾段附加最新的信息
那這些在數碼裏會是什麼樣的呢？
您可以進入Complication
我是說時鐘Complication服務器共享實例
您可以在這裏詢問所有	活動的Complication
有一個活動Complication現在就能在
您的鐘面上被看到
而任何一個Complication都會給予您
向服務器要求
延長或刷新時間軸的權利
所以很棒我們知道我們有責任告訴手錶
我們需要更新信息但我們什麼時候纔有機會那麼做？
其實只要您的程序在進行着
您就可以通過時鐘Complication服務
和手錶溝通
這會在幾種時候發生比如當您手錶裏有最重要的應用程序時
但您還是有機會通過呼喚後臺啓動
甚至通過新表的
iOS伴侶應用程序的Connectivity APIs
來喚醒程序好讓電話接收您傳送的信息
但由於它們都是在後臺啓動程序的所以不能經常使用
如果您在後臺加很多工您就會把錢花光
而在您把錢存回來前
您都無法更新您的Complication直到晚上
若想更瞭解Watch Connectivity APIs
請到介紹WatchConnectivity會話課
我們還在這手錶里加了一個很酷的功能來支持Complication數據的使用
我們再來經由Complication數據來源協議來談談
如何利用後臺功能
來更新Complication數據
您只需要讓處理器給我們一個日期
我們就會把它運用在所有的Complication上
而不是其中一個Complication
拿到這個日期時我們會把它
當成提示所以如果有金錢資助
或系統的狀況良好
我們就會在後臺啓動這時
您的數據會從WatchConnectivity和NSURL進入手錶
而確保信息已被更新和要求讓手錶更新信息
是您的責任
我們的Complication課程已接近尾聲了
我們希望您已經學會如何建造時間軸
及如何將模板和其他相關的內容提供給我們
還有如何利用Watch OS
來製造並輸入信息到文字提供裏
學會如何輕鬆地刷新數據
如果您是不常用後臺更新的良好市民
您會有更多機會使用手錶
若想得到更多資料請查看您的文件和示例代碼
我們有良好的技術支持和老師
也有很多很棒的課讓您更瞭解WatchKit
謝謝！