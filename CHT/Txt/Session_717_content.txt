網絡擴展和VPN新功能
謝謝
大家早上好
歡迎大家學習第717課
我叫傑米·伍德今天我和同事湯米·保利一起
我們是Apple核心操作系統網絡部門的網絡工程師
我們很高興向你們介紹
網絡擴展和VPN的新功能
你們可能會問什麼是網絡擴展框架？
它能爲我提供什麼功能
供我的App使用？
網絡擴展框架提供大量的API
可以定義和擴展Apple平臺
的核心網絡功能
讓我們來看一些具體的例子
來瞭解如何使用網絡擴展API創建App
如果貴公司在公共區域部署Wifi熱點
就像酒店、機場和咖啡館一樣
你可以使用任何熱點幫助器 API來創建APP
以連接到Wi-Fi熱點
如果貴公司創建一個專用vpn服務
讓你的用戶安全地瀏覽互聯網內容
可使用NEVPN管理器API創建APP
以連接到你的個人VPN服務
如果你的公司創建遠程訪問VPN服務器
可以使用任何隧道系列API
創建APP以連接到VPN服務器
最後 如果你的學校想要創建網絡內容過濾器供學校使用
以保護學生安全地上網
你可以使用過濾器提供者系列API
創建APP過濾網絡內容
今天的課程我將會講解網絡擴展API
讓我們來深入講解熱點幫助器API
熱點幫助器API用於創建APP以連接到Wi-Fi熱點
你們可能已經知道
一些API可用於創建APP
來連接到Wi-Fi熱點
它們包括CNSetSupportedSSID
CNMarkPortalOnline API
但是這些API具有侷限性
其中一個問題是可以傳遞給CNSetSupportedSSID
的熱點列表數量受到限制
如果你有一個WiFi熱點全局網絡
並且想將你的APP連接到網絡 你很快就會
達到數量限值
另一個缺點是
爲了調用CNMarkPortalOnline
用戶必須手動運行應用程序
更糟糕的是並不會有提示信息來提示用戶運行APP
這不利於用戶體驗
用戶並不知道他們需要進入APP
才能連接到WiFi熱點
因此我們引入熱點幫助器API
來解決這些限制問題
實現方法是首先將你的APP
作爲一個熱點幫助器註冊到系統
然後當設備進入WiFi網絡範圍之內
掃描WiFi網絡或者用戶選擇他
進行連接時 系統將調用你的APP
在後臺運行APP調用你的APP
讓你的APP有機會聲明爲具有一定機密等級的Wi-Fi熱點
機密等級包括高、中或低
如果聲明爲高機密等級的熱點
系統將會提醒你
進行WiFi熱點身份驗證
它會定期要求你
保持身份驗證會話
熱點幫助器API還允許你
在設置APP時標註在Wi-Fi管理器中
顯示的WiFi網絡你可以使用APP名稱
或公司名稱標註這些WiFi網絡
這就是熱點幫助器API的功能
你可以使用這個API來創建APP
無縫連接到Wi-Fi熱點
接着來看NEVPN管理器API
你可以使用這個API創建APP
連接到個人VPN服務用戶可以使用此服務
安全瀏覽互聯網內容
NEVPN管理器API是並不是iOS 9的新功能
iOS 8已經有這個API
我們對這個API進行增強讓這個API可用於
OS X和OS X El Capitan
方法是先使用NEVPN管理器API
在平臺上配置和控制
內置IPSEC客戶端
你可以創建一個個人VPN配置
稍後我會講解個人VPN配置是什麼
內置IPSEC客戶端支持IKE v1
和IKE v2密鑰交換協議
你可以使用其中一項協議
你可以配置VPN以便在特定網絡條件下自動連接
作爲iOS 9和OS X El Capitan中的新功能
你可以配置http代理
通過VPN隧道傳輸http流量
多個個人VPN配置可以共存
並且與企業VPN協作
假設用戶使用你的APP
連接你的個人VPN服務
他們可以安全地互聯網內容
並且可以訪問公司內部網絡的內容
當他們連接企業VPN時
所有供內部人員
使用的信息
將使用企業VPN傳輸
其他任何不經過
企業VPN傳輸的內容
將繼續通過個人VPN傳輸
個人VPN保持連接狀態
繼續通過隧道傳輸流量
是NEVPN管理器API提供的功能
我們還對NEVPN管理器進行了其他方面的增強
即增強了IKE v2協議支持
IKE v2是一個很不錯的隧道協議
在這版本中我們讓它變得更好
現在我們還支持MOBIKE
我們可以將IKE v2隧道流量
從一個網絡接口0轉到另一個網絡接口
例如如果你的隧道
通過WiFi接口連接但是當用戶走出
WiFi網絡範圍時
設備可切換到蜂窩網絡接口
IKE v2隧道將無縫切換數據傳輸
非常不錯
現在我們全面支持IPv6
無論是在IKE v2隧道之內或之外
現在我們還支持IKE報文分割
從而使IKE v2隧道能夠在各種網絡環境中更可靠地工作
另外還支持IKE重定向
使你能夠平衡IKE v2服務器的負載
在進行這些增強之後
此協議變得更好用了
IKE v2的性能更優化
能夠在各種網絡環境中更可靠地運行
現在讓我們來看一些代碼
該如何使用NEVPN管理器API？
在這裏我展示一些代碼
代碼的功能是這個個人VPN配置
每個使用NEVPN管理器API的APP
訪問一個個人VPN配置
這個配置使用一個NEVPN管理器對象表示
首先我獲得共享管理器對象的引用
而且系統上的所有VPN配置
存儲在網絡擴展首選項之中
當我在代碼中處理配置之前
我需要調用完成處理操作從首選項中載入這個配置 
在完成處理操作中我首先要做的是進行檢查
查看我的配置是否存在
我查看管理器對象上的協議資產
如果它顯示爲nil就說明還沒有配置
我需要設置一個配置
在這裏我將設置一個IKE v2配置
然後填入所有的IKE v2專有配置參數
完成後我將在管理器對象上
設置協議資產並且啓用VPN配置
在系統上 
一次只能啓用一個VPN配置
完成之後我將保存首選項
將配置保存到
網絡擴展首選項之中
並應用系統配置
以使用這些配置
在這裏你可以使用API手動啓動
和停止VPN隧道檢索VPN隧道狀態
以確定是否連接
或斷開連接等
但是爲了良好的用戶體驗我們還需要
配置按需連接
利用按需連接功能你可以設置規則
說明何時應該自動連接VPN
因此在本例中我需要設置一個規則
規定當設備位於WiFi網絡之內時
應該連接我的VPN
因此首先要做的事情是
我需要創建一個按需連接規則對象
這個規則說明
當符合這個規則時將會連接VPN
接下來 我需要爲我的規則設置接口類型匹配條件
當它提示設備位於特定類型的網絡接口上時
即符合此條規則
我將這個網絡接口類型設置爲Wi-Fi
當設備位於WiFi網絡上時即符合此條規則
我將設置按需連接規則組
以包含這條新規則
並將結果保存到首選項之中
現在當設備位於WiFi網絡上時將會自動連接我的VPN
這就是NEVPN管理器API的功能
你可以使用這個API創建APP
來連接到你的個人VPN服務
讓我們來繼續瞭解
隧道提供者系列API
你可以使用這些API創建APP
以連接到企業VPN服務器
爲此 你需要創建一個自定義VPN
協議提供者
這實質上是自定義隧道協議
的客戶端側實現
這些協議提供者作爲APP擴展運行
它們在後臺運行處理後臺流量
你可以創建兩種類型的隧道提供者
你可以創建一個數據包隧道提供者
這些隧道在IP層傳輸數據
你可以創建 或者說你能夠創建一個App代理提供者
在APP層通過隧道傳輸數據
隧道提供者系列API中的一些API允許你
在你的APP中配置和控制協議提供者
這與VPN管理器API相似可配置
和控制IPSEC客戶端API允許你
配置和控制你的自定義協議提供者
讓我們來深入瞭解NEPacket隧道提供者API
它的原理是怎樣的？
假設有一個NEPacket隧道提供者在系統上運行
而且它已經連接到VPN服務器
並且提供一個通向某個內部網絡的隧道
這樣 你的APP將會嘗試連接到內部網絡中的某個資源
APP將會打開網絡連接
創建一個socket並建立TCP/IP連接
TCP/IP鏈路數據包將路由到UTUN0接口
這是一個虛擬接口它並不通過物理網絡
發送數據包而是將數據包轉發到
NEPacket隧道提供者
數據隧道提供者接受這些數據包
將它們封裝爲隧道協議格式
發送到隧道服務器
隧道服務器解封這些數據包
將它們發送到內部網絡
然後轉送到最終目的地
返回數據包經過服務器的封裝
被傳輸給提供者提供者解封它們
通過UTUN0接口將它們注入到網絡傳輸堆棧
然後通過TCP/IP協議棧
將數據包返回給應用程序
這就是其基本工作原理
NEPacket隧道提供者有很多的
UTUN0接口控制功能
最重要的是它可以指定路由
IP目的地將被路由至UTUN0接口
並經過隧道
數據包隧道提供者可以指定虛擬地址
以分配給接口另外還可指定DNS
和應該使用的代理設置
以用於路由經過隧道的數據流量
接下來湯米·保利將爲我們簡要介紹
如何創建一個NEPacket 隧道提供者
謝謝傑米我們很高興告訴你們現在你們可以編寫自己的
自定義VPN協議提供者
爲了幫助你們做到這一點我想向你們介紹
如何創建數據包隧道提供者
我從一個Xcode項目開始
在這個項目中已經有一個APP
APP使用管理器API創建一個配置
我們將跳過這個部分
假設我已經實現一個框架
來進行我的自定義協議協商
我將介紹如何構建這個新擴展
並將所有部分組合起來 好的
這是我的項目
首先要做的事情是爲你的擴展添加一個新目標
爲此我們需要在OS X ElCapitan中
將這個目標添加到網絡擴展框架之中
這樣在你的系統上如果你訪問系統、庫、框架
網絡擴展框架
你將會進入資源文件夾我們提供一個模板安裝程序
適用於這些目標類型
你可以進入安裝程序
我爲這個用戶進行安裝
現在我們看到這些模塊
如果進入我的項目在應用擴展下方
嘗試創建一個新目標現在我有四個新目標類型
還有App Proxy提供者可用於應用層VPN
這裏有兩個過濾器控件和一個數據提供者
讓我能夠進行數據過濾
稍後我將會講解數據過濾還有一個數據包隧道提供者
在這個例子中 我的協議爲我的VPN使用IP級隧道
我將選擇數據包隧道提供者
我們在Swift中寫入它的名稱稱爲數據包隧道
很好 現在我有了一個新目標
我可以開始構建我的VPN提供者
讓我們進入實際代碼編寫
我的協議基於UDP協議
它使用UDP協議與服務器對話
並通過隧道傳輸系統數據流量
我已經細化NEPacket隧道提供者類
在我的擴展中將會調用這個類
以啓動和停止我的VPN
在這裏 我需要覆蓋的最重要函數
startTunnelwithOptions函數
當用戶或系統要自動啓動你的VPN時將會調用這個函數
你會發現 它調用這個函數並傳遞其結果值
你可以使用這個函數來通知系統
你已經完成設置VPN
當你調用這個函數時系統將知道你已經完成連接
而且準備就緒
前面我說過我的協議基於UDP
在開始時 我想要建立與服務器之間的UDP連接
爲此需要創建一個NWUDP會話對象
這是我們已經爲網絡擴展框架添加的衆多便利性網絡API之一
它可以幫助你
可靠高效地進行連接
因此UDP會話讓我能夠
連接到一個主機
它將爲我完成所有的DNS解析工作
並且異步通知我是否已經準備就緒
我可以同時讀寫多個數據報文
以實現最高效的連接		
現在讓我們來實現這個函數
我首先要做的事情是
確定連接目標
我查看一下配置來獲取服務器地址
這可能是一個IP地址或是主機名稱
我這裏加入一個NW主機端點
這是一個容器對象它接收地址
或主機名稱並且將它們與
協議端口進行組合
然後我調用這個函數開始DNS解析過程
建立服務器連接
此時系統開始執行這些操作
然後我等待需要讀取和寫入的事件
我執行KeyVO以觀察UDP會話的狀態屬性
以獲得這些臨時值
此至我的啓動調用基本完成
我最後要做的事情是
保存在開始位置編寫的此函數
因爲我還沒有完成我的VPN連接
因此我要聲明一個pendingStartCompletion
稍後我會保存它
好了 現在我要跳過
與服務器協商的部分
假設協議已經知道如何這樣做
現在我將跳到已經分配地址
和其他網絡設置的部分
將這些設置應用於系統並讓系統知道
我們將要使用VPN
這是我編寫的自定義函數
它說明我已經建立連接
接下來我要做的是
創建NEPacketTunnelnetworksettings
這是一系列的設置
我可以在系統中應用這些設置
我可以設定IPv4設置
我已經指定了地址和子網
以及路由設置
在這個例子中我想使用系統的默認路由
但是我也可以設置一個較長的隧道分離路由列表
我可以定義隧道使用的開銷字節
對於每個數據包規定使用多少字節
進行加密和封裝
這樣系統就知道所發送的數據包的大小
最後 我可以設定DNS設置
我可以設定分配的DNS服務器或域
爲了將這些設置應用於系統
我只需調用此函數
在調用完成之後我得到一個回調處理程序
讓我知道已經成功應用設置
然後我可以調用此函數
讓系統知道我已經啓用VPN
這個功能很不錯 我已經完成連接
但是現在我還不能設置向前和向後數據傳輸路由
讓我們來看看代碼
前面傑米講過它的實現方法是這樣的
我們有一個虛擬接口
將數據包發送給協議提供者
後者將數據發送給服務器
從服務器接收返回的數據包時
我們重新將數據包注入堆棧
我們首先從輸出數據流開始
數據包隧道提供者具有一個名爲數據包流的屬性
它表示你可以
讀取和寫入的虛擬接口
如果我調用此函數
系統將使用一組已經發送至網絡的數據包進行回調
我可以將這些數據包發送至我的協議處理程序進行封裝
和加密 然後生成
一組新的加密數據包流量
我可以輕鬆地將它們作爲多個數據報文
一次性寫入UDP會話以發送給服務器
這是在向外發送數據包時所需做的全部
接收數據包的方式與此類似
這裏有一個函數接收UDP服務器
返回的數據包
我只需要將它們發送給我的協議
就可以解封它們生成IP數據包 然後
我可以將它們寫入數據流量屬性
現在 我建立了一個連接
並且可以進行讀取和寫入
讓我們來看看實際效果
好的 這是我的設備
會看到我已經安裝我的VPN APP
你會看到如果我進入Safari
嘗試訪問內部網站
現在我確實可以訪問內部網站
我可以進入“我的VPN”APP我點擊“start VPN”
APP所做的事情是
在後臺啓動隧道數據包提供者
你可以看到狀態欄中顯示VPN圖標
它實際上已經啓動並建立連接
我可以返回Safari
看到我的內部網頁已經加載
這表明我們在Swift中編寫的VPN協議提供者程序
完全正常地運行 就是這麼簡單
交給傑米
好的 謝謝Tommy
剛纔Tommy向我們介紹如何創建一個數據包隧道提供者
這不僅容易實現而且功能十分強大
討論Packet Tunnel Provider對象
我想花一點時間介紹用於託管APP的Per-App VPN 
Per-App VPN十分適合BYOD應用也就是使用你自己的設備
在BYOD應用中公司員工
希望使用他們自己的個人設備
連接他們的設備到公司的內部網絡
訪問網絡資源
而且 他們不希望他們的所有互聯網訪問流量
都通過企業VPN進行路由
另外  企業希望爲員工提供訪問權限
同時想要限制某些應用程序
訪問他們的內部網絡
這時適合使用Per-App VPN
利用Per-App VPN你可以設置VPN
僅允許某些特定的託管應用使用VPN
這種設置方法是使用Apple自己的MDM
MDM的含義是託管設備管理協議
你將設備註冊到一個MDM服務
這個MDM服務就能夠
提供相應的配置包括VPN配置
和託管應用程序
MDM服務還可以將這些託管應用程序
與Per-App VPN配置進行關聯以發送
Per-App VPN部署
現在我們支持Per-App VPN實際上我們一直都通過
自定義App代理提供者支持它
在iOS 9和OS XEl Capitan中通過自定義
數據包隧道提供者支持Per-App VPN
並且通過平臺內置IPSEC客戶端支持Per-App VPN
現在來看Per-App VPN如何在網絡數據路徑中運行
有一個數據包隧道提供者它和前面一樣
我們還有一個UTUN0接口數據流量被路由到這個接口
另外有一個託管APP
鏈接到VPN配置
不同於按IP地址將數據流量路由到UTUN0接口
現在將會按應用程序將數據流量路由到UTUN0接口
只有這個託管應用程序才能訪問VPN
如果用戶使用其他非託管應用程序
在物理接口之外
連接到網絡
即使它想要連接到與託管應用程序相同的目標IP也不會成功 
Per-App VPN的工作原理
Tommy將向我們簡要介紹
如何配置Per-App VPN
好的 謝謝傑米
讓我們感到興奮的是
現在每個人只需要編寫一個自定義協議程序
或者使用內置的IPSEC協議 
就可以部署Per-App VPN 來提供良好的UID解決方案
前面傑米講過 我們通過MDM(託管設備管理協議)
創建這些Per-App配置MDM將選擇VPN的配置文件
並且將託管應用程序
與這個VPN相關聯
現在我將介紹如何修改現有的VPN配置文件
使它配合Per-App VPN工作
這個配置文件
配置我剛纔創建的APP
讓我們來看VPN配置文件
這裏有很多的內容
現在並不需要理解它們
我將高亮標出一些獨特的部分
只需要進行三處修改
就可以讓這個配置文件配合Per-App VPN工作
第一處是負載類型
通常情況下它是com.Apple.vpn.managed 
只需要在末尾加上applayer就可設定爲Per-App VPN
前面我們說過有多種類型的提供者
可以配合Per-App VPN工作
我們需要說明你想要使用哪種類型
在VPN負載內部我們用一個新的鍵值
表示提供者類型
你可以指定數據包隧道或App代理
在本例中你看到我的APP使用數據包隧道協議
我指定了這個協議
最後一個需要添加的字段名是VPN UUID
是一個任意字符串
作爲VPN配置與託管APP之間的關聯符
當MDM服務器選擇託管APP時 將會使用
相同的VPN UUID標記它們
這樣系統就知道只有這些APP才能 
通過那個VPN路由數據流量
這個配置文件應該可以用於Per-App VPN
我們希望你們能夠創建
支持Per-App VPN的APP
希望你們能夠輕鬆地利用它來進行開發
在你們進行開發時可能無法獲得
一個完整的MDM解決方案
我們只能爲你們提供開發版本支持
而不是發行版本支持
在信息Plist中指定將哪些APP
與你的VPN配置相關聯
能夠讓你更容易地測試Per-App VPN
讓我們來看你的APP的信息Plist 它很簡短
我們看到一個新的鍵值名稱爲NETest App Mapping
這是一個數組字典
鍵值與前面所述的UUID 相同
這個關聯符將配置與APP關聯在一起
在數組內你可以指定想要數據流量強制經過VPN的
APP的字符串束標識符
在本例中我將使用Box APP
讓我們來看看它是什麼樣的
我已經在我的設備上安裝配置文件和信息Plist
這裏有一個配置
用於我的Per-App VPN
你可以看到我 我設置爲自定義數據包隧道協議
這裏還列出了關聯的APPBox
VPN配置內的一個關聯APP
只需要進行設置就可以讓Per-App VPN
配合你的協議工作 謝謝
好的 謝謝Tommy
Per-App VPN十分適合
BYOD部署能夠爲公司員工 
提供良好的用戶體驗
我們強烈鼓勵你部署它
接下來我想介紹NEApp代理提供者API
現在任何App代理提供者都可以獨佔性地配合
Per-App VPN工作
讓我們來看它們是如何工作的
以及它們與數據包隧道提供者之間區別
我們有一個託管APP一個在系統上系統運行的
APP代理提供者APP想要連接到
內部網絡資源
不同於將IP數據包路由到UTUN0接口
託管APP寫入到其socket的
數據被直接轉發到代理提供者
在那裏 NEApp代理提供者可以將數據發送到代理服務器
代理服務器的返回數據
將被髮送回代理提供者
後者將數據注入socket
然後發送給APP
添加NEApp代理提供者API原因
實際上跟服務器有關
你可以連接到這些透明的
網絡代理服務器
這些服務器通常比配置完好的IP層VPN更容易部署
你不必配置虛擬IP以分配給UTUN0接口
而且它們的擴展性更好
我們提供NEApp代理提供者API
來連接到這些服務器
iOS 9和OS X El Capitan中的
APP代理提供者新增功能是不僅能夠代理TCP流量
而且能夠代理UDP流量
這裏有一個託管APP
用它來描述在物理接口之外進行連接
這是NETunnel提供者系列API
你可以使用這些API爲你的隧道協議
創建客戶端
用於連接到企業VPN服務器
現在讓我們來看
NEFilter提供者系列API
我們可以使用這些API爲學校創建
網絡內容過濾解決方案
目前學校可以使用幾種方法利用iOS設備
進行網絡內容過濾
他們可以部署現場內容過濾器將設備放在他們的局域網內
將所有互聯網流量路由
經過內容過濾器
過濾內容
其缺點是 這種方法
只能在學校局域網內使用
如果學生想要把學校iPad
或iPhone帶回家當他們回家後他們要麼
完全不能瀏覽互聯網內容或者互聯網內容將不會過濾
這樣可不好
爲了解決這種問題 
學校可以部署代理將它放入互聯網接口
將所有互聯網流量路由經過代理
以進行流量過濾
其缺點是學校必須部署和維護代理
並不是所有的學校都有足夠的資源來這樣做
另一個解決方案是使用全隧道VPN
與全局代理一樣它也有很多問題
而且可能更難以部署和維護
對學校來說最好的解決方案是
在設備上過濾網絡內容
在離開設備之前
和實際提供給用戶之前
NEFilter提供者系列API允許這樣做
目前NEFilter提供者API只能在iOS中使用
通過使用API可以執行
網絡內容態評估
能夠隨時更新過濾規則
例如 限制網絡下載
當用戶訪問一些禁止訪問的內容時
你可以發送一個可自定義的禁止訪問頁面
提示禁止訪問這些內容
目前NEFilter提供者只能在受監管設備上運行
其目標用戶是學校
學校擁有自己的設備並對設備加鎖
使學生不能安裝新的APP或更改設置
這時過濾器提供者正好派上用場
讓我們來看過濾器提供者如何在數據路徑中工作
有個NEFilter數據提供者擴展
運行在系統上
它的作用是允許和禁止
網絡內容經過系統
由於它能夠訪問所有網絡內容
我們已經鎖定這個數據提供者
讓它在只讀沙盒中運行
它不能訪問網絡
而只能讀取磁盤
我們還提供另外一個擴展
即NEFilter控制提供者它的作用是
爲過濾器數據提供者提供數據
使過濾器能夠發揮作用
例如互聯網下載規則
要求將下載數據定入到
數據提供者可以訪問的磁盤位置
現在假設用戶使用Web kit 運行一個APP
是吧在它們的UI中有個UI Web視圖
進入Web kit 的所有內容
被傳輸給過濾器提供者 
他決定允許或禁止該數據
並非所有APP都使用Web kit
有一些APP使用其他網絡API
例如NSURL會話NSURL連接
以及部分Network API
對於這些API 我們在socket層中添加一個掛鉤
將流量引導至過濾器數據提供者
這樣數據提供者就進行允許/禁止決定
你可以看到過濾器控制提供者
和數據提供者一起在設備上
提供全面的內容過濾解決方案
因此對於Web kit APP來說
當數據提供者做出禁止決定
禁止某些內容訪問操作時
數據提供者可以命令Web kit
顯示禁止訪問頁面
這是一個禁止訪問頁面示例
你可以使用API通過多種方式
自定義這個禁止訪問頁面
你可以更改顯示內容結構
例如可以顯示學校名稱
可以自定義這個請求訪問鏈接
你可選擇不顯示鏈接
不向用戶提供內容訪問選項
如果你需要顯示內容可以顯示鏈接文本
和鏈接目標
這個目標指向Web服務用戶可以訪問此服務
請求訪問被禁止的內容
這就是NEFilter提供者系列API的原理
你可以使用這些API爲學校創建功能強大、全面的
基於設備的網絡內容過濾解決方案
這是今天網絡擴展API的所有內容
你可以使用這些APP
開發一些不錯的APP
你可以開發APP以便於使用Wi-Fi熱點、個人VPN服務
企業遠程訪問VPN
還可以爲學校開發基於設備的
網絡內容過濾解決方案
你可以看到這些API功能很強大
你可以使用這些API擴展和自定義Apple平臺的核心網絡功能
因爲這些是非常強大的API要求你們
具備一定的能力來熟練使用它們
爲了使用NEVPN管理器API
你需要在項目設置的Xcode中
選擇個人VPN功能
爲了使用熱點幫助器API、NETunnel系列
API和NEFilter提供者系列API
你需要查看其他一些專門資料
你可以發送電子郵件至networkextension@Apple.com
來索取這些資料
發送一份問卷調查給你你需要填寫問卷
並寄回給我們讓我們能夠處理你的請求
我們很高興將這些API介紹給你們
我們期待收到你們的請求
爲你們提供這些API
你們需要做的是
設置Captive Network APP端口
以使用NEHotspot幫助器 它可無縫連接
在你的個人VPN APP中使用NEManager API
爲使用你的個人VPN的用戶提供
無縫的用戶體驗
你可以使用NETunnel
提供者來創建功能強大的自定義企業VPN APP
來連接到你的VPN服務器 
你可以使用MDM來部署Per-App VPN
提供良好的BYOD用戶體驗
還可以使用NEFilter提供者API
爲學校創建動態的基於設備的網絡內容過濾解決方案
在這裏你可以獲得更多的信息
但是 這些文檔還沒有發佈它們即將發佈
請經常在開發者網站上搜索相關內容
另外示例代碼還不是很完善
請經常搜索簡單的隧道應用示例
我們會發布一些不錯的示例代碼
但是目前還沒有完成
請經常搜索它們
如果你想了解更多信息
請參與開發論壇聯繫開發人員技術支持部門
可以聯繫我們的主要講師保羅·丹博
可將網絡擴展相關問題發送到這個地址
還有其他一些講座
也希望你們給予關注
特別介紹今天上午11:00
舉行的其他核心操作系統網絡功能講座
將會介紹APP開發和下一代網絡
謝謝你們參加講座 祝你們愉快