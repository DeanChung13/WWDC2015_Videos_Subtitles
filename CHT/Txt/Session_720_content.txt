有關通知的新內容
大家下午好 謝謝
美國的同仁們已經利用通知功能
完成了一些很不錯的工作
今天我們將通過一個完整的系統
介紹其工作原理並且會看一些爲你們創建的新功能
通知是一個由兩個部分組成的系統
我們有iOS通知和APNS
我是Michele就職於iOS Notifications
我們首先介紹iOS通知
然後我們將介紹靜默通知
和用戶通知以及
二者之間的區別
我們將看一些通知操作和一項新功能
我希望你們喜歡這項功能
在本講座的後半部分
我的同事Gokul
將會介紹Apple推送通知服務中的
一些新的功能 這些功能
將會讓你的工作變得更輕鬆爲你節省大量時間
讓我們從靜默通知開始
靜默通知是靜默的
它們不會向用戶顯示UI
不會觸發手機提示音
因此你不會使用它們來通知用戶
你應該使用它們來通知APP
它們是遠程通知
因此它們來自於互聯網
這是你的服務器和你的APP
你的服務器發送一個通知給你的APP
如果你發送可用內容標記給APP
你的APP就知道
有新的內容可供下載並且開始下載
默認情況下靜默通知被啓用
用戶不需要批准你的...
不會爲APP提供許可權限以使用它們
你可以直接開始使用它們
而無需請求用戶批准
但是靜默通知是後臺APP刷新所使用的機制
在任何時候 用戶都可以
進入設置並禁用它們
你不應該期望它們始終可用
你不知道用戶是否已經關閉它們
也不知道你是否還會收到通知
另外 靜默通知是是盡力發送的
這意味着當通知到達
用戶設備時系統將會進行一些選擇
它會根據設備和用戶行爲
來使用不同的信號例如根據電量情況和時間
來決定在合適的時間
發送通知，並啓動你的APP
它會嘗試節約電池電量
或嘗試根據用戶習慣在用戶需要時
提供他們想要的內容
接下來我們介紹用戶通知
顧名思義主要差別在於你使用這些通知來通知用戶
當你想要向用戶通知某些事項
當你想要向用戶通知服務器最新狀態
或APP的其他用戶的操作時可以發送這些通知
它們顯示在用戶頁面上如顯示在信息條
鎖屏和通知中心
由於這些通知面向用戶
因此它們可能中斷用戶正在進行的操作
而且可能促發電話提示音
因此我們需要許可
你應該確定用戶確實需要接收通知
而且他們知道將會收到通知
這還意味着用戶可以在任何時間禁用通知，
而且用戶可以更改設置
因此如果你將通知設置爲橫幅和徽章
用戶可能會禁止一部分通知
他們可能接收徽章而不接收橫幅
有兩種不同類型的用戶通知
第一種是遠程通知
第二種是本地通知
讓我們先來看遠程通知
遠程通知意味着它們來自於互聯網
其來源地是你的服務器
服務器發送通知給用戶設備
現在你看到你的APP還沒顯示出來
因爲你的APP沒有運行
只有當用戶點擊通知時你的APP纔會啓動
APP將會啓動，
這時你能夠處理
你剛纔發送的通知
現在在用戶遠程通知中
可設置與靜默通知中相同內容用於標記
這將讓你的APP
有時間下載內容
或更新它想要顯示的內容
這樣當用戶點擊通知時
你的內容就可以使用了
用戶將會看到響應過程
它通過這種方法在用戶通知中實現靜默通知
第二種是本地通知
本地通知是你自己的APP的安排
直接在用戶設備上
沒有服務器 也沒有互聯網
和前面一樣你的APP安排通知
系統將它顯示給用戶當用戶點擊通知時
你的APP收到App委派中的
一個回調
這時你可以處理通知 而且你知道
用戶點擊了通知
並且想要處理通知
我說過你可以在APP中安排通知
那麼應該怎麼做呢？
你可以通過兩種不同的方式
來安排通知
你可以按時間安排
這樣在延遲一定的時間之後
將會發送通知
或者也可以在未來的特定日期和時間發送通知
另一種安排通知的方法
稱爲地理圍欄
你可以規定當用戶到達或離開
你設置的特定位置時發送通知
這是從用戶角度來闡述的通知工作原理
通知就是這樣實現的
在iOS 8，我們引入通知操作
通知操作使得
通知具有更好的可交互性
這樣用戶可以與你的APP進行交互
而不需啓動APP這樣可以提高效率
因爲用戶已經收到通知他們可以原地處理通知
而不需啓動APP也不會中斷他們正在做的事情
操作按類別進行分組
可以使用不同類別來分組你想要發送的
不同類型的通知
這樣你就可以爲不同類型的通知
設置不同的操作
比如說 你有一個照片APP用戶可以使用它分享照片
你可以設置一組不同的操作當用戶發佈照片
或發佈評論時將會執行這些操作
這裏介紹的所有這些通知功能
已在Apple Watch中實現
當你戴着Apple Watch時你並不需要做任何事情
Apple Watch爲自動爲你進行處理
Apple Watch可與設備配對
你只需要正確設置你的通知
你就會獲得基本和默認的處理操作
如果你想要自定義通知的外觀
或通知的處理操作
我建議你觀看WatchKit講座
本週早些時候我們舉行了這個講座
介紹了很多有用的內容
如果你並不像我在講座中所做的那樣
只用emojis與你的朋友進行交流
我們在iOS 8中推出的新通知功能
即文本回復功能
當你收到一條文本消息時可以直接在下拉通知界面中
回覆文字信息
我們收集了一些反饋意見
表明用戶也喜歡與朋友進行文字交流
而不是僅使用emojis
在iOS 9我們推出了用戶通知文本輸入功能
這樣你可以在相同的用戶界面中
在你的APP中處理同一個交互式通知
讓我們來看看
它看起來是這樣的
你可以在你的APP中發送一個通知
用戶可以下拉並輸入文字
輸入文字而不是emojis它看起來是這樣的
讓我們來看應該怎樣操作瞭解它們是如何工作的
文本輸入操作是一種新型操作
輸入文本並進行與以往一樣的文本操作
文本的顯示位置
與所有其他操作的顯示位置相同
在這些幻燈片中你會看到它們與其他操作配合工作
可以進行多項操作其中一項或多項操作
可以是文本輸入操作
這是消息所不能企及的
如何創建它們呢？
我們說過它們僅僅是操作而已
與iOS 8之前的版本中的操作並沒有什麼區別
因此創建它們的方法
與創建通知的方法相同
唯一的差別在於應該將行爲設置爲文本輸入行爲
這樣當設備接收通知
而且新設備具有文本輸入行爲時
可以顯示文本字段
我們已經創建操作
然後創建自己的類別以註冊這些操作
本例是一個簡單的示例
我們只有一個回覆操作但是可以添加更多的操作
它們將顯示在信息條
提醒或鎖屏之中
然後我們創建自己的設置
將它們註冊到APP
這樣 APP將會提示用戶
詢問是否允許使用用戶通知
如果通知你的APP中的一個選項
當APP啓動時並不需要將它們註冊到APP
你可以在用戶確定想要接收通知時
註冊這些通知
將會設置一個按鈕
你如何接收這些文本輸入通知呢？
你的APP委派中有一個新的委派一個新方法
它類似於我們用於舊類型操作的委派
唯一的差別在於現在有一個新參數
向你告知用戶反饋
這個參數來自於遠程通知
這個參數來自於本地通知
它們之間只有細微的差異但是它們是兩個不同的方法
你應該如何處理 用戶反饋的數據呢？
我們使用委派方法 
當我們註冊通知時
我們就在類別中設置了一個標識符 
我們獲得反饋信息此信息包含一個字典
其內含有通知發回的信息
在這個例子中由於它是一個文本輸入操作
它將含有用戶輸入的文本
這段代碼檢查標識符是否確實是
用於我創建的意見反饋操作的標識符
然後我從字典中提取文本
需要進行一些對話
在我獲取字符串之後我就可以進行任何操作
在這個例子中我可以在視圖控制器中將它添加到我的聊天APP
Apple Watch支持所有功能
其原理就是這樣的
你創建一個通知
然後創建操作
你獲得文本反饋用戶通過標準Apple
Watch Quickboard回覆通知
如前所述
如果你想自定義通知的外觀或行爲
可以自定義反饋列表
用戶可以點擊這時在
讓我們來回顧本週早些時候舉行的WatchKit講座
我還有另外一件事情要講
這件事件並不是像新iPod那麼重要
也不會讓人感到興奮 
這個主題是iOS 8兼容性
雖然這是一件小事你是需要引起注意 因爲
假設你的APP運行在iOS 8之中且含有操作
而且你有一個響應操作因爲你設置了聊天功能
當用戶收到通知時你希望...
如果他們點擊回覆按鈕能夠直接進入
他們正在進行的聊天
這樣當你在聊天過程中打開APP時
他們可以立即開始輸入文字
在這個例子中這是前臺操作
當我們啓動APP
當用戶點擊操作按鈕時可以執行這個操作
如果你在iOS 9中實現這個功能
以使用文本輸入操作你將需要使用後臺操作
因爲你不希望啓動APP
你希望直接進行輸入而且當用戶輸入和發送消息後
信息條消失
爲了實現這一點你需要通過兩種不同的方式
註冊你的操作
這取決於你的APP運行在iOS 8上還是在iOS 9上
因此 當你註冊你的操作時
你需要檢查你的代碼
將在哪個版本的iOS上運行
你可以檢查API是否可用
並決定用不同的方法進行註冊
我們介紹了文本輸入操作
我們介紹了iOS通知以及它們如何在系統中工作
我們看到 你可以
使用靜默通知來更新內容
使內容可供用戶使用
我們介紹了用戶通知和操作
還介紹了新的文本輸入功能
我希望你們使用這些功能
你們應該瞭解如何將所有這些功能轉移到Apple Watch
瞭解它們如何在Apple Watch上運行
現在 請我的同事colleague Gokul上臺
他將介紹Apple推送通知服務
Push NotificationService的一些改進功能
謝謝
下午好 我是Gokul
我從事Apple推送通知服務或稱APNS的開發工作
很高興來到這裏和大家分享
我們今年所取得的APNS開發新成果
我們開始吧
我們將介紹APNS的工作原理
可能對iOS遠程通知或稱APNS感到陌生
然後我們將討論新的提供者API
它們是一些很不錯的API我很高興將它們介紹給你們
通過APNS發送的遠程通知
由四個相似的部分組成
右下角是客戶端APP運行在操作系統左下角和左上角是APNS
右上角是提供者提供者負責發送遠程通知
這個流程啓始於註冊操作
結束於客戶端APP
通過操作系統接收通知
當執行此流程時操作系統通過APAN
專門用於你的客戶端APP的設備令牌
這個令牌被返回給你的客戶端APP
然後你將它註冊到提供者
也就是你的服務器
這個服務器負責發送遠程通知
提供者負責發送遠程通知
第一步工作是
Apple開發站門戶中註冊你的主題
並獲得一個證書
使你能夠與APNS安全地對話
在獲得證書之後
可建立與APNS間客戶端SSL連接
使用APNS提供者API發送遠程通知
APNS提供的API是一種速度極快
性能很強的服務器API其開銷非常低
你只需要使用一個連接
就可以發送大量的推送通知
要獲得更高的吞吐量
你可以創建多個APNS連接
在完成通知發送之後 你可以保持連接
並且可以重新使用連接
APNS不會立即斷開連接
這樣 你就不需要在以後
花費資源重新建立連接
如果連接有錯誤
APNS將返回錯誤代碼並關閉連接
我們來看一些現有的API
如果設備上卸載APP將會發生什麼？
如何發現已經
已經停用的設備令牌？
這時就需要使用反饋服務
利用反饋服務
可發現APP已經不再使用的設備令牌
這樣你就不會浪費資源
來發送將會被丟棄的通知
當你發送通知到設備令牌時
此服務將會啓動APNS將會發現
不再使用的設備令牌
並將它存儲在APNS反饋服務之中
提供者會定期調用APNS反饋服務
發現無效的令牌
並清理數據庫
這是反饋服務概覽
讓我們來看未來的計劃
明年將會有大字節令牌
現在的設備令牌是32字節
明年，也就是2016年它們將會增大到100字節
如果你在考慮在你的代碼或你的服務器API中
設定合適的設備令牌
現在可以重新進行考慮
大字節設備令牌將於2016年引入
現在我們來看提供者API和明年的工作計劃
先說說我們今年所做的工作
我們推出了全新的提供者API
你們肯定會喜歡
這個新提供者API基於四個主要功能
我們認爲它會幫助你更可靠地發送通知
而不會降低
你的APP速度和效率
新提供者API的第一個功能是HTTP/2
新提供者API...
新提供者API基於
全新的HTTP/2工業標準
HTTP/2是廣受歡迎的HTTP協議的最新升級版本
新提供者API以其爲基礎
我們爲什麼選擇將HTTP/2作爲新提供者API的基礎呢？
這對你們開發者有什麼好處呢？
我們認爲HTTP/2有三個主要的特性
值得我們探討
首先它是一個請求響應
這與HTTP一樣
從提供者發送至APNS的每個通知
將會得到服務器的響應
這類似於你正在使用的HTTP語義
例如URI 標頭
響應代碼等你可以操作和處理它們
我們認爲這將幫助你構建更可靠的提供者
以發送推送通知
因此它是一種請求響應機制
其次HTTP/2是一種多路複用協議
這一點很像
現有的提供者協議
因此速度不會降低
HTTP/2多路複用意味着
你可以通過單個連接
同時發送多個請求至服務器
因此你不會浪費資源
爲每個請求或類似任務設置新的連接
每個多路複用請求響應被稱爲一個流
然後我們會講解它
因此它是一種請求響應和多路複用機制
HTTP/2第二個優點是 二進制的
十分類似於我們現有的協議
採用新的HTTP/2提供者API
不會降低效率
利用二進制通過網絡傳輸的HTTP數據幀不是HTTP文本而是二進制
你還可以使用其他一些有用的功能
例如HPACK標頭壓縮
這三個特性使得
HTTP/2成爲新提供者API的理想選擇
除此這外還有其他一些好處
例如已經成爲工業標準等
你可以使用
HTTP/2的庫和工具等資源
總體來說我們這是一項十分不錯的功能
HTTP/2數據流提供者API
與現有的數據流相似
只是提供者與APNS之間的連接協議是HTTP/2
因此不需要修改客戶端APP和APP與操作系統或
提供者之間的通信方式
就可以使用這個新API所有具有的好處
你可以使用這個API並且立即受益
讓我們來探入這個流程
第一步是建立
提供者與APNS之間的連接
當你建立連接時
將會使用與你現有提供者API
相同的客戶端證書
利用這個證書
可以建立與APNS之間的
客戶端驗證SSL連接建立連接之後
HTTP/2開始交換設置幀
設置幀含有一些詳細信息
例如可以通過此連接發送的併發請求數量
或標頭表參數大小等
當交換設置幀之後
當你從提供者發送設置幀之後
就可以開始發送通知數據
和你的通知請求
請我們來看看通知是如何工作的
你發送給APNS的每個通知請求
都是一個post請求
這個post請求被提交給URI
它包含設備令牌和
JSON正文類似於現在所使用的現有提供者API
JSON負載被原封不動地發送至設備
現在爲了利用HTTP/2多路複用的優點
如果你想要發送多個請求 多個通知
可通過同一個連接 發送所有通知
這就是請求的工作原理
那麼系統如何響應請求呢？
這個新提供者API響應請求
如果一切正常 沒有問題
將會返回200狀態
整個流程一切順利
你可以繼續發送通知
如果發生失敗呢？
如果設備令牌錯誤APNS不能處理你的消息 將會發生什麼？
系統將會返回400錯誤請求
此請求的響應正文
包含JSON內容和請求失敗原因信息
它將提示設備令牌錯誤將會保持連接狀態
你可以通過這個HTTP連接
繼續向服務器發送更多請求其他一切正常
請求響應的原理就是這樣的
現在我們可以通過一個例子
來瞭解使用這個新提供者API的請求響應是如何運作的
如果還沒見過HTTP/2請求響應
你會發現它含有很多文本內容
但是我會爲你進行解釋
這是一個例子
請注意 這是一個HTTP/2請求
請求數據流中有兩個幀
第一個幀是標頭幀
第二個幀是數據幀
標頭幀含有Post方法或URI
而URI含有APP指定的設備令牌
你希望將通知發送給該設備
標頭幀還有可選參數
例如有效期、ID和優先級等
數據幀含有實際JSON有效內容
你想要將這些內容發送給設備
在本例中它是一個簡單的文字提醒
它的內容是hello HTTP/2
這就是請求的工作原理
讓我們來看本例的請求是如何工作的
在本例中響應一切正常你獲得200正常狀態
不需要做其他的事情 快速而又順利
如果發生故障 比如說設備令牌錯誤
響應將會是這樣的
同樣地 兩個幀一個標頭幀和一個數據幀
請注意狀態現在是400
正文是JSON有效內容
含有請求失敗原因
在本例中失敗原因是設備令牌錯誤
因此你可以對此響應採取措施
然後繼續處理其它通知
讓我們來快速瞭解一下
新HTTP/2請求響應提供者API
它是這個新提供者API的第一項功能
第二項功能是反饋
那麼 反饋是什麼呢？
利用新提供者API
我們引入即時反饋功能
利用即時反饋功能你不需要
與單獨的反饋服務通信來獲得你的APP
已不再使用的設備令牌
你可以通過響應消息
立即獲得它們
讓我們回到反饋服務數據流
不同於定時輪詢APNS反饋服務
和輪詢提供者
現在你可以從響應消息中獲得反饋
對於反饋響應消息中的
HTTP狀態代碼是410410的含義是不再使用
即你的APP已經不再使用此設備令牌
除了表示設備令牌已停用
的狀態代碼之外
你可以還可以獲得APNS最近一次知道
設備令牌被你的APP停用的時間標記
讓我們來看一個例子
你發送一個通知
你發送一個請求
但發現設備令牌已經被你的APP停用
因此你可以清空它
不再向它發送通知
響應消息可能是這樣的
注意這裏有狀態代碼410和時間標記
這是APNS最近一次確認
設備令牌被你的APP停用
這就是HTTP/2提供者API和即時反饋的原理
這個新提供者API的第三個特性是簡化了證書處理
我們知道 如果你想要開發具有豐富功能的APP
在開發和生產階段
你需要創建許多證書
我們簡化證書處理...
在介紹簡化證書處理之前我們來看一下
你需要處理的證書例子
根據你的APP的性能
你可能需要一個證書來用於VOIP
一個證書用於手錶附加信息如果你使用
開發和生產環境
這些功能可能各需要一個證書
利用簡化的證書處理
你只需要爲你的應用創建一個證書就可以了
這很不錯
因此HTTP/2提供者API即時反饋
和簡化證書處理
是新提供者API的新特性
去年我們將推送通知內容容量從256B
增大到2KB 受到廣泛好評
今年我們會將它增大到4KB
4KBKB限制將適用於所有版本的iOS 和OS X
因此它並不是iOS 9或OS X El Capitan專用
它將成爲新提供者API的一部分
這就是新提供者API的特性
總結來說現在我們有新的請求響應機制、HTTP/2接口
還有即時反饋功能
讓你知道已經被停用的設備令牌
還有簡化證書處理
讓你的所有主題的推送通知只需要一個證書即可
還有新的4KB通知內容限制
今年夏天新提供者API
將可以在APNS部署環境中使用
今年晚些時候我們將會把它引入生產環境
與前一樣新提供API
可用於發送通知到所有版本的iOS和OS X
你們不用創建任何專用邏輯
來確保版本兼容性
關於新提供者API就是這些
如果想更詳細瞭解Michele關於
iOS通知和APNS的技術講座
請參考APNS開發者文檔
新提供者API文檔將於今年晚些時候發佈
你也可以訪問技術支持和開發者論壇
請將你的諮詢問題發送給我們的
主要技術講師Paul
有一些相關的講座 你可能會感興趣
特別是關於ClockKit和Watch
connectivity還有Michel進行的一些演示
NSURL網絡通信講座更詳細地討論了HTTP/2
非常感謝 晚安