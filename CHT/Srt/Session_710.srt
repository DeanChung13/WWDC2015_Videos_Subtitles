00:00:19.887 --> 00:00:24.992 
《CloudKitJS與網絡服務》

00:00:34.301 --> 00:00:36.103 
大家下午好
我是克里斯

00:00:36.170 --> 00:00:38.272 
是蘋果公司ICloud
網絡服務部經理

00:00:39.072 --> 00:00:41.275 
今天我很榮幸能夠
在此告訴你們

00:00:41.542 --> 00:00:45.012 
去年我們收到的關於
CloudKit的第一大特性需求

00:00:45.245 --> 00:00:46.313 
就是網絡服務

00:00:53.554 --> 00:00:56.857 
那麼本節講座需要對
CloudKit話題有點熟悉

00:00:57.157 --> 00:00:59.826 
我將給你們簡要概括
CloudKit的架構

00:01:00.060 --> 00:01:01.728 
但是如果你們想
更深入瞭解它

00:01:01.795 --> 00:01:03.163 
我們去年有一系列講座

00:01:03.530 --> 00:01:05.399 
你們可以回去查看
那些講座的具體內容

00:01:08.569 --> 00:01:09.670 
在CloudKit中

00:01:09.903 --> 00:01:12.072 
你們的所有數據
都儲存在一個容器中

00:01:14.007 --> 00:01:16.577 
在這個容器中
我們有一個公用數據庫

00:01:16.810 --> 00:01:18.111 
用於儲存你們的app數據

00:01:19.012 --> 00:01:20.314 
另外還有一個專用數據庫

00:01:20.414 --> 00:01:21.782 
用於儲存你們的用戶數據

00:01:23.784 --> 00:01:26.320 
在公用數據庫中
你們有默認區

00:01:27.521 --> 00:01:28.455 
這裏有記錄

00:01:29.723 --> 00:01:30.991 
而在專用數據庫內

00:01:31.124 --> 00:01:32.492 
你們同樣有一個默認區

00:01:33.794 --> 00:01:35.696 
你們同樣可以創建自定義區域

00:01:35.829 --> 00:01:37.197 
它們增加的同步語義

00:01:37.497 --> 00:01:39.233 
使你們能夠回答關於
從某個時間點開始

00:01:39.299 --> 00:01:41.468 
發生了什麼改變變化的問題

00:01:42.903 --> 00:01:45.239 
當然 你們可以在這兩個
區域都建立記錄

00:01:47.541 --> 00:01:48.976 
從API的角度

00:01:49.042 --> 00:01:50.644 
我們有CloudKit服務器

00:01:51.945 --> 00:01:54.281 
而在本地
我們有CloudKit框架

00:01:55.382 --> 00:01:57.551 
通過此框架
你們的App程序與服務器連接

00:01:59.486 --> 00:02:01.688 
我們今天將會介紹
CloudKit網絡服務

00:02:02.689 --> 00:02:05.225 
我們已經使用這種服務
建立Notes Web app

00:02:06.293 --> 00:02:08.829 
今天你們可以用它來
建立你們的網絡app

00:02:11.031 --> 00:02:13.233 
那麼CloudKit網絡服務
具體是什麼呢?

00:02:15.202 --> 00:02:16.236 
這包括三方面內容

00:02:16.370 --> 00:02:19.106 
第一 這是一個連接到
CloudKit的JSON接口

00:02:19.873 --> 00:02:20.707 
第二

00:02:21.241 --> 00:02:23.777 
這是一個使用
Apple ID進行的網絡登錄

00:02:24.378 --> 00:02:25.379 
第三

00:02:25.946 --> 00:02:27.481 
它是個JavaScript庫

00:02:28.715 --> 00:02:31.485 
讓我們看一下
JSON API的特性

00:02:34.188 --> 00:02:37.291 
有了對公用和專用
數據庫的完全訪問權限

00:02:38.125 --> 00:02:39.359 
你們當然就可以創建

00:02:39.526 --> 00:02:42.029 
讀取 更新
和刪除記錄

00:02:43.030 --> 00:02:44.898 
你們可以上傳和下載資源

00:02:45.899 --> 00:02:47.167 
你們可以查詢你們的數據

00:02:48.669 --> 00:02:51.305 
你們可以創建訂閱
可以接收回調

00:02:51.605 --> 00:02:52.806 
當你們的數據發生變化時

00:02:54.641 --> 00:02:55.876 
可發現這些用戶數據變化

00:02:55.943 --> 00:02:57.377 
你們可以發現用戶的
真實姓名

00:02:58.846 --> 00:02:59.780 
你們可以進行同步

00:03:01.215 --> 00:03:02.749 
我們提供身份驗證

00:03:04.318 --> 00:03:06.887 
因此這是一個很長的清單
事實上這意味着

00:03:07.254 --> 00:03:09.823 
我們在本地API和
JavaScript API 之間

00:03:10.123 --> 00:03:11.592 
存在特性上的對等關係

00:03:18.966 --> 00:03:21.134 
每件你能夠在本地API上
做的事情

00:03:21.201 --> 00:03:22.870 
你都能夠通過JSON API完成

00:03:23.437 --> 00:03:25.239 
我們已經做出付出極大努力

00:03:25.405 --> 00:03:27.741 
確保例如字段名稱和參數等

00:03:27.808 --> 00:03:29.610 
在JavaScript中
有同樣的名稱

00:03:30.677 --> 00:03:33.914 
並且我們用JavaScript
Promises進行補全

00:03:34.381 --> 00:03:36.350 
這是效仿Blocks和Swift

00:03:36.817 --> 00:03:37.885 
最終你的代碼

00:03:37.951 --> 00:03:40.454 
看起來在JavaScript
和Swift之間很類似

00:03:42.723 --> 00:03:43.924 
我知道你們觀衆中的很多人

00:03:43.991 --> 00:03:46.693 
或許已經有過對
CloudKit的應用

00:03:47.194 --> 00:03:48.762 
如果你們不瞭解
讓我們迅速看一下

00:03:49.029 --> 00:03:51.565 
如何開始進行一個
新的CloudKit應用

00:03:53.333 --> 00:03:55.402 
你們應該做的第一件事
是建立一個容器

00:03:56.303 --> 00:03:58.906 
你們可以通過WWDR門戶

00:03:59.439 --> 00:04:00.541 
或Xcode建立容器

00:04:01.508 --> 00:04:03.744 
一旦你們有了容器
就需要建立一個架構

00:04:04.711 --> 00:04:07.748 
你們可以通過iCloud控制面板

00:04:08.282 --> 00:04:10.050 
或者你們的本地app

00:04:10.117 --> 00:04:11.218 
按需要建立這個框架

00:04:12.519 --> 00:04:15.389 
那麼這時你們的CloudKit應用
就開始啓動並運行了

00:04:15.556 --> 00:04:17.124 
讓我們開啓網絡接入

00:04:17.991 --> 00:04:19.593 
這有三個步驟

00:04:19.993 --> 00:04:22.963 
第一 你們需要生成
一個網絡服務API令牌

00:04:23.797 --> 00:04:24.631 
第二

00:04:25.232 --> 00:04:27.801 
你們需要設置
你們的登錄回調機制

00:04:28.468 --> 00:04:29.703 
第三

00:04:29.970 --> 00:04:32.206 
你們需要設定你們的域限制

00:04:34.074 --> 00:04:36.210 
讓我們更進一步瞭解這三個步驟

00:04:37.277 --> 00:04:39.446 
這是CloudKit控制面板

00:04:40.214 --> 00:04:43.016 
如你們所見 我們增加了
一個被稱爲API令牌的新的窗格

00:04:43.483 --> 00:04:45.219 
我已經在這兒建立了
我的第一個令牌

00:04:50.390 --> 00:04:52.993 
在頂部是令牌的ID

00:04:53.327 --> 00:04:55.295 
這是當你們在進行網絡服務調用時

00:04:55.362 --> 00:04:57.397 
傳入的東西

00:04:58.432 --> 00:05:00.434 
在那下方我選擇了
postMessage

00:05:00.501 --> 00:05:01.368 
作爲我的登錄回調

00:05:01.902 --> 00:05:04.204 
對於JavaScript應用
我會在用戶登錄時

00:05:04.271 --> 00:05:06.039 
取得一個JavaScript回調

00:05:06.773 --> 00:05:09.710 
或者我可以選擇使用...

00:05:10.944 --> 00:05:11.979 
URL重定向

00:05:13.580 --> 00:05:15.682 
在這下方 我可以設置
允許通過網絡服務

00:05:15.749 --> 00:05:18.652 
訪問我的CloudKit...
數據的來源

00:05:19.286 --> 00:05:21.989 
我已經選擇任何域
都可以訪問我的數據

00:05:22.422 --> 00:05:25.425 
爲了增加安全性
我完全可以限定爲查看者域

00:05:26.960 --> 00:05:28.929 
那麼現在我們啓動了網絡服務

00:05:29.563 --> 00:05:30.931 
我們讓一些用戶登錄

00:05:33.634 --> 00:05:34.735 
因此
身份驗證的...

00:05:35.302 --> 00:05:36.637 
處理是透明的

00:05:37.070 --> 00:05:37.938 
我的意思是說

00:05:38.005 --> 00:05:40.073 
當一個用戶調用一個

00:05:40.140 --> 00:05:41.441 
需要身份驗證的API時

00:05:41.775 --> 00:05:43.744 
我們會返回一個
特別形成的有效荷載

00:05:44.011 --> 00:05:45.279 
它帶有一個你們可以發送給

00:05:45.345 --> 00:05:46.880 
你們的用戶的URL重定向網址

00:05:48.215 --> 00:05:51.251 
然後他們與已經存在的
Apple ID進行驗證

00:05:51.485 --> 00:05:55.022 
或者他們可以在登錄環節
建立一個新的Apple ID

00:05:56.256 --> 00:05:57.925 
爲了保護用戶的隱私

00:05:58.192 --> 00:05:59.993 
我們不向你們的app
提供用戶的姓名

00:06:00.060 --> 00:06:00.894 
或者登錄密碼

00:06:01.762 --> 00:06:04.531 
但我們提供一個
穩定且匿名的

00:06:04.665 --> 00:06:05.499 
用戶標識符

00:06:07.701 --> 00:06:09.203 
讓我們把所有這些事情連起來

00:06:09.303 --> 00:06:11.104 
並且讓我們快速建立一個
示例app

00:06:14.608 --> 00:06:16.243 
那麼我們將要建立
一個任務app

00:06:16.743 --> 00:06:17.811 
它把任務存儲在...

00:06:18.846 --> 00:06:22.182 
com.example.tasks
容器內存儲任務

00:06:23.450 --> 00:06:25.452 
它有一個記錄類型：Tasks

00:06:25.719 --> 00:06:26.854 
記錄有兩個字段

00:06:27.087 --> 00:06:29.723 
分別是任務的名稱...
和優先級

00:06:30.724 --> 00:06:32.025 
那麼讓我們建立第一個任務

00:06:34.328 --> 00:06:37.331 
那麼我將做的是
調用記錄修改API

00:06:38.632 --> 00:06:40.000 
並傳入一個JSON實體

00:06:40.434 --> 00:06:42.603 
這個JSON實體表示
要創建一個新的任務

00:06:42.769 --> 00:06:44.738 
該任務有個唯一的標識符task-1

00:06:45.739 --> 00:06:47.875 
任務的值爲"Buy Milk"

00:06:48.876 --> 00:06:50.377 
我們把它發送到服務器

00:06:52.012 --> 00:06:54.381 
我們沒有一位已經過驗證的用戶

00:06:55.115 --> 00:06:55.949 
作爲迴應...

00:06:56.416 --> 00:06:58.819 
我們得到
一個URL重定向網址

00:06:58.886 --> 00:07:00.854 
我們可以把這個網址
發給用戶進行驗證

00:07:01.622 --> 00:07:02.923 
讓我們跟隨這個網址

00:07:04.758 --> 00:07:06.260 
這兒是用戶登錄界面

00:07:07.060 --> 00:07:09.830 
你們應該注意到
它有app名稱和app圖標

00:07:10.264 --> 00:07:13.300 
能夠在這兒建立
一個新的Apple ID

00:07:14.601 --> 00:07:17.037 
我們已經有一個Apple ID
我們讓我們直接登錄

00:07:18.872 --> 00:07:20.140 
用戶登錄後

00:07:20.407 --> 00:07:21.909 
通過您早些時候
規定的回調機制

00:07:22.109 --> 00:07:23.410 
你們的應用會被

00:07:23.477 --> 00:07:25.145 
返回一個會話ID

00:07:26.813 --> 00:07:29.349 
我們可以繼續把這個會話ID

00:07:29.449 --> 00:07:30.284 
附加到URL上

00:07:30.584 --> 00:07:31.852 
並重新發送相同的請求

00:07:35.122 --> 00:07:35.956 
好多了

00:07:36.723 --> 00:07:39.493 
現在我們收到了創建成功的消息

00:07:39.760 --> 00:07:41.662 
你們可以看到記錄名

00:07:42.162 --> 00:07:44.932 
改變標籤...
各個字段都在

00:07:44.998 --> 00:07:46.567 
以及關於記錄
更多的一些元數據

00:07:47.901 --> 00:07:49.403 
這涉及到大量的JSON解析

00:07:49.536 --> 00:07:51.505 
你們或許會擔心錯誤處理...

00:07:52.105 --> 00:07:52.940 
和限速

00:07:53.240 --> 00:07:55.776 
我們希望讓這個API
儘可能容易使用

00:07:56.476 --> 00:07:57.311 
因此

00:07:58.045 --> 00:08:00.214 
我們自豪向你們介紹
CloudKit JS

00:08:00.280 --> 00:08:03.217 
它是在JSON之上的封裝器

00:08:03.684 --> 00:08:06.420 
談到這方面我會邀請
歐那爾·維克斯塔德到臺上

00:08:13.560 --> 00:08:14.394 
謝謝克里斯

00:08:14.895 --> 00:08:17.965 
我是歐那爾·維克斯塔德
iCloud部門的工程經理

00:08:18.098 --> 00:08:19.967 
我將向大家介紹
CloudKit JS

00:08:21.001 --> 00:08:23.270 
CloudKit JS讓你們能夠

00:08:23.504 --> 00:08:26.073 
從JavaScript
連接到CloudKit

00:08:27.140 --> 00:08:29.176 
它是一個小型
性能完備的庫

00:08:29.943 --> 00:08:34.381 
它能夠與你們已經在網絡上
使用的任何框架或庫兼容

00:08:35.816 --> 00:08:38.619 
注意這是一個低水平的
傳輸API

00:08:39.119 --> 00:08:42.456 
這意味着它不會真正成爲
一個數據存儲

00:08:42.722 --> 00:08:46.393 
它不允許在JSON API
上有很多抽象化

00:08:46.827 --> 00:08:48.662 
因此如果你們
已經使用一個數據存儲

00:08:48.996 --> 00:08:52.533 
請繼續使用這個數據存儲

00:08:52.733 --> 00:08:54.601 
你們應能夠直接把
CloudKit JS

00:08:54.668 --> 00:08:55.536 
插入這個數據存儲

00:08:57.571 --> 00:09:00.641 
它同樣支持輕易地
從CloudKit框架過渡

00:09:01.275 --> 00:09:03.143 
那麼你們或許已經在
iOS或OS X上

00:09:03.210 --> 00:09:04.511 
使用CloudKit框架

00:09:04.845 --> 00:09:06.980 
術語 概念

00:09:07.314 --> 00:09:09.449 
方法名稱和類的名稱都相同

00:09:10.050 --> 00:09:12.286 
因此這是一個容易的過渡

00:09:13.353 --> 00:09:15.322 
即便如此
仍然有一些不同

00:09:15.756 --> 00:09:17.991 
畢竟這是網絡是
JavaScript

00:09:18.592 --> 00:09:20.394 
因此會有一些不同

00:09:20.460 --> 00:09:23.096 
例如我們將把
JavaScript Promises

00:09:23.163 --> 00:09:24.164 
用於所有異步行爲

00:09:24.665 --> 00:09:26.900 
我們稍後會查看相關示例

00:09:29.503 --> 00:09:30.437 
在瀏覽器...

00:09:31.972 --> 00:09:32.940 
支持方面

00:09:33.740 --> 00:09:35.809 
我們支持所有主要的瀏覽器

00:09:36.844 --> 00:09:39.012 
例如Safari
FireFox Chrome

00:09:39.479 --> 00:09:41.782 
IE和新的
Microsoft Edge

00:09:42.616 --> 00:09:46.153 
如果你們想代表用戶進行
服務器到服務器連接

00:09:46.420 --> 00:09:50.090 
我們支持JavaScript環境

00:09:50.424 --> 00:09:52.025 
如Note JS

00:09:53.827 --> 00:09:56.997 
因此在我們開始瞭解更多的
API方面的內容前

00:09:57.264 --> 00:09:58.565 
讓我給你們一個快速的演示

00:10:08.442 --> 00:10:10.944 
那麼我們正在查看的是
CloudKit目錄

00:10:11.011 --> 00:10:12.346 
示例代碼項目

00:10:13.113 --> 00:10:15.582 
這既可以作爲一個
可下載壓縮文件

00:10:15.649 --> 00:10:17.451 
你們也可以在開發者站點上獲得

00:10:17.951 --> 00:10:20.354 
我們在這兒將看到的是
託管版本

00:10:20.420 --> 00:10:21.588 
這個同樣可以提供

00:10:21.889 --> 00:10:24.224 
那麼它正在提供實時代碼示例

00:10:24.291 --> 00:10:25.859 
你們可以
在任何瀏覽器內執行它們

00:10:26.627 --> 00:10:28.996 
你們可以在左側看到一個
特性列表

00:10:29.062 --> 00:10:30.597 
我們正在看的是自述文件

00:10:30.998 --> 00:10:31.965 
它給向你們介紹一些

00:10:32.032 --> 00:10:34.535 
如何開始在CloudKit Js
上的工作的介紹

00:10:35.969 --> 00:10:38.572 
我們來到叫做"驗證"
的第一步

00:10:39.072 --> 00:10:41.108 
你們會注意到每個部分
都在頂端有一個描述

00:10:41.175 --> 00:10:43.377 
這個示例告訴你們如何...

00:10:43.977 --> 00:10:44.845 
使用驗證

00:10:45.279 --> 00:10:47.381 
在這下方你們有一個代碼示例

00:10:47.848 --> 00:10:49.550 
這個代碼片段專門校驗...

00:10:50.017 --> 00:10:52.886 
用戶的驗證狀態

00:10:53.253 --> 00:10:55.489 
如果用戶沒有登錄

00:10:55.556 --> 00:10:57.457 
就會出現一個登錄按鈕

00:10:58.825 --> 00:11:01.562 
而你們可以在上面這裏
實際運行這個代碼

00:11:02.062 --> 00:11:03.931 
因此 如果我點擊
這個"運行代碼"按鈕

00:11:04.264 --> 00:11:05.332 
它會執行這個代碼

00:11:05.899 --> 00:11:08.001 
你們會看到它向下滾動一段

00:11:08.435 --> 00:11:11.271 
它告訴我們
此時我們是未經過驗證的用戶

00:11:11.738 --> 00:11:13.440 
我們看登錄按鈕

00:11:14.842 --> 00:11:16.844 
我可以繼續點擊登錄按鈕

00:11:19.379 --> 00:11:20.247 
我輸入...

00:11:21.381 --> 00:11:22.583 
隨便一個Apple ID

00:11:24.084 --> 00:11:24.918 
和密碼

00:11:29.223 --> 00:11:30.824 
你們會注意到窗口關閉了

00:11:32.025 --> 00:11:34.962 
那就是蘋果公司的託管驗證頁

00:11:35.329 --> 00:11:37.531 
這時你們完成了網絡應用登錄

00:11:37.598 --> 00:11:38.632 
這是示例app

00:11:39.032 --> 00:11:41.101 
你們看到我們有用戶名

00:11:41.168 --> 00:11:42.503 
包括名和姓兩部分

00:11:42.836 --> 00:11:45.439 
而且"退出"按鈕
取代了"登錄"按鈕

00:11:45.973 --> 00:11:48.275 
這是CloudKit的
另一個特性

00:11:48.342 --> 00:11:49.643 
可發現性

00:11:50.143 --> 00:11:51.512 
如果用戶選擇進入

00:11:51.812 --> 00:11:55.516 
用戶可以選擇與開發者
分享他的姓名	

00:11:55.816 --> 00:11:57.618 
以及能夠在容器內被發現

00:11:57.684 --> 00:11:59.586 
以便其他用戶找到他們

00:12:00.420 --> 00:12:02.356 
現在既然我們有了姓名

00:12:02.422 --> 00:12:05.726 
我們將用它們填充到...右上角

00:12:07.261 --> 00:12:09.596 
好 現在我們登錄了

00:12:10.230 --> 00:12:12.666 
我們可以進行一些操作
我們到記錄部分

00:12:14.101 --> 00:12:15.969 
這將向您演示
怎樣在專用數據庫內

00:12:16.036 --> 00:12:17.137 
保存到一條記錄

00:12:18.305 --> 00:12:20.374 
那麼我們在頂部看到有一些字段

00:12:20.841 --> 00:12:21.842 
我們有記錄的名稱

00:12:21.909 --> 00:12:23.844 
這個名稱是記錄的獨特標識符

00:12:24.678 --> 00:12:27.114 
我們有一個區域名 這是默認區

00:12:27.181 --> 00:12:28.849 
它可以是你們建立的
任意自定義區域

00:12:29.583 --> 00:12:31.818 
你們有三個
在CloudKit架構中

00:12:31.885 --> 00:12:33.487 
確定的自定義字段名

00:12:34.321 --> 00:12:36.490 
在這個示例中
我們有一個名稱字段

00:12:36.790 --> 00:12:37.624 
字符串值

00:12:37.925 --> 00:12:41.061 
我們有一個位置字段
地理位置值

00:12:41.528 --> 00:12:44.631 
然後我們有一個資源字段
它可以讓您上傳一個文件

00:12:45.566 --> 00:12:46.667 
那麼我將繼續往下進行

00:12:47.034 --> 00:12:47.868 
並選擇一個文件

00:12:48.936 --> 00:12:51.138 
我選擇這張綠地景觀...

00:12:52.306 --> 00:12:53.140 
Jpeg圖片

00:12:53.807 --> 00:12:55.375 
而且我將返回到頂部

00:12:55.442 --> 00:12:56.810 
給圖片命名爲...

00:12:57.644 --> 00:12:58.812 
"景觀1"

00:12:58.879 --> 00:13:01.081 
這是記錄名稱
是一個獨特的標識符

00:13:01.715 --> 00:13:04.918 
我這裏將更改圖片名稱
稱其爲"綠地"

00:13:06.386 --> 00:13:09.456 
那麼在填完了這個字段後
我可以運行代碼

00:13:09.990 --> 00:13:12.025 
它將把記錄也保存到數據庫

00:13:12.092 --> 00:13:13.861 
作爲上傳資源保存到資源存儲器

00:13:14.595 --> 00:13:18.365 
你們可以看到完成之後
我們得到一個結果

00:13:18.999 --> 00:13:21.034 
而這實際上是服務器做出的應答

00:13:21.401 --> 00:13:22.903 
以我們在桌面這裏表示的

00:13:22.970 --> 00:13:24.538 
JSON文件做出的應答

00:13:25.072 --> 00:13:26.740 
除了三個自定義區域

00:13:27.241 --> 00:13:30.344 
我們還有一些元數據字段
綠地

00:13:30.911 --> 00:13:33.280 
位置以及下載這些資源的鏈接

00:13:38.051 --> 00:13:39.753 
爲向您展示它實際是
如何被存儲的

00:13:39.820 --> 00:13:41.088 
我們可以去提取記錄

00:13:41.655 --> 00:13:42.689 
我輸入...

00:13:43.123 --> 00:13:43.957 
景觀...

00:13:45.425 --> 00:13:46.260 
1

00:13:46.994 --> 00:13:47.928 
運行這個代碼

00:13:48.362 --> 00:13:49.730 
我們再次得到了同樣的記錄

00:13:49.796 --> 00:13:51.865 
那就說明瞭
在CloudKit內

00:13:51.932 --> 00:13:54.401 
使用CloudKit
JS保存記錄是多麼簡單

00:13:56.603 --> 00:14:00.307 
我們繼續查看另一個特性
名爲"查詢"

00:14:00.407 --> 00:14:04.578 
爲此 我將首先讓用戶退出

00:14:07.080 --> 00:14:10.717 
通過查詢 你們能夠從數據庫
得到數據子集

00:14:11.385 --> 00:14:12.819 
在這個代碼示例中

00:14:12.886 --> 00:14:15.022 
我們給你們展示
怎樣查詢公用數據庫

00:14:15.422 --> 00:14:18.659 
如果你們在架構上
合理設置了安全角色

00:14:18.859 --> 00:14:20.294 
你們實際上能夠容易地

00:14:20.360 --> 00:14:22.029 
在公用數據庫中查詢數據

00:14:22.095 --> 00:14:23.363 
即我們在這裏展示的東西

00:14:23.697 --> 00:14:24.798 
即使用戶沒有經過驗證

00:14:25.232 --> 00:14:27.801 
我繼續運行這個代碼

00:14:28.068 --> 00:14:30.671 
這個示例的基本原理是使用

00:14:30.737 --> 00:14:33.974 
當前在Monscone中心
的位置

00:14:34.575 --> 00:14:35.843 
發送一個查詢請求

00:14:35.909 --> 00:14:38.745 
並根據離我們現在
所在位置的遠近

00:14:39.146 --> 00:14:40.247 
對結果進行排序

00:14:40.647 --> 00:14:41.648 
我現在...

00:14:42.649 --> 00:14:43.550 
運行這個代碼

00:14:44.685 --> 00:14:45.953 
我得到兩個返回的記錄

00:14:46.420 --> 00:14:49.423 
第一個是冰島
第二個是意大利

00:14:50.724 --> 00:14:52.826 
冰島距離我們現在的位置
與意大利相比更近

00:14:52.960 --> 00:14:53.794 
結果是合理的

00:14:54.194 --> 00:14:55.529 
我將...

00:14:55.929 --> 00:14:58.098 
不會繼續查看所有額外的特性

00:14:58.565 --> 00:15:00.100 
但我們非常鼓勵你們
查看一下它

00:15:00.167 --> 00:15:03.504 
你們可以訪問
developer@Apple.com/CloudKit

00:15:03.637 --> 00:15:05.639 
點擊CloudKit
Catalog的鏈接

00:15:05.706 --> 00:15:07.574 
你們可以自己在任意瀏覽器上運行

00:15:20.687 --> 00:15:24.992 
CloudKit是我們蘋果公司
很多新業務的基礎

00:15:25.192 --> 00:15:27.995 
包括iCloud Drive
iCloud Photo Library

00:15:28.428 --> 00:15:32.232 
今年我們也已經爲
iOS和OS X推出了...

00:15:32.699 --> 00:15:34.301 
一個備忘錄應用

00:15:34.902 --> 00:15:37.371 
此應用也將出現在
iCloudKit平臺

00:15:37.938 --> 00:15:40.307 
除了本地備忘錄應用之外

00:15:40.774 --> 00:15:43.677 
我們在iCloud.com有一個
備忘錄網絡應用

00:15:44.178 --> 00:15:46.680 
這個備忘錄應用是
在使用CloudKit JS

00:15:46.747 --> 00:15:49.383 
事實上
它使用的方式與你們

00:15:49.449 --> 00:15:52.152 
作爲開發者目前可以
使用它的方式相同

00:15:52.653 --> 00:15:54.688 
這兒沒有額外的"蘋果魔法"

00:15:55.422 --> 00:15:59.059 
因此希望你們和我們一樣
對CloudKit JS感到激動

00:15:59.359 --> 00:16:01.461 
在這兒看到很多新的可能

00:16:01.695 --> 00:16:03.030 
並想了解怎樣開始

00:16:04.464 --> 00:16:05.599 
那麼讓我們看這兒

00:16:08.602 --> 00:16:10.170 
首先 我們需要確保...

00:16:10.938 --> 00:16:13.006 
你們要在自己的網頁上

00:16:13.707 --> 00:16:14.641 
嵌入一個腳本標籤

00:16:14.708 --> 00:16:17.678 
你們通過將其指向CloudKit
JS的 非託管CD版本完成

00:16:18.612 --> 00:16:20.747 
這將讓CloudKit JS
加入到網頁中

00:16:21.648 --> 00:16:25.519 
其次
你們需要配置CloudKit實例

00:16:25.586 --> 00:16:27.521 
你們需要使CloudKit
命名空間可用

00:16:27.754 --> 00:16:30.390 
你們可以調用
CloudKit配置方法

00:16:30.958 --> 00:16:32.793 
並向它賦予一個
你們的應用

00:16:33.260 --> 00:16:34.661 
即將使用的容器標識符

00:16:35.128 --> 00:16:37.931 
你們的目標環境
生產環境或開發環境

00:16:38.665 --> 00:16:40.367 
然後你們指定API令牌
你們剛纔看到

00:16:40.434 --> 00:16:43.403 
克里斯通過CloudKit
控制面板生成了API令牌

00:16:43.770 --> 00:16:44.605 
這就是需要的全部

00:16:44.671 --> 00:16:47.274 
此時你們已準備好
調用CloudKit API了

00:16:51.445 --> 00:16:52.279 
接下來

00:16:52.412 --> 00:16:54.882 
你們很可能希望
驗證你們的用戶

00:16:54.948 --> 00:16:56.617 
正如我們在示例app中
看到的一樣

00:16:58.752 --> 00:17:01.321 
在iOS和OS X上
可以通過CloudKit直接操作

00:17:01.989 --> 00:17:04.858 
因爲大多數用戶已經登錄
設備上的iCloud

00:17:04.925 --> 00:17:08.896 
你們只需要
在容器上調用取用戶方法

00:17:09.463 --> 00:17:12.598 
你們得到一個用戶記錄

00:17:13.267 --> 00:17:16.069 
這個用戶記錄將
有一個穩定的標識符

00:17:16.803 --> 00:17:19.339 
那麼這就是你們爲了
通過本地設備上的CloudKit

00:17:19.406 --> 00:17:21.108 
驗證用戶
所需要做的全部工作

00:17:21.575 --> 00:17:24.243 
不使用顯式登錄
沒有用戶界面

00:17:24.310 --> 00:17:25.345 
這些都是無縫操作的

00:17:27.781 --> 00:17:30.551 
然而在網絡上
操作會稍有不同

00:17:31.118 --> 00:17:33.353 
這些瀏覽器上不能直接登錄

00:17:33.420 --> 00:17:35.589 
因此 你們必須爲登錄按鈕
提供一個地址

00:17:36.356 --> 00:17:37.858 
如同我們在示例app上看到的

00:17:38.158 --> 00:17:39.860 
點擊它會打開新窗口

00:17:40.227 --> 00:17:42.563 
這兒有一個蘋果託管驗證頁

00:17:43.330 --> 00:17:45.832 
你們注意到在這個網頁上

00:17:45.899 --> 00:17:49.203 
我們有應用的iCon
和應用的名稱

00:17:49.469 --> 00:17:51.438 
這來自ITunes Connect

00:17:51.505 --> 00:17:53.507 
併發佈於蘋果公司App商店

00:17:54.074 --> 00:17:57.911 
用戶輸入他們的用戶名和憑證

00:17:57.978 --> 00:17:59.646 
這顯然將回到Apple網站

00:18:00.214 --> 00:18:02.282 
同樣有一個分爲兩步的驗證過程

00:18:02.349 --> 00:18:03.684 
如果賬戶是那麼設置的話

00:18:05.485 --> 00:18:08.188 
這個過程完成後
窗口將關閉

00:18:08.355 --> 00:18:10.090 
它會發回一條POST信息

00:18:10.157 --> 00:18:13.560 
給已打開的窗口
這條信息將包括CloudKit會話

00:18:14.228 --> 00:18:16.897 
那麼這時
你們的CloudKit JS

00:18:16.964 --> 00:18:18.398 
你們的網絡應用將能夠

00:18:18.465 --> 00:18:21.301 
開始對CloudKit
進行已驗證的調用

00:18:24.838 --> 00:18:27.574 
爲了在你們的頁面上進行驗證

00:18:28.509 --> 00:18:30.978 
你們首先必須爲登錄按鈕
提供一個位置

00:18:31.678 --> 00:18:35.215 
進行設置給它一個
“apple-sign-in-button”ID

00:18:36.383 --> 00:18:39.386 
第二 你們必須調用
名爲setUpAuth的方法

00:18:39.987 --> 00:18:42.322 
這將覈對用戶的驗證狀態

00:18:43.023 --> 00:18:44.791 
如果用戶已經登錄

00:18:45.392 --> 00:18:47.661 
一個user
info對象將會被返回

00:18:48.495 --> 00:18:50.531 
那就是你們需要尋找的全部信息

00:18:50.831 --> 00:18:53.634 
除了user info對象
它將會有一條記錄名稱

00:18:53.934 --> 00:18:55.836 
這是我們剛看到的

00:18:56.036 --> 00:18:57.070 
穩定標識符

00:18:57.504 --> 00:18:59.873 
現在
這個在網絡上的穩定標識符

00:18:59.940 --> 00:19:02.075 
將與在iOS和OS X上的一樣

00:19:02.376 --> 00:19:04.778 
所以 你們有辦法
在所有平臺

00:19:05.078 --> 00:19:06.313 
引用相同的用戶

00:19:09.449 --> 00:19:11.618 
除了覈對驗證狀態外

00:19:12.319 --> 00:19:13.954 
你們需要處理用戶

00:19:14.021 --> 00:19:15.656 
登錄或退出時發生的事情

00:19:16.723 --> 00:19:20.127 
你們在容器上
調用whenUserSignsIn

00:19:20.627 --> 00:19:22.296 
你們得到一個promise

00:19:22.529 --> 00:19:25.299 
用戶一旦登錄會便會解決

00:19:27.568 --> 00:19:30.204 
用戶退出登錄時的情況也完全相同

00:19:32.840 --> 00:19:35.209 
除了CloudKit JS中的那些

00:19:35.275 --> 00:19:37.578 
關於驗證的默認功能外

00:19:37.945 --> 00:19:40.380 
我們也提供切換以及

00:19:40.781 --> 00:19:42.616 
你們自定義處理驗證的方式

00:19:43.183 --> 00:19:46.587 
下一個示例將向您展示
怎樣在會話之間

00:19:46.653 --> 00:19:49.857 
保持驗證狀態
這樣CloudKit就不會

00:19:50.190 --> 00:19:52.793 
在你們的域上寫cookies

00:19:53.293 --> 00:19:55.495 
如果你們想讓cookie被寫下

00:19:55.796 --> 00:19:57.064 
以便存儲AUTH會話

00:19:57.130 --> 00:19:58.398 
你們必須在配置階段

00:19:58.799 --> 00:20:00.901 
將persist屬性設置爲true

00:20:02.202 --> 00:20:03.036 
現在

00:20:03.504 --> 00:20:05.439 
不用cookies
你們或許想

00:20:05.506 --> 00:20:07.040 
用其它方法存儲會話

00:20:07.641 --> 00:20:09.476 
這個示例
將給你們展示配置中...

00:20:10.077 --> 00:20:11.645 
的幾個手法

00:20:11.712 --> 00:20:14.548 
我們有一個putToken方法
和一個getToken方法

00:20:14.615 --> 00:20:19.853 
以便讓putToken不管在何時
CloudKit JS從服務器收到任何令牌

00:20:20.187 --> 00:20:22.823 
和getToken不管在何時
CloudKit JS試圖讓令牌

00:20:22.890 --> 00:20:24.191 
與服務器對話時都能被調用

00:20:24.725 --> 00:20:27.761 
這個示例是您可能想把會話存儲到

00:20:27.828 --> 00:20:30.731 
本地存儲器或希望將其存儲在

00:20:30.797 --> 00:20:32.199 
你們自己的服務器上

00:20:32.533 --> 00:20:34.034 
以便你們可以代表用戶

00:20:34.101 --> 00:20:36.036 
進行服務器到服務器的調用

00:20:40.407 --> 00:20:42.809 
接下來我們將談一下記錄操作

00:20:44.711 --> 00:20:47.147 
正像早些時候克里斯
用JSON展示給你們的一樣

00:20:47.881 --> 00:20:52.085 
CloudKit Js中的記錄
基本像這樣

00:20:52.653 --> 00:20:56.190 
我們有一個名稱爲
task-1的記錄

00:20:56.790 --> 00:20:58.759 
它的recordType是
tasks

00:20:58.959 --> 00:21:02.229 
我們創建和修改了
一些元數據字段被

00:21:02.296 --> 00:21:05.566 
包括創建和修改記錄的

00:21:05.632 --> 00:21:06.967 
用戶數據以及時間戳

00:21:07.668 --> 00:21:11.004 
recordChangeTag
是該條記錄的版本

00:21:11.672 --> 00:21:13.006 
目的爲了解決衝

00:21:13.140 --> 00:21:14.675 
突然後下面出現的是

00:21:14.741 --> 00:21:16.577 
你們已經在框架中定義的

00:21:16.643 --> 00:21:18.078 
所有自定義字段

00:21:18.378 --> 00:21:21.448 
這個示例中
我們只有一個任務名

00:21:21.815 --> 00:21:23.951 
類型是字符串
值爲"買牛奶"

00:21:27.721 --> 00:21:29.456 
顯然你們可能想存儲

00:21:29.523 --> 00:21:32.693 
字符串以外其它類型的字段

00:21:33.727 --> 00:21:36.363 
這會給你們一個

00:21:36.430 --> 00:21:38.932 
與iOS和OS X的比較

00:21:39.333 --> 00:21:41.468 
在CloudKit框架中
我們有一個字符串

00:21:41.535 --> 00:21:43.637 
但是在CloudKit JS中
我們只使用

00:21:43.704 --> 00:21:45.906 
JavaScript字符串
數字方面也一樣

00:21:46.507 --> 00:21:49.543 
對於NS數據 我們使用基本
64位代碼和二進制編碼

00:21:50.711 --> 00:21:53.013 
對於NS數據
我們有JavaScript數字

00:21:53.080 --> 00:21:54.848 
使用UNIX時間
以毫秒爲時間單位

00:21:56.316 --> 00:21:59.186 
對於更復雜的對象
如CL位置

00:21:59.253 --> 00:22:00.888 
我們有一個定位對象

00:22:01.522 --> 00:22:03.090 
和一個參考對象

00:22:03.156 --> 00:22:04.658 
和一個資源對象

00:22:05.259 --> 00:22:07.160 
請你們查看文稿

00:22:07.227 --> 00:22:09.296 
以瞭解每一個對象是如何定義的

00:22:12.933 --> 00:22:14.968 
在建立記錄方面

00:22:15.536 --> 00:22:16.670 
你們可以繼續

00:22:16.737 --> 00:22:18.071 
定義其中一個對象字面量

00:22:18.205 --> 00:22:21.408 
這個示例只是表明了
記錄類型是tasks的情況

00:22:22.109 --> 00:22:23.810 
而且只有一個字段
即taskName

00:22:23.877 --> 00:22:26.480 
它的值爲"買牛奶"

00:22:27.414 --> 00:22:29.816 
你們可以繼續進行下去
在數據庫對象上

00:22:30.384 --> 00:22:31.985 
調用saveRecord方法

00:22:33.287 --> 00:22:34.721 
不過你們注意到
在以上示例中

00:22:34.788 --> 00:22:36.657 
我們沒有賦給它recordName

00:22:36.924 --> 00:22:39.126 
記錄名是一個記錄的
獨特標識符

00:22:39.526 --> 00:22:41.428 
那麼
在未指定情況下

00:22:41.495 --> 00:22:43.497 
服務器將徑直
爲我們生成一個記錄名

00:22:44.198 --> 00:22:48.068 
我們也沒有爲這個特定字段
指定字符串類型

00:22:48.602 --> 00:22:51.371 
因此CloudKit JS會做一些
類型推斷

00:22:51.705 --> 00:22:53.807 
它會弄清這個值是一個字符串

00:22:53.874 --> 00:22:56.376 
你們應該對我們的所有基本
類型都進行這種指定

00:23:01.715 --> 00:23:04.351 
接下來我們想談談查詢	

00:23:04.551 --> 00:23:07.454 
它在網絡上通過
JavaScript API

00:23:07.521 --> 00:23:09.890 
的操作有一點不同

00:23:10.958 --> 00:23:13.260 
在Foundation框架中的
iOS和OS X上

00:23:13.327 --> 00:23:15.462 
我們有NSPredicate

00:23:16.263 --> 00:23:18.365 
NSPredicate...

00:23:19.132 --> 00:23:19.967 
很棒

00:23:20.033 --> 00:23:22.469 
但它對網絡不是很自然

00:23:22.536 --> 00:23:23.537 
不是很符合...

00:23:23.837 --> 00:23:27.674 
我們將通過網絡服務
展示的JSON API

00:23:28.475 --> 00:23:32.045 
我們這裏有些東西看起來
與Java用於記錄的字面量很像

00:23:32.112 --> 00:23:34.181 
你們只須定義一個這樣的查詢

00:23:34.248 --> 00:23:36.783 
這本例中我們表明
記錄類型是tasks

00:23:37.651 --> 00:23:40.120 
我們在數據庫上調用
performQuery

00:23:40.654 --> 00:23:43.357 
我們將取回類型爲"tasks"的
任務的所有記錄

00:23:45.492 --> 00:23:48.161 
現在你們可以做一
更復雜的操作

00:23:48.228 --> 00:23:50.864 
下一個示例中我們提供
一些performQuer y

00:23:51.398 --> 00:23:52.833 
方法的選擇

00:23:53.333 --> 00:23:55.169 
我們表明這個硬鍵是任務名

00:23:55.235 --> 00:23:56.670 
我們將只是從每個記錄

00:23:56.737 --> 00:23:58.038 
取回任務名字段

00:23:58.872 --> 00:24:00.741 
我們將把結果限額限制爲十個

00:24:01.608 --> 00:24:03.977 
我們也將把所有記錄限定爲

00:24:04.044 --> 00:24:05.913 
在"allTask"這個自定義區內

00:24:09.516 --> 00:24:12.152 
查詢同樣允許你們

00:24:12.419 --> 00:24:13.854 
指定一個篩選條件

00:24:14.521 --> 00:24:16.557 
在接下來的這個示例中
我們將表明

00:24:17.224 --> 00:24:19.760 
希望查找任務的記錄類型

00:24:19.826 --> 00:24:22.296 
但是我們只想取回
符合"優先條件1"的任務

00:24:23.230 --> 00:24:25.232 
我們將調用
performQuery方法

00:24:25.332 --> 00:24:27.401 
我們取回所有
符合"優先條件1"的任務

00:24:28.335 --> 00:24:31.138 
你們注意到我們在這兒
使用"等於"作爲比較條件

00:24:31.705 --> 00:24:33.540 
並且我們有更多的比較條件

00:24:33.607 --> 00:24:36.176 
這取決於你們查詢的字段類型

00:24:36.243 --> 00:24:37.444 
因此請查閱字段相關文稿

00:24:37.511 --> 00:24:39.479 
以便了解在什麼地方
對每種類型進行定義

00:24:43.483 --> 00:24:46.353 
你們在早些時候已經看到
我們限制了結果集合

00:24:46.653 --> 00:24:50.324 
問題是你們怎樣在結果上標註頁碼

00:24:51.558 --> 00:24:53.393 
這是一個相關的例子

00:24:53.527 --> 00:24:56.163 
結果的數量限制爲10

00:24:56.797 --> 00:25:00.133 
當這個promise解決時
我們將取回前10個記錄

00:25:00.834 --> 00:25:02.369 
但是在response
對象上

00:25:02.436 --> 00:25:03.971 
還有moreComing屬性

00:25:04.271 --> 00:25:05.939 
這告訴我們除了我們剛取得的

00:25:06.006 --> 00:25:07.941 
10個記錄之外還有更多記錄

00:25:08.442 --> 00:25:11.712 
我們把response對象
傳回給performQuery

00:25:11.979 --> 00:25:14.748 
CloudKit JS會爲我們
完成所有工作

00:25:14.815 --> 00:25:17.951 
繼續爲我們
獲取的下10條記錄

00:25:18.652 --> 00:25:20.454 
本例中
我們展示如何能夠

00:25:20.521 --> 00:25:22.389 
把這些promises
很好地連接起來

00:25:26.960 --> 00:25:28.962 
那麼接下來是資源

00:25:29.129 --> 00:25:31.431 
與其他字段類型相比

00:25:31.498 --> 00:25:34.301 
資源在CloudKit的操作
有一些不同

00:25:35.269 --> 00:25:38.205 
資源沒有和記錄一起被存儲

00:25:38.272 --> 00:25:41.408 
資源被存儲在外面的
我們所謂的資源存儲器中

00:25:41.775 --> 00:25:43.377 
記錄只是簡單引用了

00:25:43.443 --> 00:25:44.845 
資源和資源存儲器

00:25:45.779 --> 00:25:48.982 
好消息是CloudKit JS
完美的爲你們處理這些事務

00:25:49.883 --> 00:25:53.287 
這個例子中
我們有一個帶有輸入元素的網頁

00:25:53.654 --> 00:25:55.622 
讓用戶在
CloudKit目錄app中

00:25:55.689 --> 00:25:57.257 
選擇一個這樣的文件

00:25:58.258 --> 00:26:00.294 
那麼當某個文件被選定時

00:26:00.360 --> 00:26:03.697 
handleFileSelect
函數將被調用

00:26:04.464 --> 00:26:06.800 
我們只需要爲這個文件
找到一個參考

00:26:07.534 --> 00:26:09.069 
我們可以將其作爲我們

00:26:09.136 --> 00:26:11.471 
即將保存的資源字段的值

00:26:12.005 --> 00:26:14.441 
因此在這裏CloudKit JS
會爲我們把資源

00:26:14.508 --> 00:26:17.878 
上傳到資源存儲器
然後在數據庫中保存記錄

00:26:18.245 --> 00:26:20.714 
同時在數據庫內
創建對該資源的參考

00:26:26.086 --> 00:26:28.722 
下載資源更容易

00:26:28.789 --> 00:26:30.257 
當您請求一個帶有資源的字段時

00:26:30.924 --> 00:26:33.627 
你們將取回一個下載URL

00:26:34.027 --> 00:26:37.598 
這個例子中
我們將獲取一個用戶記錄

00:26:38.332 --> 00:26:42.202 
你們注意到這裏的值
有一個downloadURL屬性

00:26:42.503 --> 00:26:44.872 
你們可以繼續獲取相關信息

00:26:44.938 --> 00:26:46.473 
或把這個作爲你們

00:26:46.607 --> 00:26:48.375 
圖像等要素的一個來源

00:26:53.013 --> 00:26:54.848 
CloudKit的另一個重要特性

00:26:54.915 --> 00:26:56.783 
是訂閱和推送通知

00:26:57.818 --> 00:26:59.419 
所有推送到Apple設備上
的通知

00:26:59.486 --> 00:27:03.557 
都通過Apple通知推送服務

00:27:05.292 --> 00:27:07.060 
爲了使推送順利進行
傳統上你們必須

00:27:07.127 --> 00:27:09.830 
設定你們自己的第三方服務器

00:27:09.897 --> 00:27:11.999 
你們必須有自己的服務器

00:27:12.232 --> 00:27:13.200 
帶有你們自己的證書

00:27:13.267 --> 00:27:14.568 
有你們自己的服務器邏輯

00:27:14.935 --> 00:27:16.036 
你們必須通過那種方式

00:27:17.437 --> 00:27:18.572 
發出推送通知

00:27:19.606 --> 00:27:20.874 
然而使用CloudKit

00:27:20.941 --> 00:27:22.676 
不再需要這樣了

00:27:22.743 --> 00:27:25.846 
你們可以設置CloudKit訂閱

00:27:26.380 --> 00:27:28.315 
它們就像數據庫中的觸發器

00:27:28.916 --> 00:27:30.884 
它們會尋找數據中的變化

00:27:30.951 --> 00:27:33.353 
並且根據變化發生的時間
發出推送通知

00:27:34.288 --> 00:27:35.989 
現在
有了CloudKit JS

00:27:36.056 --> 00:27:37.591 
網絡將成爲另一個客戶端

00:27:38.091 --> 00:27:39.493 
我們將能夠通過網絡收到

00:27:39.560 --> 00:27:42.863 
與使用iOS和OS X相同的推送

00:27:45.632 --> 00:27:48.769 
爲了收到推送
你們必須設置訂閱

00:27:49.336 --> 00:27:52.673 
這裏的第一個例子
向你們展示一個區域訂閱

00:27:53.307 --> 00:27:55.676 
我們將聲明
subscriptionType是zone

00:27:55.909 --> 00:27:58.779 
subscriptionID是
changeTasks

00:27:59.112 --> 00:28:01.615 
我們爲zoneID的賦值爲
allTasks

00:28:02.549 --> 00:28:05.285 
我繼續用數據庫保存訂閱

00:28:06.253 --> 00:28:08.121 
那麼這將開始尋找變化

00:28:08.188 --> 00:28:11.325 
一旦allTasks自定義區內
發生任何變化

00:28:11.625 --> 00:28:12.926 
它會向連接到相同賬戶

00:28:12.993 --> 00:28:15.629 
的所有客戶端推送信息

00:28:19.600 --> 00:28:23.136 
訂閱同樣允許你們把它們
建立在查詢基礎上

00:28:23.971 --> 00:28:27.441 
這裏的下一個例子中
我們建立一個查詢訂閱

00:28:27.708 --> 00:28:30.544 
它將觸發allTasks
自定義區內創建 

00:28:30.777 --> 00:28:32.713 
更新或刪除的任何信息

00:28:33.480 --> 00:28:36.083 
然後我們指定一個查詢
這個特定查詢

00:28:36.149 --> 00:28:37.484 
就像我們爲記錄取信息一樣

00:28:37.885 --> 00:28:40.420 
任何時候一個優先權爲1的任務

00:28:40.721 --> 00:28:42.823 
被創建 更新或刪除時

00:28:43.323 --> 00:28:44.558 
將會有一個推送通知被髮出

00:28:45.626 --> 00:28:47.060 
而那就是我們需要做的全部

00:28:49.830 --> 00:28:53.534 
那麼在網站上 
你們必須完成兩件事

00:28:54.201 --> 00:28:57.171 
首先 
們必須爲通知註冊

00:28:57.538 --> 00:28:59.907 
這會從服務器獲得一個令牌

00:28:59.973 --> 00:29:02.042 
我們可以將其
用於Apple推送通知服務

00:29:02.309 --> 00:29:03.644 
並且暫停

00:29:04.077 --> 00:29:06.613 
與Apple推送連接服務的連接

00:29:07.214 --> 00:29:08.048 
其次

00:29:08.582 --> 00:29:12.319 
你們需要調用
addNotificationListener

00:29:12.386 --> 00:29:14.888 
每當網頁上收到通知的時候

00:29:14.955 --> 00:29:16.089 
它都會被調用

00:29:21.295 --> 00:29:25.299 
最後 讓我講一下一些使用
CloudKit JS的最佳實踐

00:29:26.466 --> 00:29:27.868 
如我們剛纔所見

00:29:28.068 --> 00:29:29.837 
你們應該動態鏈接到

00:29:29.903 --> 00:29:32.005 
CDN託管版本的
CloudKit JS

00:29:32.406 --> 00:29:34.842 
你們應該跟隨我們
升級到最新版本

00:29:34.908 --> 00:29:36.510 
並修復安全漏洞

00:29:36.810 --> 00:29:40.180 
它同樣確保這個資源

00:29:40.347 --> 00:29:42.816 
通過我們龐大而完善的
分發網絡實現低延遲交付

00:29:43.150 --> 00:29:44.952 
而且它是完全免費的
這一點好極了

00:29:46.854 --> 00:29:49.056 
其次 你們應該考慮
在你們的網頁上

00:29:49.122 --> 00:29:50.858 
異步加載CloudKit JS

00:29:51.158 --> 00:29:53.327 
對於任何你們可能在網頁
加載的第三方庫

00:29:53.393 --> 00:29:55.095 
這是一個好建議

00:29:55.696 --> 00:29:59.266 
它會避免任何網絡阻塞
以及用戶體驗的衝擊

00:30:01.802 --> 00:30:05.539 
最後 你們必須確保
對請求響應進行處理

00:30:05.973 --> 00:30:07.074 
所以CloudKit的

00:30:07.140 --> 00:30:08.642 
新自由限制設置

00:30:09.076 --> 00:30:10.077 
包括對請求的限制

00:30:10.143 --> 00:30:11.478 
確實是極爲寬宏大量的

00:30:11.912 --> 00:30:14.548 
你們在檢索時可能遇到網站阻塞

00:30:14.615 --> 00:30:15.716 
所以你們需要確定

00:30:15.782 --> 00:30:17.584 
你們的客戶端
將提供適當的備份支持

00:30:18.085 --> 00:30:21.522 
它是否在有大量響應的同時
仍能正常檢索請求

00:30:22.222 --> 00:30:25.592 
那麼你們也可以研究它怎樣
對單一請求進行批量操作

00:30:25.659 --> 00:30:28.428 
我們確實有一個
CloudKit JS批

00:30:28.795 --> 00:30:29.730 
處理API

00:30:30.597 --> 00:30:32.366 
如果你們真的對這個話題
感興趣的話

00:30:32.432 --> 00:30:33.834 
你們確實應該參加

00:30:33.901 --> 00:30:35.769 
明天的CloudKit小竅門講座

00:30:36.136 --> 00:30:39.306 
他們會談到更多關於整個
CloudKit請求被限流的問題

00:30:39.373 --> 00:30:41.108 
而且不限於網絡方面

00:30:42.242 --> 00:30:43.143 
就這麼多

00:30:43.210 --> 00:30:44.645 
那就是CloudKit JS

00:30:44.711 --> 00:30:46.280 
我們非常期待看到你們

00:30:46.346 --> 00:30:47.414 
用它構建的東西

00:30:47.814 --> 00:30:50.150 
你們如有任何問題
敬請順便訪問各個實驗室

00:30:50.551 --> 00:30:52.085 
現在
我將把舞臺交給克里斯

00:31:02.863 --> 00:31:03.697 
感謝歐那爾

00:31:06.133 --> 00:31:07.000 
總而言之

00:31:09.069 --> 00:31:11.438 
CloudKit 網絡服務
提供了一個完全

00:31:11.505 --> 00:31:14.074 
與你們在網絡上的CloudKit
數據對等的接口

00:31:15.642 --> 00:31:18.011 
它們通常以容器爲基礎的

00:31:19.746 --> 00:31:21.114 
我們處理驗證

00:31:21.348 --> 00:31:22.282 
元數據存儲

00:31:22.482 --> 00:31:24.084 
以及資源上傳和下載

00:31:25.619 --> 00:31:27.788 
你們處理託管
你們的靜態資源

00:31:28.088 --> 00:31:30.057 
和你們的
JavaScript應用代碼

00:31:31.558 --> 00:31:33.527 
最後我們爲你們帶來
CloudKit JS

00:31:33.594 --> 00:31:35.162 
以使這些變得儘可能的容易

00:31:37.631 --> 00:31:38.832 
你們可以在網上訪問我們

00:31:38.899 --> 00:31:41.768 
地址是
developer.Apple.com/cloudKit

00:31:42.536 --> 00:31:44.571 
如果有任何問題
你們可以訪問

00:31:44.638 --> 00:31:45.706 
蘋果開發者論壇

00:31:46.039 --> 00:31:48.141 
或Apple開發者技術支持

00:31:48.909 --> 00:31:49.810 
如果仍然有問題

00:31:49.877 --> 00:31:50.811 
可以給我們發郵件

00:31:50.878 --> 00:31:53.080 
地址爲<u>CloudKit@Apple .com</u>

00:31:55.649 --> 00:31:56.917 
有一些相關的講座

00:31:56.984 --> 00:31:58.519 
你們可以在網上觀看我們昨天的

00:31:58.585 --> 00:32:00.454 
《CloudKit中的新特性》講座

00:32:00.521 --> 00:32:03.257 
明天有題爲
《CloudKit小竅門》的講座

00:32:03.624 --> 00:32:04.725 
我希望在那裏見到你們

00:32:04.892 --> 00:32:05.826 
非常感謝你們