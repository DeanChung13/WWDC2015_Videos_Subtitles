00:00:19.486 --> 00:00:24.491 
面向未來硬件的設計

00:00:25.058 --> 00:00:25.893 
大家好

00:00:27.528 --> 00:00:30.430 
歡迎參加
“面向未來硬件的設計”講座

00:00:31.565 --> 00:00:32.966 
我是傑弗裏·特拉·伯恩斯坦

00:00:33.333 --> 00:00:36.103 
今天的主講人還有馬特烏斯·格倫
和 比爾·林德梅爾

00:00:37.905 --> 00:00:39.306 
哪些人應該參加今天的講座呢？

00:00:39.840 --> 00:00:44.244 
也許你正在開發一種設備

00:00:44.311 --> 00:00:45.913 
這種設備連接到某個APP

00:00:46.847 --> 00:00:52.686 
比如這個設備是一個洗碗機

00:00:52.886 --> 00:00:54.721 
你希望通過APP來控制它

00:00:55.856 --> 00:00:58.058 
或者是一種無人機
你希望用APP進行控制

00:00:59.159 --> 00:01:03.130 
或者是高爾夫俱樂部設備
將你的練球信息傳送到APP

00:01:04.263 --> 00:01:07.134 
或者你有一個設備
想要爲它開發一個APP

00:01:08.135 --> 00:01:10.938 
也許是一款遊戲
你想要爲它開發用戶控制器

00:01:12.172 --> 00:01:13.540 
或者你想開發消息發送APP

00:01:14.241 --> 00:01:16.977 
或開發一個配合約會APP使用的裝置
總之各種各樣五花八門

00:01:19.079 --> 00:01:21.815 
你想要爲你目前
還未擁有的設備開發APP

00:01:21.949 --> 00:01:25.185 
例如Apple Watch
或者我們剛發佈的新產品

00:01:25.419 --> 00:01:26.987 
本講座也會對你有幫助

00:01:28.956 --> 00:01:29.790 
我們是誰？

00:01:30.657 --> 00:01:33.060 
我們是一個投資者 設計師
和原型設備開發者團隊

00:01:33.594 --> 00:01:35.495 
我們的工作涵蓋所有的Apple產品

00:01:36.029 --> 00:01:38.599 
我們研究新界面技術對於我們產品

00:01:38.665 --> 00:01:40.701 
操作系統和應用的意義

00:01:41.535 --> 00:01:44.304 
我們推出了一些令人興奮的功能，
例如多點觸控和手勢控制

00:01:44.671 --> 00:01:46.273 
觸控板和觸覺反饋

00:01:48.542 --> 00:01:53.080 
在WWDC 2014大會上
我們舉辦了名爲“原型開發”的講座

00:01:53.614 --> 00:01:54.915 
你們有人蔘加過這個講座嗎？

00:01:56.617 --> 00:01:57.451 
謝謝 好極了

00:01:57.651 --> 00:01:58.619 
感謝你們的參加

00:01:59.086 --> 00:02:00.320 
你們有人看過網上視頻嗎?

00:02:02.823 --> 00:02:03.891 
人數不多 好的

00:02:05.826 --> 00:02:08.061 
本講座並不需要
那個講座上介紹的知識

00:02:08.127 --> 00:02:09.729 
但是我還是建議你們看一下那個講座

00:02:10.062 --> 00:02:12.332 
我簡單介紹一下今天的內容

00:02:13.667 --> 00:02:15.202 
我們推出了

00:02:15.402 --> 00:02:17.804 
一款革命性的新應用
名爲Toast Modern

00:02:18.605 --> 00:02:23.043 
你可以用它來查找舊金山
街道上的美味吐司麪包店

00:02:24.511 --> 00:02:28.649 
拍攝你正在品嚐的吐司麪包的照片
並與親朋友好分享

00:02:30.083 --> 00:02:32.753 
我們使用這個APP來解釋
爲什麼要進行原型開發

00:02:33.053 --> 00:02:34.388 
主要有兩個原因

00:02:34.721 --> 00:02:37.090 
首先是對驗證想法

00:02:37.157 --> 00:02:39.159 
以節省產品開發所需要的時間和金錢

00:02:39.459 --> 00:02:44.031 
第二是獲得新的想法
從而讓你的產品變得更好

00:02:45.432 --> 00:02:47.167 
以前我們討論過如何進行原型開發

00:02:48.769 --> 00:02:53.207 
其過程是製作一個虛擬APP，
介紹給用戶取聽他們的意見

00:02:53.407 --> 00:02:57.110 
然後反覆進行改進直到產品完美無缺

00:02:59.346 --> 00:03:02.583 
你們知道互聯網上的反饋信息很有價值

00:03:02.749 --> 00:03:05.586 
人們可能會說“這個操作方法
看上去不錯我可能會試一下”

00:03:07.855 --> 00:03:10.290 
“WWDC 開發者大會上的
原型開發講座視頻很不錯”

00:03:10.357 --> 00:03:11.358 
“來一盤吐司麪包”

00:03:12.292 --> 00:03:15.362 
“需要記住：第一開發虛擬APP
第二：我忘了...”

00:03:17.297 --> 00:03:18.532 
“我爲感到驕傲”我的媽媽

00:03:21.635 --> 00:03:24.538 
今天的講座不容錯過

00:03:25.372 --> 00:03:29.309 
我們將推出全新的革命性的
Toast Modern產品

00:03:29.610 --> 00:03:32.946 
它建立在Toast Modern的
成功基礎之上

00:03:33.981 --> 00:03:36.917 
我們還會介紹Apple和合作夥伴

00:03:37.584 --> 00:03:40.087 
進行iWatch原型開發背後的小故事

00:03:41.455 --> 00:03:44.091 
我們將會創建一個設備
和連接到這個設備的APP

00:03:44.858 --> 00:03:49.096 
我們將會介紹一些
硬件和軟件原型開發策略

00:03:50.664 --> 00:03:53.834 
今天我將向你們展示
Toast Modern產品

00:03:53.901 --> 00:03:55.402 
你們想看到它嗎？

00:04:00.207 --> 00:04:01.041 
好極了

00:04:02.476 --> 00:04:05.679 
這是一個

00:04:07.748 --> 00:04:10.083 
革命性的連網

00:04:11.318 --> 00:04:18.257 
社交大數據互聯網APP

00:05:24.958 --> 00:05:25.792 
謝謝

00:05:26.426 --> 00:05:27.261 
非常感謝

00:05:33.767 --> 00:05:37.271 
我們將它稱爲
Toastal Service

00:05:40.040 --> 00:05:43.877 
這是世界首個社交面包機

00:05:46.213 --> 00:05:48.515 
讓你能夠發送Toast消息

00:05:49.016 --> 00:05:50.817 
給你的親朋友好友

00:05:51.885 --> 00:05:56.023 
它有三種顏色：銀色

00:05:56.857 --> 00:05:59.693 
太空灰和18K金色

00:06:08.035 --> 00:06:09.169 
我們不僅有iPhone

00:06:09.369 --> 00:06:10.337 
還有Toaster

00:06:11.205 --> 00:06:13.340 
它們都具有強大的功能

00:06:13.707 --> 00:06:15.809 
iPhone擁有美觀的界面

00:06:16.743 --> 00:06:18.011 
它連接到互聯網

00:06:19.179 --> 00:06:20.280 
而且始終陪伴在你身邊

00:06:20.747 --> 00:06:23.650 
我們的吐司麪包機將麪包變成吐司麪包

00:06:24.818 --> 00:06:27.120 
我們想要組合它們的功能

00:06:28.388 --> 00:06:30.791 
我們想要模糊硬件和軟件之間的界線

00:06:30.858 --> 00:06:32.492 
創造完美的混合體

00:06:33.093 --> 00:06:35.963 
我想到有一個產品已經做到這一點

00:06:37.798 --> 00:06:39.099 
那就是Apple Watch

00:06:41.268 --> 00:06:44.238 
你們可能會認爲
在Apple設計師構想出

00:06:44.771 --> 00:06:50.878 
完整的Apple Watch
設計方案然後進行生產再交付給你們

00:06:52.412 --> 00:06:56.049 
而實際上我們的做法是在其他設備上

00:06:56.116 --> 00:06:59.286 
模擬Watch讓我們
能夠試驗界面功能

00:06:59.920 --> 00:07:03.724 
這是成熟的Apple watch
它與現在的成品基本相同

00:07:04.424 --> 00:07:07.961 
它的初始設計是一個矩形
我們使用這個界面

00:07:08.328 --> 00:07:12.299 
來試驗我們想要添加到Watch的
各種功能以確保完美的用戶體驗

00:07:12.366 --> 00:07:13.567 
我們可能添加

00:07:14.434 --> 00:07:17.137 
一個數字表冠並顯示在屏幕上

00:07:17.204 --> 00:07:19.940 
進行滾動操作以理解它的工作方式

00:07:20.374 --> 00:07:21.808 
並試驗各種按鈕功能

00:07:22.809 --> 00:07:26.880 
這是一個很好的方法
讓我們能夠更好地理解Watch界面

00:07:26.980 --> 00:07:28.549 
和測試它的功能

00:07:28.982 --> 00:07:34.655 
但是你不能把iPhone
綁在你的手腕上走出戶外嘗試使用它。

00:07:35.022 --> 00:07:39.193 
我們的一些APP開發合作伙伴
在開發Watch APP時

00:07:39.259 --> 00:07:42.863 
Watch還沒有正式推出
但是他們想出一些好辦法

00:07:43.864 --> 00:07:46.600 
比如這個French
Transit APP

00:07:47.000 --> 00:07:48.702 
他們製造自己的
Apple Watch

00:07:49.136 --> 00:07:50.971 
看上去很簡陋但是很有用 

00:07:51.572 --> 00:07:55.342 
他們繪製了一些不同的屏幕圖片

00:07:56.410 --> 00:07:59.112 
然後在Watch內滑動這些圖片
這很重要

00:07:59.413 --> 00:08:00.714 
這是一個火車時刻表APP

00:08:01.081 --> 00:08:04.818 
我需要知道它是否能夠顯示我已經
趕不上的車次

00:08:05.118 --> 00:08:06.854 
我可以趕得上的車次

00:08:07.054 --> 00:08:08.455 
他們需要在實際環境中進行測試

00:08:09.489 --> 00:08:11.725 
German新聞報紙Bild
打印了一張

00:08:11.792 --> 00:08:15.662 
Apple Watch圖片在其下方
滑動顯示不同的內容

00:08:16.363 --> 00:08:18.832 
他們需要進行測試

00:08:19.099 --> 00:08:22.202 
確保他們的文章
在Apple Watch容易識讀

00:08:24.938 --> 00:08:28.141 
關於硬件和軟件原型開發
我們有一些經驗和教訓

00:08:29.510 --> 00:08:31.712 
我們知道我們可以在屏幕上模擬硬件

00:08:31.879 --> 00:08:33.380 
就像Apple
Watch那樣

00:08:35.148 --> 00:08:36.750 
我們可以使用圖片來模擬軟件

00:08:36.817 --> 00:08:39.152 
去年我們曾經使用
Toast Modern進行過講解

00:08:39.919 --> 00:08:43.724 
我們需要在應用環境中
以合適尺寸在適當位置進行測試

00:08:43.991 --> 00:08:46.927 
就像我們剛纔看到的
紙質Watch原型那樣

00:08:49.329 --> 00:08:51.298 
這是我們去年的原型開發流程

00:08:51.365 --> 00:08:54.501 
開發虛擬設備展示給消費者
聽取他們的意見

00:08:55.669 --> 00:08:58.572 
今年我們將開發虛擬硬件和軟件

00:08:59.373 --> 00:09:03.243 
在此之前我們需要
問我們自己三個重要的問題

00:09:04.411 --> 00:09:05.712 
哪些內容需要變得更真實？

00:09:07.147 --> 00:09:08.248 
哪些項目可以進行模擬？

00:09:08.315 --> 00:09:11.518 
除了那些必須真實的項目之外
其他所有一切都可以模擬

00:09:12.719 --> 00:09:14.254 
最後一個問題設備將在哪裏使用？

00:09:14.955 --> 00:09:16.890 
然後我們將進行開發
並且展示我們的成果

00:09:19.560 --> 00:09:20.627 
我們應該展示給誰呢？

00:09:21.228 --> 00:09:22.529 
你的APP用戶

00:09:22.829 --> 00:09:24.598 
如果你的辦公室同事不是你的用戶

00:09:24.831 --> 00:09:25.799 
你應該去找目標用戶

00:09:26.867 --> 00:09:29.970 
去哪裏找？
去人們可能使用它的地方找

00:09:30.103 --> 00:09:31.305 
你需要走出去

00:09:31.939 --> 00:09:37.177 
請記住不要與你的潛在用戶
進行爭議辯解或忽略其意見

00:09:37.544 --> 00:09:40.480 
你需要了解他們對你的原型產品的印象

00:09:42.082 --> 00:09:45.152 
將原型產品展示給潛在用戶之後
我們獲知他們的反饋意見

00:09:46.954 --> 00:09:49.089 
然後我們問自己三個問題：

00:09:49.590 --> 00:09:50.824 
第一 哪些功能正常運行？

00:09:51.458 --> 00:09:53.060 
第二 哪些功能不能運行？

00:09:53.360 --> 00:09:56.730 
第三 我們可以獲得哪些其他想法？

00:09:58.265 --> 00:10:00.567 
今天我們需要重複這個流程三次

00:10:00.934 --> 00:10:02.369 
我想向你們介紹一些不同的技術

00:10:02.903 --> 00:10:05.072 
我們首先從圖片和動畫開始

00:10:05.672 --> 00:10:08.175 
然後我們將使用其背後的技術

00:10:09.176 --> 00:10:13.447 
之後我們將創建一個
輕量級交互式聯網原型

00:10:15.048 --> 00:10:17.751 
我想要簡單回顧一下
Toastal Service

00:10:18.752 --> 00:10:21.121 
這是世界首個具有
社交功能的吐司麪包機

00:10:22.222 --> 00:10:24.591 
你可以接收吐司麪包消息
我們稱之爲Toastie

00:10:26.326 --> 00:10:27.494 
也可以發送吐司麪包消息

00:10:28.128 --> 00:10:30.697 
讓我們來體驗這個神奇的麪包機

00:10:31.398 --> 00:10:33.934 
在開始之前我想請馬特烏斯上臺

00:10:39.940 --> 00:10:40.774 
謝謝傑夫

00:10:42.276 --> 00:10:44.912 
很好 我們應該怎樣開始呢？

00:10:46.480 --> 00:10:50.050 
首先讓我們來看我們的硬件和APP

00:10:50.651 --> 00:10:53.020 
我們需要問自己一些問題
傑夫前面講過這些問題

00:10:53.620 --> 00:10:56.890 
首先哪些內容應該變得更真實？

00:10:59.326 --> 00:11:04.331 
讓我們首先來看接收消息和烤麪包功能

00:11:04.665 --> 00:11:09.837 
在硬件上讓我們來想辦法  
提示已經接收到Toastie

00:11:10.771 --> 00:11:14.041 
在APP上我們考慮使用
新Toastie通知

00:11:14.541 --> 00:11:17.678 
思考APP可以顯示哪些類型的信息

00:11:19.346 --> 00:11:21.548 
下一個問題是
我們可以模擬哪些項目？

00:11:22.482 --> 00:11:26.086 
這時我們應該開動腦筋

00:11:26.153 --> 00:11:28.121 
我們並不打算建造一臺吐司麪包機

00:11:28.188 --> 00:11:30.657 
我們要做的事情並不是
把麪包變成吐司麪包

00:11:31.358 --> 00:11:33.460 
我們要做的是在設備上放幾張圖片

00:11:33.527 --> 00:11:35.028 
然後模擬硬件工作方法

00:11:36.296 --> 00:11:41.602 
在APP上我們使用
圖片來表示所有的內容

00:11:41.768 --> 00:11:43.904 
我們並不想要實現真實的交互功能

00:11:43.971 --> 00:11:46.106 
而且不會編寫任何代碼

00:11:48.442 --> 00:11:50.911 
第三個問題 產品將在哪裏使用？

00:11:52.045 --> 00:11:54.681 
吐司麪包機的使用位置是廚房

00:11:54.915 --> 00:11:58.418 
APP則可以在家裏的
任何位置使用 這是肯定的

00:12:01.054 --> 00:12:03.357 
讓我們來看我們的Toaster

00:12:05.425 --> 00:12:09.563 
我們說過我們想要通過
在屏幕上顯示圖片來模擬硬件

00:12:09.730 --> 00:12:13.500 
這聽上去很像傑夫剛纔所說的

00:12:13.600 --> 00:12:16.537 
在iPhone上
模擬Apple Watch

00:12:17.804 --> 00:12:21.708 
幸運的是Apple還生產一種與
Toaster的形狀相似的產品它就是iPad

00:12:22.743 --> 00:12:24.511 
在這裏我們可以使用它

00:12:26.013 --> 00:12:29.116 
爲了畫出我們的Toaster
我準備使用keynote

00:12:30.017 --> 00:12:34.421 
你們可以使用自己熟悉的軟件

00:12:34.922 --> 00:12:37.991 
我將會使用keynote
你可以使用自己喜歡的軟件

00:12:40.160 --> 00:12:42.262 
我將會盡可能簡單化

00:12:43.330 --> 00:12:47.868 
Toaster實際上是一個盒子
有幾個支腳一個控制桿

00:12:48.936 --> 00:12:50.871 
也許我們應該將它稱爲數字操控杆

00:12:52.506 --> 00:12:55.042 
還有一個插槽你可以插入一塊麪包

00:12:56.176 --> 00:12:58.045 
我們還說過我們想要指示

00:12:58.512 --> 00:13:00.814 
收到的新Toastie

00:13:00.881 --> 00:13:03.417 
我們在這裏設置一個
LED燈它可以變亮

00:13:05.586 --> 00:13:09.489 
在Keynote我將添加
幾片面包給這個Toaster

00:13:10.557 --> 00:13:12.359 
這是正在製作
吐司麪包的Toaster

00:13:12.659 --> 00:13:15.062 
最終將會有一個Toastie彈出來

00:13:15.128 --> 00:13:16.263 
讓我們看看上面寫着什麼

00:13:17.130 --> 00:13:18.298 
我們可以取出它

00:13:18.599 --> 00:13:21.201 
我們可以在iPad
的Keynote中打開它

00:13:22.169 --> 00:13:23.370 
這樣一個Toaster就完成了

00:13:25.572 --> 00:13:27.241 
對於app我們想要做相似的事情

00:13:27.307 --> 00:13:31.411 
我們進入主屏幕
這是iPhone主屏幕上的屏幕截圖

00:13:31.478 --> 00:13:33.113 
我們將APP圖標放在上面

00:13:34.581 --> 00:13:37.351 
我們將截取一張屏幕截圖

00:13:37.684 --> 00:13:41.488 
作爲APP背景圖它是可以自定義的

00:13:42.756 --> 00:13:43.590 
就是這麼簡單

00:13:45.225 --> 00:13:48.529 
對於我們的APP我們想要使用
一張Toast Modern截圖

00:13:48.629 --> 00:13:50.631 
這個APP是我們去年推出的

00:13:51.465 --> 00:13:55.569 
你可以看到 在左上角
有一個方便的打開位置

00:13:55.669 --> 00:14:00.107 
十分適合放置我們的
Toaster收件箱鏈接

00:14:00.440 --> 00:14:04.645 
在這裏我將會放上Toaster圖標
和一個通知小圖標

00:14:07.414 --> 00:14:13.120 
在Toaster 收件箱中
我將使用麪包片作爲佔位標記

00:14:13.187 --> 00:14:15.856 
因爲我們不想隱藏
Toastie上顯示的內容

00:14:15.923 --> 00:14:17.925 
我不想打消

00:14:17.991 --> 00:14:21.562 
你在等待你的吐司麪包片時
的熱切期待心情和驚喜時刻

00:14:22.496 --> 00:14:25.832 
我們還會顯示
這個Toastie的發送者

00:14:26.333 --> 00:14:29.803 
我們會放置一張圖片
在這裏顯示發送者的姓名

00:14:30.671 --> 00:14:33.373 
還會添加發送日期和時間

00:14:34.608 --> 00:14:36.143 
我想我們還應該能夠

00:14:36.210 --> 00:14:39.179 
設置麪包的烤制時間

00:14:39.246 --> 00:14:40.314 
這些效果會更好

00:14:41.381 --> 00:14:43.250 
對此我們只需要在這裏
使用一個滑動條

00:14:46.587 --> 00:14:52.059 
現在讓我們在iPhone上
打開它看看它

00:14:52.125 --> 00:14:53.527 
在實際設備上的效果

00:14:56.063 --> 00:14:57.464 
這看上去像是一個真實的APP

00:14:57.564 --> 00:14:59.900 
但實際上是一個完全虛假的app

00:15:01.201 --> 00:15:04.004 
現在讓我們來看它們如何配合工作

00:15:06.673 --> 00:15:08.575 
你可以看到當我點擊屏幕

00:15:08.642 --> 00:15:10.944 
顯示通知打開APP

00:15:11.245 --> 00:15:12.579 
以進入收件箱

00:15:14.214 --> 00:15:20.120 
在Toaster你會看到
LED已經在閃爍

00:15:20.988 --> 00:15:22.956 
然後我可以點擊插入一些麪包

00:15:23.590 --> 00:15:25.726 
我再次點擊下拉數字操控杆

00:15:26.460 --> 00:15:29.830 
幾秒鐘之後
Toastie將會彈出麪包片

00:15:30.664 --> 00:15:31.965 
讓我們看看上面顯示什麼

00:15:32.966 --> 00:15:33.934 
到此一切正常

00:15:34.968 --> 00:15:37.538 
我可以立即將它取出來
顯示給我的朋友們看

00:15:37.671 --> 00:15:39.806 
聽取他們的意見

00:15:39.940 --> 00:15:41.575 
從中獲得有價值的信息

00:15:43.544 --> 00:15:44.711 
它們是怎麼運作的呢？

00:15:47.014 --> 00:15:51.185 
LED看起來能夠
很好地指示新Toastie

00:15:51.752 --> 00:15:55.289 
APP上的通知告訴
我們有了新的Toastie

00:15:55.355 --> 00:15:57.257 
即使我們不在廚房之中

00:15:57.824 --> 00:16:00.060 
滿懷期待地盯着我們吐司麪包機

00:16:01.295 --> 00:16:04.898 
有一個不太完美的事情是
很多人對向我們問起過

00:16:05.032 --> 00:16:07.801 
如果有多個
Toastie將會怎麼樣？

00:16:08.535 --> 00:16:11.238 
確實此如我們的設計
並沒有很好地考慮到這一點

00:16:12.673 --> 00:16:15.976 
那麼對於這種情況
我們應該怎麼做呢？

00:16:17.010 --> 00:16:21.081 
也許我們會
升級Toaster上的Led

00:16:21.281 --> 00:16:23.483 
也許我們的APP會顯示
一個Toastie清單

00:16:23.550 --> 00:16:25.052 
而不是僅顯示一個Toastie

00:16:27.120 --> 00:16:28.589 
讓我們再次從最頂層開始

00:16:30.157 --> 00:16:33.393 
讓我們來看我們的硬件和APP

00:16:34.494 --> 00:16:36.396 
在這個階段讓我們問自己

00:16:36.463 --> 00:16:37.965 
哪些內容需要變得更加真實？

00:16:39.600 --> 00:16:42.202 
我們需要硬件能夠
處理多個Toastie

00:16:42.269 --> 00:16:43.470 
並且烤制合適的麪包片

00:16:43.670 --> 00:16:46.406 
在APP上我們希望
能夠瀏覽Toastie

00:16:46.573 --> 00:16:48.041 
選擇我們想要的Toastie

00:16:48.709 --> 00:16:49.977 
那麼我們可以虛擬哪些內容呢？

00:16:50.677 --> 00:16:52.412 
我們仍然需要虛擬儘可能多的內容

00:16:52.479 --> 00:16:55.415 
在兩個設備之間不會有真實的連接

00:16:55.849 --> 00:16:59.253 
我們還不觸及與實際的麪包烤制
相關的任何內容

00:17:01.154 --> 00:17:03.390 
對於APP的數據發送和接收

00:17:03.490 --> 00:17:07.594 
我們也需要進行虛擬
我們的UI仍然還是圖片和動畫

00:17:08.862 --> 00:17:11.330 
那麼用戶將在哪裏使用產品？
這和前面一樣

00:17:11.565 --> 00:17:14.835 
Toaster在廚房中使用
而APP則可以在任何地方使用

00:17:16.435 --> 00:17:17.838 
讓我們再次來看Toaster

00:17:19.473 --> 00:17:22.108 
前面我們說過我們想要更改LED

00:17:22.175 --> 00:17:24.877 
在這裏我們可以使用一個
點陣式顯示屏

00:17:25.345 --> 00:17:28.348 
我們可以指示
收到多少個Toastie

00:17:29.449 --> 00:17:33.086 
我們不會在Toaster的這個位置

00:17:33.153 --> 00:17:36.623 
使用高分辨率觸摸屏
因爲這會增大產品生產難度

00:17:36.690 --> 00:17:38.325 
而且會導致價格上升

00:17:38.625 --> 00:17:41.662 
我們並不需要重複提供
手機上已經存在的功能

00:17:42.129 --> 00:17:43.497 
我們將保持簡單的硬件設計

00:17:44.097 --> 00:17:46.033 
並將重點放在手機上的複雜功能

00:17:47.534 --> 00:17:51.839 
因此我們將更多的
Toastie添加到的收件箱之中

00:17:52.105 --> 00:17:55.742 
我們可以輕鬆滑動
選擇我們想要烤制的麪包片

00:17:56.677 --> 00:17:59.680 
我們創建一個狀態指示已經選擇
一個不同的Toastie

00:18:00.948 --> 00:18:04.284 
我們將增加一個APP顯示屏幕

00:18:04.551 --> 00:18:06.053 
顯示Toaster正在進行烤制

00:18:06.186 --> 00:18:07.788 
在頂部我們添加一個倒計時

00:18:08.088 --> 00:18:12.226 
顯示還需要等待多長時間
就可以吃到美味的吐司麪包片

00:18:12.926 --> 00:18:17.798 
最後 Toastie烤制完畢
重新顯示在清單上

00:18:17.931 --> 00:18:20.400 
我們可以看到APP上的內容

00:18:22.970 --> 00:18:26.139 
我們有一個iPhone

00:18:27.941 --> 00:18:30.577 
讓iPhone運行Keynote 

00:18:30.644 --> 00:18:35.015 
繪製的虛擬APP iPad運行
keynote繪製的虛擬Toaster

00:18:35.415 --> 00:18:41.522 
利用它們我們開始播放
更貼近現實的產品運行情況

00:18:42.022 --> 00:18:44.725 
兩個設備上都顯示一個通知

00:18:45.559 --> 00:18:46.460 
我們打開APP

00:18:46.527 --> 00:18:48.929 
進入收件箱選擇
一個不同的Toastie

00:18:49.696 --> 00:18:51.665 
我們添加一些麪包片到Toaster

00:18:52.299 --> 00:18:53.667 
按下數字操控杆

00:18:53.934 --> 00:18:58.605 
最後兩個設備上都彈出Toastie

00:18:59.473 --> 00:19:00.407 
看起來很不錯

00:19:01.608 --> 00:19:04.077 
不幸的是我們發現了一個嚴重的問題

00:19:04.811 --> 00:19:08.782 
當我們測試產品時
當我們把它們放在一起

00:19:08.849 --> 00:19:12.419 
發現並不能通過點擊觸控功能

00:19:12.486 --> 00:19:15.722 
讓它們協調一致地工作

00:19:16.723 --> 00:19:20.994 
更現實的情況是
Toaster始終在廚房裏

00:19:21.395 --> 00:19:23.597 
而APP將會隨着你到各個不同的位置

00:19:24.298 --> 00:19:26.900 
這是一種基本的使用情況

00:19:27.201 --> 00:19:28.635 
你收到通知

00:19:28.902 --> 00:19:31.205 
走到Toaster跟前進行一些操作

00:19:31.271 --> 00:19:33.307 
機器開始烤制面包然後你走開

00:19:33.373 --> 00:19:35.242 
去刷牙或者幹別的事情

00:19:36.143 --> 00:19:37.945 
最後Toastie烤制完成

00:19:38.111 --> 00:19:39.446 
你回到Toaster那裏

00:19:39.580 --> 00:19:41.882 
如果你不知道這種應用情景

00:19:42.249 --> 00:19:44.985 
你就不能切合實際地測產品

00:19:46.520 --> 00:19:48.889 
我們如何讓兩個原型設備

00:19:49.189 --> 00:19:51.658 
在一定的距離相互通信呢？

00:19:52.359 --> 00:19:54.127 
我們應該如何做到這一點

00:19:54.194 --> 00:19:56.096 
而不需要花費額外的力氣呢？

00:19:56.163 --> 00:19:59.666 
我想繼續使用我們
使用keynote繪製的原型設備

00:20:01.068 --> 00:20:04.538 
我們發現我們的團隊
擁有十分便捷的技術

00:20:05.005 --> 00:20:06.039 
正好適用於這種情況

00:20:06.640 --> 00:20:07.975 
讓我展示給你們看

00:20:11.211 --> 00:20:14.815 
你可以看到在手機上
這仍然是Keynote繪製的原型設備

00:20:16.216 --> 00:20:19.553 
但是現在通知確實自己出現了

00:20:20.554 --> 00:20:22.289 
我們可以點擊打開APP

00:20:22.756 --> 00:20:25.893 
然後選擇想要烤制的Toastie

00:20:27.394 --> 00:20:28.428 
在Toaster上

00:20:30.063 --> 00:20:32.933 
你可以看到我們仍然可以點擊
插入一些麪包片

00:20:33.467 --> 00:20:35.969 
我們來看app當按下
操控杆時會發生什麼

00:20:36.703 --> 00:20:39.006 
APP將會實時進行響應

00:20:40.240 --> 00:20:43.810 
當Toastie返回到
 完成烤制狀態時

00:20:45.179 --> 00:20:47.080 
它同時顯示在兩個設備上

00:20:49.249 --> 00:20:50.317 
這看上去很不錯

00:20:51.385 --> 00:20:52.686 
但是我們如何做到這一點呢？

00:20:53.654 --> 00:20:56.857 
這些還只是設備上的圖片

00:20:56.924 --> 00:21:00.160 
我們還沒有編寫一行代碼

00:21:02.229 --> 00:21:05.165 
我們有一個祕密武器比代碼更酷

00:21:05.232 --> 00:21:08.101 
更快速 更智能

00:21:15.475 --> 00:21:17.244 
我們稱之爲...

00:21:22.349 --> 00:21:24.218 
我們稱之爲幕後技術

00:21:24.818 --> 00:21:27.654 
它實際上是一個人假扮成電腦

00:21:29.089 --> 00:21:31.558 
在這個例子中
這個人就是我 在沙發後面

00:21:31.725 --> 00:21:37.097 
使用兩個keynote繪製的遙控器
它們連接到iPhone和iPad

00:21:37.831 --> 00:21:41.268 
遠程控制每個設備的狀態

00:21:41.535 --> 00:21:44.271 
並執行原型設備上的點擊操作

00:21:44.838 --> 00:21:48.275 
當你在APP上進行操作時
我可以按一下搖控器

00:21:48.509 --> 00:21:49.810 
然後Toaster做出反應

00:21:50.344 --> 00:21:53.947 
這樣我們就完美地模擬了
實際的操控體驗

00:21:54.014 --> 00:21:56.083 
而我們並沒有做任何事情來實現它

00:21:57.251 --> 00:21:59.453 
在Apple我們經常開這樣的玩笑

00:21:59.520 --> 00:22:00.787 
我們假裝讓人們相信

00:22:00.854 --> 00:22:04.558 
我們實現了一些非常神奇的技術

00:22:04.958 --> 00:22:07.594 
就像我們展示原型設備時所做的那樣

00:22:07.661 --> 00:22:08.729 
實際上背後的祕密是

00:22:09.463 --> 00:22:12.499 
團隊的一些人某個角落
控制這些原型設備

00:22:14.301 --> 00:22:17.070 
我們將這種更貼合實際的構造

00:22:17.371 --> 00:22:19.506 
展示給我們的朋友們看
並徵求他們的意見

00:22:26.513 --> 00:22:27.915 
我們詢問他們哪些功能工作正常

00:22:28.315 --> 00:22:31.418 
從許多Toastie中選擇一個

00:22:31.652 --> 00:22:34.188 
然後進行烤制這個任務完成得很好

00:22:35.455 --> 00:22:36.857 
那麼哪些功能不能正常運行呢？

00:22:36.924 --> 00:22:40.027 
雖然我們原型開發
花費了我們很大的力氣

00:22:40.661 --> 00:22:43.463 
但是設備仍然不能真正連接
和快速做出響應

00:22:44.631 --> 00:22:45.732 
對此我們可以做什麼呢？

00:22:46.767 --> 00:22:49.069 
也許我們可以讓Toaster

00:22:49.136 --> 00:22:52.439 
快速響應APP中的輸入反之亦然

00:22:53.574 --> 00:22:56.777 
爲此我們需要一步步地
設置我們的原型開發計劃

00:22:56.977 --> 00:22:58.679 
現在我想請比爾上臺

00:22:58.846 --> 00:23:00.047 
爲你們介紹如何做到這一點

00:23:04.418 --> 00:23:07.487 
謝謝馬特烏斯 做得不錯

00:23:08.055 --> 00:23:09.389 
大家好 我是比爾

00:23:10.357 --> 00:23:13.126 
我花費了幾天的時間

00:23:13.193 --> 00:23:16.363 
來試驗這個絕祕Apple硬件
它確實很不錯

00:23:18.599 --> 00:23:20.734 
現在我想向你們介紹我們的流程

00:23:20.801 --> 00:23:22.603 
爲你們提供一點經驗

00:23:23.070 --> 00:23:27.741 
讓你們更好地設計自己的絕祕硬件
或你們還沒有問世的產品

00:23:34.982 --> 00:23:37.284 
在進行幾次迭代之後
我們對馬特烏斯爲我們

00:23:37.351 --> 00:23:39.686 
開發的設計已經比較滿意

00:23:41.455 --> 00:23:43.457 
但是對於這些
Keynote繪製的原型設備

00:23:43.524 --> 00:23:44.925 
它們的功能還很有限

00:23:45.225 --> 00:23:48.028 
我們可以切換各種狀態進行模擬

00:23:48.896 --> 00:23:50.564 
但是還沒有實現真正的交互功能

00:23:51.231 --> 00:23:53.200 
例如數字操控杆

00:23:53.700 --> 00:23:56.270 
我們不能上下扳動它而這是很重要的

00:24:03.043 --> 00:24:06.947 
因此我們回到前面的三個問題

00:24:07.481 --> 00:24:10.717 
並決定如何增強這些
原型設備的真實功能

00:24:11.084 --> 00:24:15.822 
實現可交互性和連通讓它們變得更好

00:24:18.458 --> 00:24:19.793 
哪些項目需要變得更真實在？

00:24:20.861 --> 00:24:24.031 
在硬件方面我們想要安裝
一個數字操控杆

00:24:25.299 --> 00:24:29.203 
我們將想要
將Toaster的狀態關聯到APP

00:24:30.671 --> 00:24:35.976 
在APP方面我們想要
允許朋友查看收件箱中的Toastie

00:24:36.944 --> 00:24:39.446 
選擇Toastie進行烤制

00:24:42.049 --> 00:24:43.183 
我們希望虛擬這些功能

00:24:43.250 --> 00:24:44.451 
我們如何繼續進行虛擬呢?

00:24:45.953 --> 00:24:48.856 
請不要擔心服務器 烤箱界面

00:24:49.256 --> 00:24:50.691 
以及麪包變成吐司麪包的過程

00:24:52.159 --> 00:24:56.129 
在APP側我們應該保持
消除隊列的完全封閉狀態

00:24:56.430 --> 00:24:58.498 
而且也不需改變Toastie狀態

00:24:58.966 --> 00:25:01.201 
我們將在設備上用圖片來表示它們

00:25:01.268 --> 00:25:03.604 
我們不會在設備之間

00:25:04.471 --> 00:25:06.039 
無線傳輸和發送消息

00:25:08.909 --> 00:25:10.677 
我們將在哪裏使用這些設備呢？

00:25:11.478 --> 00:25:14.414 
我們將會在廚房使用Toaster

00:25:15.582 --> 00:25:18.418 
APP可以在任何位置使用
當你想吃東西時可能會使用它

00:25:19.086 --> 00:25:21.522 
也許在你起牀後
第一件事就是打開這個APP

00:25:24.258 --> 00:25:27.694 
我們應該問我們自己
將下來最需要做的事情是什麼？

00:25:31.498 --> 00:25:34.201 
馬特烏斯說過他想要
連接Toaster和APP

00:25:34.768 --> 00:25:36.570 
我們開始搗鼓一臺
真實的Toaster

00:25:37.171 --> 00:25:39.406 
爲它裝上微型控制器

00:25:39.473 --> 00:25:43.110 
也許會裝上無線收發器
和LED指示燈

00:25:43.177 --> 00:25:45.179 
讓顯示界面變得好看一些

00:25:46.079 --> 00:25:47.114 
也許這個辦法行得通

00:25:48.382 --> 00:25:51.652 
但是我們並不會付出太多的精力
來實現這個設計

00:25:51.718 --> 00:25:54.221 
因爲這已經非常接近最終的真實設備

00:25:57.191 --> 00:25:59.893 
也許現在應該3D打印
一個Toaster模型

00:26:00.527 --> 00:26:03.830 
使用激光切割機
開始定製Toastie

00:26:06.266 --> 00:26:08.402 
說實話我們總是喜歡

00:26:08.502 --> 00:26:10.370 
找藉口使用3D打印機和激光切割機

00:26:16.243 --> 00:26:17.878 
做這個幻燈片是有意思的事情

00:26:18.245 --> 00:26:22.516 
但是 這看上去 有一點本末倒置

00:26:23.550 --> 00:26:27.988 
那麼是否可以使用一個
虛擬現實Toaster？

00:26:41.668 --> 00:26:44.238 
這看起來很不錯 趣味十足

00:26:44.304 --> 00:26:47.841 
但是Toaster虛擬控制技術
還是五年以後的事情我們必須放棄它

00:26:49.576 --> 00:26:53.480 
事實上這三個例子都有相同之處

00:26:53.947 --> 00:26:56.750 
它們會讓我們分心
而偏離我們的當前任務

00:26:57.084 --> 00:26:58.719 
即設計良好的用戶體驗

00:27:01.588 --> 00:27:04.324 
到這裏我們需要開始進行工程設計

00:27:05.192 --> 00:27:07.895 
我們的工程設計任務是
改進我們的設計

00:27:07.961 --> 00:27:10.130 
讓我們進行更深入的研究

00:27:11.331 --> 00:27:13.500 
這樣當我們實際這樣的設備時

00:27:13.634 --> 00:27:15.302 
我們就知道我們的做法是正確的

00:27:17.237 --> 00:27:18.805 
現在請大家思考

00:27:19.740 --> 00:27:22.910 
從原型設備的功能來看
一臺Toaster應該是什麼樣的？

00:27:24.111 --> 00:27:26.880 
它不是一個麪包加熱設備

00:27:28.382 --> 00:27:29.750 
而是一個聯網狀態機

00:27:30.450 --> 00:27:33.153 
我的意思是它是一個
具有特定屬性的物理對象

00:27:33.487 --> 00:27:36.056 
這些屬性包括操控杆位置

00:27:36.123 --> 00:27:38.759 
是否有面包片 是否正在烤制信息等

00:27:39.293 --> 00:27:41.929 
我們需要知道這些屬性

00:27:42.129 --> 00:27:43.130 
如何響應用戶的輸入

00:27:44.131 --> 00:27:47.601 
我們可以輕鬆地使用軟件進行建模

00:27:51.004 --> 00:27:53.907 
我們將使用的keynote
繪製的原型設備

00:27:54.641 --> 00:27:55.742 
和Toaster APP

00:27:56.510 --> 00:27:57.911 
我們將在Swift中實現它們

00:27:59.580 --> 00:28:01.415 
我說在Swift實現

00:28:01.715 --> 00:28:05.452 
並不是說編寫一個完全可以運行
功能豐富的Swift APP

00:28:06.687 --> 00:28:09.756 
目前我們仍然使用屏幕截圖
表示這些原型設備

00:28:10.123 --> 00:28:12.392 
並使用動畫表示用戶觸摸操作

00:28:13.093 --> 00:28:16.029 
但是我們需要編寫一些代碼

00:28:16.096 --> 00:28:18.432 
實現一些比較複雜的功能

00:28:19.833 --> 00:28:21.435 
當然不一定必須使用Swift

00:28:21.568 --> 00:28:23.804 
也可以使用你喜歡的編程語言

00:28:24.071 --> 00:28:26.573 
你也可以使用具有更多交互功能的工具

00:28:27.040 --> 00:28:30.544 
但是在Apple
我們將會使用Swift

00:28:33.113 --> 00:28:36.583 
讓我們來定義想要實現的功能

00:28:37.017 --> 00:28:38.785 
這是一個
Toast-a-Toastie流程

00:28:40.487 --> 00:28:44.658 
第一步要做的是
從收件箱中取出一個Toastie

00:28:45.826 --> 00:28:49.162 
然後我們將
Toastie發送給Toaster

00:28:51.231 --> 00:28:54.701 
第三我們想要烤制
選定的Toastie

00:28:56.303 --> 00:28:59.206 
最後我們需要指示
Toastie烤制完成

00:29:01.575 --> 00:29:05.112 
這是我們的新交互式app原型

00:29:05.879 --> 00:29:09.383 
我們已經完成的事情是
將此流程轉換爲UI滾動視圖

00:29:09.449 --> 00:29:12.920 
讓我們的朋友能夠輕鬆
翻頁瀏覽各條消息

00:29:14.922 --> 00:29:16.857 
在底部有一個UI滑條

00:29:17.157 --> 00:29:19.893 
可以利用它選擇吐司麪包片的顏色

00:29:20.761 --> 00:29:23.730 
我們還會每個吐司麪包片
添加一個手勢識別器

00:29:23.797 --> 00:29:26.834 
讓我們能夠將
將它拉入虛擬Toaster

00:29:27.201 --> 00:29:28.702 
並模擬這個過程

00:29:30.470 --> 00:29:31.738 
讓我們來實際效果

00:29:34.541 --> 00:29:35.576 
我們啓動收件箱

00:29:36.577 --> 00:29:40.113 
你可以看到當我們掃動時
選擇的Toastie數量增加

00:29:41.915 --> 00:29:44.117 
我們可以調整烤麪包片顏色深度

00:29:48.288 --> 00:29:49.489 
然後我將要麪包片

00:29:49.556 --> 00:29:53.493 
拉入虛擬Toaster
將Toasting設置爲true

00:29:54.228 --> 00:29:56.964 
啓動一個動畫
顯示烤制完成的Toastie

00:30:05.906 --> 00:30:07.741 
很好 我們轉到Toaster

00:30:09.009 --> 00:30:11.512 
我們將爲數字操控杆
添加一個手勢識別器

00:30:12.513 --> 00:30:14.882 
當你開始向下拉動時它就開始烤制

00:30:14.948 --> 00:30:17.150 
將Toasting設置爲true
啓動計時器

00:30:17.985 --> 00:30:20.254 
我們還在底部增另一個分段控件

00:30:20.354 --> 00:30:22.623 
讓我們能夠輕鬆選擇需要烤制的消息

00:30:22.689 --> 00:30:24.157 
而不需要連接到APP

00:30:24.658 --> 00:30:27.461 
最後動畫將顯示烤制完成的麪包片

00:30:27.828 --> 00:30:28.762 
讓我們來看一看

00:30:31.064 --> 00:30:33.066 
我們選擇Toast將載入一個麪包片

00:30:33.367 --> 00:30:36.370 
當你把操控杆拉到1位置時

00:30:37.304 --> 00:30:40.440 
你可以看這個動畫

00:30:41.108 --> 00:30:43.877 
顯示在LED屏幕上

00:30:44.811 --> 00:30:46.013 
然後顯示烤制完成的麪包片

00:30:49.249 --> 00:30:51.185 
這是一個重要的階段

00:30:52.085 --> 00:30:53.987 
這種軟件建模技術非常有用

00:30:54.188 --> 00:30:57.891 
我們經常在工作中使用它

00:30:58.825 --> 00:31:01.562 
你可以設想製作一個聯網壁爐

00:31:01.795 --> 00:31:03.463 
然後使用HomeKit集成它

00:31:04.765 --> 00:31:08.035 
你可以使用你的投影儀或大屏幕電視機

00:31:08.468 --> 00:31:10.938 
設置壁爐的使用位置

00:31:11.071 --> 00:31:14.408 
然後模擬需要使用的控制功能

00:31:15.843 --> 00:31:18.445 
也許你在爲Apple Watch
開發地鐵時表APP

00:31:18.512 --> 00:31:20.113 
但是你還沒有APPle Watch

00:31:20.514 --> 00:31:24.651 
你可以在iPod顯示界面上進行虛擬
將iPod帶到地鐵站

00:31:24.785 --> 00:31:26.153 
在實際環境中使它

00:31:28.755 --> 00:31:30.457 
也許你在開發下一代無人機

00:31:31.325 --> 00:31:33.861 
你可以在iPhone上
模擬硬件控制器

00:31:34.094 --> 00:31:35.629 
將它捆綁到紙質原型設備上

00:31:35.929 --> 00:31:39.132 
當你移動設備時可以傳輸回陀螺儀

00:31:39.199 --> 00:31:42.469 
和加速儀數據如同在真實硬件上一樣

00:31:46.206 --> 00:31:49.309 
現在我們已經擁有交互式APP
和交互式Toaster

00:31:49.710 --> 00:31:52.212 
現在我們需要發送數據

00:31:52.379 --> 00:31:58.886 
從APP中拾取Toastie
將Toaster的物理狀態發送至APP

00:32:00.954 --> 00:32:02.389 
那麼最好的實現方法是什麼？

00:32:03.056 --> 00:32:06.593 
對你來說最好的方法就是
最簡單和最快速的方法

00:32:07.528 --> 00:32:09.863 
我們不會設計一個新的網絡API

00:32:10.497 --> 00:32:13.667 
我們在以後讓其他人來做這個工作
我們也無需擔心效率

00:32:14.201 --> 00:32:16.503 
如果你在瀏覽器中進行原型測試

00:32:17.004 --> 00:32:18.405 
你可能會使用Web套接字

00:32:20.240 --> 00:32:22.543 
如果你已經完成無人機
而且將手機連接到它

00:32:22.609 --> 00:32:24.978 
你可以使用O.S.C.
傳輸陀螺儀數據

00:32:26.847 --> 00:32:28.382 
也許你有一個後臺服務器

00:32:28.682 --> 00:32:30.717 
你可以使用HTTP請求

00:32:32.886 --> 00:32:35.889 
我知道你們有一些人
以前可能從來沒有進行過網絡層編程

00:32:36.757 --> 00:32:37.824 
因此應該創造性地思考

00:32:37.925 --> 00:32:39.927 
你可以使用合適的服務

00:32:40.661 --> 00:32:43.830 
來觀察兩個設備之間
發送和接收的消息

00:32:43.897 --> 00:32:45.032 
然後據此進行處理

00:32:45.732 --> 00:32:49.736 
也許你注意到當添加一張新照片
到共享照片流時

00:32:52.973 --> 00:32:57.477 
因此我們將使用多點端到端連接

00:32:58.078 --> 00:32:59.680 
我們的網絡看起來是這樣的

00:33:00.314 --> 00:33:02.649 
我們有兩部iPhone
連接到一個iPad

00:33:02.883 --> 00:33:04.718 
我們將這個網絡
稱爲Toast Talk

00:33:05.252 --> 00:33:07.654 
我們使用多點連接

00:33:07.788 --> 00:33:09.423 
是因爲它非常容易設置

00:33:09.923 --> 00:33:11.425 
它不需要服務器，

00:33:14.161 --> 00:33:16.363 
而且支持連接任意數量的設備

00:33:16.830 --> 00:33:18.966 
這是部分代碼

00:33:19.032 --> 00:33:20.467 
我們將使用這種連接方式

00:33:20.934 --> 00:33:22.469 
因爲我們的時間有限

00:33:22.536 --> 00:33:24.304 
我們想要創建一個會話

00:33:24.805 --> 00:33:28.609 
我們將這個網絡命名爲
Toast Talk接收任何

00:33:28.675 --> 00:33:30.811 
輸入數據並轉換爲字符串

00:33:32.746 --> 00:33:37.017 
我們選擇設備使用簡單易用的MC
Browser View Controller類

00:33:39.820 --> 00:33:42.856 
很容易設置 將名稱傳入構造函數

00:33:43.423 --> 00:33:45.292 
和會話之中

00:33:46.393 --> 00:33:49.329 
可以點擊按鈕
或在APP啓動時顯示此名稱

00:33:49.796 --> 00:33:51.965 
在連接之後 就可以忽略它了

00:33:53.867 --> 00:33:55.636 
我們應該發送和接收哪些消息？

00:33:56.637 --> 00:33:59.773 
APP原型需要向Toaster
告知Toastie數量

00:34:00.274 --> 00:34:01.775 
和烤麪包片顏色深度

00:34:03.644 --> 00:34:05.779 
當烤制開始和結束時

00:34:06.013 --> 00:34:08.549 
Toaster需要
發送操控杆位置信息

00:34:11.585 --> 00:34:13.253 
只需要很少的代碼就可以了

00:34:13.786 --> 00:34:17.391 
只需要將字符串轉換爲數據
併發送給會話

00:34:18.625 --> 00:34:21.328 
這個例子顯示
如何發送操控杆位置信息

00:34:21.762 --> 00:34:24.864 
我們需要表明已經收到消息
即操控杆位置

00:34:24.998 --> 00:34:27.601 
添加參數名稱並傳遞參數值

00:34:28.467 --> 00:34:31.371 
這是一個隨意格式但是快速而簡單

00:34:32.306 --> 00:34:34.641 
我們通過這個參數傳遞接收消息

00:34:35.342 --> 00:34:37.511 
然後轉換消息名稱

00:34:37.844 --> 00:34:40.447 
將數據傳輸給相應的函數

00:34:42.149 --> 00:34:46.553 
這讓我們能夠在Toaster
和APP之間實現可靠的通信

00:34:47.353 --> 00:34:49.857 
你可以看到當上下拉動數字操控杆時

00:34:50.424 --> 00:34:51.491 
也會反映在APP上

00:34:54.293 --> 00:34:56.096 
看上去很不錯
我們實現了這個流程

00:34:56.530 --> 00:34:58.465 
我們擁有交互式
APP和Toaster

00:34:59.633 --> 00:35:00.467 
一切都很順利

00:35:00.868 --> 00:35:03.937 
我們將它提供給朋友讓他們試用

00:35:04.404 --> 00:35:05.239 
並聽取他們的意見

00:35:28.328 --> 00:35:32.132 
好 Toastal
Service已經完成了

00:35:34.067 --> 00:35:36.937 
請開始體驗吧 我們並沒有進行
大量的工程設計工作

00:35:38.405 --> 00:35:39.773 
讓我們來看看反饋意見

00:35:40.641 --> 00:35:43.911 
哪些功能運行正常？
顯然我們可以選擇收件箱中的消息

00:35:44.111 --> 00:35:45.412 
將它們發送至Toaster

00:35:45.479 --> 00:35:47.514 
這是一項基本功能

00:35:48.882 --> 00:35:49.750 
哪些功能不正常？

00:35:50.584 --> 00:35:52.452 
朋友們告訴我們有一點奇怪的是

00:35:52.519 --> 00:35:54.354 
當你在顏色滑動條上選擇顏色時

00:35:54.421 --> 00:35:57.558 
Toaster並不能顯示反饋信息

00:35:58.192 --> 00:36:00.861 
也許在下一輪原型測試迭代中

00:36:01.328 --> 00:36:04.798 
我們可以調整LED顯示顏色

00:36:04.865 --> 00:36:08.068 
以反映接收到的數據

00:36:08.435 --> 00:36:11.638 
並且記住顏色

00:36:12.272 --> 00:36:15.609 
最後我想請傑夫上臺

00:36:15.676 --> 00:36:17.911 
讓他爲我們進行總結 謝謝

00:36:21.615 --> 00:36:22.449 
謝謝比爾

00:36:24.051 --> 00:36:26.887 
感謝你們參加今天的講座

00:36:28.488 --> 00:36:30.157 
讓我來簡單進行回顧

00:36:30.791 --> 00:36:33.060 
我們使用圖片和動畫設計原型設備

00:36:33.460 --> 00:36:36.663 
讓我們很快能夠看到
Toaster的各種輸入和輸出

00:36:37.164 --> 00:36:39.099 
我們介紹了背後的技術

00:36:39.900 --> 00:36:42.336 
瞭解APP和設備如何配合工作

00:36:43.170 --> 00:36:46.473 
然後我們創建了一個
簡單的交互式聯網原型

00:36:47.174 --> 00:36:49.743 
讓我們可以嘗試
完整的端到端使用體驗

00:36:51.111 --> 00:36:53.413 
在這個過程中我們瞭解
Toaster的運行模式

00:36:54.515 --> 00:36:56.383 
我們不需要爲Toaster
設置烤制顏色深度

00:36:56.450 --> 00:36:58.185 
雖然這是大多數Toaster都具有的

00:36:59.052 --> 00:37:01.255 
我們需要在Toaster上
設置一個數字顯示屏

00:37:01.989 --> 00:37:04.958 
我們需要一個數字操控杆感應器
以便將消息發回至APP

00:37:05.592 --> 00:37:08.795 
我們很快就弄清楚了這些事情

00:37:10.330 --> 00:37:11.899 
我們節省了大量時間和金錢

00:37:12.132 --> 00:37:15.402 
設想一下，如果我們
要製造一臺真正的Toaster，

00:37:16.570 --> 00:37:18.839 
在這個過程中我們可以
獲得很多不錯的想法

00:37:19.806 --> 00:37:21.241 
所有這些都提醒我

00:37:21.608 --> 00:37:23.744 
進行原型開發的原因有兩個：

00:37:24.478 --> 00:37:26.780 
首先是驗證想法以節省開發APP功能

00:37:26.847 --> 00:37:29.016 
所需要的時間和金錢

00:37:30.250 --> 00:37:33.654 
其次是獲得新的想法
讓產品使用體驗更加完美

00:37:34.254 --> 00:37:35.289 
我們如何做到呢？

00:37:35.489 --> 00:37:36.456 
我們虛擬了一些功能

00:37:36.890 --> 00:37:39.393 
讓用戶使用這些功能並聽取他們的意見

00:37:41.562 --> 00:37:44.498 
我們反覆執行這個流程直到產品完善

00:37:46.533 --> 00:37:48.902 
你們應該執行這樣的流程

00:37:49.770 --> 00:37:51.572 
如果你開發一個
需要連接到APP的設備

00:37:51.972 --> 00:37:53.907 
在屏幕上虛擬它的功能

00:37:54.641 --> 00:37:55.542 
並在實際環境中試用

00:37:56.043 --> 00:37:59.613 
對於你的App應該使用圖片
進行虛擬並在環境中測試

00:38:00.113 --> 00:38:03.650 
對於二者之間的連接

00:38:04.585 --> 00:38:07.120 
應該使用所述的幕後技術
或進行簡單的模擬

00:38:08.889 --> 00:38:11.191 
你可以創建一個簡單網絡原型

00:38:12.092 --> 00:38:13.727 
如果你還沒有可用的設備

00:38:14.561 --> 00:38:18.765 
尤其是我們還未發佈的
新產品你無需等待

00:38:19.233 --> 00:38:21.235 
你可以在屏幕上虛擬在實際環境中測試

00:38:22.903 --> 00:38:24.471 
這是一些相關的信息

00:38:25.339 --> 00:38:26.673 
你可以參加一些相關講座

00:38:27.574 --> 00:38:31.345 
一個重要的講座是明天舉行的
“使用動畫進行設計”講座

00:38:31.812 --> 00:38:34.781 
我的同事將在3:30舉行這個講座
也是在這個房間

00:38:35.215 --> 00:38:36.717 
此講座將會對你們有所幫助

00:38:36.950 --> 00:38:37.985 
謝謝大家