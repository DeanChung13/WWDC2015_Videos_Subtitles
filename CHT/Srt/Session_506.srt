00:00:20.721 --> 00:00:22.890 
AV Foundation編輯電影

00:00:23.790 --> 00:00:27.427 
歡迎來到506號講座我是
蒂姆·門羅 是AVFoundation

00:00:27.494 --> 00:00:30.497 
工程團隊成員今天我和大家談談

00:00:30.564 --> 00:00:33.767 
在AVFoundation
編輯電影的問題

00:00:34.668 --> 00:00:36.603 
講述的內容很簡單

00:00:37.638 --> 00:00:40.240 
AVFoundation 
爲編輯QuickTime

00:00:40.307 --> 00:00:41.975 
電影文件提供新類

00:00:43.610 --> 00:00:45.946 
哦 好啦 你可以做得更好
我們來聽聽掌聲

00:00:47.714 --> 00:00:48.549 
謝謝

00:00:50.717 --> 00:00:53.053 
我對這樣的功能感到興奮

00:00:53.120 --> 00:00:56.356 
大家一會兒就會看到這會爲我所管理的

00:00:56.423 --> 00:00:59.259 
個人項目提供工具在過去十年左右

00:01:00.761 --> 00:01:04.230 
我都在忙着這件事兒在某種程度上

00:01:04.298 --> 00:01:07.768 
這爲我過去大約35年來所做的項目

00:01:07.835 --> 00:01:09.770 
帶來了新的高度

00:01:10.137 --> 00:01:14.441 
對此我可是投入巨大
希望大家喜歡今天的講座內容

00:01:15.442 --> 00:01:18.412 
我們可以編輯QuickTime 
電影文件意味着什麼

00:01:18.478 --> 00:01:20.414 
我們可以打開
QuickTime電影文件

00:01:20.948 --> 00:01:24.685 
對電影和軌道執行基於範圍的編輯

00:01:24.751 --> 00:01:27.688 
可以選擇一個部分電影的一個片段

00:01:27.921 --> 00:01:30.123 
複製到其他影片中

00:01:30.858 --> 00:01:32.359 
可以增減軌道

00:01:32.826 --> 00:01:35.362 
可以設置軌道間的聯繫

00:01:35.429 --> 00:01:38.398 
比如在另一個章節軌道的
一個軌道上做標記

00:01:40.167 --> 00:01:43.070 
可以增加或調整
軌道和電影元數據

00:01:44.338 --> 00:01:47.074 
我們可以創建電影文件

00:01:47.140 --> 00:01:49.543 
以及所謂URL樣本引用電影文件

00:01:52.179 --> 00:01:53.380 
今天你會怎麼做呢？

00:01:53.714 --> 00:01:58.185 
首先我會
根據AVFoundation中

00:01:59.052 --> 00:02:02.756 
現有的類來放置這些新類

00:02:03.490 --> 00:02:05.893 
然後我會做API爬蟲文件 

00:02:05.959 --> 00:02:07.294 
其中會介紹並觸及

00:02:07.361 --> 00:02:10.197 
已經加入這些類的新方法的高點

00:02:10.997 --> 00:02:12.666 
最後我會回過頭來返回談一談

00:02:12.733 --> 00:02:14.868 
我提到的這個個人項目

00:02:15.202 --> 00:02:18.472 
其中清楚顯示了這些新功能

00:02:18.739 --> 00:02:22.843 
可以將我所蒐集的大量數據
做出有趣的事情來

00:02:23.944 --> 00:02:28.015 
我們來談談
AVFoundation編輯類

00:02:28.482 --> 00:02:31.518 
如果已經在編輯環境用過
AVFoundation

00:02:32.052 --> 00:02:38.025 
就會知道我們將用到兩個類操作抽象類

00:02:38.091 --> 00:02:41.762 
是複合類可以獲得
AVCompositions

00:02:42.062 --> 00:02:45.332 
並在可變水平實現
AVMutableCompositions

00:02:45.799 --> 00:02:47.801 
現在複合類是很酷的內容

00:02:47.868 --> 00:02:50.170 
可以做出相當棒的效果

00:02:50.671 --> 00:02:53.173 
AVMutableComposition
只有一點

00:02:53.507 --> 00:02:54.942 
不如人意

00:02:55.509 --> 00:02:58.212 
沒有標準文件格式用來

00:02:58.545 --> 00:03:01.315 
序列化複合類

00:03:02.649 --> 00:03:07.321 
這使得很難將你漂亮的
複合類和其他應用進行互換

00:03:08.322 --> 00:03:11.425 
我們前往
AVMovie和AVMutableMovie時

00:03:11.758 --> 00:03:14.228 
問題不復存在了因爲其中

00:03:14.294 --> 00:03:16.964 
有QuickTime電影文件格式

00:03:17.197 --> 00:03:20.267 
我們可以打開 編輯重新編寫

00:03:21.702 --> 00:03:24.905 
在軌道層面 我們有相似的設置

00:03:25.472 --> 00:03:28.642 
如大家所知 複合類包括複合軌道

00:03:28.942 --> 00:03:29.943 
並在可變水平

00:03:30.010 --> 00:03:32.513 
我們有
AVMutableComposition軌道

00:03:32.880 --> 00:03:36.149 
在El Capitan 我們可以在
軌道層面添加兩個新類

00:03:36.450 --> 00:03:39.686 
AVMovieTrack和
AVMutableMovieTrack

00:03:41.121 --> 00:03:44.291 
我們的確有五個新類需要你們操心

00:03:44.658 --> 00:03:46.093 
電影和可變電影電影軌道

00:03:46.994 --> 00:03:48.862 
可變電影軌道

00:03:49.329 --> 00:03:52.866 
第五類叫做
AVMediaDataStorage

00:03:53.267 --> 00:03:57.437 
這是很簡單的類全部任務

00:03:57.504 --> 00:04:02.609 
就是表明寫入文件的
新樣本數據在哪裏該結束

00:04:06.146 --> 00:04:09.816 
AVMovie代表符合
QuickTime電影

00:04:10.184 --> 00:04:13.587 
文件格式的視頻音頻文件數據

00:04:14.188 --> 00:04:15.923 
如果你熟悉QuickTime電影

00:04:15.989 --> 00:04:18.892 
你會知道存在若干相關文件格式

00:04:19.493 --> 00:04:23.163 
都是基於QuickTime 
電影文件格式轉換而來

00:04:23.597 --> 00:04:27.100 
這些合稱爲ISO基媒體文件格式

00:04:27.534 --> 00:04:30.470 
AVMovie和可變電影
可以很好地處理這些

00:04:30.537 --> 00:04:32.539 
和應對QuickTime
電影文件沒有區別

00:04:33.907 --> 00:04:37.511 
這些文件的主要特點是什麼?

00:04:37.578 --> 00:04:42.850 
在我看來特點是
文件格式在樣本數據

00:04:42.916 --> 00:04:49.189 
和組織樣本進入軌道和電影的
數據間執行嚴格的區分

00:04:51.692 --> 00:04:55.963 
這裏是QuickTime
電影文件的基本示意圖

00:04:56.396 --> 00:04:58.799 
先是文件類型框

00:04:59.132 --> 00:05:03.971 
這是非常簡單的少量數據表明這個文件

00:05:04.037 --> 00:05:06.406 
符合哪個系列中的文件格式

00:05:07.274 --> 00:05:09.877 
這裏還有個電影框我剛說過

00:05:09.943 --> 00:05:13.580 
代表所有樣本數據的組織信息

00:05:13.981 --> 00:05:15.582 
是在自身的框中可以找到

00:05:16.316 --> 00:05:20.254 
大部分的順序都是任意的

00:05:20.654 --> 00:05:22.723 
文件類型框必須在最前面

00:05:23.090 --> 00:05:25.526 
但是其他框可以是任何順序

00:05:25.592 --> 00:05:28.362 
那麼我們可以把電影框放在文件最後

00:05:28.929 --> 00:05:33.300 
可以位於兩個樣本數據框的中間

00:05:33.700 --> 00:05:36.370 
甚至可以成爲未用文件的部分

00:05:36.436 --> 00:05:39.506 
也許之前曾有過數據但是現在沒有了

00:05:41.041 --> 00:05:42.543 
現在 電影框裏是什麼呢?

00:05:42.743 --> 00:05:46.346 
這裏有我們今天要考慮的三類信息

00:05:47.447 --> 00:05:49.750 
首先是全局設置

00:05:50.117 --> 00:05:53.754 
沒有這部分信息就
不會真正有電影的存在

00:05:54.188 --> 00:05:56.490 
其中包括電影中有多少軌道

00:05:56.857 --> 00:05:58.425 
電影時長是多少

00:05:58.892 --> 00:06:03.864 
文件何時生成播放時的最佳速率是什麼

00:06:05.332 --> 00:06:08.802 
電影框裏還有元數據 這屬於

00:06:08.869 --> 00:06:14.441 
可選數據 對媒體播放而言
並非必不可少

00:06:14.942 --> 00:06:16.009 
但是如果具備也會有用

00:06:16.276 --> 00:06:18.512 
這有點像是版權聲明的內容

00:06:18.946 --> 00:06:21.882 
表明作者是誰片名是什麼

00:06:22.382 --> 00:06:24.685 
也許還有一些你或其他app寫入

00:06:24.751 --> 00:06:27.354 
電影框中的自定義數據

00:06:28.655 --> 00:06:33.160 
在電影框中發現的最後一項內容
是軌道框這部分信息

00:06:33.393 --> 00:06:36.230 
定義了電影中的不同軌道

00:06:37.531 --> 00:06:39.333 
其中包括軌道類型

00:06:40.100 --> 00:06:44.505 
指出軌道所需的樣本數據

00:06:45.172 --> 00:06:46.874 
也包括軌道元數據

00:06:46.940 --> 00:06:49.676 
當然 如果願意 也可以
在這裏編寫自定義軌道元數據

00:06:50.511 --> 00:06:53.213 
還有軌道相關性的相關信息

00:06:53.280 --> 00:06:56.149 
也就是電影中軌道
和其他軌道之間的關聯

00:06:58.051 --> 00:07:01.622 
這裏的主要特點是樣本數據位置

00:07:01.688 --> 00:07:04.825 
因此樣本數據本身並不存在於軌道框中

00:07:05.392 --> 00:07:11.331 
軌道框包括到樣本數據的參考信息之類

00:07:16.803 --> 00:07:19.573 
對樣本數據而言軌道可能會

00:07:19.640 --> 00:07:22.042 
存在於其他文件中

00:07:22.342 --> 00:07:24.811 
這樣你也可以有外部樣本參考

00:07:26.146 --> 00:07:30.918 
還可以是隻有外部樣本數據的樣本參考

00:07:31.518 --> 00:07:34.688 
在這種情況下小電影框

00:07:34.755 --> 00:07:38.559 
及其文件類型框
被叫做樣本參考電影文件

00:07:39.059 --> 00:07:42.329 
框中並無真實數據

00:07:42.596 --> 00:07:44.164 
它只是指向其他位置的數據

00:07:44.698 --> 00:07:48.902 
現在這成爲你與其他媒體文件

00:07:50.103 --> 00:07:52.739 
一起工作時功能非常強大的工具

00:07:53.841 --> 00:07:58.011 
爲什麼？因爲我可以編輯少量信息

00:07:58.278 --> 00:08:01.481 
而不需要觸及大量媒體數據

00:08:03.150 --> 00:08:06.954 
但是 可以想象這其中會有一些脆弱性

00:08:08.488 --> 00:08:11.892 
爲什麼呢？因爲我在參考數據
數據 如果所參考的數據手

00:08:11.959 --> 00:08:16.296 
碰巧在移動或者是被刪掉我就會很糟心

00:08:16.396 --> 00:08:18.498 
我再也不能播放演示作品了

00:08:19.499 --> 00:08:22.569 
可以通過兩種方式降低這種脆弱性

00:08:22.970 --> 00:08:26.073 
主要是通過相關URL

00:08:26.139 --> 00:08:30.310 
當我製作這些樣本參考時
我們會些許看到該怎麼做

00:08:32.513 --> 00:08:34.780 
在今天結束的時候大家可能會想

00:08:34.847 --> 00:08:36.650 
試試自包含電影

00:08:36.717 --> 00:08:40.687 
如果想給朋友看看
或是在網頁上發送發帖

00:08:41.087 --> 00:08:42.322 
需要這麼做的時候

00:08:42.623 --> 00:08:45.025 
可以通過
AVAssetExportSession

00:08:45.092 --> 00:08:47.060 
運行自己的可變電影

00:08:47.361 --> 00:08:49.229 
可以獲得極好的自包含文件

00:08:51.231 --> 00:08:54.234 
好的我們現在來看剛引入的
電影編輯API

00:08:56.603 --> 00:09:00.274 
在不可變層面
AVMovie是AVAsset 

00:09:00.340 --> 00:09:03.944 
不可變的子類 
我們實際上做了些有趣的事情

00:09:04.178 --> 00:09:06.079 
我們可以查看電影

00:09:06.380 --> 00:09:08.215 
可以獲得電影頭文件

00:09:08.649 --> 00:09:10.817 
可以在新文件中編寫電影頭文件

00:09:13.320 --> 00:09:16.190 
所謂電影頭文件我是指文件類型框

00:09:16.256 --> 00:09:19.092 
和電影框而不是樣本數據

00:09:22.262 --> 00:09:24.097 
怎樣初始化AVMovie?

00:09:24.164 --> 00:09:27.734 
如果初始化過
AVRL 就知道該怎麼做了

00:09:27.801 --> 00:09:30.604 
你提供URL我們返還AVMovie

00:09:31.772 --> 00:09:38.412 
如果有電影頭文件比如說在
粘貼板上則可以進入

00:09:38.779 --> 00:09:41.148 
並從數據塊生成電影

00:09:41.481 --> 00:09:44.585 
在講座中我們不會更多探討這方面問題

00:09:45.052 --> 00:09:48.622 
但是如果你看樣本代碼包
AVMovieEditor

00:09:48.922 --> 00:09:51.792 
則會清楚看到該怎樣把內容

00:09:52.025 --> 00:09:53.727 
從粘貼板提取或放置

00:09:55.729 --> 00:09:59.466 
這裏就是可以輕鬆
生成樣本參考電影文件

00:10:00.033 --> 00:10:04.338 
我們將把URL作爲
AVMovie打開

00:10:04.471 --> 00:10:08.775 
不好意思我們調用...

00:10:09.610 --> 00:10:14.515 
我們想生成的文件類型指示

00:10:14.882 --> 00:10:16.083 
然後是部分選項

00:10:16.617 --> 00:10:21.889 
在本例中 我們指定的
選項是電影頭文件的刪節目的地

00:10:22.589 --> 00:10:25.993 
基本上而言 這是指如果有任何數據

00:10:26.059 --> 00:10:29.129 
在該URL上它都會被擠走

00:10:29.396 --> 00:10:32.132 
最後在文件中就只剩電影頭文件

00:10:33.433 --> 00:10:36.069 
還可以是不同的選項

00:10:36.303 --> 00:10:39.006 
不再擠走文件中已有的任何數據

00:10:39.072 --> 00:10:42.142 
這就是將電影頭文件
添加到目的地選項

00:10:47.481 --> 00:10:49.483 
我們來繼續講
AVMovie的可變子類

00:10:49.550 --> 00:10:51.552 
AVMutableMovie

00:10:52.152 --> 00:10:55.422 
這會提供基於範圍的
電影編輯 增減軌道

00:10:55.489 --> 00:10:58.425 
增加或調整電影

00:10:58.959 --> 00:11:02.563 
元數據的編輯方法

00:11:04.431 --> 00:11:06.800 
怎樣初始化
AVMutableMovie?

00:11:06.867 --> 00:11:09.169 
和初始化AVMovie的
做法基本相同

00:11:09.636 --> 00:11:12.306 
我們會傳遞一個URL但是在本例中

00:11:12.372 --> 00:11:14.341 
我們需要能夠
調整可能會出現的任何錯誤

00:11:15.642 --> 00:11:18.979 
還可以從零建造
AVMutableMovie

00:11:19.213 --> 00:11:22.850 
本代碼行給我們返回
空的AVMutableMovie文件

00:11:23.217 --> 00:11:27.321 
我們可以在其中添加軌道
接着在軌道中添加部分數據等等

00:11:29.857 --> 00:11:33.694 
這些是在AVMutableMovie
可用的片段編輯方法

00:11:33.760 --> 00:11:36.096 
如果大家用過
AVMutable複合類

00:11:36.163 --> 00:11:39.600 
這很相似因爲實際上

00:11:39.666 --> 00:11:43.370 
只有一處存在例外

00:11:44.438 --> 00:11:48.909 
就是插入時間範圍方法
會需要額外的參數

00:11:48.976 --> 00:11:53.747 
表明你是否要複製樣本數據

00:11:53.814 --> 00:11:56.917 
到目標文件或僅僅複製樣本參考

00:12:00.087 --> 00:12:06.260 
如果複製樣本數據到目標可變電影

00:12:06.560 --> 00:12:09.429 
你需要告知它編寫樣本數據的位置

00:12:09.563 --> 00:12:11.265 
它不會默認做任何事情

00:12:11.798 --> 00:12:16.170 
例如 它不會自己將數據編寫在
電影框所在的文件中

00:12:16.570 --> 00:12:18.705 
所以必須明確規定你需要

00:12:19.039 --> 00:12:23.810 
將寫入電影的任何新的樣本
數據放置的位置

00:12:24.178 --> 00:12:27.748 
可以通過規定可變電影的默認

00:12:27.814 --> 00:12:29.917 
媒體數據存儲屬性來實現

00:12:30.417 --> 00:12:35.255 
這就是該
AVMediaDataStorage類出馬啦

00:12:35.789 --> 00:12:38.292 
同樣 它此刻只是包裹了URL 

00:12:40.894 --> 00:12:44.965 
有生成和刪除軌道的方法要生成軌道

00:12:45.032 --> 00:12:47.067 
必須要表明所需的軌道類型

00:12:47.134 --> 00:12:50.003 
要的是視頻軌道是音頻軌道等等

00:12:50.971 --> 00:12:53.640 
如果喜歡如果有現有軌道

00:12:53.707 --> 00:12:57.110 
希望以此複製新軌道我們把它作爲

00:12:57.277 --> 00:13:02.182 
參數傳遞 從現有軌道 使用它們
採取相關的屬性

00:13:04.818 --> 00:13:07.588 
這裏有個簡單的小案例研究

00:13:08.355 --> 00:13:11.158 
爲更新現有電影文件
我們可以從URL打開

00:13:11.225 --> 00:13:14.962 
使用我們剛纔所見的方法做些編輯

00:13:15.829 --> 00:13:18.932 
然後我們可以使用正確的電影頭文件

00:13:19.299 --> 00:13:22.169 
作爲URL方法 將電影
頭文件寫入相同文件

00:13:22.236 --> 00:13:24.538 
這就是就地編輯

00:13:25.038 --> 00:13:27.541 
這裏 我們並未移動任何樣本數據

00:13:28.208 --> 00:13:30.844 
我們所做的就是調整電影框

00:13:31.078 --> 00:13:32.646 
並把它放回相同的文件

00:13:34.248 --> 00:13:36.416 
我們來談談軌道編輯API

00:13:37.951 --> 00:13:41.154 
這可以允許我們調整
QuickTime電影文件的軌道 

00:13:41.622 --> 00:13:44.525 
我們有基於範圍的軌道編輯

00:13:44.591 --> 00:13:46.326 
正如我們在電影層面所見 

00:13:46.927 --> 00:13:52.299 
我們還可以設置軌道之間的關聯性
可以增加或調整軌道元數據

00:13:53.634 --> 00:13:55.869 
這裏是片段編輯方式

00:13:55.936 --> 00:13:58.972 
它們看似熟悉因爲我們剛剛見過

00:14:01.008 --> 00:14:05.946 
在電影層面唯一的不同在於
我們沒有插入資產的時間範圍 

00:14:06.013 --> 00:14:07.681 
而是插入了軌道的時間範圍

00:14:09.850 --> 00:14:12.920 
同樣 當我們插入
時間範圍時 必須規定

00:14:12.986 --> 00:14:14.555 
你是否想要複製樣本數據

00:14:14.821 --> 00:14:16.990 
還是隻想放入樣本參考

00:14:17.357 --> 00:14:20.093 
如果複製樣本數據軌道必須要知道

00:14:20.160 --> 00:14:21.929 
樣本數據要去往何處

00:14:22.396 --> 00:14:25.732 
通過使用在電影層面完全相同的類 

00:14:26.033 --> 00:14:30.304 
設置軌道的媒體數據電影層面所見

00:14:32.472 --> 00:14:33.740 
這裏是另一個案例研究

00:14:34.107 --> 00:14:36.844 
假設這裏有一小段剪輯
我想做靜音處理

00:14:36.910 --> 00:14:40.380 
也許這段剪輯中有部分不合時宜的語言

00:14:40.881 --> 00:14:43.483 
很簡單 只要找到電影

00:14:43.550 --> 00:14:49.790 
第一個音頻軌道定義時間範圍即希望

00:14:50.090 --> 00:14:52.960 
靜音的範圍 刪除時間範圍

00:14:53.260 --> 00:14:56.196 
在相同的點插入空的時間範圍

00:14:56.763 --> 00:15:00.067 
這個代碼的淨效果就是在原先的不當

00:15:00.400 --> 00:15:02.870 
語言處加入了空片段

00:15:05.339 --> 00:15:07.407 
處理軌道關聯性相當簡單

00:15:07.474 --> 00:15:11.378 
可以增加軌道關聯性
或刪除軌道關聯性

00:15:11.445 --> 00:15:14.248 
稍後我們來看怎樣使用

00:15:16.917 --> 00:15:19.720 
我說過 當複製樣本
數據進入軌道後 

00:15:19.786 --> 00:15:22.956 
我會告知大家 怎樣使用相關URL

00:15:23.490 --> 00:15:24.658 
要這樣做

00:15:24.925 --> 00:15:29.029 
打開每個軌道

00:15:29.096 --> 00:15:34.735 
我們會設置樣本參考基URL屬性

00:15:35.302 --> 00:15:39.006 
到包括電影的電影部分共同父類

00:15:39.072 --> 00:15:43.043 
包括電影框的文件和包括所有
媒體數據的文件

00:15:46.313 --> 00:15:48.782 
好 我們來繼續...

00:15:50.050 --> 00:15:53.453 
講我說過的
個人項目我想稱之爲

00:15:53.520 --> 00:15:58.492 
《血字(和灰字)研究》
需要向柯南·道爾爵士致歉

00:15:59.393 --> 00:16:02.296 
我們回到1980年
我們說的是什麼？

00:16:02.362 --> 00:16:03.630 
35年前

00:16:04.331 --> 00:16:07.668 
當時我還是伯克利海灣區
那邊的研究生 

00:16:08.468 --> 00:16:10.771 
需要找個方法釋放多餘的精力

00:16:10.838 --> 00:16:12.706 
我出去買了輪滑鞋因爲我發現伯克利

00:16:13.974 --> 00:16:17.044 
是輪滑者的理想場所位置

00:16:17.110 --> 00:16:19.379 
因爲這裏有些不錯的山地

00:16:20.814 --> 00:16:24.284 
我非常喜歡我不斷去找

00:16:24.351 --> 00:16:28.522 
更高的山爬上去之後再滑下來

00:16:29.223 --> 00:16:33.994 
1984年 你們可以看到
我在奧克蘭克萊蒙大道的頂端

00:16:34.695 --> 00:16:39.099 
遠處 你可以看到舊金山 
是海灣區的這一側 

00:16:39.166 --> 00:16:42.569 
是愛莫瑞維爾這非常棒

00:16:42.636 --> 00:16:44.771 
幾乎就像從我面前輪滑飛馳而過

00:16:46.006 --> 00:16:48.408 
我不太清楚舉起手是做什麼

00:16:48.475 --> 00:16:52.446 
也許是爲了我們要誓死效忠的什麼東西

00:16:53.313 --> 00:16:54.648 
我可沒準備豁出命去
很好

00:16:56.783 --> 00:17:01.121 
爲了跟蹤我的位置我去買了街道地圖

00:17:01.989 --> 00:17:03.824 
我把自己設成黃色高亮

00:17:04.358 --> 00:17:07.928 
我開始在地圖上標出自己去過的地方

00:17:08.694 --> 00:17:10.597 
那裏的山地非常好

00:17:11.531 --> 00:17:15.068 
如果你和我一樣這麼做會糟糕的很

00:17:15.135 --> 00:17:18.472 
因爲最後會把整幅地圖都塗滿顏色

00:17:19.906 --> 00:17:22.742 
然後是2000年 不好意思

00:17:22.809 --> 00:17:26.914 
大約是1985年我在弄一個項目

00:17:26.980 --> 00:17:29.983 
我稱之爲蒂姆的奧克蘭瘋狂輪滑之旅

00:17:30.551 --> 00:17:34.755 
或簡稱輪滑之旅目標很簡單

00:17:34.821 --> 00:17:37.791 
就是在奧克蘭的每條街道都輪滑
滑過街道的全長

00:17:38.792 --> 00:17:42.796 
從1985年一直持續到2005年

00:17:42.863 --> 00:17:45.933 
所以十年前 我完成了
怎麼樣？

00:17:47.835 --> 00:17:48.669 
謝謝

00:17:51.004 --> 00:17:53.874 
在奧克蘭需要滑過
近800英里的公路 

00:17:53.941 --> 00:17:55.876 
才能實現這個目標

00:17:57.010 --> 00:18:01.215 
2005年完成時 我沒有位置數據

00:18:01.281 --> 00:18:03.283 
我開始時GPS還沒有發明出來

00:18:03.650 --> 00:18:05.252 
當時可能是沒有的

00:18:05.686 --> 00:18:08.388 
實際上我有所有的位置數據

00:18:08.455 --> 00:18:10.791 
因爲如果打開我的地圖

00:18:12.626 --> 00:18:16.029 
你會看到在右側都是黃色

00:18:16.129 --> 00:18:18.866 
不全是 但是阿拉米達皮埃蒙特

00:18:19.032 --> 00:18:21.235 
愛莫利維爾有整整9碼的距離

00:18:23.537 --> 00:18:26.874 
我當時沒有視頻

00:18:27.808 --> 00:18:29.643 
如果大家回想那個時候 

00:18:29.710 --> 00:18:32.779 
1985年扛的相機都是大塊頭 

00:18:32.846 --> 00:18:35.616 
還很嬌氣外出輪滑的時候
肯定是不希望揹着的

00:18:37.484 --> 00:18:39.152 
所以當我完成的時候
我的確是...

00:18:39.319 --> 00:18:41.388 
這是個瘋狂的項目這點我承認

00:18:42.122 --> 00:18:45.692 
我絕對沒有花心思告訴任何人這件事

00:18:46.193 --> 00:18:49.730 
可是不巧 估計《舊金山紀事報》 
聽說了此事

00:18:51.131 --> 00:18:55.435 
並且寫了篇文章報道
就是那種有人情味的故事

00:18:57.337 --> 00:18:59.273 
奧克蘭市參議會得知此事

00:18:59.339 --> 00:19:02.442 
通過一項決議表彰了此項

00:19:02.509 --> 00:19:05.846 
卓絕的壯舉...
是他們這麼說的 不是我

00:19:07.614 --> 00:19:10.384 
奧克蘭的幾個製片人聽說此事

00:19:10.784 --> 00:19:15.355 
花費了幾年時間爲這個項目
拍攝了漂亮的小紀錄片

00:19:15.989 --> 00:19:19.593 
在一年前在灣區的獨立

00:19:19.660 --> 00:19:21.361 
劇場進行了幾輪上映

00:19:21.628 --> 00:19:22.863 
簡直是太瘋狂了

00:19:26.266 --> 00:19:30.737 
在我完成這個項目大約兩年後

00:19:31.305 --> 00:19:34.274 
我開始在東海岸花了些時間

00:19:34.341 --> 00:19:37.477 
特別是在馬薩諸塞州波士頓

00:19:38.011 --> 00:19:40.681 
更是在劍橋

00:19:40.948 --> 00:19:44.017 
我想 好吧 就讓這事兒
繼續上路吧

00:19:44.518 --> 00:19:48.288 
我花了幾年時間
在劍橋和薩默維爾輪滑

00:19:48.689 --> 00:19:51.859 
最後產生了
波士頓輪滑之旅的想法

00:19:52.459 --> 00:19:56.530 
同樣的想法 在波士頓的每條街道輪滑

00:19:57.631 --> 00:20:00.968 
大概是從2011年開始的

00:20:01.602 --> 00:20:03.237 
我看了看地圖估計需要5年時間

00:20:03.303 --> 00:20:05.239 
來完成這件事情

00:20:06.373 --> 00:20:08.442 
前幾年的冬天也不大冷

00:20:08.709 --> 00:20:10.210 
城市大小和奧克蘭差不多

00:20:11.078 --> 00:20:14.214 
在兩年半的時間我就完成了

00:20:14.381 --> 00:20:19.219 
因此在2013年5月
我完成了波士頓輪滑之旅

00:20:20.654 --> 00:20:24.424 
這次我就有準備了因爲在輪滑時

00:20:24.791 --> 00:20:27.227 
我在頭盔上裝了運動攝像機

00:20:27.294 --> 00:20:32.032 
iPhone上還有
GPS app

00:20:32.666 --> 00:20:39.506 
結果就是我攢了490個
MPEG-4文件拍攝了

00:20:40.240 --> 00:20:42.276 
200次不同的輪滑

00:20:42.743 --> 00:20:46.413 
共有1.5萬億字節的數據

00:20:47.447 --> 00:20:50.918 
我還有GPX文件形式的GPS數據

00:20:50.984 --> 00:20:54.388 
是那種XML版本的
位置數據 大家稍後會看到

00:20:55.255 --> 00:20:57.891 
有着大約150兆字節的數據

00:20:59.459 --> 00:21:04.431 
可想而知影片會是什麼樣子
我們來看其中一個

00:21:05.999 --> 00:21:08.502 
這些是攝像機直接拍攝的視頻

00:21:08.569 --> 00:21:10.804 
我只是做了重新命名這樣有了日期

00:21:10.871 --> 00:21:13.841 
和文件名 會讓我更容易查找

00:21:15.309 --> 00:21:17.411 
我們在QuickTime
播放器中打開

00:21:17.644 --> 00:21:20.447 
這是第二個是接在第一個的

00:21:20.514 --> 00:21:24.184 
結尾部分繼續
我們來選中第一個視頻

00:21:24.651 --> 00:21:26.620 
我們可以看到陽光明媚

00:21:27.020 --> 00:21:28.956 
是在11月下旬

00:21:29.356 --> 00:21:30.524 
當時是工作日

00:21:31.124 --> 00:21:35.128 
我們來播放
看得出是秋天因爲地上有落葉

00:21:35.762 --> 00:21:37.397 
如果有音頻文件也許會聽得到

00:21:37.464 --> 00:21:39.800 
當天的呼呼風聲

00:21:41.368 --> 00:21:42.970 
不過 令人感覺有些奇怪

00:21:43.170 --> 00:21:44.705 
因爲街上沒有人

00:21:44.938 --> 00:21:46.273 
沒有一個行人

00:21:46.740 --> 00:21:48.242 
我們往前快進一點

00:21:49.109 --> 00:21:51.345 
還是沒有行人只是有些車子

00:21:51.879 --> 00:21:53.647 
我在朗伍德醫療區

00:21:53.914 --> 00:21:56.149 
這裏交通很是擁堵

00:21:56.350 --> 00:21:58.552 
卻沒有人 這是商業區

00:21:59.620 --> 00:22:01.121 
沒有人<c.blue> 像個鬼城

00:22:01.321 --> 00:22:02.489 
出什麼事兒了？

00:22:03.423 --> 00:22:05.692 
我們稍後會解決這個問題

00:22:08.529 --> 00:22:10.631 
基本上我所獲得的
是一以大堆乾草

00:22:11.064 --> 00:22:14.468 
還有一把銀針
我製作了500小時的視頻

00:22:15.035 --> 00:22:17.938 
即便99%都沒什麼用處

00:22:18.238 --> 00:22:21.842 
那也還能找出5小時有趣的視頻

00:22:23.443 --> 00:22:26.146 
不過 部分問題是我甚至不
知道這些銀針是什麼樣

00:22:26.213 --> 00:22:28.315 
因爲我不知道500小時視頻中

00:22:28.549 --> 00:22:30.751 
哪些比較重要

00:22:32.853 --> 00:22:35.656 
我知道<c.blue> 我喜歡看部分內容

00:22:35.756 --> 00:22:38.392 
這裏用了蒙太奇手法

00:22:48.268 --> 00:22:50.137 
下雪了 真的嗎？好吧

00:22:55.108 --> 00:22:56.510 
我沒看見路面坑窪嗎？

00:23:06.053 --> 00:23:08.021 
這是我最喜歡的一部分
因爲大家可以看到

00:23:08.088 --> 00:23:11.959 
我在往下滑 往前滾動返回 繼續滑行

00:23:12.659 --> 00:23:14.194 
如果不是... 謝謝大家

00:23:18.765 --> 00:23:20.834 
現在我必須花錢找人幫我挑

00:23:20.901 --> 00:23:25.272 
看過全部視頻的1/50

00:23:26.173 --> 00:23:27.641 
才挑出這6個剪輯

00:23:27.875 --> 00:23:29.142 
理論上 這一大堆乾草中

00:23:29.510 --> 00:23:33.614 
會有300個精彩的摔跤鏡頭

00:23:34.648 --> 00:23:36.717 
要知道 每個跟頭5秒鐘的話

00:23:36.783 --> 00:23:39.319 
我們就會有25分鐘這類素材

00:23:39.386 --> 00:23:41.255 
這的確看起來很有趣

00:23:43.190 --> 00:23:45.459 
現在我想怎麼來用所有這些數據

00:23:45.692 --> 00:23:48.295 
我有1.5萬億太字節的視頻數據

00:23:48.362 --> 00:23:49.630 
想拿來做點什麼

00:23:49.696 --> 00:23:51.098 
我想找出那些銀針

00:23:52.099 --> 00:23:55.903 
第一步是要把每次滑輪的攝像

00:23:55.969 --> 00:23:57.971 
不同文件連接到一起

00:23:58.438 --> 00:24:02.176 
做成樣本參考電影文件
這樣我可以打開編輯

00:24:02.242 --> 00:24:05.245 
而不必擔心攝像文件

00:24:06.446 --> 00:24:09.216 
第二是我想加入索引元數據

00:24:09.516 --> 00:24:12.386 
作爲電影元數據

00:24:12.920 --> 00:24:14.955 
那麼我要進入文件並做標記

00:24:15.222 --> 00:24:18.392 
好了 我這裏開始摔跤
這就是摔跤的結束部分

00:24:18.725 --> 00:24:20.727 
這裏是狗開始追我的地方

00:24:20.794 --> 00:24:23.263 
這裏是它們最後覺得
沒辦法抓到我的地方

00:24:24.198 --> 00:24:28.302 
這裏是我和執法官員交談
這些還會繼續

00:24:30.437 --> 00:24:32.773 
我希望對所有素材都進行索引

00:24:32.840 --> 00:24:36.009 
這樣便於搜索 發現
所有的銀針 可以調用

00:24:37.544 --> 00:24:41.215 
我還想加入GPS數據 還有所有的
位置數據 我還什麼都沒處理

00:24:41.281 --> 00:24:43.183 
我希望把它加到文件裏

00:24:43.250 --> 00:24:45.385 
這樣可以做成定時元數據軌道

00:24:46.887 --> 00:24:52.392 
關鍵在於 我做所有這些都不會修改
最初原始的攝像機文件

00:24:52.893 --> 00:24:56.396 
並可以將需要進行的
數據複製數量最小化

00:24:57.664 --> 00:24:58.932 
好的<c.blue> 具體該怎樣做呢？

00:24:59.366 --> 00:25:03.003 
AVMovie和AVMutableMovie
爲我們提供答案

00:25:03.937 --> 00:25:07.040 
第一個問題的解決方案相當簡單

00:25:07.474 --> 00:25:09.743 
我準備用這些攝像機文件

00:25:09.810 --> 00:25:12.746 
生成樣本參考電影文件

00:25:12.813 --> 00:25:14.748 
它會指向兩個原始文件

00:25:15.449 --> 00:25:19.786 
非常簡單就是樣本參考
電影文件的標準用法

00:25:21.421 --> 00:25:24.525 
第二步的解決方案會在電影框中

00:25:24.591 --> 00:25:27.694 
加入一些額外的自定義元數據

00:25:29.796 --> 00:25:33.200 
第三步是在新的樣本參考電影文件中

00:25:33.467 --> 00:25:37.671 
加入真實的媒體數據

00:25:38.305 --> 00:25:41.208 
這些媒體數據 即便叫做定時元數據

00:25:41.275 --> 00:25:44.511 
也是作爲媒體數據或樣本數據存儲

00:25:44.578 --> 00:25:46.113 
並會進入文件的新軌道

00:25:47.347 --> 00:25:50.684 
我準備這麼來處理問題

00:25:51.518 --> 00:25:53.520 
第一步其實非常簡單

00:25:53.854 --> 00:25:57.891 
作爲可變電影打開第一個的電影

00:25:58.458 --> 00:26:02.663 
我們會打開第二個
以及任何後續的電影作爲URL資產

00:26:03.664 --> 00:26:07.467 
我們會在準備插入的資產中定義範圍

00:26:07.534 --> 00:26:10.137 
這就是整個資產時長

00:26:11.572 --> 00:26:14.675 
我們會在可變電影的結尾將它插入

00:26:15.142 --> 00:26:19.646 
可變電影中記住不要複製樣本數據

00:26:19.847 --> 00:26:21.815 
我最後只要樣本參考

00:26:22.649 --> 00:26:26.587 
最後 我們所需要做的
就是在新文件中 

00:26:26.653 --> 00:26:31.992 
編寫新的電影頭文件生成樣本參考

00:26:32.059 --> 00:26:35.696 
電影文件來指向兩個原始
攝像機文件中的數據

00:26:37.764 --> 00:26:39.032 
我們來看部分演示

00:26:39.433 --> 00:26:41.435 
看怎樣解決第二個和第三個問題

00:26:41.835 --> 00:26:45.005 
通常 這個幻燈片是閱讀演示

00:26:45.072 --> 00:26:47.941 
但我對好的迴文沒有免疫力

00:26:50.878 --> 00:26:52.579 
而且也不願意浪費

00:26:52.646 --> 00:26:55.182 
Alvin是基於
AVFoundation

00:26:55.249 --> 00:26:58.285 
的線性索引器的縮略

00:26:59.353 --> 00:27:03.724 
就是用來做我說過的索引工作

00:27:04.124 --> 00:27:07.528 
而且可以把位置數據加入文件中

00:27:08.328 --> 00:27:09.963 
UI大概是這樣

00:27:10.464 --> 00:27:14.067 
我把電影視圖放在左邊
地圖視圖放在右邊

00:27:14.134 --> 00:27:17.704 
下面可以看到有些顯示區

00:27:17.771 --> 00:27:22.776 
是我搜集來的輪滑相關信息的顯示

00:27:23.911 --> 00:27:27.047 
我們繼續打開電影文件

00:27:27.114 --> 00:27:31.251 
這是我剛生成的樣本參考電影文件

00:27:32.052 --> 00:27:34.555 
打開 我準備加載GPX文件

00:27:35.522 --> 00:27:38.492 
我會選擇適當的GPS文件

00:27:40.894 --> 00:27:42.162 
我打開文件時

00:27:42.462 --> 00:27:46.133 
需要填寫部分數據
它會指出這將用多久完成

00:27:46.834 --> 00:27:50.704 
怎樣？好了 我可以擴展地圖視圖

00:27:50.771 --> 00:27:54.641 
清楚顯示我們在哪裏
我出去在布魯克林四周兜了一圈

00:27:55.475 --> 00:27:57.711 
這很適合你這裏是洛根機場

00:27:58.478 --> 00:27:59.880 
絕對是波士頓

00:28:00.814 --> 00:28:01.949 
這裏是劍橋

00:28:02.816 --> 00:28:04.718 
我們仔細看看

00:28:05.052 --> 00:28:09.122 
哦 我說過要給大家看GPX文件

00:28:09.723 --> 00:28:11.325 
GPX文件就是這個樣子

00:28:11.391 --> 00:28:16.296 
是XML格式經緯度 海拔 時間標記

00:28:16.697 --> 00:28:18.398 
就是它了 再沒別的

00:28:21.702 --> 00:28:24.171 
我們來這裏運行Web服務

00:28:24.238 --> 00:28:28.408 
我出去到政府Web
服務器看看當天的天氣情況

00:28:28.475 --> 00:28:30.444 
怎樣我發現當天風很大

00:28:30.511 --> 00:28:33.981 
風速平均每小時17英里
對喜歡用公制的人來說

00:28:34.047 --> 00:28:38.018 
就是28.439華氏度

00:28:38.085 --> 00:28:40.554 
還有種有趣說法3.9攝氏度

00:28:41.788 --> 00:28:44.658 
那天是感恩節所以街上沒有人

00:28:44.725 --> 00:28:48.028 
對了 這說明那天正好過節
還是猶太光明節的第二天

00:28:49.096 --> 00:28:52.633 
對吧？來看這些Web
Services這就可以讓我們

00:28:52.699 --> 00:28:54.668 
推斷出爲何街上沒人

00:28:56.203 --> 00:28:58.238 
我跑到另一個Web Service

00:28:58.305 --> 00:29:01.942 
叫做反向地理編碼
我會從Apple服務器

00:29:02.276 --> 00:29:04.945 
發出經緯度它會返還

00:29:05.012 --> 00:29:08.348 
州 城市 街道的樣子

00:29:08.682 --> 00:29:10.350 
有時甚至還有門牌號

00:29:10.717 --> 00:29:14.154 
基本上 就會提供
我所經過的街道信息

00:29:14.755 --> 00:29:17.391 
等一下 所有的街道圖釘會落下

00:29:19.226 --> 00:29:24.064 
然後我們可以選出一個
來看是哪條街道是聯邦大道

00:29:25.265 --> 00:29:27.935 
或是布魯克林的華盛頓大街

00:29:29.503 --> 00:29:32.439 
我這裏還加了搜索條可以輸入

00:29:32.506 --> 00:29:35.876 
比如聯邦大道如果發現就會標亮

00:29:36.476 --> 00:29:38.478 
如果把數據放入文件

00:29:38.545 --> 00:29:41.982 
現在就完成了街道名稱的可搜索性

00:29:42.049 --> 00:29:46.520 
我可以進入 找到所有
在某條街道的小剪輯

00:29:48.889 --> 00:29:51.091 
我們可以隱藏這些需要做的最後一件事

00:29:51.158 --> 00:29:54.394 
就是用地址數據同步視頻

00:29:55.062 --> 00:29:57.231 
我試過各種自動方法來完成

00:29:57.297 --> 00:30:00.801 
結果發現最好的辦法
只有一種 就是前往

00:30:00.868 --> 00:30:05.172 
我視頻中的幀 
這裏我知道在地圖上自己的位置

00:30:05.839 --> 00:30:07.674 
然後我會來到地圖 

00:30:09.009 --> 00:30:13.580 
點擊並同步視頻和這個位置

00:30:14.414 --> 00:30:17.384 
現在 當我這麼做時如果返回
並開始播放視頻

00:30:17.718 --> 00:30:20.721 
大家會看到圖釘會沿着視頻移動

00:30:20.988 --> 00:30:22.456 
看 這就是在同步

00:30:23.690 --> 00:30:25.192 
我甚至可以前往另一個方向

00:30:25.259 --> 00:30:27.995 
我去地圖上的某個位置可以點擊

00:30:28.061 --> 00:30:32.533 
讓視頻到這裏現在我就在聯邦大道了

00:30:32.999 --> 00:30:35.802 
我知道這裏是很有趣的下坡路段

00:30:35.869 --> 00:30:37.771 
我們可以滑行一秒鐘

00:30:38.338 --> 00:30:40.774 
這就是我們這麼做的原因這類下坡沒有

00:30:41.175 --> 00:30:45.546 
汽車經過會有什麼狀況呢？

00:30:49.216 --> 00:30:50.417 
好的這就是Alvin

00:30:50.484 --> 00:30:53.487 
大家可以看出Alvin可以幫我解決
第二和第三個問題

00:30:54.254 --> 00:30:59.459 
可以添加自定義元數據
到樣本參考電影文件

00:31:00.527 --> 00:31:02.196 
基本是這樣的

00:31:02.596 --> 00:31:05.766 
通過調用... 將現有的元數據

00:31:06.133 --> 00:31:07.668 
來看元數據屬性

00:31:08.435 --> 00:31:10.170 
我們會生成新的元數據項

00:31:10.537 --> 00:31:12.706 
我們會相應填入屬性

00:31:12.906 --> 00:31:16.109 
例如 平均風速值是我從政府服務器

00:31:16.176 --> 00:31:19.346 
獲得的當天天氣情況數據

00:31:20.147 --> 00:31:22.983 
我還創建了部分識別器可以以後查找

00:31:23.050 --> 00:31:26.620 
一旦把這些寫入文件加上正確的電影

00:31:26.687 --> 00:31:30.757 
頭文件到URL電影就全部升級了

00:31:32.559 --> 00:31:33.694 
我們再來看看第三步

00:31:33.827 --> 00:31:37.097 
是將位置數據作爲定時元數據軌道

00:31:37.831 --> 00:31:39.700 
大家已經知道該怎麼做了

00:31:39.933 --> 00:31:41.235 
如果去年來過

00:31:42.169 --> 00:31:45.205 
聽過《駕馭音頻視頻
媒體中的元數據》講座

00:31:45.672 --> 00:31:47.474 
其中他們介紹過兩個內容

00:31:47.541 --> 00:31:51.912 
首先從捕獲會話得到位置數據

00:31:52.546 --> 00:31:55.983 
以及怎樣將正確時間的元數據加入電影

00:31:56.817 --> 00:32:00.654 
我們可以獲得位置數據在GPX文件中

00:32:00.721 --> 00:32:02.990 
我們並不需要捕獲會話內容

00:32:03.724 --> 00:32:06.226 
我們可以關注在第二個樣本

00:32:06.293 --> 00:32:08.729 
代碼包中獲得源代碼

00:32:09.062 --> 00:32:10.430 
並把它放入Alvin

00:32:11.965 --> 00:32:13.967 
現在 我們一旦完成在盤裏會得到

00:32:14.168 --> 00:32:18.038 
帶有單個元數據軌道的定時文件

00:32:18.705 --> 00:32:22.676 
我們所需要做的就是複製軌道到

00:32:23.243 --> 00:32:27.915 
電影的新軌道中
可以打開通過GPS資產來實現

00:32:29.283 --> 00:32:31.218 
我們接着會運用

00:32:31.318 --> 00:32:35.556 
軌道中恰好有的媒體類型在電影文件中

00:32:35.722 --> 00:32:39.626 
添加新軌道我們會從軌道中複製設置

00:32:40.961 --> 00:32:45.933 
最後 我們將範圍插入新軌道

00:32:45.999 --> 00:32:49.336 
同樣如果在文件中
編寫頭文件 我們弄好了

00:32:52.706 --> 00:32:55.809 
現在需要做的最後一件事這是可選內容

00:32:56.210 --> 00:32:59.847 
就是在定時媒體軌道
和元數據的任何軌道之間

00:33:00.380 --> 00:33:05.118 
生成軌道關聯性在本例中
我們已經選定了視頻軌道

00:33:06.220 --> 00:33:09.990 
如果跳過這一步定時視頻軌道

00:33:10.057 --> 00:33:14.661 
則會整體運用到文件中
關於這些 我們都沒問題

00:33:20.534 --> 00:33:23.103 
如果你們在用
AVMutableMovie

00:33:23.370 --> 00:33:24.872 
這裏還要注意兩點

00:33:25.973 --> 00:33:28.876 
如大家所知 AVMovie 
或AVMutableMovie

00:33:29.409 --> 00:33:31.645 
屬於AVAsset因爲它是子類

00:33:32.312 --> 00:33:36.250 
如果可將AVAsset做什麼
處理的話可以用在可變電影中

00:33:36.817 --> 00:33:39.953 
例如 可以用
AVPlayerItem來播放

00:33:40.754 --> 00:33:44.224 
可以用AVAssetImageGenerator
從中抓取圖像

00:33:45.526 --> 00:33:49.396 
可以用
AVAssetExportSession來輸出

00:33:50.497 --> 00:33:53.600 
如果在可變電影中進行任何這樣的操作

00:33:54.134 --> 00:33:56.470 
我們非常建議你對可變電影

00:33:56.537 --> 00:34:00.340 
進行拷貝 因爲如果你在輸出時 

00:34:00.407 --> 00:34:02.776 
是在改變電影文件要以防不測

00:34:02.876 --> 00:34:06.213 
只要進行拷貝在輸出即可一切都沒問題

00:34:07.948 --> 00:34:13.120 
第二個最佳實踐是如果你在打開

00:34:13.320 --> 00:34:16.790 
希望插入
AVMutableMovie的資產

00:34:17.824 --> 00:34:22.362 
則應該設置這個旗標
AV URL資產喜好精確時長

00:34:22.429 --> 00:34:24.331 
和定時鍵爲真 

00:34:25.032 --> 00:34:27.134 
現在我們並未在大家已經見到的任何

00:34:27.201 --> 00:34:31.538 
代碼片段中這麼做因爲你
打開QuickTime電影文件時

00:34:31.737 --> 00:34:33.239 
旗標已經設置爲真

00:34:33.639 --> 00:34:36.076 
但是如果需要打開MP3文件

00:34:36.143 --> 00:34:38.445 
例如希望將之插入可變電影文件

00:34:38.779 --> 00:34:39.947 
你需要設置這個旗標

00:34:41.748 --> 00:34:42.683 
我們來總結一下

00:34:44.051 --> 00:34:48.722 
我們加入了新類
來支持QuickTime電影文件

00:34:50.123 --> 00:34:51.891 
我希望如大家所見這讓我們的工作流程

00:34:52.559 --> 00:34:55.094 
會變得非常簡單非常不錯

00:34:55.262 --> 00:34:59.666 
我們可以處理參考電影 
而不是原始的電影本身 

00:35:00.067 --> 00:35:03.770 
因此 如果在處理大量的數據
這會非常得力

00:35:04.905 --> 00:35:07.574 
如果想在知道在實踐中怎麼操作

00:35:07.641 --> 00:35:09.943 
下載AVMovieEditor
仔細看看

00:35:11.411 --> 00:35:13.680 
若想了解更多詳情就去標準場所

00:35:14.348 --> 00:35:18.285 
如果這方面存在問題在週四和週五
我們會在實驗室

00:35:19.119 --> 00:35:20.220 
如果想看看

00:35:20.487 --> 00:35:23.924 
怎樣運用複合類
轉到2010年的講座看看

00:35:24.758 --> 00:35:27.194 
最後 如果大家想詳細瞭解怎樣進行

00:35:27.261 --> 00:35:29.963 
定時元數據軌道生成

00:35:30.531 --> 00:35:33.567 
可以看看去年的講座
《在音頻視頻媒體中駕馭元數據》

00:35:34.568 --> 00:35:35.569 
非常感謝